/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGRUBY

#ifdef __cplusplus
template<typename T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif


/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif


/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic CAPI SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The swig conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old swig versions, you usually write code as:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit as:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   that seems to be the same, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   requires also to SWIG_ConvertPtr to return new result values, as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   swig errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()


 */
#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))


/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif




#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



#include <ruby.h>

/* Remove global macros defined in Ruby's win32.h */
#ifdef write
# undef write
#endif
#ifdef read
# undef read
#endif


/* Ruby 1.7 defines NUM2LL(), LL2NUM() and ULL2NUM() macros */
#ifndef NUM2LL
#define NUM2LL(x) NUM2LONG((x))
#endif
#ifndef LL2NUM
#define LL2NUM(x) INT2NUM((long) (x))
#endif
#ifndef ULL2NUM
#define ULL2NUM(x) UINT2NUM((unsigned long) (x))
#endif

/* Ruby 1.7 doesn't (yet) define NUM2ULL() */
#ifndef NUM2ULL
#ifdef HAVE_LONG_LONG
#define NUM2ULL(x) rb_num2ull((x))
#else
#define NUM2ULL(x) NUM2ULONG(x)
#endif
#endif

/* RSTRING_LEN, etc are new in Ruby 1.9, but ->ptr and ->len no longer work */
/* Define these for older versions so we can just write code the new way */
#ifndef RSTRING_LEN
# define RSTRING_LEN(x) RSTRING(x)->len
#endif
#ifndef RSTRING_PTR
# define RSTRING_PTR(x) RSTRING(x)->ptr
#endif
#ifndef RSTRING_END
# define RSTRING_END(x) (RSTRING_PTR(x) + RSTRING_LEN(x))
#endif
#ifndef RARRAY_LEN
# define RARRAY_LEN(x) RARRAY(x)->len
#endif
#ifndef RARRAY_PTR
# define RARRAY_PTR(x) RARRAY(x)->ptr
#endif
#ifndef RFLOAT_VALUE
# define RFLOAT_VALUE(x) RFLOAT(x)->value
#endif
#ifndef DOUBLE2NUM
# define DOUBLE2NUM(x) rb_float_new(x)
#endif
#ifndef RHASH_TBL
# define RHASH_TBL(x) (RHASH(x)->tbl)
#endif
#ifndef RHASH_ITER_LEV
# define RHASH_ITER_LEV(x) (RHASH(x)->iter_lev)
#endif
#ifndef RHASH_IFNONE
# define RHASH_IFNONE(x) (RHASH(x)->ifnone)
#endif
#ifndef RHASH_SIZE
# define RHASH_SIZE(x) (RHASH(x)->tbl->num_entries)
#endif
#ifndef RHASH_EMPTY_P
# define RHASH_EMPTY_P(x) (RHASH_SIZE(x) == 0)
#endif
#ifndef RSTRUCT_LEN
# define RSTRUCT_LEN(x) RSTRUCT(x)->len
#endif
#ifndef RSTRUCT_PTR
# define RSTRUCT_PTR(x) RSTRUCT(x)->ptr
#endif



/*
 * Need to be very careful about how these macros are defined, especially
 * when compiling C++ code or C code with an ANSI C compiler.
 *
 * VALUEFUNC(f) is a macro used to typecast a C function that implements
 * a Ruby method so that it can be passed as an argument to API functions
 * like rb_define_method() and rb_define_singleton_method().
 *
 * VOIDFUNC(f) is a macro used to typecast a C function that implements
 * either the "mark" or "free" stuff for a Ruby Data object, so that it
 * can be passed as an argument to API functions like Data_Wrap_Struct()
 * and Data_Make_Struct().
 */
 
#ifdef __cplusplus
#  ifndef RUBY_METHOD_FUNC /* These definitions should work for Ruby 1.4.6 */
#    define PROTECTFUNC(f) ((VALUE (*)()) f)
#    define VALUEFUNC(f) ((VALUE (*)()) f)
#    define VOIDFUNC(f)  ((void (*)()) f)
#  else
#    ifndef ANYARGS /* These definitions should work for Ruby 1.6 */
#      define PROTECTFUNC(f) ((VALUE (*)()) f)
#      define VALUEFUNC(f) ((VALUE (*)()) f)
#      define VOIDFUNC(f)  ((RUBY_DATA_FUNC) f)
#    else /* These definitions should work for Ruby 1.7+ */
#      define PROTECTFUNC(f) ((VALUE (*)(VALUE)) f)
#      define VALUEFUNC(f) ((VALUE (*)(ANYARGS)) f)
#      define VOIDFUNC(f)  ((RUBY_DATA_FUNC) f)
#    endif
#  endif
#else
#  define VALUEFUNC(f) (f)
#  define VOIDFUNC(f) (f)
#endif

/* Don't use for expressions have side effect */
#ifndef RB_STRING_VALUE
#define RB_STRING_VALUE(s) (TYPE(s) == T_STRING ? (s) : (*(volatile VALUE *)&(s) = rb_str_to_str(s)))
#endif
#ifndef StringValue
#define StringValue(s) RB_STRING_VALUE(s)
#endif
#ifndef StringValuePtr
#define StringValuePtr(s) RSTRING_PTR(RB_STRING_VALUE(s))
#endif
#ifndef StringValueLen
#define StringValueLen(s) RSTRING_LEN(RB_STRING_VALUE(s))
#endif
#ifndef SafeStringValue
#define SafeStringValue(v) do {\
    StringValue(v);\
    rb_check_safe_str(v);\
} while (0)
#endif

#ifndef HAVE_RB_DEFINE_ALLOC_FUNC
#define rb_define_alloc_func(klass, func) rb_define_singleton_method((klass), "new", VALUEFUNC((func)), -1)
#define rb_undef_alloc_func(klass) rb_undef_method(CLASS_OF((klass)), "new")
#endif

static VALUE _mSWIG = Qnil;

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */


/* Define some additional error types */
#define SWIG_ObjectPreviouslyDeletedError  -100


/* Define custom exceptions for errors that do not map to existing Ruby
   exceptions.  Note this only works for C++ since a global cannot be
   initialized by a funtion in C.  For C, fallback to rb_eRuntimeError.*/

SWIGINTERN VALUE 
getNullReferenceError(void) {
  static int init = 0;
  static VALUE rb_eNullReferenceError ;
  if (!init) {
    init = 1;
    rb_eNullReferenceError = rb_define_class("NullReferenceError", rb_eRuntimeError);
  }
  return rb_eNullReferenceError;
} 

SWIGINTERN VALUE 
getObjectPreviouslyDeletedError(void) {
  static int init = 0;
  static VALUE rb_eObjectPreviouslyDeleted ;
  if (!init) {
    init = 1;
    rb_eObjectPreviouslyDeleted = rb_define_class("ObjectPreviouslyDeleted", rb_eRuntimeError);
  }
  return rb_eObjectPreviouslyDeleted;
} 


SWIGINTERN VALUE
SWIG_Ruby_ErrorType(int SWIG_code) {
  VALUE type;
  switch (SWIG_code) {
  case SWIG_MemoryError:
    type = rb_eNoMemError;
    break;
  case SWIG_IOError:
    type = rb_eIOError;
    break;
  case SWIG_RuntimeError:
    type = rb_eRuntimeError;
    break;
  case SWIG_IndexError:
    type = rb_eIndexError;
    break;
  case SWIG_TypeError:
    type = rb_eTypeError;
    break;
  case SWIG_DivisionByZero:
    type = rb_eZeroDivError;
    break;
  case SWIG_OverflowError:
    type = rb_eRangeError;
    break;
  case SWIG_SyntaxError:
    type = rb_eSyntaxError;
    break;
  case SWIG_ValueError:
    type = rb_eArgError;
    break;
  case SWIG_SystemError:
    type = rb_eFatal;
    break;
  case SWIG_AttributeError:
    type = rb_eRuntimeError;
    break;
  case SWIG_NullReferenceError:
    type = getNullReferenceError();
    break;
  case SWIG_ObjectPreviouslyDeletedError:
    type = getObjectPreviouslyDeletedError();
    break;
  case SWIG_UnknownError:
    type = rb_eRuntimeError;
    break;
  default:
    type = rb_eRuntimeError;
  }
  return type;
}


/* This function is called when a user inputs a wrong argument to
   a method.
 */
SWIGINTERN 
const char* Ruby_Format_TypeError( const char* msg,
				   const char* type, 
				   const char* name, 
				   const int argn,
				   VALUE input )
{
  char buf[128];
  VALUE str;
  VALUE asStr;
  if ( msg && *msg )
    {
      str = rb_str_new2(msg);
    }
  else
    {
      str = rb_str_new(NULL, 0);
    }

  str = rb_str_cat2( str, "Expected argument " );
  sprintf( buf, "%d of type ", argn-1 );
  str = rb_str_cat2( str, buf );
  str = rb_str_cat2( str, type );
  str = rb_str_cat2( str, ", but got " );
  str = rb_str_cat2( str, rb_obj_classname(input) );
  str = rb_str_cat2( str, " " );
  asStr = rb_inspect(input);
  if ( RSTRING_LEN(asStr) > 30 )
    {
      str = rb_str_cat( str, StringValuePtr(asStr), 30 );
      str = rb_str_cat2( str, "..." );
    }
  else
    {
      str = rb_str_append( str, asStr );
    }

  if ( name )
    {
      str = rb_str_cat2( str, "\n\tin SWIG method '" );
      str = rb_str_cat2( str, name );
      str = rb_str_cat2( str, "'" );
    }

  return StringValuePtr( str );
}

/* This function is called when an overloaded method fails */
SWIGINTERN 
void Ruby_Format_OverloadedError(
				 const int argc,
				 const int maxargs,
				 const char* method, 
				 const char* prototypes 
				 )
{
  const char* msg = "Wrong # of arguments";
  if ( argc <= maxargs ) msg = "Wrong arguments";
  rb_raise(rb_eArgError,"%s for overloaded method '%s'.\n"  
	   "Possible C/C++ prototypes are:\n%s",
	   msg, method, prototypes);
}

/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * rubytracking.swg
 *
 * This file contains support for tracking mappings from 
 * Ruby objects to C++ objects.  This functionality is needed
 * to implement mark functions for Ruby's mark and sweep
 * garbage collector.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* Ruby 1.8 actually assumes the first case. */
#if SIZEOF_VOIDP == SIZEOF_LONG
#  define SWIG2NUM(v) LONG2NUM((unsigned long)v)
#  define NUM2SWIG(x) (unsigned long)NUM2LONG(x)
#elif SIZEOF_VOIDP == SIZEOF_LONG_LONG
#  define SWIG2NUM(v) LL2NUM((unsigned long long)v)
#  define NUM2SWIG(x) (unsigned long long)NUM2LL(x)
#else
#  error sizeof(void*) is not the same as long or long long
#endif


/* Global Ruby hash table to store Trackings from C/C++
   structs to Ruby Objects. 
*/
static VALUE swig_ruby_trackings = Qnil;

/* Global variable that stores a reference to the ruby
   hash table delete function. */
static ID swig_ruby_hash_delete;

/* Setup a Ruby hash table to store Trackings */
SWIGRUNTIME void SWIG_RubyInitializeTrackings(void) {
  /* Create a ruby hash table to store Trackings from C++ 
     objects to Ruby objects. */

  /* Try to see if some other .so has already created a 
     tracking hash table, which we keep hidden in an instance var
     in the SWIG module.
     This is done to allow multiple DSOs to share the same
     tracking table.
  */
  ID trackings_id = rb_intern( "@__trackings__" );
  VALUE verbose = rb_gv_get("VERBOSE");
  rb_gv_set("VERBOSE", Qfalse);
  swig_ruby_trackings = rb_ivar_get( _mSWIG, trackings_id );
  rb_gv_set("VERBOSE", verbose);

  /* No, it hasn't.  Create one ourselves */ 
  if ( swig_ruby_trackings == Qnil )
    {
      swig_ruby_trackings = rb_hash_new();
      rb_ivar_set( _mSWIG, trackings_id, swig_ruby_trackings );
    }

  /* Now store a reference to the hash table delete function
     so that we only have to look it up once.*/
  swig_ruby_hash_delete = rb_intern("delete");
}

/* Get a Ruby number to reference a pointer */
SWIGRUNTIME VALUE SWIG_RubyPtrToReference(void* ptr) {
  /* We cast the pointer to an unsigned long
     and then store a reference to it using
     a Ruby number object. */

  /* Convert the pointer to a Ruby number */
  return SWIG2NUM(ptr);
}

/* Get a Ruby number to reference an object */
SWIGRUNTIME VALUE SWIG_RubyObjectToReference(VALUE object) {
  /* We cast the object to an unsigned long
     and then store a reference to it using
     a Ruby number object. */

  /* Convert the Object to a Ruby number */
  return SWIG2NUM(object);
}

/* Get a Ruby object from a previously stored reference */
SWIGRUNTIME VALUE SWIG_RubyReferenceToObject(VALUE reference) {
  /* The provided Ruby number object is a reference
     to the Ruby object we want.*/

  /* Convert the Ruby number to a Ruby object */
  return NUM2SWIG(reference);
}

/* Add a Tracking from a C/C++ struct to a Ruby object */
SWIGRUNTIME void SWIG_RubyAddTracking(void* ptr, VALUE object) {
  /* In a Ruby hash table we store the pointer and
     the associated Ruby object.  The trick here is
     that we cannot store the Ruby object directly - if
     we do then it cannot be garbage collected.  So
     instead we typecast it as a unsigned long and
     convert it to a Ruby number object.*/

  /* Get a reference to the pointer as a Ruby number */
  VALUE key = SWIG_RubyPtrToReference(ptr);

  /* Get a reference to the Ruby object as a Ruby number */
  VALUE value = SWIG_RubyObjectToReference(object);

  /* Store the mapping to the global hash table. */
  rb_hash_aset(swig_ruby_trackings, key, value);
}

/* Get the Ruby object that owns the specified C/C++ struct */
SWIGRUNTIME VALUE SWIG_RubyInstanceFor(void* ptr) {
  /* Get a reference to the pointer as a Ruby number */
  VALUE key = SWIG_RubyPtrToReference(ptr);

  /* Now lookup the value stored in the global hash table */
  VALUE value = rb_hash_aref(swig_ruby_trackings, key);
	
  if (value == Qnil) {
    /* No object exists - return nil. */
    return Qnil;
  }
  else {
    /* Convert this value to Ruby object */
    return SWIG_RubyReferenceToObject(value);
  }
}

/* Remove a Tracking from a C/C++ struct to a Ruby object.  It
   is very important to remove objects once they are destroyed
   since the same memory address may be reused later to create
   a new object. */
SWIGRUNTIME void SWIG_RubyRemoveTracking(void* ptr) {
  /* Get a reference to the pointer as a Ruby number */
  VALUE key = SWIG_RubyPtrToReference(ptr);

  /* Delete the object from the hash table by calling Ruby's
     do this we need to call the Hash.delete method.*/
  rb_funcall(swig_ruby_trackings, swig_ruby_hash_delete, 1, key);
}

/* This is a helper method that unlinks a Ruby object from its
   underlying C++ object.  This is needed if the lifetime of the
   Ruby object is longer than the C++ object */
SWIGRUNTIME void SWIG_RubyUnlinkObjects(void* ptr) {
  VALUE object = SWIG_RubyInstanceFor(ptr);

  if (object != Qnil) {
    DATA_PTR(object) = 0;
  }
}


#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * Ruby API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

SWIGINTERN VALUE
SWIG_Ruby_AppendOutput(VALUE target, VALUE o) {
  if (NIL_P(target)) {
    target = o;
  } else {
    if (TYPE(target) != T_ARRAY) {
      VALUE o2 = target;
      target = rb_ary_new();
      rb_ary_push(target, o2);
    }
    rb_ary_push(target, o);
  }
  return target;
}

/* For ruby1.8.4 and earlier. */
#ifndef RUBY_INIT_STACK
   RUBY_EXTERN void Init_stack(VALUE* addr);
#  define RUBY_INIT_STACK \
   VALUE variable_in_this_stack_frame; \
   Init_stack(&variable_in_this_stack_frame);
#endif


#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * rubyrun.swg
 *
 * This file contains the runtime support for Ruby modules
 * and includes code for managing global variables and pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* For backward compatibility only */
#define SWIG_POINTER_EXCEPTION  0

/* for raw pointers */
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Ruby_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Ruby_ConvertPtrAndOwn(obj, pptr, type, flags, own)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Ruby_NewPointerObj(ptr, type, flags)
#define SWIG_AcquirePtr(ptr, own)                       SWIG_Ruby_AcquirePtr(ptr, own)
#define swig_owntype                                    ruby_owntype

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Ruby_ConvertPacked(obj, ptr, sz, ty, flags)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Ruby_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_ConvertPtr(obj, pptr, type, 0)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Ruby_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Ruby_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Ruby_GetModule()	
#define SWIG_SetModule(clientdata, pointer) 		SWIG_Ruby_SetModule(pointer)


/* Error manipulation */

#define SWIG_ErrorType(code)                            SWIG_Ruby_ErrorType(code)               
#define SWIG_Error(code, msg)            		rb_raise(SWIG_Ruby_ErrorType(code), msg)
#define SWIG_fail                        		goto fail				 


/* Ruby-specific SWIG API */

#define SWIG_InitRuntime()                              SWIG_Ruby_InitRuntime()              
#define SWIG_define_class(ty)                        	SWIG_Ruby_define_class(ty)
#define SWIG_NewClassInstance(value, ty)             	SWIG_Ruby_NewClassInstance(value, ty)
#define SWIG_MangleStr(value)                        	SWIG_Ruby_MangleStr(value)		  
#define SWIG_CheckConvert(value, ty)                 	SWIG_Ruby_CheckConvert(value, ty)	  

#include "assert.h"

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

typedef struct {
  VALUE klass;
  VALUE mImpl;
  void  (*mark)(void *);
  void  (*destroy)(void *);
  int trackObjects;
} swig_class;


/* Global pointer used to keep some internal SWIG stuff */
static VALUE _cSWIG_Pointer = Qnil;
static VALUE swig_runtime_data_type_pointer = Qnil;

/* Global IDs used to keep some internal SWIG stuff */
static ID swig_arity_id = 0;
static ID swig_call_id  = 0;

/*
  If your swig extension is to be run within an embedded ruby and has
  director callbacks, you should set -DRUBY_EMBEDDED during compilation.  
  This will reset ruby's stack frame on each entry point from the main 
  program the first time a virtual director function is invoked (in a 
  non-recursive way).
  If this is not done, you run the risk of Ruby trashing the stack.
*/

#ifdef RUBY_EMBEDDED

#  define SWIG_INIT_STACK                            \
      if ( !swig_virtual_calls ) { RUBY_INIT_STACK } \
      ++swig_virtual_calls;
#  define SWIG_RELEASE_STACK --swig_virtual_calls;
#  define Ruby_DirectorTypeMismatchException(x) \
          rb_raise( rb_eTypeError, x ); return c_result;

      static unsigned int swig_virtual_calls = 0;

#else  /* normal non-embedded extension */

#  define SWIG_INIT_STACK
#  define SWIG_RELEASE_STACK
#  define Ruby_DirectorTypeMismatchException(x) \
          throw Swig::DirectorTypeMismatchException( x );

#endif  /* RUBY_EMBEDDED */


SWIGRUNTIME VALUE 
getExceptionClass(void) {
  static int init = 0;
  static VALUE rubyExceptionClass ;
  if (!init) {
    init = 1;
    rubyExceptionClass = rb_const_get(_mSWIG, rb_intern("Exception"));
  }
  return rubyExceptionClass;
} 

/* This code checks to see if the Ruby object being raised as part
   of an exception inherits from the Ruby class Exception.  If so,
   the object is simply returned.  If not, then a new Ruby exception
   object is created and that will be returned to Ruby.*/
SWIGRUNTIME VALUE
SWIG_Ruby_ExceptionType(swig_type_info *desc, VALUE obj) {
  VALUE exceptionClass = getExceptionClass();
  if (rb_obj_is_kind_of(obj, exceptionClass)) {
    return obj;
  }  else {
    return rb_exc_new3(rb_eRuntimeError, rb_obj_as_string(obj));
  }
}

/* Initialize Ruby runtime support */
SWIGRUNTIME void
SWIG_Ruby_InitRuntime(void)
{
  if (_mSWIG == Qnil) {
    _mSWIG = rb_define_module("SWIG");
    swig_call_id  = rb_intern("call");
    swig_arity_id = rb_intern("arity");
  }
}

/* Define Ruby class for C type */
SWIGRUNTIME void
SWIG_Ruby_define_class(swig_type_info *type)
{
  VALUE klass;
  char *klass_name = (char *) malloc(4 + strlen(type->name) + 1);
  sprintf(klass_name, "TYPE%s", type->name);
  if (NIL_P(_cSWIG_Pointer)) {
    _cSWIG_Pointer = rb_define_class_under(_mSWIG, "Pointer", rb_cObject);
    rb_undef_method(CLASS_OF(_cSWIG_Pointer), "new");
  }
  klass = rb_define_class_under(_mSWIG, klass_name, _cSWIG_Pointer);
  free((void *) klass_name);
}

/* Create a new pointer object */
SWIGRUNTIME VALUE
SWIG_Ruby_NewPointerObj(void *ptr, swig_type_info *type, int flags)
{
  int own =  flags & SWIG_POINTER_OWN; 
  int track;
  char *klass_name;
  swig_class *sklass;
  VALUE klass;
  VALUE obj;
  
  if (!ptr)
    return Qnil;
  
  if (type->clientdata) {
    sklass = (swig_class *) type->clientdata;
		
    /* Are we tracking this class and have we already returned this Ruby object? */
    track = sklass->trackObjects;
    if (track) {
      obj = SWIG_RubyInstanceFor(ptr);
      
      /* Check the object's type and make sure it has the correct type.
        It might not in cases where methods do things like 
        downcast methods. */
      if (obj != Qnil) {
        VALUE value = rb_iv_get(obj, "@__swigtype__");
        char* type_name = RSTRING_PTR(value);
				
        if (strcmp(type->name, type_name) == 0) {
          return obj;
        }
      }
    }

    /* Create a new Ruby object */
    obj = Data_Wrap_Struct(sklass->klass, VOIDFUNC(sklass->mark), 
			   ( own ? VOIDFUNC(sklass->destroy) : 
			     (track ? VOIDFUNC(SWIG_RubyRemoveTracking) : 0 )
			     ), ptr);

    /* If tracking is on for this class then track this object. */
    if (track) {
      SWIG_RubyAddTracking(ptr, obj);
    }
  } else {
    klass_name = (char *) malloc(4 + strlen(type->name) + 1);
    sprintf(klass_name, "TYPE%s", type->name);
    klass = rb_const_get(_mSWIG, rb_intern(klass_name));
    free((void *) klass_name);
    obj = Data_Wrap_Struct(klass, 0, 0, ptr);
  }
  rb_iv_set(obj, "@__swigtype__", rb_str_new2(type->name));
  
  return obj;
}

/* Create a new class instance (always owned) */
SWIGRUNTIME VALUE
SWIG_Ruby_NewClassInstance(VALUE klass, swig_type_info *type)
{
  VALUE obj;
  swig_class *sklass = (swig_class *) type->clientdata;
  obj = Data_Wrap_Struct(klass, VOIDFUNC(sklass->mark), VOIDFUNC(sklass->destroy), 0);
  rb_iv_set(obj, "@__swigtype__", rb_str_new2(type->name));
  return obj;
}

/* Get type mangle from class name */
SWIGRUNTIMEINLINE char *
SWIG_Ruby_MangleStr(VALUE obj)
{
  VALUE stype = rb_iv_get(obj, "@__swigtype__");
  return StringValuePtr(stype);
}

/* Acquire a pointer value */
typedef void (*ruby_owntype)(void*);

SWIGRUNTIME ruby_owntype
SWIG_Ruby_AcquirePtr(VALUE obj, ruby_owntype own) {
  if (obj) {
    ruby_owntype oldown = RDATA(obj)->dfree;
    RDATA(obj)->dfree = own;
    return oldown;
  } else {
    return 0;
  }
}

/* Convert a pointer value */
SWIGRUNTIME int
SWIG_Ruby_ConvertPtrAndOwn(VALUE obj, void **ptr, swig_type_info *ty, int flags, ruby_owntype *own)
{
  char *c;
  swig_cast_info *tc;
  void *vptr = 0;

  /* Grab the pointer */
  if (NIL_P(obj)) {
    *ptr = 0;
    return SWIG_OK;
  } else {
    if (TYPE(obj) != T_DATA) {
      return SWIG_ERROR;
    }
    Data_Get_Struct(obj, void, vptr);
  }
  
  if (own) *own = RDATA(obj)->dfree;
    
  /* Check to see if the input object is giving up ownership
     of the underlying C struct or C++ object.  If so then we
     need to reset the destructor since the Ruby object no 
     longer owns the underlying C++ object.*/ 
  if (flags & SWIG_POINTER_DISOWN) {
    /* Is tracking on for this class? */
    int track = 0;
    if (ty && ty->clientdata) {
      swig_class *sklass = (swig_class *) ty->clientdata;
      track = sklass->trackObjects;
    }
		
    if (track) {
      /* We are tracking objects for this class.  Thus we change the destructor
       * to SWIG_RubyRemoveTracking.  This allows us to
       * remove the mapping from the C++ to Ruby object
       * when the Ruby object is garbage collected.  If we don't
       * do this, then it is possible we will return a reference 
       * to a Ruby object that no longer exists thereby crashing Ruby. */
      RDATA(obj)->dfree = SWIG_RubyRemoveTracking;
    } else {    
      RDATA(obj)->dfree = 0;
    }
  }

  /* Do type-checking if type info was provided */
  if (ty) {
    if (ty->clientdata) {
      if (rb_obj_is_kind_of(obj, ((swig_class *) (ty->clientdata))->klass)) {
        if (vptr == 0) {
          /* The object has already been deleted */
          return SWIG_ObjectPreviouslyDeletedError;
        }
        *ptr = vptr;
        return SWIG_OK;
      }
    }
    if ((c = SWIG_MangleStr(obj)) == NULL) {
      return SWIG_ERROR;
    }
    tc = SWIG_TypeCheck(c, ty);
    if (!tc) {
      return SWIG_ERROR;
    } else {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc, vptr, &newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    }
  } else {
    *ptr = vptr;
  }
  
  return SWIG_OK;
}

/* Check convert */
SWIGRUNTIMEINLINE int
SWIG_Ruby_CheckConvert(VALUE obj, swig_type_info *ty)
{
  char *c = SWIG_MangleStr(obj);
  if (!c) return 0;
  return SWIG_TypeCheck(c,ty) != 0;
}

SWIGRUNTIME VALUE
SWIG_Ruby_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r, ptr, sz);
  strcpy(r, type->name);
  return rb_str_new2(result);
}

/* Convert a packed value value */
SWIGRUNTIME int
SWIG_Ruby_ConvertPacked(VALUE obj, void *ptr, int sz, swig_type_info *ty) {
  swig_cast_info *tc;
  const char  *c;

  if (TYPE(obj) != T_STRING) goto type_error;
  c = StringValuePtr(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c, ptr, sz);
  if (ty) {
    tc = SWIG_TypeCheck(c, ty);
    if (!tc) goto type_error;
  }
  return SWIG_OK;

 type_error:
  return SWIG_ERROR;
}

SWIGRUNTIME swig_module_info *
SWIG_Ruby_GetModule(void)
{
  VALUE pointer;
  swig_module_info *ret = 0;
  VALUE verbose = rb_gv_get("VERBOSE");

 /* temporarily disable warnings, since the pointer check causes warnings with 'ruby -w' */
  rb_gv_set("VERBOSE", Qfalse);
  
  /* first check if pointer already created */
  pointer = rb_gv_get("$swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME);
  if (pointer != Qnil) {
    Data_Get_Struct(pointer, swig_module_info, ret);
  }

  /* reinstate warnings */
  rb_gv_set("VERBOSE", verbose);
  return ret;
}

SWIGRUNTIME void 
SWIG_Ruby_SetModule(swig_module_info *pointer)
{
  /* register a new class */
  VALUE cl = rb_define_class("swig_runtime_data", rb_cObject);
  /* create and store the structure pointer to a global variable */
  swig_runtime_data_type_pointer = Data_Wrap_Struct(cl, 0, 0, pointer);
  rb_define_readonly_variable("$swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, &swig_runtime_data_type_pointer);
}

/* This function can be used to check whether a proc or method or similarly
   callable function has been passed.  Usually used in a %typecheck, like:

   %typecheck(c_callback_t, precedence=SWIG_TYPECHECK_POINTER) {
        $result = SWIG_Ruby_isCallable( $input );
   }
 */
SWIGINTERN
int SWIG_Ruby_isCallable( VALUE proc )
{
  if ( rb_respond_to( proc, swig_call_id ) == Qtrue )
    return 1;
  return 0;
}

/* This function can be used to check the arity (number of arguments)
   a proc or method can take.  Usually used in a %typecheck.
   Valid arities will be that equal to minimal or those < 0
   which indicate a variable number of parameters at the end.
 */
SWIGINTERN
int SWIG_Ruby_arity( VALUE proc, int minimal )
{
  if ( rb_respond_to( proc, swig_arity_id ) == Qtrue )
    {
      VALUE num = rb_funcall( proc, swig_arity_id, 0 );
      int arity = NUM2INT(num);
      if ( arity < 0 && (arity+1) < -minimal ) return 1;
      if ( arity == minimal ) return 1;
      return 1;
    }
  return 0;
}


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_char swig_types[0]
#define SWIGTYPE_p_double swig_types[1]
#define SWIGTYPE_p_f_a_16__double__void swig_types[2]
#define SWIGTYPE_p_f_a_16__float__void swig_types[3]
#define SWIGTYPE_p_f_a_16__q_const__double__void swig_types[4]
#define SWIGTYPE_p_f_a_16__q_const__float__void swig_types[5]
#define SWIGTYPE_p_f_double__void swig_types[6]
#define SWIGTYPE_p_f_double_double__void swig_types[7]
#define SWIGTYPE_p_f_double_double_double__void swig_types[8]
#define SWIGTYPE_p_f_double_double_double_double__void swig_types[9]
#define SWIGTYPE_p_f_float__void swig_types[10]
#define SWIGTYPE_p_f_float_float__void swig_types[11]
#define SWIGTYPE_p_f_float_float_float__void swig_types[12]
#define SWIGTYPE_p_f_float_float_float_float__void swig_types[13]
#define SWIGTYPE_p_f_float_float_float_float_float__void swig_types[14]
#define SWIGTYPE_p_f_float_float_float_float_float_float__void swig_types[15]
#define SWIGTYPE_p_f_float_float_float_float_float_float_float_float__void swig_types[16]
#define SWIGTYPE_p_f_float_float_float_float_float_float_float_float_float_float__void swig_types[17]
#define SWIGTYPE_p_f_float_float_float_float_float_float_float_float_float_float_float_float__void swig_types[18]
#define SWIGTYPE_p_f_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float__void swig_types[19]
#define SWIGTYPE_p_f_float_float_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void swig_types[20]
#define SWIGTYPE_p_f_float_unsigned_char__void swig_types[21]
#define SWIGTYPE_p_f_int__unsigned_int swig_types[22]
#define SWIGTYPE_p_f_int__void swig_types[23]
#define SWIGTYPE_p_f_int_float__void swig_types[24]
#define SWIGTYPE_p_f_int_float_float__void swig_types[25]
#define SWIGTYPE_p_f_int_float_float_float__void swig_types[26]
#define SWIGTYPE_p_f_int_float_float_float_float__void swig_types[27]
#define SWIGTYPE_p_f_int_int__void swig_types[28]
#define SWIGTYPE_p_f_int_int_int__void swig_types[29]
#define SWIGTYPE_p_f_int_int_int_int__void swig_types[30]
#define SWIGTYPE_p_f_int_int_int_int_int__void swig_types[31]
#define SWIGTYPE_p_f_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int__void swig_types[32]
#define SWIGTYPE_p_f_int_int_int_int_unsigned_int_unsigned_int_p_void__void swig_types[33]
#define SWIGTYPE_p_f_int_int_p_int_p_char__void swig_types[34]
#define SWIGTYPE_p_f_int_int_p_q_const__float__void swig_types[35]
#define SWIGTYPE_p_f_int_int_p_q_const__int__void swig_types[36]
#define SWIGTYPE_p_f_int_int_p_q_const__unsigned_char__void swig_types[37]
#define SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void swig_types[38]
#define SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void swig_types[39]
#define SWIGTYPE_p_f_int_p_double__void swig_types[40]
#define SWIGTYPE_p_f_int_p_float__void swig_types[41]
#define SWIGTYPE_p_f_int_p_int__void swig_types[42]
#define SWIGTYPE_p_f_int_p_p_q_const__unsigned_char_int__void swig_types[43]
#define SWIGTYPE_p_f_int_p_q_const__float__void swig_types[44]
#define SWIGTYPE_p_f_int_p_q_const__unsigned_int__void swig_types[45]
#define SWIGTYPE_p_f_int_p_q_const__unsigned_int_p_q_const__float__void swig_types[46]
#define SWIGTYPE_p_f_int_p_q_const__unsigned_int_p_unsigned_char__unsigned_char swig_types[47]
#define SWIGTYPE_p_f_int_p_q_const__void__void swig_types[48]
#define SWIGTYPE_p_f_int_p_q_const__void_unsigned_int__unsigned_int swig_types[49]
#define SWIGTYPE_p_f_int_p_short__void swig_types[50]
#define SWIGTYPE_p_f_int_p_signed_char__void swig_types[51]
#define SWIGTYPE_p_f_int_p_unsigned_char__void swig_types[52]
#define SWIGTYPE_p_f_int_p_unsigned_int__void swig_types[53]
#define SWIGTYPE_p_f_int_p_unsigned_short__void swig_types[54]
#define SWIGTYPE_p_f_int_p_void__void swig_types[55]
#define SWIGTYPE_p_f_int_unsigned_int__void swig_types[56]
#define SWIGTYPE_p_f_int_unsigned_int_int_int_p_q_const__void__void swig_types[57]
#define SWIGTYPE_p_f_int_unsigned_int_int_p_p_q_const__void_int__void swig_types[58]
#define SWIGTYPE_p_f_int_unsigned_int_int_p_void__void swig_types[59]
#define SWIGTYPE_p_f_int_unsigned_int_p_p_q_const__void__void swig_types[60]
#define SWIGTYPE_p_f_int_unsigned_int_unsigned_int__void swig_types[61]
#define SWIGTYPE_p_f_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[62]
#define SWIGTYPE_p_f_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[63]
#define SWIGTYPE_p_f_p_float__void swig_types[64]
#define SWIGTYPE_p_f_p_q_const__double__void swig_types[65]
#define SWIGTYPE_p_f_p_q_const__float__void swig_types[66]
#define SWIGTYPE_p_f_p_q_const__float_p_q_const__float__void swig_types[67]
#define SWIGTYPE_p_f_p_q_const__float_p_q_const__float_p_q_const__float__void swig_types[68]
#define SWIGTYPE_p_f_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void swig_types[69]
#define SWIGTYPE_p_f_p_q_const__float_p_q_const__unsigned_char_p_q_const__float__void swig_types[70]
#define SWIGTYPE_p_f_p_q_const__int__void swig_types[71]
#define SWIGTYPE_p_f_p_q_const__short__void swig_types[72]
#define SWIGTYPE_p_f_p_q_const__signed_char__void swig_types[73]
#define SWIGTYPE_p_f_p_q_const__unsigned_char__void swig_types[74]
#define SWIGTYPE_p_f_p_q_const__unsigned_char_p_q_const__float__void swig_types[75]
#define SWIGTYPE_p_f_p_q_const__unsigned_int__void swig_types[76]
#define SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float__void swig_types[77]
#define SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float__void swig_types[78]
#define SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float__void swig_types[79]
#define SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void swig_types[80]
#define SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__int_p_q_const__int_int_int__void swig_types[81]
#define SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__int_unsigned_int_p_q_const__p_q_const__void_int_int__void swig_types[82]
#define SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__unsigned_char_p_q_const__float__void swig_types[83]
#define SWIGTYPE_p_f_p_q_const__unsigned_short__void swig_types[84]
#define SWIGTYPE_p_f_p_unsigned_int__int swig_types[85]
#define SWIGTYPE_p_f_short__void swig_types[86]
#define SWIGTYPE_p_f_short_short__void swig_types[87]
#define SWIGTYPE_p_f_short_short_short__void swig_types[88]
#define SWIGTYPE_p_f_short_short_short_short__void swig_types[89]
#define SWIGTYPE_p_f_signed_char__void swig_types[90]
#define SWIGTYPE_p_f_signed_char_signed_char_signed_char__void swig_types[91]
#define SWIGTYPE_p_f_unsigned_char__void swig_types[92]
#define SWIGTYPE_p_f_unsigned_char_unsigned_char_unsigned_char__void swig_types[93]
#define SWIGTYPE_p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float__void swig_types[94]
#define SWIGTYPE_p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void swig_types[95]
#define SWIGTYPE_p_f_unsigned_int__p_void swig_types[96]
#define SWIGTYPE_p_f_unsigned_int__unsigned_char swig_types[97]
#define SWIGTYPE_p_f_unsigned_int__unsigned_int swig_types[98]
#define SWIGTYPE_p_f_unsigned_int__void swig_types[99]
#define SWIGTYPE_p_f_unsigned_int_double__void swig_types[100]
#define SWIGTYPE_p_f_unsigned_int_double_double__void swig_types[101]
#define SWIGTYPE_p_f_unsigned_int_double_double_double__void swig_types[102]
#define SWIGTYPE_p_f_unsigned_int_double_double_double_double__void swig_types[103]
#define SWIGTYPE_p_f_unsigned_int_double_double_double_double_double_double__void swig_types[104]
#define SWIGTYPE_p_f_unsigned_int_float__void swig_types[105]
#define SWIGTYPE_p_f_unsigned_int_float_float__void swig_types[106]
#define SWIGTYPE_p_f_unsigned_int_float_float_float__void swig_types[107]
#define SWIGTYPE_p_f_unsigned_int_float_float_float_float__void swig_types[108]
#define SWIGTYPE_p_f_unsigned_int_float_float_float_float_float__void swig_types[109]
#define SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float__void swig_types[110]
#define SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float_float_float__void swig_types[111]
#define SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float__void swig_types[112]
#define SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float_float_float__void swig_types[113]
#define SWIGTYPE_p_f_unsigned_int_int__int swig_types[114]
#define SWIGTYPE_p_f_unsigned_int_int__ptrdiff_t swig_types[115]
#define SWIGTYPE_p_f_unsigned_int_int__void swig_types[116]
#define SWIGTYPE_p_f_unsigned_int_int_float__void swig_types[117]
#define SWIGTYPE_p_f_unsigned_int_int_float_float__void swig_types[118]
#define SWIGTYPE_p_f_unsigned_int_int_float_float_float__void swig_types[119]
#define SWIGTYPE_p_f_unsigned_int_int_float_float_float_float__void swig_types[120]
#define SWIGTYPE_p_f_unsigned_int_int_float_int__void swig_types[121]
#define SWIGTYPE_p_f_unsigned_int_int_int__void swig_types[122]
#define SWIGTYPE_p_f_unsigned_int_int_int_int__void swig_types[123]
#define SWIGTYPE_p_f_unsigned_int_int_int_int_int__void swig_types[124]
#define SWIGTYPE_p_f_unsigned_int_int_int_int_int_int__void swig_types[125]
#define SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int__void swig_types[126]
#define SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int__void swig_types[127]
#define SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_int__void swig_types[128]
#define SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[129]
#define SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void swig_types[130]
#define SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[131]
#define SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[132]
#define SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void swig_types[133]
#define SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[134]
#define SWIGTYPE_p_f_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void swig_types[135]
#define SWIGTYPE_p_f_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[136]
#define SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__float__void swig_types[137]
#define SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__int__void swig_types[138]
#define SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__unsigned_int__void swig_types[139]
#define SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__void__void swig_types[140]
#define SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void swig_types[141]
#define SWIGTYPE_p_f_unsigned_int_int_int_unsigned_int_int_int__void swig_types[142]
#define SWIGTYPE_p_f_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[143]
#define SWIGTYPE_p_f_unsigned_int_int_p_float__void swig_types[144]
#define SWIGTYPE_p_f_unsigned_int_int_p_int__void swig_types[145]
#define SWIGTYPE_p_f_unsigned_int_int_p_int_p_char__void swig_types[146]
#define SWIGTYPE_p_f_unsigned_int_int_p_int_p_unsigned_int__void swig_types[147]
#define SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__char_p_q_const__int__void swig_types[148]
#define SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__char_unsigned_int__void swig_types[149]
#define SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__void_int__void swig_types[150]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__double__void swig_types[151]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void swig_types[152]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__int__void swig_types[153]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__int_unsigned_int__void swig_types[154]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__short__void swig_types[155]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char__void swig_types[156]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__double__void swig_types[157]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__float__void swig_types[158]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_double_double_double_double__void swig_types[159]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_float_float_float_float__void swig_types[160]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_p_double__void swig_types[161]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_p_float__void swig_types[162]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_int__void swig_types[163]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_short__void swig_types[164]
#define SWIGTYPE_p_f_unsigned_int_int_p_q_const__void__void swig_types[165]
#define SWIGTYPE_p_f_unsigned_int_int_p_unsigned_int__void swig_types[166]
#define SWIGTYPE_p_f_unsigned_int_int_p_void__void swig_types[167]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int__void swig_types[168]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int__void swig_types[169]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int__void swig_types[170]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int__void swig_types[171]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void swig_types[172]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[173]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void swig_types[174]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[175]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void swig_types[176]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void swig_types[177]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_unsigned_int_unsigned_int__void swig_types[178]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_p_q_const__void_int__void swig_types[179]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_char__void swig_types[180]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_char_int_p_q_const__void__void swig_types[181]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_char_int_unsigned_int_unsigned_int__void swig_types[182]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_int__void swig_types[183]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[184]
#define SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[185]
#define SWIGTYPE_p_f_unsigned_int_p_double__void swig_types[186]
#define SWIGTYPE_p_f_unsigned_int_p_float__void swig_types[187]
#define SWIGTYPE_p_f_unsigned_int_p_int__void swig_types[188]
#define SWIGTYPE_p_f_unsigned_int_p_int_p_int_int__void swig_types[189]
#define SWIGTYPE_p_f_unsigned_int_p_int_unsigned_int_p_p_q_const__void_int__void swig_types[190]
#define SWIGTYPE_p_f_unsigned_int_p_p_q_const__void__void swig_types[191]
#define SWIGTYPE_p_f_unsigned_int_p_p_void__void swig_types[192]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__char__int swig_types[193]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__char__void swig_types[194]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__double__void swig_types[195]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__float__void swig_types[196]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__int__void swig_types[197]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__int_p_q_const__int_int__void swig_types[198]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__int_unsigned_int__void swig_types[199]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__short__void swig_types[200]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void swig_types[201]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void swig_types[202]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void swig_types[203]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void swig_types[204]
#define SWIGTYPE_p_f_unsigned_int_p_q_const__void__void swig_types[205]
#define SWIGTYPE_p_f_unsigned_int_p_short__void swig_types[206]
#define SWIGTYPE_p_f_unsigned_int_p_signed_char__void swig_types[207]
#define SWIGTYPE_p_f_unsigned_int_p_unsigned_char__void swig_types[208]
#define SWIGTYPE_p_f_unsigned_int_p_unsigned_int__void swig_types[209]
#define SWIGTYPE_p_f_unsigned_int_p_unsigned_short__void swig_types[210]
#define SWIGTYPE_p_f_unsigned_int_ptrdiff_t_p_q_const__void_unsigned_int__void swig_types[211]
#define SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t__void swig_types[212]
#define SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_q_const__void__void swig_types[213]
#define SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_void__void swig_types[214]
#define SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_unsigned_int__p_void swig_types[215]
#define SWIGTYPE_p_f_unsigned_int_short__void swig_types[216]
#define SWIGTYPE_p_f_unsigned_int_short_short__void swig_types[217]
#define SWIGTYPE_p_f_unsigned_int_short_short_short__void swig_types[218]
#define SWIGTYPE_p_f_unsigned_int_short_short_short_short__void swig_types[219]
#define SWIGTYPE_p_f_unsigned_int_signed_char_signed_char_signed_char__void swig_types[220]
#define SWIGTYPE_p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[221]
#define SWIGTYPE_p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[222]
#define SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void swig_types[223]
#define SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void swig_types[224]
#define SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void swig_types[225]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int__p_unsigned_char swig_types[226]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int__p_void swig_types[227]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_char swig_types[228]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_int swig_types[229]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int__void swig_types[230]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_double_double_double_double__void swig_types[231]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_float__void swig_types[232]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_float_float_float_float__void swig_types[233]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void swig_types[234]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int__void swig_types[235]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int__void swig_types[236]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int__void swig_types[237]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int__void swig_types[238]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int__void swig_types[239]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_int__void swig_types[240]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void swig_types[241]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[242]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[243]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void swig_types[244]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[245]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[246]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void swig_types[247]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[248]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[249]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void_p_q_const__void__void swig_types[250]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void swig_types[251]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__float__void swig_types[252]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__int__void swig_types[253]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_char__void swig_types[254]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void swig_types[255]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__void__void swig_types[256]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__void_unsigned_int__void swig_types[257]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_void__void swig_types[258]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int__void swig_types[259]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int__void swig_types[260]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int__void swig_types[261]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void swig_types[262]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void swig_types[263]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void swig_types[264]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_p_float__void swig_types[265]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_p_int__void swig_types[266]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int__void swig_types[267]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void swig_types[268]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_void__void swig_types[269]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_double__void swig_types[270]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void swig_types[271]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int64_t__void swig_types[272]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void swig_types[273]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void swig_types[274]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__void swig_types[275]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__double__void swig_types[276]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void swig_types[277]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void swig_types[278]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void swig_types[279]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_uint64_t__void swig_types[280]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_char__void swig_types[281]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void swig_types[282]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_p_void__void swig_types[283]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__float__void swig_types[284]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__int__void swig_types[285]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_char__void swig_types[286]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__unsigned_int swig_types[287]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void swig_types[288]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_double__void swig_types[289]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_double_double_double_double__void swig_types[290]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_float__void swig_types[291]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_float_float_float_float__void swig_types[292]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void swig_types[293]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void swig_types[294]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int__void swig_types[295]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int_unsigned_char_p_q_const__void__void swig_types[296]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int_unsigned_char_p_void__void swig_types[297]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__float__void swig_types[298]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__int__void swig_types[299]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void swig_types[300]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__void__void swig_types[301]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int__void swig_types[302]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int_p_q_const__void__void swig_types[303]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_double__void swig_types[304]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void swig_types[305]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void swig_types[306]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__double__void swig_types[307]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void swig_types[308]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void swig_types[309]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int_p_q_const__int_int__void swig_types[310]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__unsigned_int__void swig_types[311]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_unsigned_int__void swig_types[312]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void swig_types[313]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void_p_void_p_void__void swig_types[314]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t__void swig_types[315]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t_ptrdiff_t__void swig_types[316]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__unsigned_int swig_types[317]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[318]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void swig_types[319]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int_int__void swig_types[320]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_float__void swig_types[321]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_int__void swig_types[322]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[323]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[324]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[325]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_char_unsigned_char_unsigned_char__void swig_types[326]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[327]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[328]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[329]
#define SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void swig_types[330]
#define SWIGTYPE_p_f_unsigned_int_unsigned_short__void swig_types[331]
#define SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short__void swig_types[332]
#define SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short__void swig_types[333]
#define SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void swig_types[334]
#define SWIGTYPE_p_f_unsigned_short__void swig_types[335]
#define SWIGTYPE_p_f_unsigned_short_unsigned_short__void swig_types[336]
#define SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void swig_types[337]
#define SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void swig_types[338]
#define SWIGTYPE_p_f_void__unsigned_int swig_types[339]
#define SWIGTYPE_p_f_void__void swig_types[340]
#define SWIGTYPE_p_float swig_types[341]
#define SWIGTYPE_p_int swig_types[342]
#define SWIGTYPE_p_int64_t swig_types[343]
#define SWIGTYPE_p_p_void swig_types[344]
#define SWIGTYPE_p_ptrdiff_t swig_types[345]
#define SWIGTYPE_p_short swig_types[346]
#define SWIGTYPE_p_signed_char swig_types[347]
#define SWIGTYPE_p_uint64_t swig_types[348]
#define SWIGTYPE_p_unsigned_char swig_types[349]
#define SWIGTYPE_p_unsigned_int swig_types[350]
#define SWIGTYPE_p_unsigned_long swig_types[351]
#define SWIGTYPE_p_unsigned_short swig_types[352]
#define SWIGTYPE_p_void swig_types[353]
static swig_type_info *swig_types[355];
static swig_module_info swig_module = {swig_types, 354, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#define SWIG_init    Init_glew
#define SWIG_name    "Glew"

static VALUE mGlew;

#define SWIG_RUBY_THREAD_BEGIN_BLOCK
#define SWIG_RUBY_THREAD_END_BLOCK


#define SWIGVERSION 0x010336 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


#include "glew.h"


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


  #define SWIG_From_long   LONG2NUM 


SWIGINTERNINLINE VALUE
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


SWIGINTERN VALUE
SWIG_ruby_failed(void)
{
  return Qnil;
} 


/*@SWIG:/usr/share/swig1.3/ruby/rubyprimtypes.swg,23,%ruby_aux_method@*/
SWIGINTERN VALUE SWIG_AUX_NUM2ULONG(VALUE *args)
{
  VALUE obj = args[0];
  VALUE type = TYPE(obj);
  unsigned long *res = (unsigned long *)(args[1]);
  *res = type == T_FIXNUM ? NUM2ULONG(obj) : rb_big2ulong(obj);
  return obj;
}
/*@SWIG@*/

SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (VALUE obj, unsigned long *val) 
{
  VALUE type = TYPE(obj);
  if ((type == T_FIXNUM) || (type == T_BIGNUM)) {
    unsigned long v;
    VALUE a[2];
    a[0] = obj;
    a[1] = (VALUE)(&v);
    if (rb_rescue(RUBY_METHOD_FUNC(SWIG_AUX_NUM2ULONG), (VALUE)a, RUBY_METHOD_FUNC(SWIG_ruby_failed), 0) != Qnil) {
      if (val) *val = v;
      return SWIG_OK;
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (VALUE obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


#include <float.h>


/*@SWIG:/usr/share/swig1.3/ruby/rubyprimtypes.swg,23,%ruby_aux_method@*/
SWIGINTERN VALUE SWIG_AUX_NUM2DBL(VALUE *args)
{
  VALUE obj = args[0];
  VALUE type = TYPE(obj);
  double *res = (double *)(args[1]);
  *res = (type == T_FLOAT ? NUM2DBL(obj) : (type == T_FIXNUM ? (double) FIX2INT(obj) : rb_big2dbl(obj)));
  return obj;
}
/*@SWIG@*/

SWIGINTERN int
SWIG_AsVal_double (VALUE obj, double *val)
{
  VALUE type = TYPE(obj);
  if ((type == T_FLOAT) || (type == T_FIXNUM) || (type == T_BIGNUM)) {
    double v;
    VALUE a[2];
    a[0] = obj;
    a[1] = (VALUE)(&v);
    if (rb_rescue(RUBY_METHOD_FUNC(SWIG_AUX_NUM2DBL), (VALUE)a, RUBY_METHOD_FUNC(SWIG_ruby_failed), 0) != Qnil) {
      if (val) *val = v;
      return SWIG_OK;
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_float (VALUE obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < -FLT_MAX || v > FLT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


/*@SWIG:/usr/share/swig1.3/ruby/rubyprimtypes.swg,23,%ruby_aux_method@*/
SWIGINTERN VALUE SWIG_AUX_NUM2LONG(VALUE *args)
{
  VALUE obj = args[0];
  VALUE type = TYPE(obj);
  long *res = (long *)(args[1]);
  *res = type == T_FIXNUM ? NUM2LONG(obj) : rb_big2long(obj);
  return obj;
}
/*@SWIG@*/

SWIGINTERN int
SWIG_AsVal_long (VALUE obj, long* val)
{
  VALUE type = TYPE(obj);
  if ((type == T_FIXNUM) || (type == T_BIGNUM)) {
    long v;
    VALUE a[2];
    a[0] = obj;
    a[1] = (VALUE)(&v);
    if (rb_rescue(RUBY_METHOD_FUNC(SWIG_AUX_NUM2LONG), (VALUE)a, RUBY_METHOD_FUNC(SWIG_ruby_failed), 0) != Qnil) {
      if (val) *val = v;
      return SWIG_OK;
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int (VALUE obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE VALUE
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return ULONG2NUM(value); 
}


SWIGINTERNINLINE VALUE
SWIG_From_unsigned_SS_char  (unsigned char value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


SWIGINTERN int
SWIG_AsVal_signed_SS_char (VALUE obj, signed char *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < SCHAR_MIN || v > SCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< signed char >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_short (VALUE obj, short *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < SHRT_MIN || v > SHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< short >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_char (VALUE obj, unsigned char *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned char >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_short (VALUE obj, unsigned short *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > USHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned short >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE VALUE
SWIG_From_unsigned_SS_int  (unsigned int value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(VALUE obj, char** cptr, size_t* psize, int *alloc)
{
  if (TYPE(obj) == T_STRING) {
    #if defined(StringValuePtr)
    char *cstr = StringValuePtr(obj); 
    #else
    char *cstr = STR2CSTR(obj);
    #endif
    size_t size = RSTRING_LEN(obj) + 1;
    if (cptr)  {
      if (alloc) {
	if (*alloc == SWIG_NEWOBJ) {
	  *cptr = reinterpret_cast< char* >(memcpy((new char[size]), cstr, sizeof(char)*(size)));
	} else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      }
    }
    if (psize) *psize = size;
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *)vptr;
	if (psize) *psize = vptr ? (strlen((char*)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }  
  return SWIG_TypeError;
}




SWIGINTERN VALUE
_wrap_glAccum(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLfloat arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glAccum", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glAccum", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  glAccum(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glAlphaFunc(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLclampf arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glAlphaFunc", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLclampf","glAlphaFunc", 2, argv[1] ));
  } 
  arg2 = static_cast< GLclampf >(val2);
  glAlphaFunc(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glAreTexturesResident(int argc, VALUE *argv, VALUE self) {
  GLsizei arg1 ;
  GLuint *arg2 = (GLuint *) 0 ;
  GLboolean *arg3 = (GLboolean *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  GLboolean result;
  VALUE vresult = Qnil;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLsizei","glAreTexturesResident", 1, argv[0] ));
  } 
  arg1 = static_cast< GLsizei >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLuint const *","glAreTexturesResident", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLuint * >(argp2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLboolean *","glAreTexturesResident", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLboolean * >(argp3);
  result = (GLboolean)glAreTexturesResident(arg1,(unsigned int const *)arg2,arg3);
  vresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return vresult;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glArrayElement(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glArrayElement", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  glArrayElement(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glBegin(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glBegin", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  glBegin(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glBindTexture(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLuint arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glBindTexture", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLuint","glBindTexture", 2, argv[1] ));
  } 
  arg2 = static_cast< GLuint >(val2);
  glBindTexture(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glBitmap(int argc, VALUE *argv, VALUE self) {
  GLsizei arg1 ;
  GLsizei arg2 ;
  GLfloat arg3 ;
  GLfloat arg4 ;
  GLfloat arg5 ;
  GLfloat arg6 ;
  GLubyte *arg7 = (GLubyte *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  
  if ((argc < 7) || (argc > 7)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 7)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLsizei","glBitmap", 1, argv[0] ));
  } 
  arg1 = static_cast< GLsizei >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLsizei","glBitmap", 2, argv[1] ));
  } 
  arg2 = static_cast< GLsizei >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glBitmap", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  ecode4 = SWIG_AsVal_float(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLfloat","glBitmap", 4, argv[3] ));
  } 
  arg4 = static_cast< GLfloat >(val4);
  ecode5 = SWIG_AsVal_float(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLfloat","glBitmap", 5, argv[4] ));
  } 
  arg5 = static_cast< GLfloat >(val5);
  ecode6 = SWIG_AsVal_float(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLfloat","glBitmap", 6, argv[5] ));
  } 
  arg6 = static_cast< GLfloat >(val6);
  res7 = SWIG_ConvertPtr(argv[6], &argp7,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), Ruby_Format_TypeError( "", "GLubyte const *","glBitmap", 7, argv[6] )); 
  }
  arg7 = reinterpret_cast< GLubyte * >(argp7);
  glBitmap(arg1,arg2,arg3,arg4,arg5,arg6,(unsigned char const *)arg7);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glBlendFunc(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glBlendFunc", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glBlendFunc", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  glBlendFunc(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glCallList(int argc, VALUE *argv, VALUE self) {
  GLuint arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLuint","glCallList", 1, argv[0] ));
  } 
  arg1 = static_cast< GLuint >(val1);
  glCallList(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glCallLists(int argc, VALUE *argv, VALUE self) {
  GLsizei arg1 ;
  GLenum arg2 ;
  GLvoid *arg3 = (GLvoid *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLsizei","glCallLists", 1, argv[0] ));
  } 
  arg1 = static_cast< GLsizei >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glCallLists", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLvoid const *","glCallLists", 3, argv[2] )); 
  }
  glCallLists(arg1,arg2,(void const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glClear(int argc, VALUE *argv, VALUE self) {
  GLbitfield arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLbitfield","glClear", 1, argv[0] ));
  } 
  arg1 = static_cast< GLbitfield >(val1);
  glClear(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glClearAccum(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  GLfloat arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glClearAccum", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glClearAccum", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glClearAccum", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  ecode4 = SWIG_AsVal_float(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLfloat","glClearAccum", 4, argv[3] ));
  } 
  arg4 = static_cast< GLfloat >(val4);
  glClearAccum(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glClearColor(int argc, VALUE *argv, VALUE self) {
  GLclampf arg1 ;
  GLclampf arg2 ;
  GLclampf arg3 ;
  GLclampf arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLclampf","glClearColor", 1, argv[0] ));
  } 
  arg1 = static_cast< GLclampf >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLclampf","glClearColor", 2, argv[1] ));
  } 
  arg2 = static_cast< GLclampf >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLclampf","glClearColor", 3, argv[2] ));
  } 
  arg3 = static_cast< GLclampf >(val3);
  ecode4 = SWIG_AsVal_float(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLclampf","glClearColor", 4, argv[3] ));
  } 
  arg4 = static_cast< GLclampf >(val4);
  glClearColor(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glClearDepth(int argc, VALUE *argv, VALUE self) {
  GLclampd arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLclampd","glClearDepth", 1, argv[0] ));
  } 
  arg1 = static_cast< GLclampd >(val1);
  glClearDepth(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glClearIndex(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glClearIndex", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  glClearIndex(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glClearStencil(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glClearStencil", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  glClearStencil(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glClipPlane(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLdouble *arg2 = (GLdouble *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glClipPlane", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLdouble const *","glClipPlane", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLdouble * >(argp2);
  glClipPlane(arg1,(double const *)arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3b(int argc, VALUE *argv, VALUE self) {
  GLbyte arg1 ;
  GLbyte arg2 ;
  GLbyte arg3 ;
  signed char val1 ;
  int ecode1 = 0 ;
  signed char val2 ;
  int ecode2 = 0 ;
  signed char val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_signed_SS_char(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLbyte","glColor3b", 1, argv[0] ));
  } 
  arg1 = static_cast< GLbyte >(val1);
  ecode2 = SWIG_AsVal_signed_SS_char(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLbyte","glColor3b", 2, argv[1] ));
  } 
  arg2 = static_cast< GLbyte >(val2);
  ecode3 = SWIG_AsVal_signed_SS_char(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLbyte","glColor3b", 3, argv[2] ));
  } 
  arg3 = static_cast< GLbyte >(val3);
  glColor3b(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3bv(int argc, VALUE *argv, VALUE self) {
  GLbyte *arg1 = (GLbyte *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_signed_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLbyte const *","glColor3bv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLbyte * >(argp1);
  glColor3bv((signed char const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glColor3d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glColor3d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glColor3d", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  glColor3d(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glColor3dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glColor3dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glColor3f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glColor3f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glColor3f", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  glColor3f(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glColor3fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glColor3fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3i(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glColor3i", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glColor3i", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glColor3i", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  glColor3i(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3iv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glColor3iv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glColor3iv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3s(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  GLshort arg2 ;
  GLshort arg3 ;
  short val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  short val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glColor3s", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  ecode2 = SWIG_AsVal_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLshort","glColor3s", 2, argv[1] ));
  } 
  arg2 = static_cast< GLshort >(val2);
  ecode3 = SWIG_AsVal_short(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLshort","glColor3s", 3, argv[2] ));
  } 
  arg3 = static_cast< GLshort >(val3);
  glColor3s(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3sv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glColor3sv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glColor3sv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3ub(int argc, VALUE *argv, VALUE self) {
  GLubyte arg1 ;
  GLubyte arg2 ;
  GLubyte arg3 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_char(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLubyte","glColor3ub", 1, argv[0] ));
  } 
  arg1 = static_cast< GLubyte >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLubyte","glColor3ub", 2, argv[1] ));
  } 
  arg2 = static_cast< GLubyte >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_char(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLubyte","glColor3ub", 3, argv[2] ));
  } 
  arg3 = static_cast< GLubyte >(val3);
  glColor3ub(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3ubv(int argc, VALUE *argv, VALUE self) {
  GLubyte *arg1 = (GLubyte *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLubyte const *","glColor3ubv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLubyte * >(argp1);
  glColor3ubv((unsigned char const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3ui(int argc, VALUE *argv, VALUE self) {
  GLuint arg1 ;
  GLuint arg2 ;
  GLuint arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLuint","glColor3ui", 1, argv[0] ));
  } 
  arg1 = static_cast< GLuint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLuint","glColor3ui", 2, argv[1] ));
  } 
  arg2 = static_cast< GLuint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLuint","glColor3ui", 3, argv[2] ));
  } 
  arg3 = static_cast< GLuint >(val3);
  glColor3ui(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3uiv(int argc, VALUE *argv, VALUE self) {
  GLuint *arg1 = (GLuint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLuint const *","glColor3uiv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLuint * >(argp1);
  glColor3uiv((unsigned int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3us(int argc, VALUE *argv, VALUE self) {
  GLushort arg1 ;
  GLushort arg2 ;
  GLushort arg3 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLushort","glColor3us", 1, argv[0] ));
  } 
  arg1 = static_cast< GLushort >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLushort","glColor3us", 2, argv[1] ));
  } 
  arg2 = static_cast< GLushort >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_short(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLushort","glColor3us", 3, argv[2] ));
  } 
  arg3 = static_cast< GLushort >(val3);
  glColor3us(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor3usv(int argc, VALUE *argv, VALUE self) {
  GLushort *arg1 = (GLushort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLushort const *","glColor3usv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLushort * >(argp1);
  glColor3usv((unsigned short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4b(int argc, VALUE *argv, VALUE self) {
  GLbyte arg1 ;
  GLbyte arg2 ;
  GLbyte arg3 ;
  GLbyte arg4 ;
  signed char val1 ;
  int ecode1 = 0 ;
  signed char val2 ;
  int ecode2 = 0 ;
  signed char val3 ;
  int ecode3 = 0 ;
  signed char val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_signed_SS_char(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLbyte","glColor4b", 1, argv[0] ));
  } 
  arg1 = static_cast< GLbyte >(val1);
  ecode2 = SWIG_AsVal_signed_SS_char(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLbyte","glColor4b", 2, argv[1] ));
  } 
  arg2 = static_cast< GLbyte >(val2);
  ecode3 = SWIG_AsVal_signed_SS_char(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLbyte","glColor4b", 3, argv[2] ));
  } 
  arg3 = static_cast< GLbyte >(val3);
  ecode4 = SWIG_AsVal_signed_SS_char(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLbyte","glColor4b", 4, argv[3] ));
  } 
  arg4 = static_cast< GLbyte >(val4);
  glColor4b(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4bv(int argc, VALUE *argv, VALUE self) {
  GLbyte *arg1 = (GLbyte *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_signed_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLbyte const *","glColor4bv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLbyte * >(argp1);
  glColor4bv((signed char const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  GLdouble arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glColor4d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glColor4d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glColor4d", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  ecode4 = SWIG_AsVal_double(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLdouble","glColor4d", 4, argv[3] ));
  } 
  arg4 = static_cast< GLdouble >(val4);
  glColor4d(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glColor4dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glColor4dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  GLfloat arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glColor4f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glColor4f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glColor4f", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  ecode4 = SWIG_AsVal_float(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLfloat","glColor4f", 4, argv[3] ));
  } 
  arg4 = static_cast< GLfloat >(val4);
  glColor4f(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glColor4fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glColor4fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4i(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  GLint arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glColor4i", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glColor4i", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glColor4i", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glColor4i", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  glColor4i(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4iv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glColor4iv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glColor4iv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4s(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  GLshort arg2 ;
  GLshort arg3 ;
  GLshort arg4 ;
  short val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  short val3 ;
  int ecode3 = 0 ;
  short val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glColor4s", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  ecode2 = SWIG_AsVal_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLshort","glColor4s", 2, argv[1] ));
  } 
  arg2 = static_cast< GLshort >(val2);
  ecode3 = SWIG_AsVal_short(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLshort","glColor4s", 3, argv[2] ));
  } 
  arg3 = static_cast< GLshort >(val3);
  ecode4 = SWIG_AsVal_short(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLshort","glColor4s", 4, argv[3] ));
  } 
  arg4 = static_cast< GLshort >(val4);
  glColor4s(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4sv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glColor4sv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glColor4sv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4ub(int argc, VALUE *argv, VALUE self) {
  GLubyte arg1 ;
  GLubyte arg2 ;
  GLubyte arg3 ;
  GLubyte arg4 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  unsigned char val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_char(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLubyte","glColor4ub", 1, argv[0] ));
  } 
  arg1 = static_cast< GLubyte >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLubyte","glColor4ub", 2, argv[1] ));
  } 
  arg2 = static_cast< GLubyte >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_char(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLubyte","glColor4ub", 3, argv[2] ));
  } 
  arg3 = static_cast< GLubyte >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_char(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLubyte","glColor4ub", 4, argv[3] ));
  } 
  arg4 = static_cast< GLubyte >(val4);
  glColor4ub(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4ubv(int argc, VALUE *argv, VALUE self) {
  GLubyte *arg1 = (GLubyte *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLubyte const *","glColor4ubv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLubyte * >(argp1);
  glColor4ubv((unsigned char const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4ui(int argc, VALUE *argv, VALUE self) {
  GLuint arg1 ;
  GLuint arg2 ;
  GLuint arg3 ;
  GLuint arg4 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLuint","glColor4ui", 1, argv[0] ));
  } 
  arg1 = static_cast< GLuint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLuint","glColor4ui", 2, argv[1] ));
  } 
  arg2 = static_cast< GLuint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLuint","glColor4ui", 3, argv[2] ));
  } 
  arg3 = static_cast< GLuint >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLuint","glColor4ui", 4, argv[3] ));
  } 
  arg4 = static_cast< GLuint >(val4);
  glColor4ui(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4uiv(int argc, VALUE *argv, VALUE self) {
  GLuint *arg1 = (GLuint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLuint const *","glColor4uiv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLuint * >(argp1);
  glColor4uiv((unsigned int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4us(int argc, VALUE *argv, VALUE self) {
  GLushort arg1 ;
  GLushort arg2 ;
  GLushort arg3 ;
  GLushort arg4 ;
  unsigned short val1 ;
  int ecode1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  unsigned short val3 ;
  int ecode3 = 0 ;
  unsigned short val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLushort","glColor4us", 1, argv[0] ));
  } 
  arg1 = static_cast< GLushort >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLushort","glColor4us", 2, argv[1] ));
  } 
  arg2 = static_cast< GLushort >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_short(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLushort","glColor4us", 3, argv[2] ));
  } 
  arg3 = static_cast< GLushort >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_short(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLushort","glColor4us", 4, argv[3] ));
  } 
  arg4 = static_cast< GLushort >(val4);
  glColor4us(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColor4usv(int argc, VALUE *argv, VALUE self) {
  GLushort *arg1 = (GLushort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLushort const *","glColor4usv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLushort * >(argp1);
  glColor4usv((unsigned short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColorMask(int argc, VALUE *argv, VALUE self) {
  GLboolean arg1 ;
  GLboolean arg2 ;
  GLboolean arg3 ;
  GLboolean arg4 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  unsigned char val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_char(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLboolean","glColorMask", 1, argv[0] ));
  } 
  arg1 = static_cast< GLboolean >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLboolean","glColorMask", 2, argv[1] ));
  } 
  arg2 = static_cast< GLboolean >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_char(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLboolean","glColorMask", 3, argv[2] ));
  } 
  arg3 = static_cast< GLboolean >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_char(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLboolean","glColorMask", 4, argv[3] ));
  } 
  arg4 = static_cast< GLboolean >(val4);
  glColorMask(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColorMaterial(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glColorMaterial", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glColorMaterial", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  glColorMaterial(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glColorPointer(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLenum arg2 ;
  GLsizei arg3 ;
  GLvoid *arg4 = (GLvoid *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glColorPointer", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glColorPointer", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLsizei","glColorPointer", 3, argv[2] ));
  } 
  arg3 = static_cast< GLsizei >(val3);
  res4 = SWIG_ConvertPtr(argv[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), Ruby_Format_TypeError( "", "GLvoid const *","glColorPointer", 4, argv[3] )); 
  }
  glColorPointer(arg1,arg2,arg3,(void const *)arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glCopyPixels(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLsizei arg3 ;
  GLsizei arg4 ;
  GLenum arg5 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  
  if ((argc < 5) || (argc > 5)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 5)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glCopyPixels", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glCopyPixels", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLsizei","glCopyPixels", 3, argv[2] ));
  } 
  arg3 = static_cast< GLsizei >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLsizei","glCopyPixels", 4, argv[3] ));
  } 
  arg4 = static_cast< GLsizei >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLenum","glCopyPixels", 5, argv[4] ));
  } 
  arg5 = static_cast< GLenum >(val5);
  glCopyPixels(arg1,arg2,arg3,arg4,arg5);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glCopyTexImage1D(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLenum arg3 ;
  GLint arg4 ;
  GLint arg5 ;
  GLsizei arg6 ;
  GLint arg7 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  
  if ((argc < 7) || (argc > 7)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 7)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glCopyTexImage1D", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glCopyTexImage1D", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLenum","glCopyTexImage1D", 3, argv[2] ));
  } 
  arg3 = static_cast< GLenum >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glCopyTexImage1D", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  ecode5 = SWIG_AsVal_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLint","glCopyTexImage1D", 5, argv[4] ));
  } 
  arg5 = static_cast< GLint >(val5);
  ecode6 = SWIG_AsVal_int(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLsizei","glCopyTexImage1D", 6, argv[5] ));
  } 
  arg6 = static_cast< GLsizei >(val6);
  ecode7 = SWIG_AsVal_int(argv[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), Ruby_Format_TypeError( "", "GLint","glCopyTexImage1D", 7, argv[6] ));
  } 
  arg7 = static_cast< GLint >(val7);
  glCopyTexImage1D(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glCopyTexImage2D(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLenum arg3 ;
  GLint arg4 ;
  GLint arg5 ;
  GLsizei arg6 ;
  GLsizei arg7 ;
  GLint arg8 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  
  if ((argc < 8) || (argc > 8)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 8)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glCopyTexImage2D", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glCopyTexImage2D", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLenum","glCopyTexImage2D", 3, argv[2] ));
  } 
  arg3 = static_cast< GLenum >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glCopyTexImage2D", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  ecode5 = SWIG_AsVal_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLint","glCopyTexImage2D", 5, argv[4] ));
  } 
  arg5 = static_cast< GLint >(val5);
  ecode6 = SWIG_AsVal_int(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLsizei","glCopyTexImage2D", 6, argv[5] ));
  } 
  arg6 = static_cast< GLsizei >(val6);
  ecode7 = SWIG_AsVal_int(argv[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), Ruby_Format_TypeError( "", "GLsizei","glCopyTexImage2D", 7, argv[6] ));
  } 
  arg7 = static_cast< GLsizei >(val7);
  ecode8 = SWIG_AsVal_int(argv[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), Ruby_Format_TypeError( "", "GLint","glCopyTexImage2D", 8, argv[7] ));
  } 
  arg8 = static_cast< GLint >(val8);
  glCopyTexImage2D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glCopyTexSubImage1D(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  GLint arg4 ;
  GLint arg5 ;
  GLsizei arg6 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  
  if ((argc < 6) || (argc > 6)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 6)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glCopyTexSubImage1D", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glCopyTexSubImage1D", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glCopyTexSubImage1D", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glCopyTexSubImage1D", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  ecode5 = SWIG_AsVal_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLint","glCopyTexSubImage1D", 5, argv[4] ));
  } 
  arg5 = static_cast< GLint >(val5);
  ecode6 = SWIG_AsVal_int(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLsizei","glCopyTexSubImage1D", 6, argv[5] ));
  } 
  arg6 = static_cast< GLsizei >(val6);
  glCopyTexSubImage1D(arg1,arg2,arg3,arg4,arg5,arg6);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glCopyTexSubImage2D(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  GLint arg4 ;
  GLint arg5 ;
  GLint arg6 ;
  GLsizei arg7 ;
  GLsizei arg8 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  
  if ((argc < 8) || (argc > 8)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 8)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glCopyTexSubImage2D", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glCopyTexSubImage2D", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glCopyTexSubImage2D", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glCopyTexSubImage2D", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  ecode5 = SWIG_AsVal_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLint","glCopyTexSubImage2D", 5, argv[4] ));
  } 
  arg5 = static_cast< GLint >(val5);
  ecode6 = SWIG_AsVal_int(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLint","glCopyTexSubImage2D", 6, argv[5] ));
  } 
  arg6 = static_cast< GLint >(val6);
  ecode7 = SWIG_AsVal_int(argv[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), Ruby_Format_TypeError( "", "GLsizei","glCopyTexSubImage2D", 7, argv[6] ));
  } 
  arg7 = static_cast< GLsizei >(val7);
  ecode8 = SWIG_AsVal_int(argv[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), Ruby_Format_TypeError( "", "GLsizei","glCopyTexSubImage2D", 8, argv[7] ));
  } 
  arg8 = static_cast< GLsizei >(val8);
  glCopyTexSubImage2D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glCullFace(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glCullFace", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  glCullFace(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glDeleteLists(int argc, VALUE *argv, VALUE self) {
  GLuint arg1 ;
  GLsizei arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLuint","glDeleteLists", 1, argv[0] ));
  } 
  arg1 = static_cast< GLuint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLsizei","glDeleteLists", 2, argv[1] ));
  } 
  arg2 = static_cast< GLsizei >(val2);
  glDeleteLists(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glDeleteTextures(int argc, VALUE *argv, VALUE self) {
  GLsizei arg1 ;
  GLuint *arg2 = (GLuint *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLsizei","glDeleteTextures", 1, argv[0] ));
  } 
  arg1 = static_cast< GLsizei >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLuint const *","glDeleteTextures", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLuint * >(argp2);
  glDeleteTextures(arg1,(unsigned int const *)arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glDepthFunc(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glDepthFunc", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  glDepthFunc(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glDepthMask(int argc, VALUE *argv, VALUE self) {
  GLboolean arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_char(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLboolean","glDepthMask", 1, argv[0] ));
  } 
  arg1 = static_cast< GLboolean >(val1);
  glDepthMask(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glDepthRange(int argc, VALUE *argv, VALUE self) {
  GLclampd arg1 ;
  GLclampd arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLclampd","glDepthRange", 1, argv[0] ));
  } 
  arg1 = static_cast< GLclampd >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLclampd","glDepthRange", 2, argv[1] ));
  } 
  arg2 = static_cast< GLclampd >(val2);
  glDepthRange(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glDisable(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glDisable", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  glDisable(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glDisableClientState(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glDisableClientState", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  glDisableClientState(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glDrawArrays(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLsizei arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glDrawArrays", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glDrawArrays", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLsizei","glDrawArrays", 3, argv[2] ));
  } 
  arg3 = static_cast< GLsizei >(val3);
  glDrawArrays(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glDrawBuffer(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glDrawBuffer", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  glDrawBuffer(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glDrawElements(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLsizei arg2 ;
  GLenum arg3 ;
  GLvoid *arg4 = (GLvoid *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glDrawElements", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLsizei","glDrawElements", 2, argv[1] ));
  } 
  arg2 = static_cast< GLsizei >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLenum","glDrawElements", 3, argv[2] ));
  } 
  arg3 = static_cast< GLenum >(val3);
  res4 = SWIG_ConvertPtr(argv[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), Ruby_Format_TypeError( "", "GLvoid const *","glDrawElements", 4, argv[3] )); 
  }
  glDrawElements(arg1,arg2,arg3,(void const *)arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glDrawPixels(int argc, VALUE *argv, VALUE self) {
  GLsizei arg1 ;
  GLsizei arg2 ;
  GLenum arg3 ;
  GLenum arg4 ;
  GLvoid *arg5 = (GLvoid *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  int res5 ;
  
  if ((argc < 5) || (argc > 5)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 5)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLsizei","glDrawPixels", 1, argv[0] ));
  } 
  arg1 = static_cast< GLsizei >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLsizei","glDrawPixels", 2, argv[1] ));
  } 
  arg2 = static_cast< GLsizei >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLenum","glDrawPixels", 3, argv[2] ));
  } 
  arg3 = static_cast< GLenum >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLenum","glDrawPixels", 4, argv[3] ));
  } 
  arg4 = static_cast< GLenum >(val4);
  res5 = SWIG_ConvertPtr(argv[4],SWIG_as_voidptrptr(&arg5), 0, 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), Ruby_Format_TypeError( "", "GLvoid const *","glDrawPixels", 5, argv[4] )); 
  }
  glDrawPixels(arg1,arg2,arg3,arg4,(void const *)arg5);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEdgeFlag(int argc, VALUE *argv, VALUE self) {
  GLboolean arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_char(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLboolean","glEdgeFlag", 1, argv[0] ));
  } 
  arg1 = static_cast< GLboolean >(val1);
  glEdgeFlag(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEdgeFlagPointer(int argc, VALUE *argv, VALUE self) {
  GLsizei arg1 ;
  GLvoid *arg2 = (GLvoid *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLsizei","glEdgeFlagPointer", 1, argv[0] ));
  } 
  arg1 = static_cast< GLsizei >(val1);
  res2 = SWIG_ConvertPtr(argv[1],SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLvoid const *","glEdgeFlagPointer", 2, argv[1] )); 
  }
  glEdgeFlagPointer(arg1,(void const *)arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEdgeFlagv(int argc, VALUE *argv, VALUE self) {
  GLboolean *arg1 = (GLboolean *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLboolean const *","glEdgeFlagv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLboolean * >(argp1);
  glEdgeFlagv((unsigned char const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEnable(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glEnable", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  glEnable(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEnableClientState(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glEnableClientState", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  glEnableClientState(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEnd(int argc, VALUE *argv, VALUE self) {
  if ((argc < 0) || (argc > 0)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 0)",argc); SWIG_fail;
  }
  glEnd();
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEndList(int argc, VALUE *argv, VALUE self) {
  if ((argc < 0) || (argc > 0)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 0)",argc); SWIG_fail;
  }
  glEndList();
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEvalCoord1d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glEvalCoord1d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  glEvalCoord1d(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEvalCoord1dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glEvalCoord1dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glEvalCoord1dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEvalCoord1f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glEvalCoord1f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  glEvalCoord1f(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEvalCoord1fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glEvalCoord1fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glEvalCoord1fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEvalCoord2d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glEvalCoord2d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glEvalCoord2d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  glEvalCoord2d(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEvalCoord2dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glEvalCoord2dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glEvalCoord2dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEvalCoord2f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glEvalCoord2f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glEvalCoord2f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  glEvalCoord2f(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEvalCoord2fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glEvalCoord2fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glEvalCoord2fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEvalMesh1(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glEvalMesh1", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glEvalMesh1", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glEvalMesh1", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  glEvalMesh1(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEvalMesh2(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  GLint arg4 ;
  GLint arg5 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if ((argc < 5) || (argc > 5)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 5)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glEvalMesh2", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glEvalMesh2", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glEvalMesh2", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glEvalMesh2", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  ecode5 = SWIG_AsVal_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLint","glEvalMesh2", 5, argv[4] ));
  } 
  arg5 = static_cast< GLint >(val5);
  glEvalMesh2(arg1,arg2,arg3,arg4,arg5);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEvalPoint1(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glEvalPoint1", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  glEvalPoint1(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glEvalPoint2(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glEvalPoint2", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glEvalPoint2", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  glEvalPoint2(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glFeedbackBuffer(int argc, VALUE *argv, VALUE self) {
  GLsizei arg1 ;
  GLenum arg2 ;
  GLfloat *arg3 = (GLfloat *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLsizei","glFeedbackBuffer", 1, argv[0] ));
  } 
  arg1 = static_cast< GLsizei >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glFeedbackBuffer", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLfloat *","glFeedbackBuffer", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLfloat * >(argp3);
  glFeedbackBuffer(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glFinish(int argc, VALUE *argv, VALUE self) {
  if ((argc < 0) || (argc > 0)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 0)",argc); SWIG_fail;
  }
  glFinish();
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glFlush(int argc, VALUE *argv, VALUE self) {
  if ((argc < 0) || (argc > 0)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 0)",argc); SWIG_fail;
  }
  glFlush();
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glFogf(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLfloat arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glFogf", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glFogf", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  glFogf(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glFogfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLfloat *arg2 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glFogfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLfloat const *","glFogfv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLfloat * >(argp2);
  glFogfv(arg1,(float const *)arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glFogi(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glFogi", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glFogi", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  glFogi(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glFogiv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint *arg2 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glFogiv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLint const *","glFogiv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLint * >(argp2);
  glFogiv(arg1,(int const *)arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glFrontFace(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glFrontFace", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  glFrontFace(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glFrustum(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  GLdouble arg4 ;
  GLdouble arg5 ;
  GLdouble arg6 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  
  if ((argc < 6) || (argc > 6)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 6)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glFrustum", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glFrustum", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glFrustum", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  ecode4 = SWIG_AsVal_double(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLdouble","glFrustum", 4, argv[3] ));
  } 
  arg4 = static_cast< GLdouble >(val4);
  ecode5 = SWIG_AsVal_double(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLdouble","glFrustum", 5, argv[4] ));
  } 
  arg5 = static_cast< GLdouble >(val5);
  ecode6 = SWIG_AsVal_double(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLdouble","glFrustum", 6, argv[5] ));
  } 
  arg6 = static_cast< GLdouble >(val6);
  glFrustum(arg1,arg2,arg3,arg4,arg5,arg6);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGenLists(int argc, VALUE *argv, VALUE self) {
  GLsizei arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  GLuint result;
  VALUE vresult = Qnil;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLsizei","glGenLists", 1, argv[0] ));
  } 
  arg1 = static_cast< GLsizei >(val1);
  result = (GLuint)glGenLists(arg1);
  vresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return vresult;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGenTextures(int argc, VALUE *argv, VALUE self) {
  GLsizei arg1 ;
  GLuint *arg2 = (GLuint *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLsizei","glGenTextures", 1, argv[0] ));
  } 
  arg1 = static_cast< GLsizei >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLuint *","glGenTextures", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLuint * >(argp2);
  glGenTextures(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetBooleanv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLboolean *arg2 = (GLboolean *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetBooleanv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLboolean *","glGetBooleanv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLboolean * >(argp2);
  glGetBooleanv(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetClipPlane(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLdouble *arg2 = (GLdouble *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetClipPlane", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLdouble *","glGetClipPlane", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLdouble * >(argp2);
  glGetClipPlane(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetDoublev(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLdouble *arg2 = (GLdouble *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetDoublev", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLdouble *","glGetDoublev", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLdouble * >(argp2);
  glGetDoublev(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetError(int argc, VALUE *argv, VALUE self) {
  GLenum result;
  VALUE vresult = Qnil;
  
  if ((argc < 0) || (argc > 0)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 0)",argc); SWIG_fail;
  }
  result = (GLenum)glGetError();
  vresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return vresult;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetFloatv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLfloat *arg2 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetFloatv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLfloat *","glGetFloatv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLfloat * >(argp2);
  glGetFloatv(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetIntegerv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint *arg2 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetIntegerv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLint *","glGetIntegerv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLint * >(argp2);
  glGetIntegerv(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetLightfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat *arg3 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetLightfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetLightfv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLfloat *","glGetLightfv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLfloat * >(argp3);
  glGetLightfv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetLightiv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint *arg3 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetLightiv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetLightiv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLint *","glGetLightiv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLint * >(argp3);
  glGetLightiv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetMapdv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLdouble *arg3 = (GLdouble *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetMapdv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetMapdv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLdouble *","glGetMapdv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLdouble * >(argp3);
  glGetMapdv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetMapfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat *arg3 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetMapfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetMapfv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLfloat *","glGetMapfv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLfloat * >(argp3);
  glGetMapfv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetMapiv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint *arg3 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetMapiv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetMapiv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLint *","glGetMapiv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLint * >(argp3);
  glGetMapiv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetMaterialfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat *arg3 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetMaterialfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetMaterialfv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLfloat *","glGetMaterialfv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLfloat * >(argp3);
  glGetMaterialfv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetMaterialiv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint *arg3 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetMaterialiv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetMaterialiv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLint *","glGetMaterialiv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLint * >(argp3);
  glGetMaterialiv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetPixelMapfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLfloat *arg2 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetPixelMapfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLfloat *","glGetPixelMapfv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLfloat * >(argp2);
  glGetPixelMapfv(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetPixelMapuiv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLuint *arg2 = (GLuint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetPixelMapuiv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLuint *","glGetPixelMapuiv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLuint * >(argp2);
  glGetPixelMapuiv(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetPixelMapusv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLushort *arg2 = (GLushort *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetPixelMapusv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLushort *","glGetPixelMapusv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLushort * >(argp2);
  glGetPixelMapusv(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetPointerv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLvoid **arg2 = (GLvoid **) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetPointerv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_p_void, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLvoid **","glGetPointerv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLvoid ** >(argp2);
  glGetPointerv(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetPolygonStipple(int argc, VALUE *argv, VALUE self) {
  GLubyte *arg1 = (GLubyte *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLubyte *","glGetPolygonStipple", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLubyte * >(argp1);
  glGetPolygonStipple(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetString(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  GLubyte *result = 0 ;
  VALUE vresult = Qnil;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetString", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  result = (GLubyte *)glGetString(arg1);
  vresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  return vresult;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetTexEnvfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat *arg3 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetTexEnvfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetTexEnvfv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLfloat *","glGetTexEnvfv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLfloat * >(argp3);
  glGetTexEnvfv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetTexEnviv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint *arg3 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetTexEnviv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetTexEnviv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLint *","glGetTexEnviv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLint * >(argp3);
  glGetTexEnviv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetTexGendv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLdouble *arg3 = (GLdouble *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetTexGendv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetTexGendv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLdouble *","glGetTexGendv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLdouble * >(argp3);
  glGetTexGendv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetTexGenfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat *arg3 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetTexGenfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetTexGenfv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLfloat *","glGetTexGenfv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLfloat * >(argp3);
  glGetTexGenfv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetTexGeniv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint *arg3 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetTexGeniv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetTexGeniv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLint *","glGetTexGeniv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLint * >(argp3);
  glGetTexGeniv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetTexImage(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLenum arg3 ;
  GLenum arg4 ;
  GLvoid *arg5 = (GLvoid *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  int res5 ;
  
  if ((argc < 5) || (argc > 5)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 5)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetTexImage", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glGetTexImage", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLenum","glGetTexImage", 3, argv[2] ));
  } 
  arg3 = static_cast< GLenum >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLenum","glGetTexImage", 4, argv[3] ));
  } 
  arg4 = static_cast< GLenum >(val4);
  res5 = SWIG_ConvertPtr(argv[4],SWIG_as_voidptrptr(&arg5), 0, 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), Ruby_Format_TypeError( "", "GLvoid *","glGetTexImage", 5, argv[4] )); 
  }
  glGetTexImage(arg1,arg2,arg3,arg4,arg5);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetTexLevelParameterfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLenum arg3 ;
  GLfloat *arg4 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetTexLevelParameterfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glGetTexLevelParameterfv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLenum","glGetTexLevelParameterfv", 3, argv[2] ));
  } 
  arg3 = static_cast< GLenum >(val3);
  res4 = SWIG_ConvertPtr(argv[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), Ruby_Format_TypeError( "", "GLfloat *","glGetTexLevelParameterfv", 4, argv[3] )); 
  }
  arg4 = reinterpret_cast< GLfloat * >(argp4);
  glGetTexLevelParameterfv(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetTexLevelParameteriv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLenum arg3 ;
  GLint *arg4 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetTexLevelParameteriv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glGetTexLevelParameteriv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLenum","glGetTexLevelParameteriv", 3, argv[2] ));
  } 
  arg3 = static_cast< GLenum >(val3);
  res4 = SWIG_ConvertPtr(argv[3], &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), Ruby_Format_TypeError( "", "GLint *","glGetTexLevelParameteriv", 4, argv[3] )); 
  }
  arg4 = reinterpret_cast< GLint * >(argp4);
  glGetTexLevelParameteriv(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetTexParameterfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat *arg3 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetTexParameterfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetTexParameterfv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLfloat *","glGetTexParameterfv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLfloat * >(argp3);
  glGetTexParameterfv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glGetTexParameteriv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint *arg3 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glGetTexParameteriv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glGetTexParameteriv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLint *","glGetTexParameteriv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLint * >(argp3);
  glGetTexParameteriv(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glHint(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glHint", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glHint", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  glHint(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIndexMask(int argc, VALUE *argv, VALUE self) {
  GLuint arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLuint","glIndexMask", 1, argv[0] ));
  } 
  arg1 = static_cast< GLuint >(val1);
  glIndexMask(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIndexPointer(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLsizei arg2 ;
  GLvoid *arg3 = (GLvoid *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glIndexPointer", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLsizei","glIndexPointer", 2, argv[1] ));
  } 
  arg2 = static_cast< GLsizei >(val2);
  res3 = SWIG_ConvertPtr(argv[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLvoid const *","glIndexPointer", 3, argv[2] )); 
  }
  glIndexPointer(arg1,arg2,(void const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIndexd(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glIndexd", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  glIndexd(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIndexdv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glIndexdv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glIndexdv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIndexf(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glIndexf", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  glIndexf(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIndexfv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glIndexfv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glIndexfv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIndexi(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glIndexi", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  glIndexi(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIndexiv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glIndexiv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glIndexiv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIndexs(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  short val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glIndexs", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  glIndexs(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIndexsv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glIndexsv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glIndexsv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIndexub(int argc, VALUE *argv, VALUE self) {
  GLubyte arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_char(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLubyte","glIndexub", 1, argv[0] ));
  } 
  arg1 = static_cast< GLubyte >(val1);
  glIndexub(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIndexubv(int argc, VALUE *argv, VALUE self) {
  GLubyte *arg1 = (GLubyte *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLubyte const *","glIndexubv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLubyte * >(argp1);
  glIndexubv((unsigned char const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glInitNames(int argc, VALUE *argv, VALUE self) {
  if ((argc < 0) || (argc > 0)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 0)",argc); SWIG_fail;
  }
  glInitNames();
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glInterleavedArrays(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLsizei arg2 ;
  GLvoid *arg3 = (GLvoid *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glInterleavedArrays", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLsizei","glInterleavedArrays", 2, argv[1] ));
  } 
  arg2 = static_cast< GLsizei >(val2);
  res3 = SWIG_ConvertPtr(argv[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLvoid const *","glInterleavedArrays", 3, argv[2] )); 
  }
  glInterleavedArrays(arg1,arg2,(void const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIsEnabled(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  GLboolean result;
  VALUE vresult = Qnil;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glIsEnabled", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  result = (GLboolean)glIsEnabled(arg1);
  vresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return vresult;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIsList(int argc, VALUE *argv, VALUE self) {
  GLuint arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  GLboolean result;
  VALUE vresult = Qnil;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLuint","glIsList", 1, argv[0] ));
  } 
  arg1 = static_cast< GLuint >(val1);
  result = (GLboolean)glIsList(arg1);
  vresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return vresult;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glIsTexture(int argc, VALUE *argv, VALUE self) {
  GLuint arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  GLboolean result;
  VALUE vresult = Qnil;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLuint","glIsTexture", 1, argv[0] ));
  } 
  arg1 = static_cast< GLuint >(val1);
  result = (GLboolean)glIsTexture(arg1);
  vresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return vresult;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLightModelf(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLfloat arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glLightModelf", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glLightModelf", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  glLightModelf(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLightModelfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLfloat *arg2 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glLightModelfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLfloat const *","glLightModelfv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLfloat * >(argp2);
  glLightModelfv(arg1,(float const *)arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLightModeli(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glLightModeli", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glLightModeli", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  glLightModeli(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLightModeliv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint *arg2 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glLightModeliv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLint const *","glLightModeliv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLint * >(argp2);
  glLightModeliv(arg1,(int const *)arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLightf(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glLightf", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glLightf", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glLightf", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  glLightf(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLightfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat *arg3 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glLightfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glLightfv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLfloat const *","glLightfv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLfloat * >(argp3);
  glLightfv(arg1,arg2,(float const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLighti(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glLighti", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glLighti", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glLighti", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  glLighti(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLightiv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint *arg3 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glLightiv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glLightiv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLint const *","glLightiv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLint * >(argp3);
  glLightiv(arg1,arg2,(int const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLineStipple(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLushort arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glLineStipple", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLushort","glLineStipple", 2, argv[1] ));
  } 
  arg2 = static_cast< GLushort >(val2);
  glLineStipple(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLineWidth(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glLineWidth", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  glLineWidth(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glListBase(int argc, VALUE *argv, VALUE self) {
  GLuint arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLuint","glListBase", 1, argv[0] ));
  } 
  arg1 = static_cast< GLuint >(val1);
  glListBase(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLoadIdentity(int argc, VALUE *argv, VALUE self) {
  if ((argc < 0) || (argc > 0)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 0)",argc); SWIG_fail;
  }
  glLoadIdentity();
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLoadMatrixd(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glLoadMatrixd", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glLoadMatrixd((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLoadMatrixf(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glLoadMatrixf", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glLoadMatrixf((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLoadName(int argc, VALUE *argv, VALUE self) {
  GLuint arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLuint","glLoadName", 1, argv[0] ));
  } 
  arg1 = static_cast< GLuint >(val1);
  glLoadName(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glLogicOp(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glLogicOp", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  glLogicOp(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMap1d(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  GLint arg4 ;
  GLint arg5 ;
  GLdouble *arg6 = (GLdouble *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if ((argc < 6) || (argc > 6)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 6)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glMap1d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glMap1d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glMap1d", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glMap1d", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  ecode5 = SWIG_AsVal_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLint","glMap1d", 5, argv[4] ));
  } 
  arg5 = static_cast< GLint >(val5);
  res6 = SWIG_ConvertPtr(argv[5], &argp6,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), Ruby_Format_TypeError( "", "GLdouble const *","glMap1d", 6, argv[5] )); 
  }
  arg6 = reinterpret_cast< GLdouble * >(argp6);
  glMap1d(arg1,arg2,arg3,arg4,arg5,(double const *)arg6);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMap1f(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  GLint arg4 ;
  GLint arg5 ;
  GLfloat *arg6 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if ((argc < 6) || (argc > 6)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 6)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glMap1f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glMap1f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glMap1f", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glMap1f", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  ecode5 = SWIG_AsVal_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLint","glMap1f", 5, argv[4] ));
  } 
  arg5 = static_cast< GLint >(val5);
  res6 = SWIG_ConvertPtr(argv[5], &argp6,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), Ruby_Format_TypeError( "", "GLfloat const *","glMap1f", 6, argv[5] )); 
  }
  arg6 = reinterpret_cast< GLfloat * >(argp6);
  glMap1f(arg1,arg2,arg3,arg4,arg5,(float const *)arg6);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMap2d(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  GLint arg4 ;
  GLint arg5 ;
  GLdouble arg6 ;
  GLdouble arg7 ;
  GLint arg8 ;
  GLint arg9 ;
  GLdouble *arg10 = (GLdouble *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  double val7 ;
  int ecode7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  int val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  
  if ((argc < 10) || (argc > 10)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 10)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glMap2d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glMap2d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glMap2d", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glMap2d", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  ecode5 = SWIG_AsVal_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLint","glMap2d", 5, argv[4] ));
  } 
  arg5 = static_cast< GLint >(val5);
  ecode6 = SWIG_AsVal_double(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLdouble","glMap2d", 6, argv[5] ));
  } 
  arg6 = static_cast< GLdouble >(val6);
  ecode7 = SWIG_AsVal_double(argv[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), Ruby_Format_TypeError( "", "GLdouble","glMap2d", 7, argv[6] ));
  } 
  arg7 = static_cast< GLdouble >(val7);
  ecode8 = SWIG_AsVal_int(argv[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), Ruby_Format_TypeError( "", "GLint","glMap2d", 8, argv[7] ));
  } 
  arg8 = static_cast< GLint >(val8);
  ecode9 = SWIG_AsVal_int(argv[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), Ruby_Format_TypeError( "", "GLint","glMap2d", 9, argv[8] ));
  } 
  arg9 = static_cast< GLint >(val9);
  res10 = SWIG_ConvertPtr(argv[9], &argp10,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), Ruby_Format_TypeError( "", "GLdouble const *","glMap2d", 10, argv[9] )); 
  }
  arg10 = reinterpret_cast< GLdouble * >(argp10);
  glMap2d(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,(double const *)arg10);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMap2f(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  GLint arg4 ;
  GLint arg5 ;
  GLfloat arg6 ;
  GLfloat arg7 ;
  GLint arg8 ;
  GLint arg9 ;
  GLfloat *arg10 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  float val7 ;
  int ecode7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  int val9 ;
  int ecode9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  
  if ((argc < 10) || (argc > 10)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 10)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glMap2f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glMap2f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glMap2f", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glMap2f", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  ecode5 = SWIG_AsVal_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLint","glMap2f", 5, argv[4] ));
  } 
  arg5 = static_cast< GLint >(val5);
  ecode6 = SWIG_AsVal_float(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLfloat","glMap2f", 6, argv[5] ));
  } 
  arg6 = static_cast< GLfloat >(val6);
  ecode7 = SWIG_AsVal_float(argv[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), Ruby_Format_TypeError( "", "GLfloat","glMap2f", 7, argv[6] ));
  } 
  arg7 = static_cast< GLfloat >(val7);
  ecode8 = SWIG_AsVal_int(argv[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), Ruby_Format_TypeError( "", "GLint","glMap2f", 8, argv[7] ));
  } 
  arg8 = static_cast< GLint >(val8);
  ecode9 = SWIG_AsVal_int(argv[8], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), Ruby_Format_TypeError( "", "GLint","glMap2f", 9, argv[8] ));
  } 
  arg9 = static_cast< GLint >(val9);
  res10 = SWIG_ConvertPtr(argv[9], &argp10,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), Ruby_Format_TypeError( "", "GLfloat const *","glMap2f", 10, argv[9] )); 
  }
  arg10 = reinterpret_cast< GLfloat * >(argp10);
  glMap2f(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,(float const *)arg10);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMapGrid1d(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glMapGrid1d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glMapGrid1d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glMapGrid1d", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  glMapGrid1d(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMapGrid1f(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glMapGrid1f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glMapGrid1f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glMapGrid1f", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  glMapGrid1f(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMapGrid2d(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  GLint arg4 ;
  GLdouble arg5 ;
  GLdouble arg6 ;
  int val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  
  if ((argc < 6) || (argc > 6)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 6)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glMapGrid2d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glMapGrid2d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glMapGrid2d", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glMapGrid2d", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  ecode5 = SWIG_AsVal_double(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLdouble","glMapGrid2d", 5, argv[4] ));
  } 
  arg5 = static_cast< GLdouble >(val5);
  ecode6 = SWIG_AsVal_double(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLdouble","glMapGrid2d", 6, argv[5] ));
  } 
  arg6 = static_cast< GLdouble >(val6);
  glMapGrid2d(arg1,arg2,arg3,arg4,arg5,arg6);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMapGrid2f(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  GLint arg4 ;
  GLfloat arg5 ;
  GLfloat arg6 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  
  if ((argc < 6) || (argc > 6)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 6)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glMapGrid2f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glMapGrid2f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glMapGrid2f", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glMapGrid2f", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  ecode5 = SWIG_AsVal_float(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLfloat","glMapGrid2f", 5, argv[4] ));
  } 
  arg5 = static_cast< GLfloat >(val5);
  ecode6 = SWIG_AsVal_float(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLfloat","glMapGrid2f", 6, argv[5] ));
  } 
  arg6 = static_cast< GLfloat >(val6);
  glMapGrid2f(arg1,arg2,arg3,arg4,arg5,arg6);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMaterialf(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glMaterialf", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glMaterialf", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glMaterialf", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  glMaterialf(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMaterialfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat *arg3 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glMaterialfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glMaterialfv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLfloat const *","glMaterialfv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLfloat * >(argp3);
  glMaterialfv(arg1,arg2,(float const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMateriali(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glMateriali", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glMateriali", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glMateriali", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  glMateriali(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMaterialiv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint *arg3 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glMaterialiv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glMaterialiv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLint const *","glMaterialiv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLint * >(argp3);
  glMaterialiv(arg1,arg2,(int const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMatrixMode(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glMatrixMode", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  glMatrixMode(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMultMatrixd(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glMultMatrixd", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glMultMatrixd((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glMultMatrixf(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glMultMatrixf", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glMultMatrixf((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glNewList(int argc, VALUE *argv, VALUE self) {
  GLuint arg1 ;
  GLenum arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLuint","glNewList", 1, argv[0] ));
  } 
  arg1 = static_cast< GLuint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glNewList", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  glNewList(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glNormal3b(int argc, VALUE *argv, VALUE self) {
  GLbyte arg1 ;
  GLbyte arg2 ;
  GLbyte arg3 ;
  signed char val1 ;
  int ecode1 = 0 ;
  signed char val2 ;
  int ecode2 = 0 ;
  signed char val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_signed_SS_char(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLbyte","glNormal3b", 1, argv[0] ));
  } 
  arg1 = static_cast< GLbyte >(val1);
  ecode2 = SWIG_AsVal_signed_SS_char(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLbyte","glNormal3b", 2, argv[1] ));
  } 
  arg2 = static_cast< GLbyte >(val2);
  ecode3 = SWIG_AsVal_signed_SS_char(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLbyte","glNormal3b", 3, argv[2] ));
  } 
  arg3 = static_cast< GLbyte >(val3);
  glNormal3b(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glNormal3bv(int argc, VALUE *argv, VALUE self) {
  GLbyte *arg1 = (GLbyte *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_signed_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLbyte const *","glNormal3bv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLbyte * >(argp1);
  glNormal3bv((signed char const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glNormal3d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glNormal3d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glNormal3d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glNormal3d", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  glNormal3d(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glNormal3dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glNormal3dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glNormal3dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glNormal3f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glNormal3f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glNormal3f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glNormal3f", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  glNormal3f(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glNormal3fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glNormal3fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glNormal3fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glNormal3i(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glNormal3i", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glNormal3i", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glNormal3i", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  glNormal3i(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glNormal3iv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glNormal3iv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glNormal3iv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glNormal3s(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  GLshort arg2 ;
  GLshort arg3 ;
  short val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  short val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glNormal3s", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  ecode2 = SWIG_AsVal_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLshort","glNormal3s", 2, argv[1] ));
  } 
  arg2 = static_cast< GLshort >(val2);
  ecode3 = SWIG_AsVal_short(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLshort","glNormal3s", 3, argv[2] ));
  } 
  arg3 = static_cast< GLshort >(val3);
  glNormal3s(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glNormal3sv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glNormal3sv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glNormal3sv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glNormalPointer(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLsizei arg2 ;
  GLvoid *arg3 = (GLvoid *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glNormalPointer", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLsizei","glNormalPointer", 2, argv[1] ));
  } 
  arg2 = static_cast< GLsizei >(val2);
  res3 = SWIG_ConvertPtr(argv[2],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLvoid const *","glNormalPointer", 3, argv[2] )); 
  }
  glNormalPointer(arg1,arg2,(void const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glOrtho(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  GLdouble arg4 ;
  GLdouble arg5 ;
  GLdouble arg6 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  double val5 ;
  int ecode5 = 0 ;
  double val6 ;
  int ecode6 = 0 ;
  
  if ((argc < 6) || (argc > 6)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 6)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glOrtho", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glOrtho", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glOrtho", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  ecode4 = SWIG_AsVal_double(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLdouble","glOrtho", 4, argv[3] ));
  } 
  arg4 = static_cast< GLdouble >(val4);
  ecode5 = SWIG_AsVal_double(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLdouble","glOrtho", 5, argv[4] ));
  } 
  arg5 = static_cast< GLdouble >(val5);
  ecode6 = SWIG_AsVal_double(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLdouble","glOrtho", 6, argv[5] ));
  } 
  arg6 = static_cast< GLdouble >(val6);
  glOrtho(arg1,arg2,arg3,arg4,arg5,arg6);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPassThrough(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glPassThrough", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  glPassThrough(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPixelMapfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLsizei arg2 ;
  GLfloat *arg3 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glPixelMapfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLsizei","glPixelMapfv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLsizei >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLfloat const *","glPixelMapfv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLfloat * >(argp3);
  glPixelMapfv(arg1,arg2,(float const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPixelMapuiv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLsizei arg2 ;
  GLuint *arg3 = (GLuint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glPixelMapuiv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLsizei","glPixelMapuiv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLsizei >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLuint const *","glPixelMapuiv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLuint * >(argp3);
  glPixelMapuiv(arg1,arg2,(unsigned int const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPixelMapusv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLsizei arg2 ;
  GLushort *arg3 = (GLushort *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glPixelMapusv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLsizei","glPixelMapusv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLsizei >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLushort const *","glPixelMapusv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLushort * >(argp3);
  glPixelMapusv(arg1,arg2,(unsigned short const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPixelStoref(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLfloat arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glPixelStoref", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glPixelStoref", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  glPixelStoref(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPixelStorei(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glPixelStorei", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glPixelStorei", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  glPixelStorei(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPixelTransferf(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLfloat arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glPixelTransferf", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glPixelTransferf", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  glPixelTransferf(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPixelTransferi(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glPixelTransferi", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glPixelTransferi", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  glPixelTransferi(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPixelZoom(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glPixelZoom", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glPixelZoom", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  glPixelZoom(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPointSize(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glPointSize", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  glPointSize(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPolygonMode(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glPolygonMode", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glPolygonMode", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  glPolygonMode(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPolygonOffset(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glPolygonOffset", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glPolygonOffset", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  glPolygonOffset(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPolygonStipple(int argc, VALUE *argv, VALUE self) {
  GLubyte *arg1 = (GLubyte *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLubyte const *","glPolygonStipple", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLubyte * >(argp1);
  glPolygonStipple((unsigned char const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPopAttrib(int argc, VALUE *argv, VALUE self) {
  if ((argc < 0) || (argc > 0)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 0)",argc); SWIG_fail;
  }
  glPopAttrib();
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPopClientAttrib(int argc, VALUE *argv, VALUE self) {
  if ((argc < 0) || (argc > 0)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 0)",argc); SWIG_fail;
  }
  glPopClientAttrib();
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPopMatrix(int argc, VALUE *argv, VALUE self) {
  if ((argc < 0) || (argc > 0)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 0)",argc); SWIG_fail;
  }
  glPopMatrix();
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPopName(int argc, VALUE *argv, VALUE self) {
  if ((argc < 0) || (argc > 0)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 0)",argc); SWIG_fail;
  }
  glPopName();
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPrioritizeTextures(int argc, VALUE *argv, VALUE self) {
  GLsizei arg1 ;
  GLuint *arg2 = (GLuint *) 0 ;
  GLclampf *arg3 = (GLclampf *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLsizei","glPrioritizeTextures", 1, argv[0] ));
  } 
  arg1 = static_cast< GLsizei >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLuint const *","glPrioritizeTextures", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLuint * >(argp2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLclampf const *","glPrioritizeTextures", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLclampf * >(argp3);
  glPrioritizeTextures(arg1,(unsigned int const *)arg2,(float const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPushAttrib(int argc, VALUE *argv, VALUE self) {
  GLbitfield arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLbitfield","glPushAttrib", 1, argv[0] ));
  } 
  arg1 = static_cast< GLbitfield >(val1);
  glPushAttrib(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPushClientAttrib(int argc, VALUE *argv, VALUE self) {
  GLbitfield arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLbitfield","glPushClientAttrib", 1, argv[0] ));
  } 
  arg1 = static_cast< GLbitfield >(val1);
  glPushClientAttrib(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPushMatrix(int argc, VALUE *argv, VALUE self) {
  if ((argc < 0) || (argc > 0)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 0)",argc); SWIG_fail;
  }
  glPushMatrix();
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glPushName(int argc, VALUE *argv, VALUE self) {
  GLuint arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLuint","glPushName", 1, argv[0] ));
  } 
  arg1 = static_cast< GLuint >(val1);
  glPushName(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos2d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glRasterPos2d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glRasterPos2d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  glRasterPos2d(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos2dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glRasterPos2dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glRasterPos2dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos2f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glRasterPos2f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glRasterPos2f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  glRasterPos2f(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos2fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glRasterPos2fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glRasterPos2fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos2i(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glRasterPos2i", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glRasterPos2i", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  glRasterPos2i(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos2iv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glRasterPos2iv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glRasterPos2iv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos2s(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  GLshort arg2 ;
  short val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glRasterPos2s", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  ecode2 = SWIG_AsVal_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLshort","glRasterPos2s", 2, argv[1] ));
  } 
  arg2 = static_cast< GLshort >(val2);
  glRasterPos2s(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos2sv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glRasterPos2sv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glRasterPos2sv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos3d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glRasterPos3d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glRasterPos3d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glRasterPos3d", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  glRasterPos3d(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos3dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glRasterPos3dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glRasterPos3dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos3f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glRasterPos3f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glRasterPos3f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glRasterPos3f", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  glRasterPos3f(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos3fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glRasterPos3fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glRasterPos3fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos3i(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glRasterPos3i", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glRasterPos3i", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glRasterPos3i", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  glRasterPos3i(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos3iv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glRasterPos3iv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glRasterPos3iv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos3s(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  GLshort arg2 ;
  GLshort arg3 ;
  short val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  short val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glRasterPos3s", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  ecode2 = SWIG_AsVal_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLshort","glRasterPos3s", 2, argv[1] ));
  } 
  arg2 = static_cast< GLshort >(val2);
  ecode3 = SWIG_AsVal_short(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLshort","glRasterPos3s", 3, argv[2] ));
  } 
  arg3 = static_cast< GLshort >(val3);
  glRasterPos3s(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos3sv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glRasterPos3sv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glRasterPos3sv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos4d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  GLdouble arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glRasterPos4d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glRasterPos4d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glRasterPos4d", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  ecode4 = SWIG_AsVal_double(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLdouble","glRasterPos4d", 4, argv[3] ));
  } 
  arg4 = static_cast< GLdouble >(val4);
  glRasterPos4d(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos4dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glRasterPos4dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glRasterPos4dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos4f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  GLfloat arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glRasterPos4f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glRasterPos4f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glRasterPos4f", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  ecode4 = SWIG_AsVal_float(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLfloat","glRasterPos4f", 4, argv[3] ));
  } 
  arg4 = static_cast< GLfloat >(val4);
  glRasterPos4f(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos4fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glRasterPos4fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glRasterPos4fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos4i(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  GLint arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glRasterPos4i", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glRasterPos4i", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glRasterPos4i", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glRasterPos4i", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  glRasterPos4i(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos4iv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glRasterPos4iv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glRasterPos4iv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos4s(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  GLshort arg2 ;
  GLshort arg3 ;
  GLshort arg4 ;
  short val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  short val3 ;
  int ecode3 = 0 ;
  short val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glRasterPos4s", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  ecode2 = SWIG_AsVal_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLshort","glRasterPos4s", 2, argv[1] ));
  } 
  arg2 = static_cast< GLshort >(val2);
  ecode3 = SWIG_AsVal_short(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLshort","glRasterPos4s", 3, argv[2] ));
  } 
  arg3 = static_cast< GLshort >(val3);
  ecode4 = SWIG_AsVal_short(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLshort","glRasterPos4s", 4, argv[3] ));
  } 
  arg4 = static_cast< GLshort >(val4);
  glRasterPos4s(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRasterPos4sv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glRasterPos4sv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glRasterPos4sv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glReadBuffer(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glReadBuffer", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  glReadBuffer(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glReadPixels(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLsizei arg3 ;
  GLsizei arg4 ;
  GLenum arg5 ;
  GLenum arg6 ;
  GLvoid *arg7 = (GLvoid *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  int res7 ;
  
  if ((argc < 7) || (argc > 7)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 7)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glReadPixels", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glReadPixels", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLsizei","glReadPixels", 3, argv[2] ));
  } 
  arg3 = static_cast< GLsizei >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLsizei","glReadPixels", 4, argv[3] ));
  } 
  arg4 = static_cast< GLsizei >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLenum","glReadPixels", 5, argv[4] ));
  } 
  arg5 = static_cast< GLenum >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLenum","glReadPixels", 6, argv[5] ));
  } 
  arg6 = static_cast< GLenum >(val6);
  res7 = SWIG_ConvertPtr(argv[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), Ruby_Format_TypeError( "", "GLvoid *","glReadPixels", 7, argv[6] )); 
  }
  glReadPixels(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRectd(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  GLdouble arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glRectd", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glRectd", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glRectd", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  ecode4 = SWIG_AsVal_double(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLdouble","glRectd", 4, argv[3] ));
  } 
  arg4 = static_cast< GLdouble >(val4);
  glRectd(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRectdv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  GLdouble *arg2 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glRectdv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLdouble const *","glRectdv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLdouble * >(argp2);
  glRectdv((double const *)arg1,(double const *)arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRectf(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  GLfloat arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glRectf", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glRectf", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glRectf", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  ecode4 = SWIG_AsVal_float(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLfloat","glRectf", 4, argv[3] ));
  } 
  arg4 = static_cast< GLfloat >(val4);
  glRectf(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRectfv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  GLfloat *arg2 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glRectfv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLfloat const *","glRectfv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLfloat * >(argp2);
  glRectfv((float const *)arg1,(float const *)arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRecti(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  GLint arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glRecti", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glRecti", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glRecti", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glRecti", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  glRecti(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRectiv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  GLint *arg2 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glRectiv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLint const *","glRectiv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLint * >(argp2);
  glRectiv((int const *)arg1,(int const *)arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRects(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  GLshort arg2 ;
  GLshort arg3 ;
  GLshort arg4 ;
  short val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  short val3 ;
  int ecode3 = 0 ;
  short val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glRects", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  ecode2 = SWIG_AsVal_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLshort","glRects", 2, argv[1] ));
  } 
  arg2 = static_cast< GLshort >(val2);
  ecode3 = SWIG_AsVal_short(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLshort","glRects", 3, argv[2] ));
  } 
  arg3 = static_cast< GLshort >(val3);
  ecode4 = SWIG_AsVal_short(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLshort","glRects", 4, argv[3] ));
  } 
  arg4 = static_cast< GLshort >(val4);
  glRects(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRectsv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  GLshort *arg2 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glRectsv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLshort const *","glRectsv", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLshort * >(argp2);
  glRectsv((short const *)arg1,(short const *)arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRenderMode(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  GLint result;
  VALUE vresult = Qnil;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glRenderMode", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  result = (GLint)glRenderMode(arg1);
  vresult = SWIG_From_int(static_cast< int >(result));
  return vresult;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRotated(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  GLdouble arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glRotated", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glRotated", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glRotated", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  ecode4 = SWIG_AsVal_double(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLdouble","glRotated", 4, argv[3] ));
  } 
  arg4 = static_cast< GLdouble >(val4);
  glRotated(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glRotatef(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  GLfloat arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glRotatef", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glRotatef", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glRotatef", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  ecode4 = SWIG_AsVal_float(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLfloat","glRotatef", 4, argv[3] ));
  } 
  arg4 = static_cast< GLfloat >(val4);
  glRotatef(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glScaled(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glScaled", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glScaled", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glScaled", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  glScaled(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glScalef(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glScalef", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glScalef", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glScalef", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  glScalef(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glScissor(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLsizei arg3 ;
  GLsizei arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glScissor", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glScissor", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLsizei","glScissor", 3, argv[2] ));
  } 
  arg3 = static_cast< GLsizei >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLsizei","glScissor", 4, argv[3] ));
  } 
  arg4 = static_cast< GLsizei >(val4);
  glScissor(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glSelectBuffer(int argc, VALUE *argv, VALUE self) {
  GLsizei arg1 ;
  GLuint *arg2 = (GLuint *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLsizei","glSelectBuffer", 1, argv[0] ));
  } 
  arg1 = static_cast< GLsizei >(val1);
  res2 = SWIG_ConvertPtr(argv[1], &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), Ruby_Format_TypeError( "", "GLuint *","glSelectBuffer", 2, argv[1] )); 
  }
  arg2 = reinterpret_cast< GLuint * >(argp2);
  glSelectBuffer(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glShadeModel(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glShadeModel", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  glShadeModel(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glStencilFunc(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLuint arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glStencilFunc", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glStencilFunc", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLuint","glStencilFunc", 3, argv[2] ));
  } 
  arg3 = static_cast< GLuint >(val3);
  glStencilFunc(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glStencilMask(int argc, VALUE *argv, VALUE self) {
  GLuint arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLuint","glStencilMask", 1, argv[0] ));
  } 
  arg1 = static_cast< GLuint >(val1);
  glStencilMask(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glStencilOp(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLenum arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glStencilOp", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glStencilOp", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLenum","glStencilOp", 3, argv[2] ));
  } 
  arg3 = static_cast< GLenum >(val3);
  glStencilOp(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord1d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glTexCoord1d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  glTexCoord1d(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord1dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glTexCoord1dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glTexCoord1dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord1f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glTexCoord1f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  glTexCoord1f(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord1fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glTexCoord1fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glTexCoord1fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord1i(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glTexCoord1i", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  glTexCoord1i(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord1iv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glTexCoord1iv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glTexCoord1iv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord1s(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  short val1 ;
  int ecode1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glTexCoord1s", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  glTexCoord1s(arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord1sv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glTexCoord1sv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glTexCoord1sv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord2d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glTexCoord2d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glTexCoord2d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  glTexCoord2d(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord2dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glTexCoord2dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glTexCoord2dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord2f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glTexCoord2f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glTexCoord2f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  glTexCoord2f(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord2fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glTexCoord2fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glTexCoord2fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord2i(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glTexCoord2i", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glTexCoord2i", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  glTexCoord2i(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord2iv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glTexCoord2iv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glTexCoord2iv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord2s(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  GLshort arg2 ;
  short val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glTexCoord2s", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  ecode2 = SWIG_AsVal_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLshort","glTexCoord2s", 2, argv[1] ));
  } 
  arg2 = static_cast< GLshort >(val2);
  glTexCoord2s(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord2sv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glTexCoord2sv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glTexCoord2sv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord3d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glTexCoord3d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glTexCoord3d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glTexCoord3d", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  glTexCoord3d(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord3dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glTexCoord3dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glTexCoord3dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord3f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glTexCoord3f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glTexCoord3f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glTexCoord3f", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  glTexCoord3f(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord3fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glTexCoord3fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glTexCoord3fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord3i(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glTexCoord3i", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glTexCoord3i", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glTexCoord3i", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  glTexCoord3i(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord3iv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glTexCoord3iv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glTexCoord3iv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord3s(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  GLshort arg2 ;
  GLshort arg3 ;
  short val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  short val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glTexCoord3s", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  ecode2 = SWIG_AsVal_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLshort","glTexCoord3s", 2, argv[1] ));
  } 
  arg2 = static_cast< GLshort >(val2);
  ecode3 = SWIG_AsVal_short(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLshort","glTexCoord3s", 3, argv[2] ));
  } 
  arg3 = static_cast< GLshort >(val3);
  glTexCoord3s(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord3sv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glTexCoord3sv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glTexCoord3sv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord4d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  GLdouble arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glTexCoord4d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glTexCoord4d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glTexCoord4d", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  ecode4 = SWIG_AsVal_double(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLdouble","glTexCoord4d", 4, argv[3] ));
  } 
  arg4 = static_cast< GLdouble >(val4);
  glTexCoord4d(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord4dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glTexCoord4dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glTexCoord4dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord4f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  GLfloat arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glTexCoord4f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glTexCoord4f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glTexCoord4f", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  ecode4 = SWIG_AsVal_float(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLfloat","glTexCoord4f", 4, argv[3] ));
  } 
  arg4 = static_cast< GLfloat >(val4);
  glTexCoord4f(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord4fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glTexCoord4fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glTexCoord4fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord4i(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  GLint arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glTexCoord4i", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glTexCoord4i", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glTexCoord4i", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glTexCoord4i", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  glTexCoord4i(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord4iv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glTexCoord4iv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glTexCoord4iv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord4s(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  GLshort arg2 ;
  GLshort arg3 ;
  GLshort arg4 ;
  short val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  short val3 ;
  int ecode3 = 0 ;
  short val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glTexCoord4s", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  ecode2 = SWIG_AsVal_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLshort","glTexCoord4s", 2, argv[1] ));
  } 
  arg2 = static_cast< GLshort >(val2);
  ecode3 = SWIG_AsVal_short(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLshort","glTexCoord4s", 3, argv[2] ));
  } 
  arg3 = static_cast< GLshort >(val3);
  ecode4 = SWIG_AsVal_short(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLshort","glTexCoord4s", 4, argv[3] ));
  } 
  arg4 = static_cast< GLshort >(val4);
  glTexCoord4s(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoord4sv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glTexCoord4sv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glTexCoord4sv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexCoordPointer(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLenum arg2 ;
  GLsizei arg3 ;
  GLvoid *arg4 = (GLvoid *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glTexCoordPointer", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexCoordPointer", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLsizei","glTexCoordPointer", 3, argv[2] ));
  } 
  arg3 = static_cast< GLsizei >(val3);
  res4 = SWIG_ConvertPtr(argv[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), Ruby_Format_TypeError( "", "GLvoid const *","glTexCoordPointer", 4, argv[3] )); 
  }
  glTexCoordPointer(arg1,arg2,arg3,(void const *)arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexEnvf(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexEnvf", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexEnvf", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glTexEnvf", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  glTexEnvf(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexEnvfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat *arg3 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexEnvfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexEnvfv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLfloat const *","glTexEnvfv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLfloat * >(argp3);
  glTexEnvfv(arg1,arg2,(float const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexEnvi(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexEnvi", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexEnvi", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glTexEnvi", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  glTexEnvi(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexEnviv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint *arg3 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexEnviv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexEnviv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLint const *","glTexEnviv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLint * >(argp3);
  glTexEnviv(arg1,arg2,(int const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexGend(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLdouble arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexGend", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexGend", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glTexGend", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  glTexGend(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexGendv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLdouble *arg3 = (GLdouble *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexGendv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexGendv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLdouble const *","glTexGendv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLdouble * >(argp3);
  glTexGendv(arg1,arg2,(double const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexGenf(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexGenf", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexGenf", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glTexGenf", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  glTexGenf(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexGenfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat *arg3 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexGenfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexGenfv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLfloat const *","glTexGenfv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLfloat * >(argp3);
  glTexGenfv(arg1,arg2,(float const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexGeni(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexGeni", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexGeni", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glTexGeni", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  glTexGeni(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexGeniv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint *arg3 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexGeniv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexGeniv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLint const *","glTexGeniv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLint * >(argp3);
  glTexGeniv(arg1,arg2,(int const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexImage1D(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  GLsizei arg4 ;
  GLint arg5 ;
  GLenum arg6 ;
  GLenum arg7 ;
  GLvoid *arg8 = (GLvoid *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  int res8 ;
  
  if ((argc < 8) || (argc > 8)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 8)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexImage1D", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glTexImage1D", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glTexImage1D", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLsizei","glTexImage1D", 4, argv[3] ));
  } 
  arg4 = static_cast< GLsizei >(val4);
  ecode5 = SWIG_AsVal_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLint","glTexImage1D", 5, argv[4] ));
  } 
  arg5 = static_cast< GLint >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLenum","glTexImage1D", 6, argv[5] ));
  } 
  arg6 = static_cast< GLenum >(val6);
  ecode7 = SWIG_AsVal_unsigned_SS_int(argv[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), Ruby_Format_TypeError( "", "GLenum","glTexImage1D", 7, argv[6] ));
  } 
  arg7 = static_cast< GLenum >(val7);
  res8 = SWIG_ConvertPtr(argv[7],SWIG_as_voidptrptr(&arg8), 0, 0);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), Ruby_Format_TypeError( "", "GLvoid const *","glTexImage1D", 8, argv[7] )); 
  }
  glTexImage1D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,(void const *)arg8);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexImage2D(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  GLsizei arg4 ;
  GLsizei arg5 ;
  GLint arg6 ;
  GLenum arg7 ;
  GLenum arg8 ;
  GLvoid *arg9 = (GLvoid *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  unsigned int val8 ;
  int ecode8 = 0 ;
  int res9 ;
  
  if ((argc < 9) || (argc > 9)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 9)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexImage2D", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glTexImage2D", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glTexImage2D", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLsizei","glTexImage2D", 4, argv[3] ));
  } 
  arg4 = static_cast< GLsizei >(val4);
  ecode5 = SWIG_AsVal_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLsizei","glTexImage2D", 5, argv[4] ));
  } 
  arg5 = static_cast< GLsizei >(val5);
  ecode6 = SWIG_AsVal_int(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLint","glTexImage2D", 6, argv[5] ));
  } 
  arg6 = static_cast< GLint >(val6);
  ecode7 = SWIG_AsVal_unsigned_SS_int(argv[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), Ruby_Format_TypeError( "", "GLenum","glTexImage2D", 7, argv[6] ));
  } 
  arg7 = static_cast< GLenum >(val7);
  ecode8 = SWIG_AsVal_unsigned_SS_int(argv[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), Ruby_Format_TypeError( "", "GLenum","glTexImage2D", 8, argv[7] ));
  } 
  arg8 = static_cast< GLenum >(val8);
  res9 = SWIG_ConvertPtr(argv[8],SWIG_as_voidptrptr(&arg9), 0, 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), Ruby_Format_TypeError( "", "GLvoid const *","glTexImage2D", 9, argv[8] )); 
  }
  glTexImage2D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,(void const *)arg9);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexParameterf(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexParameterf", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexParameterf", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glTexParameterf", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  glTexParameterf(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexParameterfv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLfloat *arg3 = (GLfloat *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexParameterfv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexParameterfv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLfloat const *","glTexParameterfv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLfloat * >(argp3);
  glTexParameterfv(arg1,arg2,(float const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexParameteri(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint arg3 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexParameteri", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexParameteri", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glTexParameteri", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  glTexParameteri(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexParameteriv(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLenum arg2 ;
  GLint *arg3 = (GLint *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexParameteriv", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glTexParameteriv", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  res3 = SWIG_ConvertPtr(argv[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), Ruby_Format_TypeError( "", "GLint const *","glTexParameteriv", 3, argv[2] )); 
  }
  arg3 = reinterpret_cast< GLint * >(argp3);
  glTexParameteriv(arg1,arg2,(int const *)arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexSubImage1D(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  GLsizei arg4 ;
  GLenum arg5 ;
  GLenum arg6 ;
  GLvoid *arg7 = (GLvoid *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  int res7 ;
  
  if ((argc < 7) || (argc > 7)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 7)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexSubImage1D", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glTexSubImage1D", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glTexSubImage1D", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLsizei","glTexSubImage1D", 4, argv[3] ));
  } 
  arg4 = static_cast< GLsizei >(val4);
  ecode5 = SWIG_AsVal_unsigned_SS_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLenum","glTexSubImage1D", 5, argv[4] ));
  } 
  arg5 = static_cast< GLenum >(val5);
  ecode6 = SWIG_AsVal_unsigned_SS_int(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLenum","glTexSubImage1D", 6, argv[5] ));
  } 
  arg6 = static_cast< GLenum >(val6);
  res7 = SWIG_ConvertPtr(argv[6],SWIG_as_voidptrptr(&arg7), 0, 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), Ruby_Format_TypeError( "", "GLvoid const *","glTexSubImage1D", 7, argv[6] )); 
  }
  glTexSubImage1D(arg1,arg2,arg3,arg4,arg5,arg6,(void const *)arg7);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTexSubImage2D(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  GLint arg4 ;
  GLsizei arg5 ;
  GLsizei arg6 ;
  GLenum arg7 ;
  GLenum arg8 ;
  GLvoid *arg9 = (GLvoid *) 0 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  unsigned int val8 ;
  int ecode8 = 0 ;
  int res9 ;
  
  if ((argc < 9) || (argc > 9)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 9)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glTexSubImage2D", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glTexSubImage2D", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glTexSubImage2D", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glTexSubImage2D", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  ecode5 = SWIG_AsVal_int(argv[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), Ruby_Format_TypeError( "", "GLsizei","glTexSubImage2D", 5, argv[4] ));
  } 
  arg5 = static_cast< GLsizei >(val5);
  ecode6 = SWIG_AsVal_int(argv[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), Ruby_Format_TypeError( "", "GLsizei","glTexSubImage2D", 6, argv[5] ));
  } 
  arg6 = static_cast< GLsizei >(val6);
  ecode7 = SWIG_AsVal_unsigned_SS_int(argv[6], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), Ruby_Format_TypeError( "", "GLenum","glTexSubImage2D", 7, argv[6] ));
  } 
  arg7 = static_cast< GLenum >(val7);
  ecode8 = SWIG_AsVal_unsigned_SS_int(argv[7], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), Ruby_Format_TypeError( "", "GLenum","glTexSubImage2D", 8, argv[7] ));
  } 
  arg8 = static_cast< GLenum >(val8);
  res9 = SWIG_ConvertPtr(argv[8],SWIG_as_voidptrptr(&arg9), 0, 0);
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), Ruby_Format_TypeError( "", "GLvoid const *","glTexSubImage2D", 9, argv[8] )); 
  }
  glTexSubImage2D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,(void const *)arg9);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTranslated(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glTranslated", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glTranslated", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glTranslated", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  glTranslated(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glTranslatef(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glTranslatef", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glTranslatef", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glTranslatef", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  glTranslatef(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex2d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glVertex2d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glVertex2d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  glVertex2d(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex2dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glVertex2dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glVertex2dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex2f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glVertex2f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glVertex2f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  glVertex2f(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex2fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glVertex2fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glVertex2fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex2i(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glVertex2i", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glVertex2i", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  glVertex2i(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex2iv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glVertex2iv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glVertex2iv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex2s(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  GLshort arg2 ;
  short val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  
  if ((argc < 2) || (argc > 2)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 2)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glVertex2s", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  ecode2 = SWIG_AsVal_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLshort","glVertex2s", 2, argv[1] ));
  } 
  arg2 = static_cast< GLshort >(val2);
  glVertex2s(arg1,arg2);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex2sv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glVertex2sv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glVertex2sv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex3d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glVertex3d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glVertex3d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glVertex3d", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  glVertex3d(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex3dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glVertex3dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glVertex3dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex3f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glVertex3f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glVertex3f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glVertex3f", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  glVertex3f(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex3fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glVertex3fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glVertex3fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex3i(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glVertex3i", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glVertex3i", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glVertex3i", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  glVertex3i(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex3iv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glVertex3iv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glVertex3iv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex3s(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  GLshort arg2 ;
  GLshort arg3 ;
  short val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  short val3 ;
  int ecode3 = 0 ;
  
  if ((argc < 3) || (argc > 3)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 3)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glVertex3s", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  ecode2 = SWIG_AsVal_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLshort","glVertex3s", 2, argv[1] ));
  } 
  arg2 = static_cast< GLshort >(val2);
  ecode3 = SWIG_AsVal_short(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLshort","glVertex3s", 3, argv[2] ));
  } 
  arg3 = static_cast< GLshort >(val3);
  glVertex3s(arg1,arg2,arg3);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex3sv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glVertex3sv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glVertex3sv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex4d(int argc, VALUE *argv, VALUE self) {
  GLdouble arg1 ;
  GLdouble arg2 ;
  GLdouble arg3 ;
  GLdouble arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_double(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLdouble","glVertex4d", 1, argv[0] ));
  } 
  arg1 = static_cast< GLdouble >(val1);
  ecode2 = SWIG_AsVal_double(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLdouble","glVertex4d", 2, argv[1] ));
  } 
  arg2 = static_cast< GLdouble >(val2);
  ecode3 = SWIG_AsVal_double(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLdouble","glVertex4d", 3, argv[2] ));
  } 
  arg3 = static_cast< GLdouble >(val3);
  ecode4 = SWIG_AsVal_double(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLdouble","glVertex4d", 4, argv[3] ));
  } 
  arg4 = static_cast< GLdouble >(val4);
  glVertex4d(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex4dv(int argc, VALUE *argv, VALUE self) {
  GLdouble *arg1 = (GLdouble *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLdouble const *","glVertex4dv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLdouble * >(argp1);
  glVertex4dv((double const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex4f(int argc, VALUE *argv, VALUE self) {
  GLfloat arg1 ;
  GLfloat arg2 ;
  GLfloat arg3 ;
  GLfloat arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_float(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLfloat","glVertex4f", 1, argv[0] ));
  } 
  arg1 = static_cast< GLfloat >(val1);
  ecode2 = SWIG_AsVal_float(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLfloat","glVertex4f", 2, argv[1] ));
  } 
  arg2 = static_cast< GLfloat >(val2);
  ecode3 = SWIG_AsVal_float(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLfloat","glVertex4f", 3, argv[2] ));
  } 
  arg3 = static_cast< GLfloat >(val3);
  ecode4 = SWIG_AsVal_float(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLfloat","glVertex4f", 4, argv[3] ));
  } 
  arg4 = static_cast< GLfloat >(val4);
  glVertex4f(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex4fv(int argc, VALUE *argv, VALUE self) {
  GLfloat *arg1 = (GLfloat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLfloat const *","glVertex4fv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLfloat * >(argp1);
  glVertex4fv((float const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex4i(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLint arg3 ;
  GLint arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glVertex4i", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glVertex4i", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLint","glVertex4i", 3, argv[2] ));
  } 
  arg3 = static_cast< GLint >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLint","glVertex4i", 4, argv[3] ));
  } 
  arg4 = static_cast< GLint >(val4);
  glVertex4i(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex4iv(int argc, VALUE *argv, VALUE self) {
  GLint *arg1 = (GLint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLint const *","glVertex4iv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLint * >(argp1);
  glVertex4iv((int const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex4s(int argc, VALUE *argv, VALUE self) {
  GLshort arg1 ;
  GLshort arg2 ;
  GLshort arg3 ;
  GLshort arg4 ;
  short val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  short val3 ;
  int ecode3 = 0 ;
  short val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_short(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLshort","glVertex4s", 1, argv[0] ));
  } 
  arg1 = static_cast< GLshort >(val1);
  ecode2 = SWIG_AsVal_short(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLshort","glVertex4s", 2, argv[1] ));
  } 
  arg2 = static_cast< GLshort >(val2);
  ecode3 = SWIG_AsVal_short(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLshort","glVertex4s", 3, argv[2] ));
  } 
  arg3 = static_cast< GLshort >(val3);
  ecode4 = SWIG_AsVal_short(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLshort","glVertex4s", 4, argv[3] ));
  } 
  arg4 = static_cast< GLshort >(val4);
  glVertex4s(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertex4sv(int argc, VALUE *argv, VALUE self) {
  GLshort *arg1 = (GLshort *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_ConvertPtr(argv[0], &argp1,SWIGTYPE_p_short, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "GLshort const *","glVertex4sv", 1, argv[0] )); 
  }
  arg1 = reinterpret_cast< GLshort * >(argp1);
  glVertex4sv((short const *)arg1);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glVertexPointer(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLenum arg2 ;
  GLsizei arg3 ;
  GLvoid *arg4 = (GLvoid *) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int res4 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glVertexPointer", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLenum","glVertexPointer", 2, argv[1] ));
  } 
  arg2 = static_cast< GLenum >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLsizei","glVertexPointer", 3, argv[2] ));
  } 
  arg3 = static_cast< GLsizei >(val3);
  res4 = SWIG_ConvertPtr(argv[3],SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), Ruby_Format_TypeError( "", "GLvoid const *","glVertexPointer", 4, argv[3] )); 
  }
  glVertexPointer(arg1,arg2,arg3,(void const *)arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glViewport(int argc, VALUE *argv, VALUE self) {
  GLint arg1 ;
  GLint arg2 ;
  GLsizei arg3 ;
  GLsizei arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((argc < 4) || (argc > 4)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 4)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLint","glViewport", 1, argv[0] ));
  } 
  arg1 = static_cast< GLint >(val1);
  ecode2 = SWIG_AsVal_int(argv[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), Ruby_Format_TypeError( "", "GLint","glViewport", 2, argv[1] ));
  } 
  arg2 = static_cast< GLint >(val2);
  ecode3 = SWIG_AsVal_int(argv[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), Ruby_Format_TypeError( "", "GLsizei","glViewport", 3, argv[2] ));
  } 
  arg3 = static_cast< GLsizei >(val3);
  ecode4 = SWIG_AsVal_int(argv[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), Ruby_Format_TypeError( "", "GLsizei","glViewport", 4, argv[3] ));
  } 
  arg4 = static_cast< GLsizei >(val4);
  glViewport(arg1,arg2,arg3,arg4);
  return Qnil;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyTexSubImage3D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyTexSubImage3D), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyTexSubImage3D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyTexSubImage3D), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyTexSubImage3D""' of type '""PFNGLCOPYTEXSUBIMAGE3DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawRangeElements_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawRangeElements), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawRangeElements_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawRangeElements), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawRangeElements""' of type '""PFNGLDRAWRANGEELEMENTSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexImage3D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexImage3D), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexImage3D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexImage3D), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexImage3D""' of type '""PFNGLTEXIMAGE3DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexSubImage3D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexSubImage3D), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexSubImage3D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexSubImage3D), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexSubImage3D""' of type '""PFNGLTEXSUBIMAGE3DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewActiveTexture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewActiveTexture), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewActiveTexture_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewActiveTexture), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewActiveTexture""' of type '""PFNGLACTIVETEXTUREPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClientActiveTexture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClientActiveTexture), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClientActiveTexture_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClientActiveTexture), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClientActiveTexture""' of type '""PFNGLCLIENTACTIVETEXTUREPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexImage1D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTexImage1D), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexImage1D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTexImage1D), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTexImage1D""' of type '""PFNGLCOMPRESSEDTEXIMAGE1DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexImage2D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTexImage2D), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexImage2D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTexImage2D), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTexImage2D""' of type '""PFNGLCOMPRESSEDTEXIMAGE2DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexImage3D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTexImage3D), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexImage3D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTexImage3D), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTexImage3D""' of type '""PFNGLCOMPRESSEDTEXIMAGE3DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexSubImage1D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTexSubImage1D), SWIGTYPE_p_f_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexSubImage1D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTexSubImage1D), SWIGTYPE_p_f_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTexSubImage1D""' of type '""PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexSubImage2D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTexSubImage2D), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexSubImage2D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTexSubImage2D), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTexSubImage2D""' of type '""PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexSubImage3D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTexSubImage3D), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexSubImage3D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTexSubImage3D), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTexSubImage3D""' of type '""PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetCompressedTexImage_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetCompressedTexImage), SWIGTYPE_p_f_unsigned_int_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetCompressedTexImage_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetCompressedTexImage), SWIGTYPE_p_f_unsigned_int_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetCompressedTexImage""' of type '""PFNGLGETCOMPRESSEDTEXIMAGEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewLoadTransposeMatrixd_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewLoadTransposeMatrixd), SWIGTYPE_p_f_a_16__q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewLoadTransposeMatrixd_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewLoadTransposeMatrixd), SWIGTYPE_p_f_a_16__q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewLoadTransposeMatrixd""' of type '""PFNGLLOADTRANSPOSEMATRIXDPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewLoadTransposeMatrixf_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewLoadTransposeMatrixf), SWIGTYPE_p_f_a_16__q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewLoadTransposeMatrixf_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewLoadTransposeMatrixf), SWIGTYPE_p_f_a_16__q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewLoadTransposeMatrixf""' of type '""PFNGLLOADTRANSPOSEMATRIXFPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultTransposeMatrixd_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultTransposeMatrixd), SWIGTYPE_p_f_a_16__q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultTransposeMatrixd_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultTransposeMatrixd), SWIGTYPE_p_f_a_16__q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultTransposeMatrixd""' of type '""PFNGLMULTTRANSPOSEMATRIXDPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultTransposeMatrixf_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultTransposeMatrixf), SWIGTYPE_p_f_a_16__q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultTransposeMatrixf_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultTransposeMatrixf), SWIGTYPE_p_f_a_16__q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultTransposeMatrixf""' of type '""PFNGLMULTTRANSPOSEMATRIXFPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1d_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1d), SWIGTYPE_p_f_unsigned_int_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1d_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1d), SWIGTYPE_p_f_unsigned_int_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1d""' of type '""PFNGLMULTITEXCOORD1DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1dv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1dv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1dv""' of type '""PFNGLMULTITEXCOORD1DVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1f), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1f), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1f""' of type '""PFNGLMULTITEXCOORD1FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1fv""' of type '""PFNGLMULTITEXCOORD1FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1i), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1i), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1i""' of type '""PFNGLMULTITEXCOORD1IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1iv""' of type '""PFNGLMULTITEXCOORD1IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1s_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1s), SWIGTYPE_p_f_unsigned_int_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1s_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1s), SWIGTYPE_p_f_unsigned_int_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1s""' of type '""PFNGLMULTITEXCOORD1SPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1sv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1sv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1sv""' of type '""PFNGLMULTITEXCOORD1SVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2d_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2d), SWIGTYPE_p_f_unsigned_int_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2d_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2d), SWIGTYPE_p_f_unsigned_int_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2d""' of type '""PFNGLMULTITEXCOORD2DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2dv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2dv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2dv""' of type '""PFNGLMULTITEXCOORD2DVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2f), SWIGTYPE_p_f_unsigned_int_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2f), SWIGTYPE_p_f_unsigned_int_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2f""' of type '""PFNGLMULTITEXCOORD2FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2fv""' of type '""PFNGLMULTITEXCOORD2FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2i), SWIGTYPE_p_f_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2i), SWIGTYPE_p_f_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2i""' of type '""PFNGLMULTITEXCOORD2IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2iv""' of type '""PFNGLMULTITEXCOORD2IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2s_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2s), SWIGTYPE_p_f_unsigned_int_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2s_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2s), SWIGTYPE_p_f_unsigned_int_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2s""' of type '""PFNGLMULTITEXCOORD2SPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2sv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2sv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2sv""' of type '""PFNGLMULTITEXCOORD2SVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3d_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3d), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3d_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3d), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3d""' of type '""PFNGLMULTITEXCOORD3DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3dv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3dv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3dv""' of type '""PFNGLMULTITEXCOORD3DVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3f), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3f), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3f""' of type '""PFNGLMULTITEXCOORD3FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3fv""' of type '""PFNGLMULTITEXCOORD3FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3i), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3i), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3i""' of type '""PFNGLMULTITEXCOORD3IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3iv""' of type '""PFNGLMULTITEXCOORD3IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3s_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3s), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3s_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3s), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3s""' of type '""PFNGLMULTITEXCOORD3SPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3sv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3sv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3sv""' of type '""PFNGLMULTITEXCOORD3SVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4d_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4d), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4d_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4d), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4d""' of type '""PFNGLMULTITEXCOORD4DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4dv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4dv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4dv""' of type '""PFNGLMULTITEXCOORD4DVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4f), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4f), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4f""' of type '""PFNGLMULTITEXCOORD4FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4fv""' of type '""PFNGLMULTITEXCOORD4FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4i), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4i), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4i""' of type '""PFNGLMULTITEXCOORD4IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4iv""' of type '""PFNGLMULTITEXCOORD4IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4s_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4s), SWIGTYPE_p_f_unsigned_int_short_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4s_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4s), SWIGTYPE_p_f_unsigned_int_short_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4s""' of type '""PFNGLMULTITEXCOORD4SPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4sv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4sv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4sv""' of type '""PFNGLMULTITEXCOORD4SVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSampleCoverage_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSampleCoverage), SWIGTYPE_p_f_float_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSampleCoverage_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSampleCoverage), SWIGTYPE_p_f_float_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSampleCoverage""' of type '""PFNGLSAMPLECOVERAGEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBlendColor_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBlendColor), SWIGTYPE_p_f_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBlendColor_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBlendColor), SWIGTYPE_p_f_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBlendColor""' of type '""PFNGLBLENDCOLORPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBlendEquation_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBlendEquation), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBlendEquation_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBlendEquation), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBlendEquation""' of type '""PFNGLBLENDEQUATIONPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBlendFuncSeparate_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBlendFuncSeparate), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBlendFuncSeparate_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBlendFuncSeparate), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBlendFuncSeparate""' of type '""PFNGLBLENDFUNCSEPARATEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogCoordPointer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogCoordPointer), SWIGTYPE_p_f_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogCoordPointer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogCoordPointer), SWIGTYPE_p_f_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogCoordPointer""' of type '""PFNGLFOGCOORDPOINTERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogCoordd_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogCoordd), SWIGTYPE_p_f_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogCoordd_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogCoordd), SWIGTYPE_p_f_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogCoordd""' of type '""PFNGLFOGCOORDDPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogCoorddv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogCoorddv), SWIGTYPE_p_f_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogCoorddv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogCoorddv), SWIGTYPE_p_f_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogCoorddv""' of type '""PFNGLFOGCOORDDVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogCoordf_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogCoordf), SWIGTYPE_p_f_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogCoordf_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogCoordf), SWIGTYPE_p_f_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogCoordf""' of type '""PFNGLFOGCOORDFPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogCoordfv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogCoordfv), SWIGTYPE_p_f_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogCoordfv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogCoordfv), SWIGTYPE_p_f_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogCoordfv""' of type '""PFNGLFOGCOORDFVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiDrawArrays_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiDrawArrays), SWIGTYPE_p_f_unsigned_int_p_int_p_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiDrawArrays_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiDrawArrays), SWIGTYPE_p_f_unsigned_int_p_int_p_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiDrawArrays""' of type '""PFNGLMULTIDRAWARRAYSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiDrawElements_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiDrawElements), SWIGTYPE_p_f_unsigned_int_p_int_unsigned_int_p_p_q_const__void_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiDrawElements_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiDrawElements), SWIGTYPE_p_f_unsigned_int_p_int_unsigned_int_p_p_q_const__void_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiDrawElements""' of type '""PFNGLMULTIDRAWELEMENTSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPointParameterf_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPointParameterf), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPointParameterf_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPointParameterf), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPointParameterf""' of type '""PFNGLPOINTPARAMETERFPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPointParameterfv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPointParameterfv), SWIGTYPE_p_f_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPointParameterfv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPointParameterfv), SWIGTYPE_p_f_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPointParameterfv""' of type '""PFNGLPOINTPARAMETERFVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPointParameteri_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPointParameteri), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPointParameteri_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPointParameteri), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPointParameteri""' of type '""PFNGLPOINTPARAMETERIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPointParameteriv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPointParameteriv), SWIGTYPE_p_f_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPointParameteriv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPointParameteriv), SWIGTYPE_p_f_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPointParameteriv""' of type '""PFNGLPOINTPARAMETERIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3b_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3b), SWIGTYPE_p_f_signed_char_signed_char_signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3b_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3b), SWIGTYPE_p_f_signed_char_signed_char_signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3b""' of type '""PFNGLSECONDARYCOLOR3BPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3bv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3bv), SWIGTYPE_p_f_p_q_const__signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3bv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3bv), SWIGTYPE_p_f_p_q_const__signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3bv""' of type '""PFNGLSECONDARYCOLOR3BVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3d_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3d), SWIGTYPE_p_f_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3d_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3d), SWIGTYPE_p_f_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3d""' of type '""PFNGLSECONDARYCOLOR3DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3dv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3dv), SWIGTYPE_p_f_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3dv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3dv), SWIGTYPE_p_f_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3dv""' of type '""PFNGLSECONDARYCOLOR3DVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3f), SWIGTYPE_p_f_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3f), SWIGTYPE_p_f_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3f""' of type '""PFNGLSECONDARYCOLOR3FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3fv), SWIGTYPE_p_f_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3fv), SWIGTYPE_p_f_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3fv""' of type '""PFNGLSECONDARYCOLOR3FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3i), SWIGTYPE_p_f_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3i), SWIGTYPE_p_f_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3i""' of type '""PFNGLSECONDARYCOLOR3IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3iv), SWIGTYPE_p_f_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3iv), SWIGTYPE_p_f_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3iv""' of type '""PFNGLSECONDARYCOLOR3IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3s_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3s), SWIGTYPE_p_f_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3s_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3s), SWIGTYPE_p_f_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3s""' of type '""PFNGLSECONDARYCOLOR3SPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3sv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3sv), SWIGTYPE_p_f_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3sv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3sv), SWIGTYPE_p_f_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3sv""' of type '""PFNGLSECONDARYCOLOR3SVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3ub_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3ub), SWIGTYPE_p_f_unsigned_char_unsigned_char_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3ub_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3ub), SWIGTYPE_p_f_unsigned_char_unsigned_char_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3ub""' of type '""PFNGLSECONDARYCOLOR3UBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3ubv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3ubv), SWIGTYPE_p_f_p_q_const__unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3ubv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3ubv), SWIGTYPE_p_f_p_q_const__unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3ubv""' of type '""PFNGLSECONDARYCOLOR3UBVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3ui_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3ui), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3ui_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3ui), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3ui""' of type '""PFNGLSECONDARYCOLOR3UIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3uiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3uiv), SWIGTYPE_p_f_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3uiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3uiv), SWIGTYPE_p_f_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3uiv""' of type '""PFNGLSECONDARYCOLOR3UIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3us_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3us), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3us_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3us), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3us""' of type '""PFNGLSECONDARYCOLOR3USPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3usv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3usv), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3usv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3usv), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3usv""' of type '""PFNGLSECONDARYCOLOR3USVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColorPointer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColorPointer), SWIGTYPE_p_f_int_unsigned_int_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColorPointer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColorPointer), SWIGTYPE_p_f_int_unsigned_int_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColorPointer""' of type '""PFNGLSECONDARYCOLORPOINTERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2d_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2d), SWIGTYPE_p_f_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2d_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2d), SWIGTYPE_p_f_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2d""' of type '""PFNGLWINDOWPOS2DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2dv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2dv), SWIGTYPE_p_f_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2dv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2dv), SWIGTYPE_p_f_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2dv""' of type '""PFNGLWINDOWPOS2DVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2f), SWIGTYPE_p_f_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2f), SWIGTYPE_p_f_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2f""' of type '""PFNGLWINDOWPOS2FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2fv), SWIGTYPE_p_f_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2fv), SWIGTYPE_p_f_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2fv""' of type '""PFNGLWINDOWPOS2FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2i), SWIGTYPE_p_f_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2i), SWIGTYPE_p_f_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2i""' of type '""PFNGLWINDOWPOS2IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2iv), SWIGTYPE_p_f_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2iv), SWIGTYPE_p_f_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2iv""' of type '""PFNGLWINDOWPOS2IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2s_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2s), SWIGTYPE_p_f_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2s_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2s), SWIGTYPE_p_f_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2s""' of type '""PFNGLWINDOWPOS2SPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2sv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2sv), SWIGTYPE_p_f_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2sv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2sv), SWIGTYPE_p_f_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2sv""' of type '""PFNGLWINDOWPOS2SVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3d_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3d), SWIGTYPE_p_f_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3d_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3d), SWIGTYPE_p_f_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3d""' of type '""PFNGLWINDOWPOS3DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3dv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3dv), SWIGTYPE_p_f_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3dv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3dv), SWIGTYPE_p_f_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3dv""' of type '""PFNGLWINDOWPOS3DVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3f), SWIGTYPE_p_f_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3f), SWIGTYPE_p_f_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3f""' of type '""PFNGLWINDOWPOS3FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3fv), SWIGTYPE_p_f_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3fv), SWIGTYPE_p_f_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3fv""' of type '""PFNGLWINDOWPOS3FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3i), SWIGTYPE_p_f_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3i), SWIGTYPE_p_f_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3i""' of type '""PFNGLWINDOWPOS3IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3iv), SWIGTYPE_p_f_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3iv), SWIGTYPE_p_f_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3iv""' of type '""PFNGLWINDOWPOS3IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3s_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3s), SWIGTYPE_p_f_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3s_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3s), SWIGTYPE_p_f_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3s""' of type '""PFNGLWINDOWPOS3SPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3sv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3sv), SWIGTYPE_p_f_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3sv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3sv), SWIGTYPE_p_f_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3sv""' of type '""PFNGLWINDOWPOS3SVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBeginQuery_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBeginQuery), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBeginQuery_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBeginQuery), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBeginQuery""' of type '""PFNGLBEGINQUERYPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindBuffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindBuffer), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindBuffer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindBuffer), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindBuffer""' of type '""PFNGLBINDBUFFERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBufferData_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBufferData), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_p_q_const__void_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBufferData_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBufferData), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_p_q_const__void_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBufferData""' of type '""PFNGLBUFFERDATAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBufferSubData_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBufferSubData), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBufferSubData_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBufferSubData), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBufferSubData""' of type '""PFNGLBUFFERSUBDATAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteBuffers_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteBuffers), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteBuffers_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteBuffers), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteBuffers""' of type '""PFNGLDELETEBUFFERSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteQueries_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteQueries), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteQueries_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteQueries), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteQueries""' of type '""PFNGLDELETEQUERIESPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEndQuery_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEndQuery), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEndQuery_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEndQuery), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEndQuery""' of type '""PFNGLENDQUERYPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenBuffers_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenBuffers), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenBuffers_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenBuffers), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenBuffers""' of type '""PFNGLGENBUFFERSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenQueries_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenQueries), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenQueries_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenQueries), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenQueries""' of type '""PFNGLGENQUERIESPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetBufferParameteriv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetBufferParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetBufferParameteriv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetBufferParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetBufferParameteriv""' of type '""PFNGLGETBUFFERPARAMETERIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetBufferPointerv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetBufferPointerv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetBufferPointerv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetBufferPointerv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetBufferPointerv""' of type '""PFNGLGETBUFFERPOINTERVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetBufferSubData_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetBufferSubData), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetBufferSubData_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetBufferSubData), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetBufferSubData""' of type '""PFNGLGETBUFFERSUBDATAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetQueryObjectiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetQueryObjectiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetQueryObjectiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetQueryObjectiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetQueryObjectiv""' of type '""PFNGLGETQUERYOBJECTIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetQueryObjectuiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetQueryObjectuiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetQueryObjectuiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetQueryObjectuiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetQueryObjectuiv""' of type '""PFNGLGETQUERYOBJECTUIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetQueryiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetQueryiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetQueryiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetQueryiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetQueryiv""' of type '""PFNGLGETQUERYIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsBuffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsBuffer), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsBuffer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsBuffer), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsBuffer""' of type '""PFNGLISBUFFERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsQuery_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsQuery), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsQuery_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsQuery), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsQuery""' of type '""PFNGLISQUERYPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMapBuffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMapBuffer), SWIGTYPE_p_f_unsigned_int_unsigned_int__p_void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMapBuffer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMapBuffer), SWIGTYPE_p_f_unsigned_int_unsigned_int__p_void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMapBuffer""' of type '""PFNGLMAPBUFFERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUnmapBuffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUnmapBuffer), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUnmapBuffer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUnmapBuffer), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUnmapBuffer""' of type '""PFNGLUNMAPBUFFERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewAttachShader_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewAttachShader), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewAttachShader_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewAttachShader), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewAttachShader""' of type '""PFNGLATTACHSHADERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindAttribLocation_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindAttribLocation), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindAttribLocation_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindAttribLocation), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindAttribLocation""' of type '""PFNGLBINDATTRIBLOCATIONPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBlendEquationSeparate_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBlendEquationSeparate), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBlendEquationSeparate_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBlendEquationSeparate), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBlendEquationSeparate""' of type '""PFNGLBLENDEQUATIONSEPARATEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompileShader_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompileShader), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompileShader_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompileShader), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompileShader""' of type '""PFNGLCOMPILESHADERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCreateProgram_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCreateProgram), SWIGTYPE_p_f_void__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCreateProgram_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCreateProgram), SWIGTYPE_p_f_void__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCreateProgram""' of type '""PFNGLCREATEPROGRAMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCreateShader_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCreateShader), SWIGTYPE_p_f_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCreateShader_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCreateShader), SWIGTYPE_p_f_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCreateShader""' of type '""PFNGLCREATESHADERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteProgram_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteProgram), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteProgram_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteProgram), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteProgram""' of type '""PFNGLDELETEPROGRAMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteShader_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteShader), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteShader_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteShader), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteShader""' of type '""PFNGLDELETESHADERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDetachShader_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDetachShader), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDetachShader_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDetachShader), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDetachShader""' of type '""PFNGLDETACHSHADERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDisableVertexAttribArray_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDisableVertexAttribArray), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDisableVertexAttribArray_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDisableVertexAttribArray), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDisableVertexAttribArray""' of type '""PFNGLDISABLEVERTEXATTRIBARRAYPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawBuffers_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawBuffers), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawBuffers_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawBuffers), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawBuffers""' of type '""PFNGLDRAWBUFFERSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEnableVertexAttribArray_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEnableVertexAttribArray), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEnableVertexAttribArray_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEnableVertexAttribArray), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEnableVertexAttribArray""' of type '""PFNGLENABLEVERTEXATTRIBARRAYPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetActiveAttrib_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetActiveAttrib), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetActiveAttrib_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetActiveAttrib), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetActiveAttrib""' of type '""PFNGLGETACTIVEATTRIBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetActiveUniform_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetActiveUniform), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetActiveUniform_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetActiveUniform), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetActiveUniform""' of type '""PFNGLGETACTIVEUNIFORMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetAttachedShaders_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetAttachedShaders), SWIGTYPE_p_f_unsigned_int_int_p_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetAttachedShaders_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetAttachedShaders), SWIGTYPE_p_f_unsigned_int_int_p_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetAttachedShaders""' of type '""PFNGLGETATTACHEDSHADERSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetAttribLocation_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetAttribLocation), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetAttribLocation_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetAttribLocation), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetAttribLocation""' of type '""PFNGLGETATTRIBLOCATIONPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramInfoLog_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramInfoLog), SWIGTYPE_p_f_unsigned_int_int_p_int_p_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramInfoLog_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramInfoLog), SWIGTYPE_p_f_unsigned_int_int_p_int_p_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramInfoLog""' of type '""PFNGLGETPROGRAMINFOLOGPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramiv""' of type '""PFNGLGETPROGRAMIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetShaderInfoLog_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetShaderInfoLog), SWIGTYPE_p_f_unsigned_int_int_p_int_p_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetShaderInfoLog_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetShaderInfoLog), SWIGTYPE_p_f_unsigned_int_int_p_int_p_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetShaderInfoLog""' of type '""PFNGLGETSHADERINFOLOGPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetShaderSource_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetShaderSource), SWIGTYPE_p_f_int_int_p_int_p_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetShaderSource_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetShaderSource), SWIGTYPE_p_f_int_int_p_int_p_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetShaderSource""' of type '""PFNGLGETSHADERSOURCEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetShaderiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetShaderiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetShaderiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetShaderiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetShaderiv""' of type '""PFNGLGETSHADERIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetUniformLocation_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetUniformLocation), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetUniformLocation_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetUniformLocation), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetUniformLocation""' of type '""PFNGLGETUNIFORMLOCATIONPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetUniformfv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetUniformfv), SWIGTYPE_p_f_unsigned_int_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetUniformfv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetUniformfv), SWIGTYPE_p_f_unsigned_int_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetUniformfv""' of type '""PFNGLGETUNIFORMFVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetUniformiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetUniformiv), SWIGTYPE_p_f_unsigned_int_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetUniformiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetUniformiv), SWIGTYPE_p_f_unsigned_int_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetUniformiv""' of type '""PFNGLGETUNIFORMIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribPointerv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribPointerv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribPointerv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribPointerv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribPointerv""' of type '""PFNGLGETVERTEXATTRIBPOINTERVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribdv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribdv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribdv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribdv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribdv""' of type '""PFNGLGETVERTEXATTRIBDVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribfv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribfv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribfv""' of type '""PFNGLGETVERTEXATTRIBFVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribiv""' of type '""PFNGLGETVERTEXATTRIBIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsProgram_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsProgram), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsProgram_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsProgram), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsProgram""' of type '""PFNGLISPROGRAMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsShader_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsShader), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsShader_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsShader), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsShader""' of type '""PFNGLISSHADERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewLinkProgram_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewLinkProgram), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewLinkProgram_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewLinkProgram), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewLinkProgram""' of type '""PFNGLLINKPROGRAMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewShaderSource_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewShaderSource), SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__char_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewShaderSource_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewShaderSource), SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__char_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewShaderSource""' of type '""PFNGLSHADERSOURCEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewStencilFuncSeparate_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewStencilFuncSeparate), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewStencilFuncSeparate_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewStencilFuncSeparate), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewStencilFuncSeparate""' of type '""PFNGLSTENCILFUNCSEPARATEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewStencilMaskSeparate_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewStencilMaskSeparate), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewStencilMaskSeparate_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewStencilMaskSeparate), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewStencilMaskSeparate""' of type '""PFNGLSTENCILMASKSEPARATEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewStencilOpSeparate_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewStencilOpSeparate), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewStencilOpSeparate_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewStencilOpSeparate), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewStencilOpSeparate""' of type '""PFNGLSTENCILOPSEPARATEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform1f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform1f), SWIGTYPE_p_f_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform1f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform1f), SWIGTYPE_p_f_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform1f""' of type '""PFNGLUNIFORM1FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform1fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform1fv), SWIGTYPE_p_f_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform1fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform1fv), SWIGTYPE_p_f_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform1fv""' of type '""PFNGLUNIFORM1FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform1i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform1i), SWIGTYPE_p_f_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform1i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform1i), SWIGTYPE_p_f_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform1i""' of type '""PFNGLUNIFORM1IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform1iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform1iv), SWIGTYPE_p_f_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform1iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform1iv), SWIGTYPE_p_f_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform1iv""' of type '""PFNGLUNIFORM1IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform2f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform2f), SWIGTYPE_p_f_int_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform2f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform2f), SWIGTYPE_p_f_int_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform2f""' of type '""PFNGLUNIFORM2FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform2fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform2fv), SWIGTYPE_p_f_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform2fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform2fv), SWIGTYPE_p_f_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform2fv""' of type '""PFNGLUNIFORM2FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform2i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform2i), SWIGTYPE_p_f_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform2i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform2i), SWIGTYPE_p_f_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform2i""' of type '""PFNGLUNIFORM2IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform2iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform2iv), SWIGTYPE_p_f_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform2iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform2iv), SWIGTYPE_p_f_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform2iv""' of type '""PFNGLUNIFORM2IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform3f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform3f), SWIGTYPE_p_f_int_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform3f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform3f), SWIGTYPE_p_f_int_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform3f""' of type '""PFNGLUNIFORM3FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform3fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform3fv), SWIGTYPE_p_f_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform3fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform3fv), SWIGTYPE_p_f_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform3fv""' of type '""PFNGLUNIFORM3FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform3i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform3i), SWIGTYPE_p_f_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform3i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform3i), SWIGTYPE_p_f_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform3i""' of type '""PFNGLUNIFORM3IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform3iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform3iv), SWIGTYPE_p_f_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform3iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform3iv), SWIGTYPE_p_f_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform3iv""' of type '""PFNGLUNIFORM3IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform4f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform4f), SWIGTYPE_p_f_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform4f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform4f), SWIGTYPE_p_f_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform4f""' of type '""PFNGLUNIFORM4FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform4fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform4fv), SWIGTYPE_p_f_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform4fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform4fv), SWIGTYPE_p_f_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform4fv""' of type '""PFNGLUNIFORM4FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform4i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform4i), SWIGTYPE_p_f_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform4i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform4i), SWIGTYPE_p_f_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform4i""' of type '""PFNGLUNIFORM4IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform4iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform4iv), SWIGTYPE_p_f_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform4iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform4iv), SWIGTYPE_p_f_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform4iv""' of type '""PFNGLUNIFORM4IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix2fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniformMatrix2fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix2fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniformMatrix2fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniformMatrix2fv""' of type '""PFNGLUNIFORMMATRIX2FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix3fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniformMatrix3fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix3fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniformMatrix3fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniformMatrix3fv""' of type '""PFNGLUNIFORMMATRIX3FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix4fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniformMatrix4fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix4fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniformMatrix4fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniformMatrix4fv""' of type '""PFNGLUNIFORMMATRIX4FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUseProgram_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUseProgram), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUseProgram_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUseProgram), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUseProgram""' of type '""PFNGLUSEPROGRAMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewValidateProgram_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewValidateProgram), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewValidateProgram_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewValidateProgram), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewValidateProgram""' of type '""PFNGLVALIDATEPROGRAMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1d_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1d), SWIGTYPE_p_f_unsigned_int_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1d_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1d), SWIGTYPE_p_f_unsigned_int_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1d""' of type '""PFNGLVERTEXATTRIB1DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1dv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1dv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1dv""' of type '""PFNGLVERTEXATTRIB1DVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1f), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1f), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1f""' of type '""PFNGLVERTEXATTRIB1FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1fv""' of type '""PFNGLVERTEXATTRIB1FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1s_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1s), SWIGTYPE_p_f_unsigned_int_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1s_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1s), SWIGTYPE_p_f_unsigned_int_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1s""' of type '""PFNGLVERTEXATTRIB1SPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1sv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1sv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1sv""' of type '""PFNGLVERTEXATTRIB1SVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2d_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2d), SWIGTYPE_p_f_unsigned_int_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2d_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2d), SWIGTYPE_p_f_unsigned_int_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2d""' of type '""PFNGLVERTEXATTRIB2DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2dv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2dv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2dv""' of type '""PFNGLVERTEXATTRIB2DVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2f), SWIGTYPE_p_f_unsigned_int_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2f), SWIGTYPE_p_f_unsigned_int_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2f""' of type '""PFNGLVERTEXATTRIB2FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2fv""' of type '""PFNGLVERTEXATTRIB2FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2s_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2s), SWIGTYPE_p_f_unsigned_int_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2s_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2s), SWIGTYPE_p_f_unsigned_int_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2s""' of type '""PFNGLVERTEXATTRIB2SPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2sv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2sv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2sv""' of type '""PFNGLVERTEXATTRIB2SVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3d_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3d), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3d_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3d), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3d""' of type '""PFNGLVERTEXATTRIB3DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3dv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3dv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3dv""' of type '""PFNGLVERTEXATTRIB3DVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3f), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3f), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3f""' of type '""PFNGLVERTEXATTRIB3FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3fv""' of type '""PFNGLVERTEXATTRIB3FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3s_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3s), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3s_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3s), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3s""' of type '""PFNGLVERTEXATTRIB3SPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3sv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3sv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3sv""' of type '""PFNGLVERTEXATTRIB3SVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Nbv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4Nbv), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Nbv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4Nbv), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4Nbv""' of type '""PFNGLVERTEXATTRIB4NBVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Niv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4Niv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Niv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4Niv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4Niv""' of type '""PFNGLVERTEXATTRIB4NIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Nsv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4Nsv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Nsv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4Nsv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4Nsv""' of type '""PFNGLVERTEXATTRIB4NSVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Nub_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4Nub), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Nub_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4Nub), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4Nub""' of type '""PFNGLVERTEXATTRIB4NUBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Nubv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4Nubv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Nubv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4Nubv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4Nubv""' of type '""PFNGLVERTEXATTRIB4NUBVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Nuiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4Nuiv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Nuiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4Nuiv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4Nuiv""' of type '""PFNGLVERTEXATTRIB4NUIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Nusv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4Nusv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4Nusv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4Nusv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4Nusv""' of type '""PFNGLVERTEXATTRIB4NUSVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4bv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4bv), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4bv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4bv), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4bv""' of type '""PFNGLVERTEXATTRIB4BVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4d_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4d), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4d_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4d), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4d""' of type '""PFNGLVERTEXATTRIB4DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4dv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4dv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4dv), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4dv""' of type '""PFNGLVERTEXATTRIB4DVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4f_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4f), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4f_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4f), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4f""' of type '""PFNGLVERTEXATTRIB4FPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4fv), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4fv""' of type '""PFNGLVERTEXATTRIB4FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4iv""' of type '""PFNGLVERTEXATTRIB4IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4s_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4s), SWIGTYPE_p_f_unsigned_int_short_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4s_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4s), SWIGTYPE_p_f_unsigned_int_short_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4s""' of type '""PFNGLVERTEXATTRIB4SPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4sv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4sv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4sv""' of type '""PFNGLVERTEXATTRIB4SVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4ubv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4ubv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4ubv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4ubv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4ubv""' of type '""PFNGLVERTEXATTRIB4UBVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4uiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4uiv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4uiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4uiv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4uiv""' of type '""PFNGLVERTEXATTRIB4UIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4usv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4usv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4usv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4usv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4usv""' of type '""PFNGLVERTEXATTRIB4USVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribPointer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribPointer), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_char_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribPointer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribPointer), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_char_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribPointer""' of type '""PFNGLVERTEXATTRIBPOINTERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix2x3fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniformMatrix2x3fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix2x3fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniformMatrix2x3fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniformMatrix2x3fv""' of type '""PFNGLUNIFORMMATRIX2X3FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix2x4fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniformMatrix2x4fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix2x4fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniformMatrix2x4fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniformMatrix2x4fv""' of type '""PFNGLUNIFORMMATRIX2X4FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix3x2fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniformMatrix3x2fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix3x2fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniformMatrix3x2fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniformMatrix3x2fv""' of type '""PFNGLUNIFORMMATRIX3X2FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix3x4fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniformMatrix3x4fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix3x4fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniformMatrix3x4fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniformMatrix3x4fv""' of type '""PFNGLUNIFORMMATRIX3X4FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix4x2fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniformMatrix4x2fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix4x2fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniformMatrix4x2fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniformMatrix4x2fv""' of type '""PFNGLUNIFORMMATRIX4X2FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix4x3fv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniformMatrix4x3fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix4x3fv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniformMatrix4x3fv), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniformMatrix4x3fv""' of type '""PFNGLUNIFORMMATRIX4X3FVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBeginConditionalRender_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBeginConditionalRender), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBeginConditionalRender_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBeginConditionalRender), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBeginConditionalRender""' of type '""PFNGLBEGINCONDITIONALRENDERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBeginTransformFeedback_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBeginTransformFeedback), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBeginTransformFeedback_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBeginTransformFeedback), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBeginTransformFeedback""' of type '""PFNGLBEGINTRANSFORMFEEDBACKPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindBufferBase_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindBufferBase), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindBufferBase_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindBufferBase), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindBufferBase""' of type '""PFNGLBINDBUFFERBASEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindBufferRange_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindBufferRange), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t_ptrdiff_t__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindBufferRange_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindBufferRange), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t_ptrdiff_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindBufferRange""' of type '""PFNGLBINDBUFFERRANGEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindFragDataLocation_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindFragDataLocation), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindFragDataLocation_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindFragDataLocation), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindFragDataLocation""' of type '""PFNGLBINDFRAGDATALOCATIONPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClampColor_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClampColor), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClampColor_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClampColor), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClampColor""' of type '""PFNGLCLAMPCOLORPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClearBufferfi_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClearBufferfi), SWIGTYPE_p_f_unsigned_int_int_float_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClearBufferfi_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClearBufferfi), SWIGTYPE_p_f_unsigned_int_int_float_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClearBufferfi""' of type '""PFNGLCLEARBUFFERFIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClearBufferfv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClearBufferfv), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClearBufferfv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClearBufferfv), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClearBufferfv""' of type '""PFNGLCLEARBUFFERFVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClearBufferiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClearBufferiv), SWIGTYPE_p_f_unsigned_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClearBufferiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClearBufferiv), SWIGTYPE_p_f_unsigned_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClearBufferiv""' of type '""PFNGLCLEARBUFFERIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClearBufferuiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClearBufferuiv), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClearBufferuiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClearBufferuiv), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClearBufferuiv""' of type '""PFNGLCLEARBUFFERUIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorMaski_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorMaski), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorMaski_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorMaski), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorMaski""' of type '""PFNGLCOLORMASKIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDisablei_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDisablei), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDisablei_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDisablei), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDisablei""' of type '""PFNGLDISABLEIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEnablei_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEnablei), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEnablei_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEnablei), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEnablei""' of type '""PFNGLENABLEIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEndConditionalRender_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEndConditionalRender), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEndConditionalRender_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEndConditionalRender), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEndConditionalRender""' of type '""PFNGLENDCONDITIONALRENDERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEndTransformFeedback_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEndTransformFeedback), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEndTransformFeedback_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEndTransformFeedback), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEndTransformFeedback""' of type '""PFNGLENDTRANSFORMFEEDBACKPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetBooleani_v_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetBooleani_v), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetBooleani_v_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetBooleani_v), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetBooleani_v""' of type '""PFNGLGETBOOLEANI_VPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFragDataLocation_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFragDataLocation), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFragDataLocation_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFragDataLocation), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFragDataLocation""' of type '""PFNGLGETFRAGDATALOCATIONPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetIntegeri_v_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetIntegeri_v), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetIntegeri_v_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetIntegeri_v), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetIntegeri_v""' of type '""PFNGLGETINTEGERI_VPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetStringi_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetStringi), SWIGTYPE_p_f_unsigned_int_unsigned_int__p_unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetStringi_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetStringi), SWIGTYPE_p_f_unsigned_int_unsigned_int__p_unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetStringi""' of type '""PFNGLGETSTRINGIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTexParameterIiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTexParameterIiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTexParameterIiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTexParameterIiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTexParameterIiv""' of type '""PFNGLGETTEXPARAMETERIIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTexParameterIuiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTexParameterIuiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTexParameterIuiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTexParameterIuiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTexParameterIuiv""' of type '""PFNGLGETTEXPARAMETERIUIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTransformFeedbackVarying_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTransformFeedbackVarying), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTransformFeedbackVarying_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTransformFeedbackVarying), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTransformFeedbackVarying""' of type '""PFNGLGETTRANSFORMFEEDBACKVARYINGPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetUniformuiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetUniformuiv), SWIGTYPE_p_f_unsigned_int_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetUniformuiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetUniformuiv), SWIGTYPE_p_f_unsigned_int_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetUniformuiv""' of type '""PFNGLGETUNIFORMUIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribIiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribIiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribIiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribIiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribIiv""' of type '""PFNGLGETVERTEXATTRIBIIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribIuiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribIuiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribIuiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribIuiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribIuiv""' of type '""PFNGLGETVERTEXATTRIBIUIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsEnabledi_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsEnabledi), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsEnabledi_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsEnabledi), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsEnabledi""' of type '""PFNGLISENABLEDIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexParameterIiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexParameterIiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexParameterIiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexParameterIiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexParameterIiv""' of type '""PFNGLTEXPARAMETERIIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexParameterIuiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexParameterIuiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexParameterIuiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexParameterIuiv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexParameterIuiv""' of type '""PFNGLTEXPARAMETERIUIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTransformFeedbackVaryings_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTransformFeedbackVaryings), SWIGTYPE_p_f_unsigned_int_int_p_q_const__int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTransformFeedbackVaryings_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTransformFeedbackVaryings), SWIGTYPE_p_f_unsigned_int_int_p_q_const__int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTransformFeedbackVaryings""' of type '""PFNGLTRANSFORMFEEDBACKVARYINGSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform1ui_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform1ui), SWIGTYPE_p_f_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform1ui_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform1ui), SWIGTYPE_p_f_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform1ui""' of type '""PFNGLUNIFORM1UIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform1uiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform1uiv), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform1uiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform1uiv), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform1uiv""' of type '""PFNGLUNIFORM1UIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform2ui_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform2ui), SWIGTYPE_p_f_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform2ui_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform2ui), SWIGTYPE_p_f_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform2ui""' of type '""PFNGLUNIFORM2UIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform2uiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform2uiv), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform2uiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform2uiv), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform2uiv""' of type '""PFNGLUNIFORM2UIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform3ui_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform3ui), SWIGTYPE_p_f_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform3ui_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform3ui), SWIGTYPE_p_f_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform3ui""' of type '""PFNGLUNIFORM3UIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform3uiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform3uiv), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform3uiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform3uiv), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform3uiv""' of type '""PFNGLUNIFORM3UIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform4ui_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform4ui), SWIGTYPE_p_f_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform4ui_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform4ui), SWIGTYPE_p_f_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform4ui""' of type '""PFNGLUNIFORM4UIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform4uiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform4uiv), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform4uiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform4uiv), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform4uiv""' of type '""PFNGLUNIFORM4UIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI1i), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI1i), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI1i""' of type '""PFNGLVERTEXATTRIBI1IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI1iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI1iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI1iv""' of type '""PFNGLVERTEXATTRIBI1IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1ui_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI1ui), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1ui_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI1ui), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI1ui""' of type '""PFNGLVERTEXATTRIBI1UIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1uiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI1uiv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1uiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI1uiv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI1uiv""' of type '""PFNGLVERTEXATTRIBI1UIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI2i), SWIGTYPE_p_f_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI2i), SWIGTYPE_p_f_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI2i""' of type '""PFNGLVERTEXATTRIBI2IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI2iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI2iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI2iv""' of type '""PFNGLVERTEXATTRIBI2IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2ui_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI2ui), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2ui_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI2ui), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI2ui""' of type '""PFNGLVERTEXATTRIBI2UIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2uiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI2uiv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2uiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI2uiv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI2uiv""' of type '""PFNGLVERTEXATTRIBI2UIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI3i), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI3i), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI3i""' of type '""PFNGLVERTEXATTRIBI3IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI3iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI3iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI3iv""' of type '""PFNGLVERTEXATTRIBI3IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3ui_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI3ui), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3ui_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI3ui), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI3ui""' of type '""PFNGLVERTEXATTRIBI3UIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3uiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI3uiv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3uiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI3uiv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI3uiv""' of type '""PFNGLVERTEXATTRIBI3UIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4bv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4bv), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4bv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4bv), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4bv""' of type '""PFNGLVERTEXATTRIBI4BVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4i_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4i), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4i_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4i), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4i""' of type '""PFNGLVERTEXATTRIBI4IPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4iv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4iv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4iv), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4iv""' of type '""PFNGLVERTEXATTRIBI4IVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4sv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4sv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4sv), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4sv""' of type '""PFNGLVERTEXATTRIBI4SVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4ubv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4ubv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4ubv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4ubv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4ubv""' of type '""PFNGLVERTEXATTRIBI4UBVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4ui_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4ui), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4ui_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4ui), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4ui""' of type '""PFNGLVERTEXATTRIBI4UIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4uiv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4uiv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4uiv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4uiv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4uiv""' of type '""PFNGLVERTEXATTRIBI4UIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4usv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4usv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4usv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4usv), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4usv""' of type '""PFNGLVERTEXATTRIBI4USVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribIPointer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribIPointer), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribIPointer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribIPointer), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribIPointer""' of type '""PFNGLVERTEXATTRIBIPOINTERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTbufferMask3DFX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTbufferMask3DFX), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTbufferMask3DFX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTbufferMask3DFX), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTbufferMask3DFX""' of type '""PFNGLTBUFFERMASK3DFXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawElementArrayAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawElementArrayAPPLE), SWIGTYPE_p_f_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawElementArrayAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawElementArrayAPPLE), SWIGTYPE_p_f_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawElementArrayAPPLE""' of type '""PFNGLDRAWELEMENTARRAYAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawRangeElementArrayAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawRangeElementArrayAPPLE), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawRangeElementArrayAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawRangeElementArrayAPPLE), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawRangeElementArrayAPPLE""' of type '""PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewElementPointerAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewElementPointerAPPLE), SWIGTYPE_p_f_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewElementPointerAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewElementPointerAPPLE), SWIGTYPE_p_f_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewElementPointerAPPLE""' of type '""PFNGLELEMENTPOINTERAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiDrawElementArrayAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiDrawElementArrayAPPLE), SWIGTYPE_p_f_unsigned_int_p_q_const__int_p_q_const__int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiDrawElementArrayAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiDrawElementArrayAPPLE), SWIGTYPE_p_f_unsigned_int_p_q_const__int_p_q_const__int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiDrawElementArrayAPPLE""' of type '""PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiDrawRangeElementArrayAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiDrawRangeElementArrayAPPLE), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int_p_q_const__int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiDrawRangeElementArrayAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiDrawRangeElementArrayAPPLE), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int_p_q_const__int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiDrawRangeElementArrayAPPLE""' of type '""PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteFencesAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteFencesAPPLE), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteFencesAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteFencesAPPLE), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteFencesAPPLE""' of type '""PFNGLDELETEFENCESAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFinishFenceAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFinishFenceAPPLE), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFinishFenceAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFinishFenceAPPLE), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFinishFenceAPPLE""' of type '""PFNGLFINISHFENCEAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFinishObjectAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFinishObjectAPPLE), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFinishObjectAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFinishObjectAPPLE), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFinishObjectAPPLE""' of type '""PFNGLFINISHOBJECTAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenFencesAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenFencesAPPLE), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenFencesAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenFencesAPPLE), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenFencesAPPLE""' of type '""PFNGLGENFENCESAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsFenceAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsFenceAPPLE), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsFenceAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsFenceAPPLE), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsFenceAPPLE""' of type '""PFNGLISFENCEAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSetFenceAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSetFenceAPPLE), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSetFenceAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSetFenceAPPLE), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSetFenceAPPLE""' of type '""PFNGLSETFENCEAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTestFenceAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTestFenceAPPLE), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTestFenceAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTestFenceAPPLE), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTestFenceAPPLE""' of type '""PFNGLTESTFENCEAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTestObjectAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTestObjectAPPLE), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTestObjectAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTestObjectAPPLE), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTestObjectAPPLE""' of type '""PFNGLTESTOBJECTAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBufferParameteriAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBufferParameteriAPPLE), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBufferParameteriAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBufferParameteriAPPLE), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBufferParameteriAPPLE""' of type '""PFNGLBUFFERPARAMETERIAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFlushMappedBufferRangeAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFlushMappedBufferRangeAPPLE), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFlushMappedBufferRangeAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFlushMappedBufferRangeAPPLE), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFlushMappedBufferRangeAPPLE""' of type '""PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTexParameterPointervAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTexParameterPointervAPPLE), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTexParameterPointervAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTexParameterPointervAPPLE), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTexParameterPointervAPPLE""' of type '""PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureRangeAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureRangeAPPLE), SWIGTYPE_p_f_unsigned_int_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureRangeAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureRangeAPPLE), SWIGTYPE_p_f_unsigned_int_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureRangeAPPLE""' of type '""PFNGLTEXTURERANGEAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindVertexArrayAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindVertexArrayAPPLE), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindVertexArrayAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindVertexArrayAPPLE), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindVertexArrayAPPLE""' of type '""PFNGLBINDVERTEXARRAYAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteVertexArraysAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteVertexArraysAPPLE), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteVertexArraysAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteVertexArraysAPPLE), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteVertexArraysAPPLE""' of type '""PFNGLDELETEVERTEXARRAYSAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenVertexArraysAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenVertexArraysAPPLE), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenVertexArraysAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenVertexArraysAPPLE), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenVertexArraysAPPLE""' of type '""PFNGLGENVERTEXARRAYSAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsVertexArrayAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsVertexArrayAPPLE), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsVertexArrayAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsVertexArrayAPPLE), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsVertexArrayAPPLE""' of type '""PFNGLISVERTEXARRAYAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFlushVertexArrayRangeAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFlushVertexArrayRangeAPPLE), SWIGTYPE_p_f_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFlushVertexArrayRangeAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFlushVertexArrayRangeAPPLE), SWIGTYPE_p_f_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFlushVertexArrayRangeAPPLE""' of type '""PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexArrayParameteriAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexArrayParameteriAPPLE), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexArrayParameteriAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexArrayParameteriAPPLE), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexArrayParameteriAPPLE""' of type '""PFNGLVERTEXARRAYPARAMETERIAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexArrayRangeAPPLE_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexArrayRangeAPPLE), SWIGTYPE_p_f_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexArrayRangeAPPLE_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexArrayRangeAPPLE), SWIGTYPE_p_f_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexArrayRangeAPPLE""' of type '""PFNGLVERTEXARRAYRANGEAPPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClampColorARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClampColorARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClampColorARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClampColorARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClampColorARB""' of type '""PFNGLCLAMPCOLORARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawBuffersARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawBuffersARB), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawBuffersARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawBuffersARB), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawBuffersARB""' of type '""PFNGLDRAWBUFFERSARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawArraysInstancedARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawArraysInstancedARB), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawArraysInstancedARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawArraysInstancedARB), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawArraysInstancedARB""' of type '""PFNGLDRAWARRAYSINSTANCEDARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawElementsInstancedARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawElementsInstancedARB), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_p_q_const__void_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawElementsInstancedARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawElementsInstancedARB), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_p_q_const__void_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawElementsInstancedARB""' of type '""PFNGLDRAWELEMENTSINSTANCEDARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindFramebuffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindFramebuffer), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindFramebuffer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindFramebuffer), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindFramebuffer""' of type '""PFNGLBINDFRAMEBUFFERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindRenderbuffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindRenderbuffer), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindRenderbuffer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindRenderbuffer), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindRenderbuffer""' of type '""PFNGLBINDRENDERBUFFERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBlitFramebuffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBlitFramebuffer), SWIGTYPE_p_f_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBlitFramebuffer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBlitFramebuffer), SWIGTYPE_p_f_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBlitFramebuffer""' of type '""PFNGLBLITFRAMEBUFFERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCheckFramebufferStatus_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCheckFramebufferStatus), SWIGTYPE_p_f_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCheckFramebufferStatus_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCheckFramebufferStatus), SWIGTYPE_p_f_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCheckFramebufferStatus""' of type '""PFNGLCHECKFRAMEBUFFERSTATUSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteFramebuffers_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteFramebuffers), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteFramebuffers_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteFramebuffers), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteFramebuffers""' of type '""PFNGLDELETEFRAMEBUFFERSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteRenderbuffers_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteRenderbuffers), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteRenderbuffers_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteRenderbuffers), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteRenderbuffers""' of type '""PFNGLDELETERENDERBUFFERSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferRenderbuffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferRenderbuffer), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferRenderbuffer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferRenderbuffer), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferRenderbuffer""' of type '""PFNGLFRAMEBUFFERRENDERBUFFERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexturLayer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferTexturLayer), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexturLayer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferTexturLayer), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferTexturLayer""' of type '""PFNGLFRAMEBUFFERTEXTURLAYERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexture1D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferTexture1D), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexture1D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferTexture1D), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferTexture1D""' of type '""PFNGLFRAMEBUFFERTEXTURE1DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexture2D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferTexture2D), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexture2D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferTexture2D), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferTexture2D""' of type '""PFNGLFRAMEBUFFERTEXTURE2DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexture3D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferTexture3D), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexture3D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferTexture3D), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferTexture3D""' of type '""PFNGLFRAMEBUFFERTEXTURE3DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenFramebuffers_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenFramebuffers), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenFramebuffers_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenFramebuffers), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenFramebuffers""' of type '""PFNGLGENFRAMEBUFFERSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenRenderbuffers_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenRenderbuffers), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenRenderbuffers_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenRenderbuffers), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenRenderbuffers""' of type '""PFNGLGENRENDERBUFFERSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenerateMipmap_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenerateMipmap), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenerateMipmap_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenerateMipmap), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenerateMipmap""' of type '""PFNGLGENERATEMIPMAPPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFramebufferAttachmentParameteriv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFramebufferAttachmentParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFramebufferAttachmentParameteriv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFramebufferAttachmentParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFramebufferAttachmentParameteriv""' of type '""PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetRenderbufferParameteriv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetRenderbufferParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetRenderbufferParameteriv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetRenderbufferParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetRenderbufferParameteriv""' of type '""PFNGLGETRENDERBUFFERPARAMETERIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsFramebuffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsFramebuffer), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsFramebuffer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsFramebuffer), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsFramebuffer""' of type '""PFNGLISFRAMEBUFFERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsRenderbuffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsRenderbuffer), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsRenderbuffer_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsRenderbuffer), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsRenderbuffer""' of type '""PFNGLISRENDERBUFFERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewRenderbufferStorage_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewRenderbufferStorage), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewRenderbufferStorage_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewRenderbufferStorage), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewRenderbufferStorage""' of type '""PFNGLRENDERBUFFERSTORAGEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewRenderbufferStorageMultisample_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewRenderbufferStorageMultisample), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewRenderbufferStorageMultisample_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewRenderbufferStorageMultisample), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewRenderbufferStorageMultisample""' of type '""PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTextureARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferTextureARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTextureARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferTextureARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferTextureARB""' of type '""PFNGLFRAMEBUFFERTEXTUREARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTextureFaceARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferTextureFaceARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTextureFaceARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferTextureFaceARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferTextureFaceARB""' of type '""PFNGLFRAMEBUFFERTEXTUREFACEARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTextureLayerARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferTextureLayerARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTextureLayerARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferTextureLayerARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferTextureLayerARB""' of type '""PFNGLFRAMEBUFFERTEXTURELAYERARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramParameteriARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramParameteriARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramParameteriARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramParameteriARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramParameteriARB""' of type '""PFNGLPROGRAMPARAMETERIARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorSubTable_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorSubTable), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorSubTable_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorSubTable), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorSubTable""' of type '""PFNGLCOLORSUBTABLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorTable_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorTable), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorTable_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorTable), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorTable""' of type '""PFNGLCOLORTABLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorTableParameterfv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorTableParameterfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorTableParameterfv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorTableParameterfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorTableParameterfv""' of type '""PFNGLCOLORTABLEPARAMETERFVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorTableParameteriv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorTableParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorTableParameteriv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorTableParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorTableParameteriv""' of type '""PFNGLCOLORTABLEPARAMETERIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewConvolutionFilter1D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewConvolutionFilter1D), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewConvolutionFilter1D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewConvolutionFilter1D), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewConvolutionFilter1D""' of type '""PFNGLCONVOLUTIONFILTER1DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewConvolutionFilter2D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewConvolutionFilter2D), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewConvolutionFilter2D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewConvolutionFilter2D), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewConvolutionFilter2D""' of type '""PFNGLCONVOLUTIONFILTER2DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameterf_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewConvolutionParameterf), SWIGTYPE_p_f_unsigned_int_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameterf_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewConvolutionParameterf), SWIGTYPE_p_f_unsigned_int_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewConvolutionParameterf""' of type '""PFNGLCONVOLUTIONPARAMETERFPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameterfv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewConvolutionParameterfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameterfv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewConvolutionParameterfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewConvolutionParameterfv""' of type '""PFNGLCONVOLUTIONPARAMETERFVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameteri_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewConvolutionParameteri), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameteri_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewConvolutionParameteri), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewConvolutionParameteri""' of type '""PFNGLCONVOLUTIONPARAMETERIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameteriv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewConvolutionParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameteriv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewConvolutionParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewConvolutionParameteriv""' of type '""PFNGLCONVOLUTIONPARAMETERIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyColorSubTable_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyColorSubTable), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyColorSubTable_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyColorSubTable), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyColorSubTable""' of type '""PFNGLCOPYCOLORSUBTABLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyColorTable_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyColorTable), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyColorTable_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyColorTable), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyColorTable""' of type '""PFNGLCOPYCOLORTABLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyConvolutionFilter1D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyConvolutionFilter1D), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyConvolutionFilter1D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyConvolutionFilter1D), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyConvolutionFilter1D""' of type '""PFNGLCOPYCONVOLUTIONFILTER1DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyConvolutionFilter2D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyConvolutionFilter2D), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyConvolutionFilter2D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyConvolutionFilter2D), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyConvolutionFilter2D""' of type '""PFNGLCOPYCONVOLUTIONFILTER2DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetColorTable_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetColorTable), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetColorTable_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetColorTable), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetColorTable""' of type '""PFNGLGETCOLORTABLEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableParameterfv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetColorTableParameterfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableParameterfv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetColorTableParameterfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetColorTableParameterfv""' of type '""PFNGLGETCOLORTABLEPARAMETERFVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableParameteriv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetColorTableParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableParameteriv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetColorTableParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetColorTableParameteriv""' of type '""PFNGLGETCOLORTABLEPARAMETERIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetConvolutionFilter_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetConvolutionFilter), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetConvolutionFilter_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetConvolutionFilter), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetConvolutionFilter""' of type '""PFNGLGETCONVOLUTIONFILTERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetConvolutionParameterfv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetConvolutionParameterfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetConvolutionParameterfv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetConvolutionParameterfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetConvolutionParameterfv""' of type '""PFNGLGETCONVOLUTIONPARAMETERFVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetConvolutionParameteriv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetConvolutionParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetConvolutionParameteriv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetConvolutionParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetConvolutionParameteriv""' of type '""PFNGLGETCONVOLUTIONPARAMETERIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetHistogram_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetHistogram), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetHistogram_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetHistogram), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetHistogram""' of type '""PFNGLGETHISTOGRAMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetHistogramParameterfv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetHistogramParameterfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetHistogramParameterfv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetHistogramParameterfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetHistogramParameterfv""' of type '""PFNGLGETHISTOGRAMPARAMETERFVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetHistogramParameteriv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetHistogramParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetHistogramParameteriv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetHistogramParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetHistogramParameteriv""' of type '""PFNGLGETHISTOGRAMPARAMETERIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMinmax_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMinmax), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMinmax_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMinmax), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMinmax""' of type '""PFNGLGETMINMAXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMinmaxParameterfv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMinmaxParameterfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMinmaxParameterfv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMinmaxParameterfv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMinmaxParameterfv""' of type '""PFNGLGETMINMAXPARAMETERFVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMinmaxParameteriv_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMinmaxParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMinmaxParameteriv_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMinmaxParameteriv), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMinmaxParameteriv""' of type '""PFNGLGETMINMAXPARAMETERIVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetSeparableFilter_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetSeparableFilter), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void_p_void_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetSeparableFilter_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetSeparableFilter), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void_p_void_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetSeparableFilter""' of type '""PFNGLGETSEPARABLEFILTERPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewHistogram_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewHistogram), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewHistogram_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewHistogram), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewHistogram""' of type '""PFNGLHISTOGRAMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMinmax_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMinmax), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMinmax_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMinmax), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMinmax""' of type '""PFNGLMINMAXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewResetHistogram_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewResetHistogram), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewResetHistogram_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewResetHistogram), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewResetHistogram""' of type '""PFNGLRESETHISTOGRAMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewResetMinmax_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewResetMinmax), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewResetMinmax_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewResetMinmax), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewResetMinmax""' of type '""PFNGLRESETMINMAXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSeparableFilter2D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSeparableFilter2D), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSeparableFilter2D_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSeparableFilter2D), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSeparableFilter2D""' of type '""PFNGLSEPARABLEFILTER2DPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribDivisorARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribDivisorARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribDivisorARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribDivisorARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribDivisorARB""' of type '""PFNGLVERTEXATTRIBDIVISORARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFlushMappedBufferRange_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFlushMappedBufferRange), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFlushMappedBufferRange_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFlushMappedBufferRange), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFlushMappedBufferRange""' of type '""PFNGLFLUSHMAPPEDBUFFERRANGEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMapBufferRange_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMapBufferRange), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_unsigned_int__p_void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMapBufferRange_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMapBufferRange), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_unsigned_int__p_void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMapBufferRange""' of type '""PFNGLMAPBUFFERRANGEPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCurrentPaletteMatrixARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCurrentPaletteMatrixARB), SWIGTYPE_p_f_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCurrentPaletteMatrixARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCurrentPaletteMatrixARB), SWIGTYPE_p_f_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCurrentPaletteMatrixARB""' of type '""PFNGLCURRENTPALETTEMATRIXARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixIndexPointerARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixIndexPointerARB), SWIGTYPE_p_f_int_unsigned_int_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixIndexPointerARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixIndexPointerARB), SWIGTYPE_p_f_int_unsigned_int_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixIndexPointerARB""' of type '""PFNGLMATRIXINDEXPOINTERARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixIndexubvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixIndexubvARB), SWIGTYPE_p_f_int_p_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixIndexubvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixIndexubvARB), SWIGTYPE_p_f_int_p_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixIndexubvARB""' of type '""PFNGLMATRIXINDEXUBVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixIndexuivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixIndexuivARB), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixIndexuivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixIndexuivARB), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixIndexuivARB""' of type '""PFNGLMATRIXINDEXUIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixIndexusvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixIndexusvARB), SWIGTYPE_p_f_int_p_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixIndexusvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixIndexusvARB), SWIGTYPE_p_f_int_p_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixIndexusvARB""' of type '""PFNGLMATRIXINDEXUSVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSampleCoverageARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSampleCoverageARB), SWIGTYPE_p_f_float_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSampleCoverageARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSampleCoverageARB), SWIGTYPE_p_f_float_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSampleCoverageARB""' of type '""PFNGLSAMPLECOVERAGEARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewActiveTextureARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewActiveTextureARB), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewActiveTextureARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewActiveTextureARB), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewActiveTextureARB""' of type '""PFNGLACTIVETEXTUREARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClientActiveTextureARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClientActiveTextureARB), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClientActiveTextureARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClientActiveTextureARB), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClientActiveTextureARB""' of type '""PFNGLCLIENTACTIVETEXTUREARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1dARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1dARB), SWIGTYPE_p_f_unsigned_int_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1dARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1dARB), SWIGTYPE_p_f_unsigned_int_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1dARB""' of type '""PFNGLMULTITEXCOORD1DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1dvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1dvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1dvARB""' of type '""PFNGLMULTITEXCOORD1DVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1fARB), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1fARB), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1fARB""' of type '""PFNGLMULTITEXCOORD1FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1fvARB""' of type '""PFNGLMULTITEXCOORD1FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1iARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1iARB), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1iARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1iARB), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1iARB""' of type '""PFNGLMULTITEXCOORD1IARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1ivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1ivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1ivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1ivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1ivARB""' of type '""PFNGLMULTITEXCOORD1IVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1sARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1sARB), SWIGTYPE_p_f_unsigned_int_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1sARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1sARB), SWIGTYPE_p_f_unsigned_int_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1sARB""' of type '""PFNGLMULTITEXCOORD1SARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1svARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1svARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1svARB""' of type '""PFNGLMULTITEXCOORD1SVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2dARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2dARB), SWIGTYPE_p_f_unsigned_int_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2dARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2dARB), SWIGTYPE_p_f_unsigned_int_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2dARB""' of type '""PFNGLMULTITEXCOORD2DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2dvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2dvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2dvARB""' of type '""PFNGLMULTITEXCOORD2DVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2fARB), SWIGTYPE_p_f_unsigned_int_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2fARB), SWIGTYPE_p_f_unsigned_int_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2fARB""' of type '""PFNGLMULTITEXCOORD2FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2fvARB""' of type '""PFNGLMULTITEXCOORD2FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2iARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2iARB), SWIGTYPE_p_f_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2iARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2iARB), SWIGTYPE_p_f_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2iARB""' of type '""PFNGLMULTITEXCOORD2IARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2ivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2ivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2ivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2ivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2ivARB""' of type '""PFNGLMULTITEXCOORD2IVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2sARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2sARB), SWIGTYPE_p_f_unsigned_int_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2sARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2sARB), SWIGTYPE_p_f_unsigned_int_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2sARB""' of type '""PFNGLMULTITEXCOORD2SARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2svARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2svARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2svARB""' of type '""PFNGLMULTITEXCOORD2SVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3dARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3dARB), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3dARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3dARB), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3dARB""' of type '""PFNGLMULTITEXCOORD3DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3dvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3dvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3dvARB""' of type '""PFNGLMULTITEXCOORD3DVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3fARB), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3fARB), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3fARB""' of type '""PFNGLMULTITEXCOORD3FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3fvARB""' of type '""PFNGLMULTITEXCOORD3FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3iARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3iARB), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3iARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3iARB), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3iARB""' of type '""PFNGLMULTITEXCOORD3IARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3ivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3ivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3ivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3ivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3ivARB""' of type '""PFNGLMULTITEXCOORD3IVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3sARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3sARB), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3sARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3sARB), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3sARB""' of type '""PFNGLMULTITEXCOORD3SARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3svARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3svARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3svARB""' of type '""PFNGLMULTITEXCOORD3SVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4dARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4dARB), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4dARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4dARB), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4dARB""' of type '""PFNGLMULTITEXCOORD4DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4dvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4dvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4dvARB""' of type '""PFNGLMULTITEXCOORD4DVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4fARB), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4fARB), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4fARB""' of type '""PFNGLMULTITEXCOORD4FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4fvARB""' of type '""PFNGLMULTITEXCOORD4FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4iARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4iARB), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4iARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4iARB), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4iARB""' of type '""PFNGLMULTITEXCOORD4IARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4ivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4ivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4ivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4ivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4ivARB""' of type '""PFNGLMULTITEXCOORD4IVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4sARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4sARB), SWIGTYPE_p_f_unsigned_int_short_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4sARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4sARB), SWIGTYPE_p_f_unsigned_int_short_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4sARB""' of type '""PFNGLMULTITEXCOORD4SARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4svARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4svARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4svARB""' of type '""PFNGLMULTITEXCOORD4SVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBeginQueryARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBeginQueryARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBeginQueryARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBeginQueryARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBeginQueryARB""' of type '""PFNGLBEGINQUERYARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteQueriesARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteQueriesARB), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteQueriesARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteQueriesARB), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteQueriesARB""' of type '""PFNGLDELETEQUERIESARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEndQueryARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEndQueryARB), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEndQueryARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEndQueryARB), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEndQueryARB""' of type '""PFNGLENDQUERYARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenQueriesARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenQueriesARB), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenQueriesARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenQueriesARB), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenQueriesARB""' of type '""PFNGLGENQUERIESARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetQueryObjectivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetQueryObjectivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetQueryObjectivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetQueryObjectivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetQueryObjectivARB""' of type '""PFNGLGETQUERYOBJECTIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetQueryObjectuivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetQueryObjectuivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetQueryObjectuivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetQueryObjectuivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetQueryObjectuivARB""' of type '""PFNGLGETQUERYOBJECTUIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetQueryivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetQueryivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetQueryivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetQueryivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetQueryivARB""' of type '""PFNGLGETQUERYIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsQueryARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsQueryARB), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsQueryARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsQueryARB), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsQueryARB""' of type '""PFNGLISQUERYARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPointParameterfARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPointParameterfARB), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPointParameterfARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPointParameterfARB), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPointParameterfARB""' of type '""PFNGLPOINTPARAMETERFARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPointParameterfvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPointParameterfvARB), SWIGTYPE_p_f_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPointParameterfvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPointParameterfvARB), SWIGTYPE_p_f_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPointParameterfvARB""' of type '""PFNGLPOINTPARAMETERFVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewAttachObjectARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewAttachObjectARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewAttachObjectARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewAttachObjectARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewAttachObjectARB""' of type '""PFNGLATTACHOBJECTARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompileShaderARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompileShaderARB), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompileShaderARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompileShaderARB), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompileShaderARB""' of type '""PFNGLCOMPILESHADERARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCreateProgramObjectARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCreateProgramObjectARB), SWIGTYPE_p_f_void__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCreateProgramObjectARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCreateProgramObjectARB), SWIGTYPE_p_f_void__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCreateProgramObjectARB""' of type '""PFNGLCREATEPROGRAMOBJECTARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCreateShaderObjectARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCreateShaderObjectARB), SWIGTYPE_p_f_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCreateShaderObjectARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCreateShaderObjectARB), SWIGTYPE_p_f_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCreateShaderObjectARB""' of type '""PFNGLCREATESHADEROBJECTARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteObjectARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteObjectARB), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteObjectARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteObjectARB), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteObjectARB""' of type '""PFNGLDELETEOBJECTARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDetachObjectARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDetachObjectARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDetachObjectARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDetachObjectARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDetachObjectARB""' of type '""PFNGLDETACHOBJECTARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetActiveUniformARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetActiveUniformARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetActiveUniformARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetActiveUniformARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetActiveUniformARB""' of type '""PFNGLGETACTIVEUNIFORMARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetAttachedObjectsARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetAttachedObjectsARB), SWIGTYPE_p_f_unsigned_int_int_p_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetAttachedObjectsARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetAttachedObjectsARB), SWIGTYPE_p_f_unsigned_int_int_p_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetAttachedObjectsARB""' of type '""PFNGLGETATTACHEDOBJECTSARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetHandleARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetHandleARB), SWIGTYPE_p_f_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetHandleARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetHandleARB), SWIGTYPE_p_f_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetHandleARB""' of type '""PFNGLGETHANDLEARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetInfoLogARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetInfoLogARB), SWIGTYPE_p_f_unsigned_int_int_p_int_p_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetInfoLogARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetInfoLogARB), SWIGTYPE_p_f_unsigned_int_int_p_int_p_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetInfoLogARB""' of type '""PFNGLGETINFOLOGARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetObjectParameterfvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetObjectParameterfvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetObjectParameterfvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetObjectParameterfvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetObjectParameterfvARB""' of type '""PFNGLGETOBJECTPARAMETERFVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetObjectParameterivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetObjectParameterivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetObjectParameterivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetObjectParameterivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetObjectParameterivARB""' of type '""PFNGLGETOBJECTPARAMETERIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetShaderSourceARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetShaderSourceARB), SWIGTYPE_p_f_unsigned_int_int_p_int_p_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetShaderSourceARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetShaderSourceARB), SWIGTYPE_p_f_unsigned_int_int_p_int_p_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetShaderSourceARB""' of type '""PFNGLGETSHADERSOURCEARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetUniformLocationARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetUniformLocationARB), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetUniformLocationARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetUniformLocationARB), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetUniformLocationARB""' of type '""PFNGLGETUNIFORMLOCATIONARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetUniformfvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetUniformfvARB), SWIGTYPE_p_f_unsigned_int_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetUniformfvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetUniformfvARB), SWIGTYPE_p_f_unsigned_int_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetUniformfvARB""' of type '""PFNGLGETUNIFORMFVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetUniformivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetUniformivARB), SWIGTYPE_p_f_unsigned_int_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetUniformivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetUniformivARB), SWIGTYPE_p_f_unsigned_int_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetUniformivARB""' of type '""PFNGLGETUNIFORMIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewLinkProgramARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewLinkProgramARB), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewLinkProgramARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewLinkProgramARB), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewLinkProgramARB""' of type '""PFNGLLINKPROGRAMARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewShaderSourceARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewShaderSourceARB), SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__char_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewShaderSourceARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewShaderSourceARB), SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__char_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewShaderSourceARB""' of type '""PFNGLSHADERSOURCEARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform1fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform1fARB), SWIGTYPE_p_f_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform1fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform1fARB), SWIGTYPE_p_f_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform1fARB""' of type '""PFNGLUNIFORM1FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform1fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform1fvARB), SWIGTYPE_p_f_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform1fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform1fvARB), SWIGTYPE_p_f_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform1fvARB""' of type '""PFNGLUNIFORM1FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform1iARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform1iARB), SWIGTYPE_p_f_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform1iARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform1iARB), SWIGTYPE_p_f_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform1iARB""' of type '""PFNGLUNIFORM1IARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform1ivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform1ivARB), SWIGTYPE_p_f_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform1ivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform1ivARB), SWIGTYPE_p_f_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform1ivARB""' of type '""PFNGLUNIFORM1IVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform2fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform2fARB), SWIGTYPE_p_f_int_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform2fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform2fARB), SWIGTYPE_p_f_int_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform2fARB""' of type '""PFNGLUNIFORM2FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform2fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform2fvARB), SWIGTYPE_p_f_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform2fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform2fvARB), SWIGTYPE_p_f_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform2fvARB""' of type '""PFNGLUNIFORM2FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform2iARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform2iARB), SWIGTYPE_p_f_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform2iARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform2iARB), SWIGTYPE_p_f_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform2iARB""' of type '""PFNGLUNIFORM2IARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform2ivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform2ivARB), SWIGTYPE_p_f_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform2ivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform2ivARB), SWIGTYPE_p_f_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform2ivARB""' of type '""PFNGLUNIFORM2IVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform3fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform3fARB), SWIGTYPE_p_f_int_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform3fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform3fARB), SWIGTYPE_p_f_int_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform3fARB""' of type '""PFNGLUNIFORM3FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform3fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform3fvARB), SWIGTYPE_p_f_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform3fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform3fvARB), SWIGTYPE_p_f_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform3fvARB""' of type '""PFNGLUNIFORM3FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform3iARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform3iARB), SWIGTYPE_p_f_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform3iARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform3iARB), SWIGTYPE_p_f_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform3iARB""' of type '""PFNGLUNIFORM3IARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform3ivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform3ivARB), SWIGTYPE_p_f_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform3ivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform3ivARB), SWIGTYPE_p_f_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform3ivARB""' of type '""PFNGLUNIFORM3IVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform4fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform4fARB), SWIGTYPE_p_f_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform4fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform4fARB), SWIGTYPE_p_f_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform4fARB""' of type '""PFNGLUNIFORM4FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform4fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform4fvARB), SWIGTYPE_p_f_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform4fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform4fvARB), SWIGTYPE_p_f_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform4fvARB""' of type '""PFNGLUNIFORM4FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform4iARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform4iARB), SWIGTYPE_p_f_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform4iARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform4iARB), SWIGTYPE_p_f_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform4iARB""' of type '""PFNGLUNIFORM4IARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform4ivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform4ivARB), SWIGTYPE_p_f_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform4ivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform4ivARB), SWIGTYPE_p_f_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform4ivARB""' of type '""PFNGLUNIFORM4IVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix2fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniformMatrix2fvARB), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix2fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniformMatrix2fvARB), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniformMatrix2fvARB""' of type '""PFNGLUNIFORMMATRIX2FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix3fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniformMatrix3fvARB), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix3fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniformMatrix3fvARB), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniformMatrix3fvARB""' of type '""PFNGLUNIFORMMATRIX3FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix4fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniformMatrix4fvARB), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniformMatrix4fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniformMatrix4fvARB), SWIGTYPE_p_f_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniformMatrix4fvARB""' of type '""PFNGLUNIFORMMATRIX4FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUseProgramObjectARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUseProgramObjectARB), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUseProgramObjectARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUseProgramObjectARB), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUseProgramObjectARB""' of type '""PFNGLUSEPROGRAMOBJECTARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewValidateProgramARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewValidateProgramARB), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewValidateProgramARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewValidateProgramARB), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewValidateProgramARB""' of type '""PFNGLVALIDATEPROGRAMARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexBufferARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexBufferARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexBufferARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexBufferARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexBufferARB""' of type '""PFNGLTEXBUFFERARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexImage1DARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTexImage1DARB), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexImage1DARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTexImage1DARB), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTexImage1DARB""' of type '""PFNGLCOMPRESSEDTEXIMAGE1DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexImage2DARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTexImage2DARB), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexImage2DARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTexImage2DARB), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTexImage2DARB""' of type '""PFNGLCOMPRESSEDTEXIMAGE2DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexImage3DARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTexImage3DARB), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexImage3DARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTexImage3DARB), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTexImage3DARB""' of type '""PFNGLCOMPRESSEDTEXIMAGE3DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexSubImage1DARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTexSubImage1DARB), SWIGTYPE_p_f_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexSubImage1DARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTexSubImage1DARB), SWIGTYPE_p_f_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTexSubImage1DARB""' of type '""PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexSubImage2DARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTexSubImage2DARB), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexSubImage2DARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTexSubImage2DARB), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTexSubImage2DARB""' of type '""PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexSubImage3DARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTexSubImage3DARB), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTexSubImage3DARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTexSubImage3DARB), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTexSubImage3DARB""' of type '""PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetCompressedTexImageARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetCompressedTexImageARB), SWIGTYPE_p_f_unsigned_int_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetCompressedTexImageARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetCompressedTexImageARB), SWIGTYPE_p_f_unsigned_int_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetCompressedTexImageARB""' of type '""PFNGLGETCOMPRESSEDTEXIMAGEARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewLoadTransposeMatrixdARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewLoadTransposeMatrixdARB), SWIGTYPE_p_f_a_16__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewLoadTransposeMatrixdARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewLoadTransposeMatrixdARB), SWIGTYPE_p_f_a_16__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewLoadTransposeMatrixdARB""' of type '""PFNGLLOADTRANSPOSEMATRIXDARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewLoadTransposeMatrixfARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewLoadTransposeMatrixfARB), SWIGTYPE_p_f_a_16__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewLoadTransposeMatrixfARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewLoadTransposeMatrixfARB), SWIGTYPE_p_f_a_16__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewLoadTransposeMatrixfARB""' of type '""PFNGLLOADTRANSPOSEMATRIXFARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultTransposeMatrixdARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultTransposeMatrixdARB), SWIGTYPE_p_f_a_16__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultTransposeMatrixdARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultTransposeMatrixdARB), SWIGTYPE_p_f_a_16__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultTransposeMatrixdARB""' of type '""PFNGLMULTTRANSPOSEMATRIXDARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultTransposeMatrixfARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultTransposeMatrixfARB), SWIGTYPE_p_f_a_16__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultTransposeMatrixfARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultTransposeMatrixfARB), SWIGTYPE_p_f_a_16__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultTransposeMatrixfARB""' of type '""PFNGLMULTTRANSPOSEMATRIXFARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindVertexArray_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindVertexArray), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindVertexArray_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindVertexArray), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindVertexArray""' of type '""PFNGLBINDVERTEXARRAYPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteVertexArrays_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteVertexArrays), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteVertexArrays_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteVertexArrays), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteVertexArrays""' of type '""PFNGLDELETEVERTEXARRAYSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenVertexArrays_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenVertexArrays), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenVertexArrays_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenVertexArrays), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenVertexArrays""' of type '""PFNGLGENVERTEXARRAYSPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsVertexArray_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsVertexArray), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsVertexArray_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsVertexArray), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsVertexArray""' of type '""PFNGLISVERTEXARRAYPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexBlendARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexBlendARB), SWIGTYPE_p_f_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexBlendARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexBlendARB), SWIGTYPE_p_f_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexBlendARB""' of type '""PFNGLVERTEXBLENDARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWeightPointerARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWeightPointerARB), SWIGTYPE_p_f_int_unsigned_int_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWeightPointerARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWeightPointerARB), SWIGTYPE_p_f_int_unsigned_int_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWeightPointerARB""' of type '""PFNGLWEIGHTPOINTERARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWeightbvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWeightbvARB), SWIGTYPE_p_f_int_p_signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWeightbvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWeightbvARB), SWIGTYPE_p_f_int_p_signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWeightbvARB""' of type '""PFNGLWEIGHTBVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWeightdvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWeightdvARB), SWIGTYPE_p_f_int_p_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWeightdvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWeightdvARB), SWIGTYPE_p_f_int_p_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWeightdvARB""' of type '""PFNGLWEIGHTDVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWeightfvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWeightfvARB), SWIGTYPE_p_f_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWeightfvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWeightfvARB), SWIGTYPE_p_f_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWeightfvARB""' of type '""PFNGLWEIGHTFVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWeightivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWeightivARB), SWIGTYPE_p_f_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWeightivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWeightivARB), SWIGTYPE_p_f_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWeightivARB""' of type '""PFNGLWEIGHTIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWeightsvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWeightsvARB), SWIGTYPE_p_f_int_p_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWeightsvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWeightsvARB), SWIGTYPE_p_f_int_p_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWeightsvARB""' of type '""PFNGLWEIGHTSVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWeightubvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWeightubvARB), SWIGTYPE_p_f_int_p_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWeightubvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWeightubvARB), SWIGTYPE_p_f_int_p_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWeightubvARB""' of type '""PFNGLWEIGHTUBVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWeightuivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWeightuivARB), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWeightuivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWeightuivARB), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWeightuivARB""' of type '""PFNGLWEIGHTUIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWeightusvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWeightusvARB), SWIGTYPE_p_f_int_p_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWeightusvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWeightusvARB), SWIGTYPE_p_f_int_p_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWeightusvARB""' of type '""PFNGLWEIGHTUSVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindBufferARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindBufferARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindBufferARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindBufferARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindBufferARB""' of type '""PFNGLBINDBUFFERARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBufferDataARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBufferDataARB), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_p_q_const__void_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBufferDataARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBufferDataARB), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_p_q_const__void_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBufferDataARB""' of type '""PFNGLBUFFERDATAARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBufferSubDataARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBufferSubDataARB), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBufferSubDataARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBufferSubDataARB), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBufferSubDataARB""' of type '""PFNGLBUFFERSUBDATAARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteBuffersARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteBuffersARB), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteBuffersARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteBuffersARB), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteBuffersARB""' of type '""PFNGLDELETEBUFFERSARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenBuffersARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenBuffersARB), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenBuffersARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenBuffersARB), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenBuffersARB""' of type '""PFNGLGENBUFFERSARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetBufferParameterivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetBufferParameterivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetBufferParameterivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetBufferParameterivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetBufferParameterivARB""' of type '""PFNGLGETBUFFERPARAMETERIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetBufferPointervARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetBufferPointervARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetBufferPointervARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetBufferPointervARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetBufferPointervARB""' of type '""PFNGLGETBUFFERPOINTERVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetBufferSubDataARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetBufferSubDataARB), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetBufferSubDataARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetBufferSubDataARB), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetBufferSubDataARB""' of type '""PFNGLGETBUFFERSUBDATAARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsBufferARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsBufferARB), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsBufferARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsBufferARB), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsBufferARB""' of type '""PFNGLISBUFFERARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMapBufferARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMapBufferARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__p_void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMapBufferARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMapBufferARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__p_void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMapBufferARB""' of type '""PFNGLMAPBUFFERARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUnmapBufferARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUnmapBufferARB), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUnmapBufferARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUnmapBufferARB), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUnmapBufferARB""' of type '""PFNGLUNMAPBUFFERARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindProgramARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindProgramARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindProgramARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindProgramARB), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindProgramARB""' of type '""PFNGLBINDPROGRAMARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteProgramsARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteProgramsARB), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteProgramsARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteProgramsARB), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteProgramsARB""' of type '""PFNGLDELETEPROGRAMSARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDisableVertexAttribArrayARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDisableVertexAttribArrayARB), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDisableVertexAttribArrayARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDisableVertexAttribArrayARB), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDisableVertexAttribArrayARB""' of type '""PFNGLDISABLEVERTEXATTRIBARRAYARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEnableVertexAttribArrayARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEnableVertexAttribArrayARB), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEnableVertexAttribArrayARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEnableVertexAttribArrayARB), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEnableVertexAttribArrayARB""' of type '""PFNGLENABLEVERTEXATTRIBARRAYARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenProgramsARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenProgramsARB), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenProgramsARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenProgramsARB), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenProgramsARB""' of type '""PFNGLGENPROGRAMSARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramEnvParameterdvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramEnvParameterdvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramEnvParameterdvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramEnvParameterdvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramEnvParameterdvARB""' of type '""PFNGLGETPROGRAMENVPARAMETERDVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramEnvParameterfvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramEnvParameterfvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramEnvParameterfvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramEnvParameterfvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramEnvParameterfvARB""' of type '""PFNGLGETPROGRAMENVPARAMETERFVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramLocalParameterdvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramLocalParameterdvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramLocalParameterdvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramLocalParameterdvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramLocalParameterdvARB""' of type '""PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramLocalParameterfvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramLocalParameterfvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramLocalParameterfvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramLocalParameterfvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramLocalParameterfvARB""' of type '""PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramStringARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramStringARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramStringARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramStringARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramStringARB""' of type '""PFNGLGETPROGRAMSTRINGARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramivARB""' of type '""PFNGLGETPROGRAMIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribPointervARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribPointervARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribPointervARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribPointervARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribPointervARB""' of type '""PFNGLGETVERTEXATTRIBPOINTERVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribdvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribdvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribdvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribdvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribdvARB""' of type '""PFNGLGETVERTEXATTRIBDVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribfvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribfvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribfvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribfvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribfvARB""' of type '""PFNGLGETVERTEXATTRIBFVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribivARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribivARB""' of type '""PFNGLGETVERTEXATTRIBIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsProgramARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsProgramARB), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsProgramARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsProgramARB), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsProgramARB""' of type '""PFNGLISPROGRAMARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameter4dARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramEnvParameter4dARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameter4dARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramEnvParameter4dARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramEnvParameter4dARB""' of type '""PFNGLPROGRAMENVPARAMETER4DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameter4dvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramEnvParameter4dvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameter4dvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramEnvParameter4dvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramEnvParameter4dvARB""' of type '""PFNGLPROGRAMENVPARAMETER4DVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameter4fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramEnvParameter4fARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameter4fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramEnvParameter4fARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramEnvParameter4fARB""' of type '""PFNGLPROGRAMENVPARAMETER4FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameter4fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramEnvParameter4fvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameter4fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramEnvParameter4fvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramEnvParameter4fvARB""' of type '""PFNGLPROGRAMENVPARAMETER4FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameter4dARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramLocalParameter4dARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameter4dARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramLocalParameter4dARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramLocalParameter4dARB""' of type '""PFNGLPROGRAMLOCALPARAMETER4DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameter4dvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramLocalParameter4dvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameter4dvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramLocalParameter4dvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramLocalParameter4dvARB""' of type '""PFNGLPROGRAMLOCALPARAMETER4DVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameter4fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramLocalParameter4fARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameter4fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramLocalParameter4fARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramLocalParameter4fARB""' of type '""PFNGLPROGRAMLOCALPARAMETER4FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameter4fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramLocalParameter4fvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameter4fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramLocalParameter4fvARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramLocalParameter4fvARB""' of type '""PFNGLPROGRAMLOCALPARAMETER4FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramStringARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramStringARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramStringARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramStringARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramStringARB""' of type '""PFNGLPROGRAMSTRINGARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1dARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1dARB), SWIGTYPE_p_f_unsigned_int_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1dARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1dARB), SWIGTYPE_p_f_unsigned_int_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1dARB""' of type '""PFNGLVERTEXATTRIB1DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1dvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1dvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1dvARB""' of type '""PFNGLVERTEXATTRIB1DVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1fARB), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1fARB), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1fARB""' of type '""PFNGLVERTEXATTRIB1FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1fvARB""' of type '""PFNGLVERTEXATTRIB1FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1sARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1sARB), SWIGTYPE_p_f_unsigned_int_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1sARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1sARB), SWIGTYPE_p_f_unsigned_int_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1sARB""' of type '""PFNGLVERTEXATTRIB1SARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1svARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1svARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1svARB""' of type '""PFNGLVERTEXATTRIB1SVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2dARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2dARB), SWIGTYPE_p_f_unsigned_int_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2dARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2dARB), SWIGTYPE_p_f_unsigned_int_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2dARB""' of type '""PFNGLVERTEXATTRIB2DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2dvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2dvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2dvARB""' of type '""PFNGLVERTEXATTRIB2DVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2fARB), SWIGTYPE_p_f_unsigned_int_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2fARB), SWIGTYPE_p_f_unsigned_int_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2fARB""' of type '""PFNGLVERTEXATTRIB2FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2fvARB""' of type '""PFNGLVERTEXATTRIB2FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2sARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2sARB), SWIGTYPE_p_f_unsigned_int_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2sARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2sARB), SWIGTYPE_p_f_unsigned_int_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2sARB""' of type '""PFNGLVERTEXATTRIB2SARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2svARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2svARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2svARB""' of type '""PFNGLVERTEXATTRIB2SVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3dARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3dARB), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3dARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3dARB), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3dARB""' of type '""PFNGLVERTEXATTRIB3DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3dvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3dvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3dvARB""' of type '""PFNGLVERTEXATTRIB3DVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3fARB), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3fARB), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3fARB""' of type '""PFNGLVERTEXATTRIB3FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3fvARB""' of type '""PFNGLVERTEXATTRIB3FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3sARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3sARB), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3sARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3sARB), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3sARB""' of type '""PFNGLVERTEXATTRIB3SARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3svARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3svARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3svARB""' of type '""PFNGLVERTEXATTRIB3SVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NbvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4NbvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NbvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4NbvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4NbvARB""' of type '""PFNGLVERTEXATTRIB4NBVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4NivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4NivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4NivARB""' of type '""PFNGLVERTEXATTRIB4NIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NsvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4NsvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NsvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4NsvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4NsvARB""' of type '""PFNGLVERTEXATTRIB4NSVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NubARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4NubARB), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NubARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4NubARB), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4NubARB""' of type '""PFNGLVERTEXATTRIB4NUBARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NubvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4NubvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NubvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4NubvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4NubvARB""' of type '""PFNGLVERTEXATTRIB4NUBVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NuivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4NuivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NuivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4NuivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4NuivARB""' of type '""PFNGLVERTEXATTRIB4NUIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NusvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4NusvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4NusvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4NusvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4NusvARB""' of type '""PFNGLVERTEXATTRIB4NUSVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4bvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4bvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4bvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4bvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4bvARB""' of type '""PFNGLVERTEXATTRIB4BVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4dARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4dARB), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4dARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4dARB), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4dARB""' of type '""PFNGLVERTEXATTRIB4DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4dvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4dvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4dvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4dvARB""' of type '""PFNGLVERTEXATTRIB4DVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4fARB), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4fARB), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4fARB""' of type '""PFNGLVERTEXATTRIB4FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4fvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4fvARB""' of type '""PFNGLVERTEXATTRIB4FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4ivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4ivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4ivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4ivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4ivARB""' of type '""PFNGLVERTEXATTRIB4IVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4sARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4sARB), SWIGTYPE_p_f_unsigned_int_short_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4sARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4sARB), SWIGTYPE_p_f_unsigned_int_short_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4sARB""' of type '""PFNGLVERTEXATTRIB4SARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4svARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4svARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4svARB), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4svARB""' of type '""PFNGLVERTEXATTRIB4SVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4ubvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4ubvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4ubvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4ubvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4ubvARB""' of type '""PFNGLVERTEXATTRIB4UBVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4uivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4uivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4uivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4uivARB), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4uivARB""' of type '""PFNGLVERTEXATTRIB4UIVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4usvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4usvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4usvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4usvARB), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4usvARB""' of type '""PFNGLVERTEXATTRIB4USVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribPointerARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribPointerARB), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_char_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribPointerARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribPointerARB), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_char_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribPointerARB""' of type '""PFNGLVERTEXATTRIBPOINTERARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindAttribLocationARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindAttribLocationARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindAttribLocationARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindAttribLocationARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindAttribLocationARB""' of type '""PFNGLBINDATTRIBLOCATIONARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetActiveAttribARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetActiveAttribARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetActiveAttribARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetActiveAttribARB), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetActiveAttribARB""' of type '""PFNGLGETACTIVEATTRIBARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetAttribLocationARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetAttribLocationARB), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetAttribLocationARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetAttribLocationARB), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetAttribLocationARB""' of type '""PFNGLGETATTRIBLOCATIONARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2dARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2dARB), SWIGTYPE_p_f_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2dARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2dARB), SWIGTYPE_p_f_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2dARB""' of type '""PFNGLWINDOWPOS2DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2dvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2dvARB), SWIGTYPE_p_f_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2dvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2dvARB), SWIGTYPE_p_f_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2dvARB""' of type '""PFNGLWINDOWPOS2DVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2fARB), SWIGTYPE_p_f_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2fARB), SWIGTYPE_p_f_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2fARB""' of type '""PFNGLWINDOWPOS2FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2fvARB), SWIGTYPE_p_f_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2fvARB), SWIGTYPE_p_f_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2fvARB""' of type '""PFNGLWINDOWPOS2FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2iARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2iARB), SWIGTYPE_p_f_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2iARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2iARB), SWIGTYPE_p_f_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2iARB""' of type '""PFNGLWINDOWPOS2IARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2ivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2ivARB), SWIGTYPE_p_f_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2ivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2ivARB), SWIGTYPE_p_f_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2ivARB""' of type '""PFNGLWINDOWPOS2IVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2sARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2sARB), SWIGTYPE_p_f_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2sARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2sARB), SWIGTYPE_p_f_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2sARB""' of type '""PFNGLWINDOWPOS2SARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2svARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2svARB), SWIGTYPE_p_f_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2svARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2svARB), SWIGTYPE_p_f_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2svARB""' of type '""PFNGLWINDOWPOS2SVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3dARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3dARB), SWIGTYPE_p_f_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3dARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3dARB), SWIGTYPE_p_f_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3dARB""' of type '""PFNGLWINDOWPOS3DARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3dvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3dvARB), SWIGTYPE_p_f_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3dvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3dvARB), SWIGTYPE_p_f_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3dvARB""' of type '""PFNGLWINDOWPOS3DVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3fARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3fARB), SWIGTYPE_p_f_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3fARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3fARB), SWIGTYPE_p_f_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3fARB""' of type '""PFNGLWINDOWPOS3FARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3fvARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3fvARB), SWIGTYPE_p_f_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3fvARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3fvARB), SWIGTYPE_p_f_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3fvARB""' of type '""PFNGLWINDOWPOS3FVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3iARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3iARB), SWIGTYPE_p_f_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3iARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3iARB), SWIGTYPE_p_f_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3iARB""' of type '""PFNGLWINDOWPOS3IARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3ivARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3ivARB), SWIGTYPE_p_f_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3ivARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3ivARB), SWIGTYPE_p_f_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3ivARB""' of type '""PFNGLWINDOWPOS3IVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3sARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3sARB), SWIGTYPE_p_f_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3sARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3sARB), SWIGTYPE_p_f_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3sARB""' of type '""PFNGLWINDOWPOS3SARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3svARB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3svARB), SWIGTYPE_p_f_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3svARB_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3svARB), SWIGTYPE_p_f_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3svARB""' of type '""PFNGLWINDOWPOS3SVARBPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawBuffersATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawBuffersATI), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawBuffersATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawBuffersATI), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawBuffersATI""' of type '""PFNGLDRAWBUFFERSATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawElementArrayATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawElementArrayATI), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawElementArrayATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawElementArrayATI), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawElementArrayATI""' of type '""PFNGLDRAWELEMENTARRAYATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawRangeElementArrayATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawRangeElementArrayATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawRangeElementArrayATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawRangeElementArrayATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawRangeElementArrayATI""' of type '""PFNGLDRAWRANGEELEMENTARRAYATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewElementPointerATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewElementPointerATI), SWIGTYPE_p_f_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewElementPointerATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewElementPointerATI), SWIGTYPE_p_f_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewElementPointerATI""' of type '""PFNGLELEMENTPOINTERATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTexBumpParameterfvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTexBumpParameterfvATI), SWIGTYPE_p_f_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTexBumpParameterfvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTexBumpParameterfvATI), SWIGTYPE_p_f_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTexBumpParameterfvATI""' of type '""PFNGLGETTEXBUMPPARAMETERFVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTexBumpParameterivATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTexBumpParameterivATI), SWIGTYPE_p_f_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTexBumpParameterivATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTexBumpParameterivATI), SWIGTYPE_p_f_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTexBumpParameterivATI""' of type '""PFNGLGETTEXBUMPPARAMETERIVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexBumpParameterfvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexBumpParameterfvATI), SWIGTYPE_p_f_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexBumpParameterfvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexBumpParameterfvATI), SWIGTYPE_p_f_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexBumpParameterfvATI""' of type '""PFNGLTEXBUMPPARAMETERFVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexBumpParameterivATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexBumpParameterivATI), SWIGTYPE_p_f_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexBumpParameterivATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexBumpParameterivATI), SWIGTYPE_p_f_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexBumpParameterivATI""' of type '""PFNGLTEXBUMPPARAMETERIVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewAlphaFragmentOp1ATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewAlphaFragmentOp1ATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewAlphaFragmentOp1ATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewAlphaFragmentOp1ATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewAlphaFragmentOp1ATI""' of type '""PFNGLALPHAFRAGMENTOP1ATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewAlphaFragmentOp2ATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewAlphaFragmentOp2ATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewAlphaFragmentOp2ATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewAlphaFragmentOp2ATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewAlphaFragmentOp2ATI""' of type '""PFNGLALPHAFRAGMENTOP2ATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewAlphaFragmentOp3ATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewAlphaFragmentOp3ATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewAlphaFragmentOp3ATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewAlphaFragmentOp3ATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewAlphaFragmentOp3ATI""' of type '""PFNGLALPHAFRAGMENTOP3ATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBeginFragmentShaderATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBeginFragmentShaderATI), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBeginFragmentShaderATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBeginFragmentShaderATI), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBeginFragmentShaderATI""' of type '""PFNGLBEGINFRAGMENTSHADERATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindFragmentShaderATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindFragmentShaderATI), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindFragmentShaderATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindFragmentShaderATI), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindFragmentShaderATI""' of type '""PFNGLBINDFRAGMENTSHADERATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorFragmentOp1ATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorFragmentOp1ATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorFragmentOp1ATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorFragmentOp1ATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorFragmentOp1ATI""' of type '""PFNGLCOLORFRAGMENTOP1ATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorFragmentOp2ATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorFragmentOp2ATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorFragmentOp2ATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorFragmentOp2ATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorFragmentOp2ATI""' of type '""PFNGLCOLORFRAGMENTOP2ATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorFragmentOp3ATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorFragmentOp3ATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorFragmentOp3ATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorFragmentOp3ATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorFragmentOp3ATI""' of type '""PFNGLCOLORFRAGMENTOP3ATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteFragmentShaderATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteFragmentShaderATI), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteFragmentShaderATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteFragmentShaderATI), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteFragmentShaderATI""' of type '""PFNGLDELETEFRAGMENTSHADERATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEndFragmentShaderATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEndFragmentShaderATI), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEndFragmentShaderATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEndFragmentShaderATI), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEndFragmentShaderATI""' of type '""PFNGLENDFRAGMENTSHADERATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenFragmentShadersATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenFragmentShadersATI), SWIGTYPE_p_f_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenFragmentShadersATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenFragmentShadersATI), SWIGTYPE_p_f_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenFragmentShadersATI""' of type '""PFNGLGENFRAGMENTSHADERSATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPassTexCoordATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPassTexCoordATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPassTexCoordATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPassTexCoordATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPassTexCoordATI""' of type '""PFNGLPASSTEXCOORDATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSampleMapATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSampleMapATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSampleMapATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSampleMapATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSampleMapATI""' of type '""PFNGLSAMPLEMAPATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSetFragmentShaderConstantATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSetFragmentShaderConstantATI), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSetFragmentShaderConstantATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSetFragmentShaderConstantATI), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSetFragmentShaderConstantATI""' of type '""PFNGLSETFRAGMENTSHADERCONSTANTATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMapObjectBufferATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMapObjectBufferATI), SWIGTYPE_p_f_unsigned_int__p_void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMapObjectBufferATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMapObjectBufferATI), SWIGTYPE_p_f_unsigned_int__p_void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMapObjectBufferATI""' of type '""PFNGLMAPOBJECTBUFFERATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUnmapObjectBufferATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUnmapObjectBufferATI), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUnmapObjectBufferATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUnmapObjectBufferATI), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUnmapObjectBufferATI""' of type '""PFNGLUNMAPOBJECTBUFFERATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glPNTrianglewesfATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glPNTrianglewesfATI), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glPNTrianglewesfATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glPNTrianglewesfATI), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glPNTrianglewesfATI""' of type '""PFNGLPNTRIANGLESFATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glPNTrianglewesiATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glPNTrianglewesiATI), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glPNTrianglewesiATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glPNTrianglewesiATI), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glPNTrianglewesiATI""' of type '""PFNGLPNTRIANGLESIATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewStencilFuncSeparateATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewStencilFuncSeparateATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewStencilFuncSeparateATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewStencilFuncSeparateATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewStencilFuncSeparateATI""' of type '""PFNGLSTENCILFUNCSEPARATEATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewStencilOpSeparateATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewStencilOpSeparateATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewStencilOpSeparateATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewStencilOpSeparateATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewStencilOpSeparateATI""' of type '""PFNGLSTENCILOPSEPARATEATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewArrayObjectATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewArrayObjectATI), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewArrayObjectATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewArrayObjectATI), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewArrayObjectATI""' of type '""PFNGLARRAYOBJECTATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFreeObjectBufferATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFreeObjectBufferATI), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFreeObjectBufferATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFreeObjectBufferATI), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFreeObjectBufferATI""' of type '""PFNGLFREEOBJECTBUFFERATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetArrayObjectfvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetArrayObjectfvATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetArrayObjectfvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetArrayObjectfvATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetArrayObjectfvATI""' of type '""PFNGLGETARRAYOBJECTFVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetArrayObjectivATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetArrayObjectivATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetArrayObjectivATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetArrayObjectivATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetArrayObjectivATI""' of type '""PFNGLGETARRAYOBJECTIVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetObjectBufferfvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetObjectBufferfvATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetObjectBufferfvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetObjectBufferfvATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetObjectBufferfvATI""' of type '""PFNGLGETOBJECTBUFFERFVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetObjectBufferivATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetObjectBufferivATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetObjectBufferivATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetObjectBufferivATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetObjectBufferivATI""' of type '""PFNGLGETOBJECTBUFFERIVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVariantArrayObjectfvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVariantArrayObjectfvATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVariantArrayObjectfvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVariantArrayObjectfvATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVariantArrayObjectfvATI""' of type '""PFNGLGETVARIANTARRAYOBJECTFVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVariantArrayObjectivATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVariantArrayObjectivATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVariantArrayObjectivATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVariantArrayObjectivATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVariantArrayObjectivATI""' of type '""PFNGLGETVARIANTARRAYOBJECTIVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsObjectBufferATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsObjectBufferATI), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsObjectBufferATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsObjectBufferATI), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsObjectBufferATI""' of type '""PFNGLISOBJECTBUFFERATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNewObjectBufferATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNewObjectBufferATI), SWIGTYPE_p_f_int_p_q_const__void_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNewObjectBufferATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNewObjectBufferATI), SWIGTYPE_p_f_int_p_q_const__void_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNewObjectBufferATI""' of type '""PFNGLNEWOBJECTBUFFERATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUpdateObjectBufferATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUpdateObjectBufferATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__void_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUpdateObjectBufferATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUpdateObjectBufferATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__void_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUpdateObjectBufferATI""' of type '""PFNGLUPDATEOBJECTBUFFERATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVariantArrayObjectATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVariantArrayObjectATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVariantArrayObjectATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVariantArrayObjectATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVariantArrayObjectATI""' of type '""PFNGLVARIANTARRAYOBJECTATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribArrayObjectfvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribArrayObjectfvATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribArrayObjectfvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribArrayObjectfvATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribArrayObjectfvATI""' of type '""PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribArrayObjectivATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribArrayObjectivATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribArrayObjectivATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribArrayObjectivATI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribArrayObjectivATI""' of type '""PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribArrayObjectATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribArrayObjectATI), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_char_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribArrayObjectATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribArrayObjectATI), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_char_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribArrayObjectATI""' of type '""PFNGLVERTEXATTRIBARRAYOBJECTATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClientActiveVertexStreamATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClientActiveVertexStreamATI), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClientActiveVertexStreamATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClientActiveVertexStreamATI), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClientActiveVertexStreamATI""' of type '""PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3bATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormalStream3bATI), SWIGTYPE_p_f_unsigned_int_signed_char_signed_char_signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3bATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormalStream3bATI), SWIGTYPE_p_f_unsigned_int_signed_char_signed_char_signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormalStream3bATI""' of type '""PFNGLNORMALSTREAM3BATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3bvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormalStream3bvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3bvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormalStream3bvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormalStream3bvATI""' of type '""PFNGLNORMALSTREAM3BVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3dATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormalStream3dATI), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3dATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormalStream3dATI), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormalStream3dATI""' of type '""PFNGLNORMALSTREAM3DATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3dvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormalStream3dvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3dvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormalStream3dvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormalStream3dvATI""' of type '""PFNGLNORMALSTREAM3DVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3fATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormalStream3fATI), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3fATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormalStream3fATI), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormalStream3fATI""' of type '""PFNGLNORMALSTREAM3FATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3fvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormalStream3fvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3fvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormalStream3fvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormalStream3fvATI""' of type '""PFNGLNORMALSTREAM3FVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3iATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormalStream3iATI), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3iATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormalStream3iATI), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormalStream3iATI""' of type '""PFNGLNORMALSTREAM3IATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3ivATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormalStream3ivATI), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3ivATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormalStream3ivATI), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormalStream3ivATI""' of type '""PFNGLNORMALSTREAM3IVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3sATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormalStream3sATI), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3sATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormalStream3sATI), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormalStream3sATI""' of type '""PFNGLNORMALSTREAM3SATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3svATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormalStream3svATI), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormalStream3svATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormalStream3svATI), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormalStream3svATI""' of type '""PFNGLNORMALSTREAM3SVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexBlendEnvfATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexBlendEnvfATI), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexBlendEnvfATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexBlendEnvfATI), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexBlendEnvfATI""' of type '""PFNGLVERTEXBLENDENVFATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexBlendEnviATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexBlendEnviATI), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexBlendEnviATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexBlendEnviATI), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexBlendEnviATI""' of type '""PFNGLVERTEXBLENDENVIATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2dATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream2dATI), SWIGTYPE_p_f_unsigned_int_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2dATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream2dATI), SWIGTYPE_p_f_unsigned_int_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream2dATI""' of type '""PFNGLVERTEXSTREAM2DATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2dvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream2dvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2dvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream2dvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream2dvATI""' of type '""PFNGLVERTEXSTREAM2DVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2fATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream2fATI), SWIGTYPE_p_f_unsigned_int_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2fATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream2fATI), SWIGTYPE_p_f_unsigned_int_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream2fATI""' of type '""PFNGLVERTEXSTREAM2FATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2fvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream2fvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2fvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream2fvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream2fvATI""' of type '""PFNGLVERTEXSTREAM2FVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2iATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream2iATI), SWIGTYPE_p_f_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2iATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream2iATI), SWIGTYPE_p_f_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream2iATI""' of type '""PFNGLVERTEXSTREAM2IATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2ivATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream2ivATI), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2ivATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream2ivATI), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream2ivATI""' of type '""PFNGLVERTEXSTREAM2IVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2sATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream2sATI), SWIGTYPE_p_f_unsigned_int_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2sATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream2sATI), SWIGTYPE_p_f_unsigned_int_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream2sATI""' of type '""PFNGLVERTEXSTREAM2SATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2svATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream2svATI), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream2svATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream2svATI), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream2svATI""' of type '""PFNGLVERTEXSTREAM2SVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3dATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream3dATI), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3dATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream3dATI), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream3dATI""' of type '""PFNGLVERTEXSTREAM3DATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3dvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream3dvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3dvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream3dvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream3dvATI""' of type '""PFNGLVERTEXSTREAM3DVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3fATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream3fATI), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3fATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream3fATI), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream3fATI""' of type '""PFNGLVERTEXSTREAM3FATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3fvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream3fvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3fvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream3fvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream3fvATI""' of type '""PFNGLVERTEXSTREAM3FVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3iATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream3iATI), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3iATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream3iATI), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream3iATI""' of type '""PFNGLVERTEXSTREAM3IATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3ivATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream3ivATI), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3ivATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream3ivATI), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream3ivATI""' of type '""PFNGLVERTEXSTREAM3IVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3sATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream3sATI), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3sATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream3sATI), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream3sATI""' of type '""PFNGLVERTEXSTREAM3SATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3svATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream3svATI), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream3svATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream3svATI), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream3svATI""' of type '""PFNGLVERTEXSTREAM3SVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4dATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream4dATI), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4dATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream4dATI), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream4dATI""' of type '""PFNGLVERTEXSTREAM4DATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4dvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream4dvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4dvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream4dvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream4dvATI""' of type '""PFNGLVERTEXSTREAM4DVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4fATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream4fATI), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4fATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream4fATI), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream4fATI""' of type '""PFNGLVERTEXSTREAM4FATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4fvATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream4fvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4fvATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream4fvATI), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream4fvATI""' of type '""PFNGLVERTEXSTREAM4FVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4iATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream4iATI), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4iATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream4iATI), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream4iATI""' of type '""PFNGLVERTEXSTREAM4IATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4ivATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream4ivATI), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4ivATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream4ivATI), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream4ivATI""' of type '""PFNGLVERTEXSTREAM4IVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4sATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream4sATI), SWIGTYPE_p_f_unsigned_int_short_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4sATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream4sATI), SWIGTYPE_p_f_unsigned_int_short_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream4sATI""' of type '""PFNGLVERTEXSTREAM4SATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4svATI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexStream4svATI), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexStream4svATI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexStream4svATI), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexStream4svATI""' of type '""PFNGLVERTEXSTREAM4SVATIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetUniformBufferSizeEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetUniformBufferSizeEXT), SWIGTYPE_p_f_unsigned_int_int__int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetUniformBufferSizeEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetUniformBufferSizeEXT), SWIGTYPE_p_f_unsigned_int_int__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetUniformBufferSizeEXT""' of type '""PFNGLGETUNIFORMBUFFERSIZEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetUniformOffsetEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetUniformOffsetEXT), SWIGTYPE_p_f_unsigned_int_int__ptrdiff_t);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetUniformOffsetEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetUniformOffsetEXT), SWIGTYPE_p_f_unsigned_int_int__ptrdiff_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetUniformOffsetEXT""' of type '""PFNGLGETUNIFORMOFFSETEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniformBufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniformBufferEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniformBufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniformBufferEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniformBufferEXT""' of type '""PFNGLUNIFORMBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBlendColorEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBlendColorEXT), SWIGTYPE_p_f_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBlendColorEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBlendColorEXT), SWIGTYPE_p_f_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBlendColorEXT""' of type '""PFNGLBLENDCOLOREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBlendEquationSeparateEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBlendEquationSeparateEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBlendEquationSeparateEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBlendEquationSeparateEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBlendEquationSeparateEXT""' of type '""PFNGLBLENDEQUATIONSEPARATEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBlendFuncSeparateEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBlendFuncSeparateEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBlendFuncSeparateEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBlendFuncSeparateEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBlendFuncSeparateEXT""' of type '""PFNGLBLENDFUNCSEPARATEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBlendEquationEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBlendEquationEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBlendEquationEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBlendEquationEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBlendEquationEXT""' of type '""PFNGLBLENDEQUATIONEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorSubTableEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorSubTableEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorSubTableEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorSubTableEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorSubTableEXT""' of type '""PFNGLCOLORSUBTABLEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyColorSubTableEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyColorSubTableEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyColorSubTableEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyColorSubTableEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyColorSubTableEXT""' of type '""PFNGLCOPYCOLORSUBTABLEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewLockArraysEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewLockArraysEXT), SWIGTYPE_p_f_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewLockArraysEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewLockArraysEXT), SWIGTYPE_p_f_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewLockArraysEXT""' of type '""PFNGLLOCKARRAYSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUnlockArraysEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUnlockArraysEXT), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUnlockArraysEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUnlockArraysEXT), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUnlockArraysEXT""' of type '""PFNGLUNLOCKARRAYSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewConvolutionFilter1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewConvolutionFilter1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewConvolutionFilter1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewConvolutionFilter1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewConvolutionFilter1DEXT""' of type '""PFNGLCONVOLUTIONFILTER1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewConvolutionFilter2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewConvolutionFilter2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewConvolutionFilter2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewConvolutionFilter2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewConvolutionFilter2DEXT""' of type '""PFNGLCONVOLUTIONFILTER2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameterfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewConvolutionParameterfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameterfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewConvolutionParameterfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewConvolutionParameterfEXT""' of type '""PFNGLCONVOLUTIONPARAMETERFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewConvolutionParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewConvolutionParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewConvolutionParameterfvEXT""' of type '""PFNGLCONVOLUTIONPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameteriEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewConvolutionParameteriEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameteriEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewConvolutionParameteriEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewConvolutionParameteriEXT""' of type '""PFNGLCONVOLUTIONPARAMETERIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewConvolutionParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewConvolutionParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewConvolutionParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewConvolutionParameterivEXT""' of type '""PFNGLCONVOLUTIONPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyConvolutionFilter1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyConvolutionFilter1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyConvolutionFilter1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyConvolutionFilter1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyConvolutionFilter1DEXT""' of type '""PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyConvolutionFilter2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyConvolutionFilter2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyConvolutionFilter2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyConvolutionFilter2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyConvolutionFilter2DEXT""' of type '""PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetConvolutionFilterEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetConvolutionFilterEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetConvolutionFilterEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetConvolutionFilterEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetConvolutionFilterEXT""' of type '""PFNGLGETCONVOLUTIONFILTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetConvolutionParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetConvolutionParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetConvolutionParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetConvolutionParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetConvolutionParameterfvEXT""' of type '""PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetConvolutionParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetConvolutionParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetConvolutionParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetConvolutionParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetConvolutionParameterivEXT""' of type '""PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetSeparableFilterEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetSeparableFilterEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void_p_void_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetSeparableFilterEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetSeparableFilterEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void_p_void_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetSeparableFilterEXT""' of type '""PFNGLGETSEPARABLEFILTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSeparableFilter2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSeparableFilter2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSeparableFilter2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSeparableFilter2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSeparableFilter2DEXT""' of type '""PFNGLSEPARABLEFILTER2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBinormalPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBinormalPointerEXT), SWIGTYPE_p_f_unsigned_int_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBinormalPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBinormalPointerEXT), SWIGTYPE_p_f_unsigned_int_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBinormalPointerEXT""' of type '""PFNGLBINORMALPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTangentPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTangentPointerEXT), SWIGTYPE_p_f_unsigned_int_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTangentPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTangentPointerEXT), SWIGTYPE_p_f_unsigned_int_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTangentPointerEXT""' of type '""PFNGLTANGENTPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyTexImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyTexImage1DEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyTexImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyTexImage1DEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyTexImage1DEXT""' of type '""PFNGLCOPYTEXIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyTexImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyTexImage2DEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyTexImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyTexImage2DEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyTexImage2DEXT""' of type '""PFNGLCOPYTEXIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyTexSubImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyTexSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyTexSubImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyTexSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyTexSubImage1DEXT""' of type '""PFNGLCOPYTEXSUBIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyTexSubImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyTexSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyTexSubImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyTexSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyTexSubImage2DEXT""' of type '""PFNGLCOPYTEXSUBIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyTexSubImage3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyTexSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyTexSubImage3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyTexSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyTexSubImage3DEXT""' of type '""PFNGLCOPYTEXSUBIMAGE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCullParameterdvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCullParameterdvEXT), SWIGTYPE_p_f_unsigned_int_p_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCullParameterdvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCullParameterdvEXT), SWIGTYPE_p_f_unsigned_int_p_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCullParameterdvEXT""' of type '""PFNGLCULLPARAMETERDVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCullParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCullParameterfvEXT), SWIGTYPE_p_f_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCullParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCullParameterfvEXT), SWIGTYPE_p_f_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCullParameterfvEXT""' of type '""PFNGLCULLPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDepthBoundsEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDepthBoundsEXT), SWIGTYPE_p_f_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDepthBoundsEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDepthBoundsEXT), SWIGTYPE_p_f_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDepthBoundsEXT""' of type '""PFNGLDEPTHBOUNDSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindMultiTextureEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindMultiTextureEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindMultiTextureEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindMultiTextureEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindMultiTextureEXT""' of type '""PFNGLBINDMULTITEXTUREEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCheckNamedFramebufferStatusEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCheckNamedFramebufferStatusEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCheckNamedFramebufferStatusEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCheckNamedFramebufferStatusEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCheckNamedFramebufferStatusEXT""' of type '""PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClientAttribDefaultEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClientAttribDefaultEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClientAttribDefaultEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClientAttribDefaultEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClientAttribDefaultEXT""' of type '""PFNGLCLIENTATTRIBDEFAULTEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedMultiTexImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedMultiTexImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedMultiTexImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedMultiTexImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedMultiTexImage1DEXT""' of type '""PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedMultiTexImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedMultiTexImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedMultiTexImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedMultiTexImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedMultiTexImage2DEXT""' of type '""PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedMultiTexImage3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedMultiTexImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedMultiTexImage3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedMultiTexImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedMultiTexImage3DEXT""' of type '""PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedMultiTexSubImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedMultiTexSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedMultiTexSubImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedMultiTexSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedMultiTexSubImage1DEXT""' of type '""PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedMultiTexSubImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedMultiTexSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedMultiTexSubImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedMultiTexSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedMultiTexSubImage2DEXT""' of type '""PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedMultiTexSubImage3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedMultiTexSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedMultiTexSubImage3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedMultiTexSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedMultiTexSubImage3DEXT""' of type '""PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTextureImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTextureImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTextureImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTextureImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTextureImage1DEXT""' of type '""PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTextureImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTextureImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTextureImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTextureImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTextureImage2DEXT""' of type '""PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTextureImage3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTextureImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTextureImage3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTextureImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTextureImage3DEXT""' of type '""PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTextureSubImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTextureSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTextureSubImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTextureSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTextureSubImage1DEXT""' of type '""PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTextureSubImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTextureSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTextureSubImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTextureSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTextureSubImage2DEXT""' of type '""PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCompressedTextureSubImage3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCompressedTextureSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCompressedTextureSubImage3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCompressedTextureSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCompressedTextureSubImage3DEXT""' of type '""PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyMultiTexImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyMultiTexImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyMultiTexImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyMultiTexImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyMultiTexImage1DEXT""' of type '""PFNGLCOPYMULTITEXIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyMultiTexImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyMultiTexImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyMultiTexImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyMultiTexImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyMultiTexImage2DEXT""' of type '""PFNGLCOPYMULTITEXIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyMultiTexSubImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyMultiTexSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyMultiTexSubImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyMultiTexSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyMultiTexSubImage1DEXT""' of type '""PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyMultiTexSubImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyMultiTexSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyMultiTexSubImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyMultiTexSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyMultiTexSubImage2DEXT""' of type '""PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyMultiTexSubImage3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyMultiTexSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyMultiTexSubImage3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyMultiTexSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyMultiTexSubImage3DEXT""' of type '""PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyTextureImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyTextureImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyTextureImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyTextureImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyTextureImage1DEXT""' of type '""PFNGLCOPYTEXTUREIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyTextureImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyTextureImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyTextureImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyTextureImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyTextureImage2DEXT""' of type '""PFNGLCOPYTEXTUREIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyTextureSubImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyTextureSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyTextureSubImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyTextureSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyTextureSubImage1DEXT""' of type '""PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyTextureSubImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyTextureSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyTextureSubImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyTextureSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyTextureSubImage2DEXT""' of type '""PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyTextureSubImage3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyTextureSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyTextureSubImage3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyTextureSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyTextureSubImage3DEXT""' of type '""PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDisableClientStateIndexedEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDisableClientStateIndexedEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDisableClientStateIndexedEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDisableClientStateIndexedEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDisableClientStateIndexedEXT""' of type '""PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEnableClientStateIndexedEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEnableClientStateIndexedEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEnableClientStateIndexedEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEnableClientStateIndexedEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEnableClientStateIndexedEXT""' of type '""PFNGLENABLECLIENTSTATEINDEXEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferDrawBufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferDrawBufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferDrawBufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferDrawBufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferDrawBufferEXT""' of type '""PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferDrawBuffersEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferDrawBuffersEXT), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferDrawBuffersEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferDrawBuffersEXT), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferDrawBuffersEXT""' of type '""PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferReadBufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferReadBufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferReadBufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferReadBufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferReadBufferEXT""' of type '""PFNGLFRAMEBUFFERREADBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenerateMultiTexMipmapEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenerateMultiTexMipmapEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenerateMultiTexMipmapEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenerateMultiTexMipmapEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenerateMultiTexMipmapEXT""' of type '""PFNGLGENERATEMULTITEXMIPMAPEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenerateTextureMipmapEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenerateTextureMipmapEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenerateTextureMipmapEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenerateTextureMipmapEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenerateTextureMipmapEXT""' of type '""PFNGLGENERATETEXTUREMIPMAPEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetCompressedMultiTexImageEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetCompressedMultiTexImageEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetCompressedMultiTexImageEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetCompressedMultiTexImageEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetCompressedMultiTexImageEXT""' of type '""PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetCompressedTextureImageEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetCompressedTextureImageEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetCompressedTextureImageEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetCompressedTextureImageEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetCompressedTextureImageEXT""' of type '""PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetDoubleIndexedvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetDoubleIndexedvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetDoubleIndexedvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetDoubleIndexedvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetDoubleIndexedvEXT""' of type '""PFNGLGETDOUBLEINDEXEDVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFloatIndexedvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFloatIndexedvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFloatIndexedvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFloatIndexedvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFloatIndexedvEXT""' of type '""PFNGLGETFLOATINDEXEDVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFramebufferParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFramebufferParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFramebufferParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFramebufferParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFramebufferParameterivEXT""' of type '""PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexEnvfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMultiTexEnvfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexEnvfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMultiTexEnvfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMultiTexEnvfvEXT""' of type '""PFNGLGETMULTITEXENVFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexEnvivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMultiTexEnvivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexEnvivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMultiTexEnvivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMultiTexEnvivEXT""' of type '""PFNGLGETMULTITEXENVIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexGendvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMultiTexGendvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexGendvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMultiTexGendvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMultiTexGendvEXT""' of type '""PFNGLGETMULTITEXGENDVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexGenfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMultiTexGenfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexGenfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMultiTexGenfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMultiTexGenfvEXT""' of type '""PFNGLGETMULTITEXGENFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexGenivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMultiTexGenivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexGenivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMultiTexGenivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMultiTexGenivEXT""' of type '""PFNGLGETMULTITEXGENIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexImageEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMultiTexImageEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexImageEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMultiTexImageEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMultiTexImageEXT""' of type '""PFNGLGETMULTITEXIMAGEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexLevelParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMultiTexLevelParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexLevelParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMultiTexLevelParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMultiTexLevelParameterfvEXT""' of type '""PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexLevelParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMultiTexLevelParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexLevelParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMultiTexLevelParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMultiTexLevelParameterivEXT""' of type '""PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexParameterIivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMultiTexParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexParameterIivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMultiTexParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMultiTexParameterIivEXT""' of type '""PFNGLGETMULTITEXPARAMETERIIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexParameterIuivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMultiTexParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexParameterIuivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMultiTexParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMultiTexParameterIuivEXT""' of type '""PFNGLGETMULTITEXPARAMETERIUIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMultiTexParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMultiTexParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMultiTexParameterfvEXT""' of type '""PFNGLGETMULTITEXPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMultiTexParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMultiTexParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMultiTexParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMultiTexParameterivEXT""' of type '""PFNGLGETMULTITEXPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetNamedBufferParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetNamedBufferParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetNamedBufferParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetNamedBufferParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetNamedBufferParameterivEXT""' of type '""PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetNamedBufferPointervEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetNamedBufferPointervEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetNamedBufferPointervEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetNamedBufferPointervEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetNamedBufferPointervEXT""' of type '""PFNGLGETNAMEDBUFFERPOINTERVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetNamedBufferSubDataEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetNamedBufferSubDataEXT), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetNamedBufferSubDataEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetNamedBufferSubDataEXT), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetNamedBufferSubDataEXT""' of type '""PFNGLGETNAMEDBUFFERSUBDATAEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetNamedFramebufferAttachmentParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetNamedFramebufferAttachmentParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetNamedFramebufferAttachmentParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetNamedFramebufferAttachmentParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetNamedFramebufferAttachmentParameterivEXT""' of type '""PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetNamedProgramLocalParameterIivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetNamedProgramLocalParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetNamedProgramLocalParameterIivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetNamedProgramLocalParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetNamedProgramLocalParameterIivEXT""' of type '""PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetNamedProgramLocalParameterIuivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetNamedProgramLocalParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetNamedProgramLocalParameterIuivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetNamedProgramLocalParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetNamedProgramLocalParameterIuivEXT""' of type '""PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetNamedProgramLocalParameterdvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetNamedProgramLocalParameterdvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetNamedProgramLocalParameterdvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetNamedProgramLocalParameterdvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetNamedProgramLocalParameterdvEXT""' of type '""PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetNamedProgramLocalParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetNamedProgramLocalParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetNamedProgramLocalParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetNamedProgramLocalParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetNamedProgramLocalParameterfvEXT""' of type '""PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetNamedProgramStringEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetNamedProgramStringEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetNamedProgramStringEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetNamedProgramStringEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetNamedProgramStringEXT""' of type '""PFNGLGETNAMEDPROGRAMSTRINGEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetNamedProgramivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetNamedProgramivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetNamedProgramivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetNamedProgramivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetNamedProgramivEXT""' of type '""PFNGLGETNAMEDPROGRAMIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetNamedRenderbufferParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetNamedRenderbufferParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetNamedRenderbufferParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetNamedRenderbufferParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetNamedRenderbufferParameterivEXT""' of type '""PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetPointerIndexedvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetPointerIndexedvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetPointerIndexedvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetPointerIndexedvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetPointerIndexedvEXT""' of type '""PFNGLGETPOINTERINDEXEDVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTextureImageEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTextureImageEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTextureImageEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTextureImageEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTextureImageEXT""' of type '""PFNGLGETTEXTUREIMAGEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTextureLevelParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTextureLevelParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTextureLevelParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTextureLevelParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTextureLevelParameterfvEXT""' of type '""PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTextureLevelParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTextureLevelParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTextureLevelParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTextureLevelParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTextureLevelParameterivEXT""' of type '""PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTextureParameterIivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTextureParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTextureParameterIivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTextureParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTextureParameterIivEXT""' of type '""PFNGLGETTEXTUREPARAMETERIIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTextureParameterIuivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTextureParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTextureParameterIuivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTextureParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTextureParameterIuivEXT""' of type '""PFNGLGETTEXTUREPARAMETERIUIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTextureParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTextureParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTextureParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTextureParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTextureParameterfvEXT""' of type '""PFNGLGETTEXTUREPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTextureParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTextureParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTextureParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTextureParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTextureParameterivEXT""' of type '""PFNGLGETTEXTUREPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMapNamedBufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMapNamedBufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__p_void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMapNamedBufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMapNamedBufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__p_void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMapNamedBufferEXT""' of type '""PFNGLMAPNAMEDBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixFrustumEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixFrustumEXT), SWIGTYPE_p_f_unsigned_int_double_double_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixFrustumEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixFrustumEXT), SWIGTYPE_p_f_unsigned_int_double_double_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixFrustumEXT""' of type '""PFNGLMATRIXFRUSTUMEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixLoadIdentityEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixLoadIdentityEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixLoadIdentityEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixLoadIdentityEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixLoadIdentityEXT""' of type '""PFNGLMATRIXLOADIDENTITYEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixLoadTransposedEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixLoadTransposedEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixLoadTransposedEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixLoadTransposedEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixLoadTransposedEXT""' of type '""PFNGLMATRIXLOADTRANSPOSEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixLoadTransposefEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixLoadTransposefEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixLoadTransposefEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixLoadTransposefEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixLoadTransposefEXT""' of type '""PFNGLMATRIXLOADTRANSPOSEFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixLoaddEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixLoaddEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixLoaddEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixLoaddEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixLoaddEXT""' of type '""PFNGLMATRIXLOADDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixLoadfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixLoadfEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixLoadfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixLoadfEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixLoadfEXT""' of type '""PFNGLMATRIXLOADFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixMultTransposedEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixMultTransposedEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixMultTransposedEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixMultTransposedEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixMultTransposedEXT""' of type '""PFNGLMATRIXMULTTRANSPOSEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixMultTransposefEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixMultTransposefEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixMultTransposefEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixMultTransposefEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixMultTransposefEXT""' of type '""PFNGLMATRIXMULTTRANSPOSEFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixMultdEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixMultdEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixMultdEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixMultdEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixMultdEXT""' of type '""PFNGLMATRIXMULTDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixMultfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixMultfEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixMultfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixMultfEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixMultfEXT""' of type '""PFNGLMATRIXMULTFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixOrthoEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixOrthoEXT), SWIGTYPE_p_f_unsigned_int_double_double_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixOrthoEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixOrthoEXT), SWIGTYPE_p_f_unsigned_int_double_double_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixOrthoEXT""' of type '""PFNGLMATRIXORTHOEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixPopEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixPopEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixPopEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixPopEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixPopEXT""' of type '""PFNGLMATRIXPOPEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixPushEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixPushEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixPushEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixPushEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixPushEXT""' of type '""PFNGLMATRIXPUSHEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixRotatedEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixRotatedEXT), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixRotatedEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixRotatedEXT), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixRotatedEXT""' of type '""PFNGLMATRIXROTATEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixRotatefEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixRotatefEXT), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixRotatefEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixRotatefEXT), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixRotatefEXT""' of type '""PFNGLMATRIXROTATEFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixScaledEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixScaledEXT), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixScaledEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixScaledEXT), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixScaledEXT""' of type '""PFNGLMATRIXSCALEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixScalefEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixScalefEXT), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixScalefEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixScalefEXT), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixScalefEXT""' of type '""PFNGLMATRIXSCALEFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixTranslatedEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixTranslatedEXT), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixTranslatedEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixTranslatedEXT), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixTranslatedEXT""' of type '""PFNGLMATRIXTRANSLATEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMatrixTranslatefEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMatrixTranslatefEXT), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMatrixTranslatefEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMatrixTranslatefEXT), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMatrixTranslatefEXT""' of type '""PFNGLMATRIXTRANSLATEFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexBufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexBufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexBufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexBufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexBufferEXT""' of type '""PFNGLMULTITEXBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoordPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoordPointerEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoordPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoordPointerEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoordPointerEXT""' of type '""PFNGLMULTITEXCOORDPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexEnvfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexEnvfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexEnvfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexEnvfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexEnvfEXT""' of type '""PFNGLMULTITEXENVFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexEnvfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexEnvfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexEnvfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexEnvfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexEnvfvEXT""' of type '""PFNGLMULTITEXENVFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexEnviEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexEnviEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexEnviEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexEnviEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexEnviEXT""' of type '""PFNGLMULTITEXENVIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexEnvivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexEnvivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexEnvivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexEnvivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexEnvivEXT""' of type '""PFNGLMULTITEXENVIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexGendEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexGendEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexGendEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexGendEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexGendEXT""' of type '""PFNGLMULTITEXGENDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexGendvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexGendvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexGendvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexGendvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexGendvEXT""' of type '""PFNGLMULTITEXGENDVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexGenfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexGenfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexGenfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexGenfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexGenfEXT""' of type '""PFNGLMULTITEXGENFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexGenfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexGenfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexGenfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexGenfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexGenfvEXT""' of type '""PFNGLMULTITEXGENFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexGeniEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexGeniEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexGeniEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexGeniEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexGeniEXT""' of type '""PFNGLMULTITEXGENIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexGenivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexGenivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexGenivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexGenivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexGenivEXT""' of type '""PFNGLMULTITEXGENIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexImage1DEXT""' of type '""PFNGLMULTITEXIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexImage2DEXT""' of type '""PFNGLMULTITEXIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexImage3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexImage3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexImage3DEXT""' of type '""PFNGLMULTITEXIMAGE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexParameterIivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexParameterIivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexParameterIivEXT""' of type '""PFNGLMULTITEXPARAMETERIIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexParameterIuivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexParameterIuivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexParameterIuivEXT""' of type '""PFNGLMULTITEXPARAMETERIUIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexParameterfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexParameterfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexParameterfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexParameterfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexParameterfEXT""' of type '""PFNGLMULTITEXPARAMETERFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexParameterfvEXT""' of type '""PFNGLMULTITEXPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexParameteriEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexParameteriEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexParameteriEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexParameteriEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexParameteriEXT""' of type '""PFNGLMULTITEXPARAMETERIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexParameterivEXT""' of type '""PFNGLMULTITEXPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexRenderbufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexRenderbufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexRenderbufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexRenderbufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexRenderbufferEXT""' of type '""PFNGLMULTITEXRENDERBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexSubImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexSubImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexSubImage1DEXT""' of type '""PFNGLMULTITEXSUBIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexSubImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexSubImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexSubImage2DEXT""' of type '""PFNGLMULTITEXSUBIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexSubImage3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexSubImage3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexSubImage3DEXT""' of type '""PFNGLMULTITEXSUBIMAGE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedBufferDataEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedBufferDataEXT), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_p_q_const__void_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedBufferDataEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedBufferDataEXT), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_p_q_const__void_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedBufferDataEXT""' of type '""PFNGLNAMEDBUFFERDATAEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedBufferSubDataEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedBufferSubDataEXT), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedBufferSubDataEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedBufferSubDataEXT), SWIGTYPE_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedBufferSubDataEXT""' of type '""PFNGLNAMEDBUFFERSUBDATAEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferRenderbufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedFramebufferRenderbufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferRenderbufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedFramebufferRenderbufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedFramebufferRenderbufferEXT""' of type '""PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferTexture1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedFramebufferTexture1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferTexture1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedFramebufferTexture1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedFramebufferTexture1DEXT""' of type '""PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferTexture2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedFramebufferTexture2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferTexture2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedFramebufferTexture2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedFramebufferTexture2DEXT""' of type '""PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferTexture3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedFramebufferTexture3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferTexture3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedFramebufferTexture3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedFramebufferTexture3DEXT""' of type '""PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferTextureEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedFramebufferTextureEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferTextureEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedFramebufferTextureEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedFramebufferTextureEXT""' of type '""PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferTextureFaceEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedFramebufferTextureFaceEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferTextureFaceEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedFramebufferTextureFaceEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedFramebufferTextureFaceEXT""' of type '""PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferTextureLayerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedFramebufferTextureLayerEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedFramebufferTextureLayerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedFramebufferTextureLayerEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedFramebufferTextureLayerEXT""' of type '""PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameter4dEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedProgramLocalParameter4dEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameter4dEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedProgramLocalParameter4dEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedProgramLocalParameter4dEXT""' of type '""PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameter4dvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedProgramLocalParameter4dvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameter4dvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedProgramLocalParameter4dvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedProgramLocalParameter4dvEXT""' of type '""PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameter4fEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedProgramLocalParameter4fEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameter4fEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedProgramLocalParameter4fEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedProgramLocalParameter4fEXT""' of type '""PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameter4fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedProgramLocalParameter4fvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameter4fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedProgramLocalParameter4fvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedProgramLocalParameter4fvEXT""' of type '""PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameterI4iEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedProgramLocalParameterI4iEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameterI4iEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedProgramLocalParameterI4iEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedProgramLocalParameterI4iEXT""' of type '""PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameterI4ivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedProgramLocalParameterI4ivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameterI4ivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedProgramLocalParameterI4ivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedProgramLocalParameterI4ivEXT""' of type '""PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameterI4uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedProgramLocalParameterI4uiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameterI4uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedProgramLocalParameterI4uiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedProgramLocalParameterI4uiEXT""' of type '""PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameterI4uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedProgramLocalParameterI4uivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameterI4uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedProgramLocalParameterI4uivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedProgramLocalParameterI4uivEXT""' of type '""PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameters4fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedProgramLocalParameters4fvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParameters4fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedProgramLocalParameters4fvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedProgramLocalParameters4fvEXT""' of type '""PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParametersI4ivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedProgramLocalParametersI4ivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParametersI4ivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedProgramLocalParametersI4ivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedProgramLocalParametersI4ivEXT""' of type '""PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParametersI4uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedProgramLocalParametersI4uivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramLocalParametersI4uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedProgramLocalParametersI4uivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedProgramLocalParametersI4uivEXT""' of type '""PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramStringEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedProgramStringEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedProgramStringEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedProgramStringEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedProgramStringEXT""' of type '""PFNGLNAMEDPROGRAMSTRINGEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedRenderbufferStorageEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedRenderbufferStorageEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedRenderbufferStorageEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedRenderbufferStorageEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedRenderbufferStorageEXT""' of type '""PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedRenderbufferStorageMultisampleCoverageEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedRenderbufferStorageMultisampleCoverageEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedRenderbufferStorageMultisampleCoverageEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedRenderbufferStorageMultisampleCoverageEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedRenderbufferStorageMultisampleCoverageEXT""' of type '""PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNamedRenderbufferStorageMultisampleEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNamedRenderbufferStorageMultisampleEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNamedRenderbufferStorageMultisampleEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNamedRenderbufferStorageMultisampleEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNamedRenderbufferStorageMultisampleEXT""' of type '""PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform1fEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform1fEXT), SWIGTYPE_p_f_unsigned_int_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform1fEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform1fEXT), SWIGTYPE_p_f_unsigned_int_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform1fEXT""' of type '""PFNGLPROGRAMUNIFORM1FEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform1fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform1fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform1fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform1fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform1fvEXT""' of type '""PFNGLPROGRAMUNIFORM1FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform1iEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform1iEXT), SWIGTYPE_p_f_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform1iEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform1iEXT), SWIGTYPE_p_f_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform1iEXT""' of type '""PFNGLPROGRAMUNIFORM1IEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform1ivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform1ivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform1ivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform1ivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform1ivEXT""' of type '""PFNGLPROGRAMUNIFORM1IVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform1uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform1uiEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform1uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform1uiEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform1uiEXT""' of type '""PFNGLPROGRAMUNIFORM1UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform1uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform1uivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform1uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform1uivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform1uivEXT""' of type '""PFNGLPROGRAMUNIFORM1UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform2fEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform2fEXT), SWIGTYPE_p_f_unsigned_int_int_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform2fEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform2fEXT), SWIGTYPE_p_f_unsigned_int_int_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform2fEXT""' of type '""PFNGLPROGRAMUNIFORM2FEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform2fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform2fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform2fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform2fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform2fvEXT""' of type '""PFNGLPROGRAMUNIFORM2FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform2iEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform2iEXT), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform2iEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform2iEXT), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform2iEXT""' of type '""PFNGLPROGRAMUNIFORM2IEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform2ivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform2ivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform2ivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform2ivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform2ivEXT""' of type '""PFNGLPROGRAMUNIFORM2IVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform2uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform2uiEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform2uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform2uiEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform2uiEXT""' of type '""PFNGLPROGRAMUNIFORM2UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform2uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform2uivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform2uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform2uivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform2uivEXT""' of type '""PFNGLPROGRAMUNIFORM2UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform3fEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform3fEXT), SWIGTYPE_p_f_unsigned_int_int_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform3fEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform3fEXT), SWIGTYPE_p_f_unsigned_int_int_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform3fEXT""' of type '""PFNGLPROGRAMUNIFORM3FEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform3fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform3fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform3fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform3fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform3fvEXT""' of type '""PFNGLPROGRAMUNIFORM3FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform3iEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform3iEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform3iEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform3iEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform3iEXT""' of type '""PFNGLPROGRAMUNIFORM3IEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform3ivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform3ivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform3ivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform3ivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform3ivEXT""' of type '""PFNGLPROGRAMUNIFORM3IVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform3uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform3uiEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform3uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform3uiEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform3uiEXT""' of type '""PFNGLPROGRAMUNIFORM3UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform3uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform3uivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform3uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform3uivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform3uivEXT""' of type '""PFNGLPROGRAMUNIFORM3UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform4fEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform4fEXT), SWIGTYPE_p_f_unsigned_int_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform4fEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform4fEXT), SWIGTYPE_p_f_unsigned_int_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform4fEXT""' of type '""PFNGLPROGRAMUNIFORM4FEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform4fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform4fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform4fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform4fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform4fvEXT""' of type '""PFNGLPROGRAMUNIFORM4FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform4iEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform4iEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform4iEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform4iEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform4iEXT""' of type '""PFNGLPROGRAMUNIFORM4IEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform4ivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform4ivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform4ivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform4ivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform4ivEXT""' of type '""PFNGLPROGRAMUNIFORM4IVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform4uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform4uiEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform4uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform4uiEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform4uiEXT""' of type '""PFNGLPROGRAMUNIFORM4UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform4uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniform4uivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniform4uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniform4uivEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniform4uivEXT""' of type '""PFNGLPROGRAMUNIFORM4UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix2fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniformMatrix2fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix2fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniformMatrix2fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniformMatrix2fvEXT""' of type '""PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix2x3fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniformMatrix2x3fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix2x3fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniformMatrix2x3fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniformMatrix2x3fvEXT""' of type '""PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix2x4fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniformMatrix2x4fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix2x4fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniformMatrix2x4fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniformMatrix2x4fvEXT""' of type '""PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix3fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniformMatrix3fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix3fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniformMatrix3fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniformMatrix3fvEXT""' of type '""PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix3x2fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniformMatrix3x2fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix3x2fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniformMatrix3x2fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniformMatrix3x2fvEXT""' of type '""PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix3x4fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniformMatrix3x4fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix3x4fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniformMatrix3x4fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniformMatrix3x4fvEXT""' of type '""PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix4fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniformMatrix4fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix4fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniformMatrix4fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniformMatrix4fvEXT""' of type '""PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix4x2fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniformMatrix4x2fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix4x2fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniformMatrix4x2fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniformMatrix4x2fvEXT""' of type '""PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix4x3fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramUniformMatrix4x3fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramUniformMatrix4x3fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramUniformMatrix4x3fvEXT), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramUniformMatrix4x3fvEXT""' of type '""PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPushClientAttribDefaultEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPushClientAttribDefaultEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPushClientAttribDefaultEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPushClientAttribDefaultEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPushClientAttribDefaultEXT""' of type '""PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureBufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureBufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureBufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureBufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureBufferEXT""' of type '""PFNGLTEXTUREBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureImage1DEXT""' of type '""PFNGLTEXTUREIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureImage2DEXT""' of type '""PFNGLTEXTUREIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureImage3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureImage3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureImage3DEXT""' of type '""PFNGLTEXTUREIMAGE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureParameterIivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureParameterIivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureParameterIivEXT""' of type '""PFNGLTEXTUREPARAMETERIIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureParameterIuivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureParameterIuivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureParameterIuivEXT""' of type '""PFNGLTEXTUREPARAMETERIUIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureParameterfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureParameterfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureParameterfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureParameterfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureParameterfEXT""' of type '""PFNGLTEXTUREPARAMETERFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureParameterfvEXT""' of type '""PFNGLTEXTUREPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureParameteriEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureParameteriEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureParameteriEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureParameteriEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureParameteriEXT""' of type '""PFNGLTEXTUREPARAMETERIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureParameterivEXT""' of type '""PFNGLTEXTUREPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureRenderbufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureRenderbufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureRenderbufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureRenderbufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureRenderbufferEXT""' of type '""PFNGLTEXTURERENDERBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureSubImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureSubImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureSubImage1DEXT""' of type '""PFNGLTEXTURESUBIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureSubImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureSubImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureSubImage2DEXT""' of type '""PFNGLTEXTURESUBIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureSubImage3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureSubImage3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureSubImage3DEXT""' of type '""PFNGLTEXTURESUBIMAGE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUnmapNamedBufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUnmapNamedBufferEXT), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUnmapNamedBufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUnmapNamedBufferEXT), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUnmapNamedBufferEXT""' of type '""PFNGLUNMAPNAMEDBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorMaskIndexedEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorMaskIndexedEXT), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorMaskIndexedEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorMaskIndexedEXT), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorMaskIndexedEXT""' of type '""PFNGLCOLORMASKINDEXEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDisableIndexedEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDisableIndexedEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDisableIndexedEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDisableIndexedEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDisableIndexedEXT""' of type '""PFNGLDISABLEINDEXEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEnableIndexedEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEnableIndexedEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEnableIndexedEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEnableIndexedEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEnableIndexedEXT""' of type '""PFNGLENABLEINDEXEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetBooleanIndexedvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetBooleanIndexedvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetBooleanIndexedvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetBooleanIndexedvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetBooleanIndexedvEXT""' of type '""PFNGLGETBOOLEANINDEXEDVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetIntegerIndexedvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetIntegerIndexedvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetIntegerIndexedvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetIntegerIndexedvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetIntegerIndexedvEXT""' of type '""PFNGLGETINTEGERINDEXEDVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsEnabledIndexedEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsEnabledIndexedEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsEnabledIndexedEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsEnabledIndexedEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsEnabledIndexedEXT""' of type '""PFNGLISENABLEDINDEXEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawArraysInstancedEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawArraysInstancedEXT), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawArraysInstancedEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawArraysInstancedEXT), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawArraysInstancedEXT""' of type '""PFNGLDRAWARRAYSINSTANCEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawElementsInstancedEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawElementsInstancedEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_p_q_const__void_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawElementsInstancedEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawElementsInstancedEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_p_q_const__void_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawElementsInstancedEXT""' of type '""PFNGLDRAWELEMENTSINSTANCEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawRangeElementsEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawRangeElementsEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawRangeElementsEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawRangeElementsEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawRangeElementsEXT""' of type '""PFNGLDRAWRANGEELEMENTSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogCoordPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogCoordPointerEXT), SWIGTYPE_p_f_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogCoordPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogCoordPointerEXT), SWIGTYPE_p_f_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogCoordPointerEXT""' of type '""PFNGLFOGCOORDPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogCoorddEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogCoorddEXT), SWIGTYPE_p_f_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogCoorddEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogCoorddEXT), SWIGTYPE_p_f_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogCoorddEXT""' of type '""PFNGLFOGCOORDDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogCoorddvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogCoorddvEXT), SWIGTYPE_p_f_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogCoorddvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogCoorddvEXT), SWIGTYPE_p_f_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogCoorddvEXT""' of type '""PFNGLFOGCOORDDVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogCoordfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogCoordfEXT), SWIGTYPE_p_f_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogCoordfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogCoordfEXT), SWIGTYPE_p_f_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogCoordfEXT""' of type '""PFNGLFOGCOORDFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogCoordfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogCoordfvEXT), SWIGTYPE_p_f_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogCoordfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogCoordfvEXT), SWIGTYPE_p_f_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogCoordfvEXT""' of type '""PFNGLFOGCOORDFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentColorMaterialEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentColorMaterialEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentColorMaterialEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentColorMaterialEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentColorMaterialEXT""' of type '""PFNGLFRAGMENTCOLORMATERIALEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModelfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightModelfEXT), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModelfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightModelfEXT), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightModelfEXT""' of type '""PFNGLFRAGMENTLIGHTMODELFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModelfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightModelfvEXT), SWIGTYPE_p_f_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModelfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightModelfvEXT), SWIGTYPE_p_f_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightModelfvEXT""' of type '""PFNGLFRAGMENTLIGHTMODELFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModeliEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightModeliEXT), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModeliEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightModeliEXT), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightModeliEXT""' of type '""PFNGLFRAGMENTLIGHTMODELIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModelivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightModelivEXT), SWIGTYPE_p_f_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModelivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightModelivEXT), SWIGTYPE_p_f_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightModelivEXT""' of type '""PFNGLFRAGMENTLIGHTMODELIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightfEXT""' of type '""PFNGLFRAGMENTLIGHTFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightfvEXT""' of type '""PFNGLFRAGMENTLIGHTFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightiEXT""' of type '""PFNGLFRAGMENTLIGHTIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightivEXT""' of type '""PFNGLFRAGMENTLIGHTIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentMaterialfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentMaterialfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentMaterialfEXT""' of type '""PFNGLFRAGMENTMATERIALFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentMaterialfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentMaterialfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentMaterialfvEXT""' of type '""PFNGLFRAGMENTMATERIALFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentMaterialiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentMaterialiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentMaterialiEXT""' of type '""PFNGLFRAGMENTMATERIALIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentMaterialivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentMaterialivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentMaterialivEXT""' of type '""PFNGLFRAGMENTMATERIALIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentLightfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFragmentLightfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentLightfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFragmentLightfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFragmentLightfvEXT""' of type '""PFNGLGETFRAGMENTLIGHTFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentLightivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFragmentLightivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentLightivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFragmentLightivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFragmentLightivEXT""' of type '""PFNGLGETFRAGMENTLIGHTIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentMaterialfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFragmentMaterialfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentMaterialfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFragmentMaterialfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFragmentMaterialfvEXT""' of type '""PFNGLGETFRAGMENTMATERIALFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentMaterialivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFragmentMaterialivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentMaterialivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFragmentMaterialivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFragmentMaterialivEXT""' of type '""PFNGLGETFRAGMENTMATERIALIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewLightEnviEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewLightEnviEXT), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewLightEnviEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewLightEnviEXT), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewLightEnviEXT""' of type '""PFNGLLIGHTENVIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBlitFramebufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBlitFramebufferEXT), SWIGTYPE_p_f_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBlitFramebufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBlitFramebufferEXT), SWIGTYPE_p_f_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBlitFramebufferEXT""' of type '""PFNGLBLITFRAMEBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewRenderbufferStorageMultisampleEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewRenderbufferStorageMultisampleEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewRenderbufferStorageMultisampleEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewRenderbufferStorageMultisampleEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewRenderbufferStorageMultisampleEXT""' of type '""PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindFramebufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindFramebufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindFramebufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindFramebufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindFramebufferEXT""' of type '""PFNGLBINDFRAMEBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindRenderbufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindRenderbufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindRenderbufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindRenderbufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindRenderbufferEXT""' of type '""PFNGLBINDRENDERBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCheckFramebufferStatusEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCheckFramebufferStatusEXT), SWIGTYPE_p_f_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCheckFramebufferStatusEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCheckFramebufferStatusEXT), SWIGTYPE_p_f_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCheckFramebufferStatusEXT""' of type '""PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteFramebuffersEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteFramebuffersEXT), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteFramebuffersEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteFramebuffersEXT), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteFramebuffersEXT""' of type '""PFNGLDELETEFRAMEBUFFERSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteRenderbuffersEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteRenderbuffersEXT), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteRenderbuffersEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteRenderbuffersEXT), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteRenderbuffersEXT""' of type '""PFNGLDELETERENDERBUFFERSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferRenderbufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferRenderbufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferRenderbufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferRenderbufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferRenderbufferEXT""' of type '""PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexture1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferTexture1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexture1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferTexture1DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferTexture1DEXT""' of type '""PFNGLFRAMEBUFFERTEXTURE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexture2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferTexture2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexture2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferTexture2DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferTexture2DEXT""' of type '""PFNGLFRAMEBUFFERTEXTURE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexture3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferTexture3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTexture3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferTexture3DEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferTexture3DEXT""' of type '""PFNGLFRAMEBUFFERTEXTURE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenFramebuffersEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenFramebuffersEXT), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenFramebuffersEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenFramebuffersEXT), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenFramebuffersEXT""' of type '""PFNGLGENFRAMEBUFFERSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenRenderbuffersEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenRenderbuffersEXT), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenRenderbuffersEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenRenderbuffersEXT), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenRenderbuffersEXT""' of type '""PFNGLGENRENDERBUFFERSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenerateMipmapEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenerateMipmapEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenerateMipmapEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenerateMipmapEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenerateMipmapEXT""' of type '""PFNGLGENERATEMIPMAPEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFramebufferAttachmentParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFramebufferAttachmentParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFramebufferAttachmentParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFramebufferAttachmentParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFramebufferAttachmentParameterivEXT""' of type '""PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetRenderbufferParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetRenderbufferParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetRenderbufferParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetRenderbufferParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetRenderbufferParameterivEXT""' of type '""PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsFramebufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsFramebufferEXT), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsFramebufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsFramebufferEXT), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsFramebufferEXT""' of type '""PFNGLISFRAMEBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsRenderbufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsRenderbufferEXT), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsRenderbufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsRenderbufferEXT), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsRenderbufferEXT""' of type '""PFNGLISRENDERBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewRenderbufferStorageEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewRenderbufferStorageEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewRenderbufferStorageEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewRenderbufferStorageEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewRenderbufferStorageEXT""' of type '""PFNGLRENDERBUFFERSTORAGEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTextureEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferTextureEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTextureEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferTextureEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferTextureEXT""' of type '""PFNGLFRAMEBUFFERTEXTUREEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTextureFaceEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferTextureFaceEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTextureFaceEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferTextureFaceEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferTextureFaceEXT""' of type '""PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTextureLayerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFramebufferTextureLayerEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFramebufferTextureLayerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFramebufferTextureLayerEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFramebufferTextureLayerEXT""' of type '""PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramParameteriEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramParameteriEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramParameteriEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramParameteriEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramParameteriEXT""' of type '""PFNGLPROGRAMPARAMETERIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameters4fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramEnvParameters4fvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameters4fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramEnvParameters4fvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramEnvParameters4fvEXT""' of type '""PFNGLPROGRAMENVPARAMETERS4FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameters4fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramLocalParameters4fvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameters4fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramLocalParameters4fvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramLocalParameters4fvEXT""' of type '""PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindFragDataLocationEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindFragDataLocationEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindFragDataLocationEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindFragDataLocationEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindFragDataLocationEXT""' of type '""PFNGLBINDFRAGDATALOCATIONEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFragDataLocationEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFragDataLocationEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFragDataLocationEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFragDataLocationEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFragDataLocationEXT""' of type '""PFNGLGETFRAGDATALOCATIONEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetUniformuivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetUniformuivEXT), SWIGTYPE_p_f_unsigned_int_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetUniformuivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetUniformuivEXT), SWIGTYPE_p_f_unsigned_int_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetUniformuivEXT""' of type '""PFNGLGETUNIFORMUIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribIivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribIivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribIivEXT""' of type '""PFNGLGETVERTEXATTRIBIIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribIuivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribIuivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribIuivEXT""' of type '""PFNGLGETVERTEXATTRIBIUIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform1uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform1uiEXT), SWIGTYPE_p_f_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform1uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform1uiEXT), SWIGTYPE_p_f_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform1uiEXT""' of type '""PFNGLUNIFORM1UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform1uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform1uivEXT), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform1uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform1uivEXT), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform1uivEXT""' of type '""PFNGLUNIFORM1UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform2uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform2uiEXT), SWIGTYPE_p_f_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform2uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform2uiEXT), SWIGTYPE_p_f_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform2uiEXT""' of type '""PFNGLUNIFORM2UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform2uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform2uivEXT), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform2uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform2uivEXT), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform2uivEXT""' of type '""PFNGLUNIFORM2UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform3uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform3uiEXT), SWIGTYPE_p_f_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform3uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform3uiEXT), SWIGTYPE_p_f_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform3uiEXT""' of type '""PFNGLUNIFORM3UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform3uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform3uivEXT), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform3uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform3uivEXT), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform3uivEXT""' of type '""PFNGLUNIFORM3UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform4uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform4uiEXT), SWIGTYPE_p_f_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform4uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform4uiEXT), SWIGTYPE_p_f_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform4uiEXT""' of type '""PFNGLUNIFORM4UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewUniform4uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewUniform4uivEXT), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewUniform4uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewUniform4uivEXT), SWIGTYPE_p_f_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewUniform4uivEXT""' of type '""PFNGLUNIFORM4UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1iEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI1iEXT), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1iEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI1iEXT), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI1iEXT""' of type '""PFNGLVERTEXATTRIBI1IEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1ivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI1ivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1ivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI1ivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI1ivEXT""' of type '""PFNGLVERTEXATTRIBI1IVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI1uiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI1uiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI1uiEXT""' of type '""PFNGLVERTEXATTRIBI1UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI1uivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI1uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI1uivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI1uivEXT""' of type '""PFNGLVERTEXATTRIBI1UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2iEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI2iEXT), SWIGTYPE_p_f_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2iEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI2iEXT), SWIGTYPE_p_f_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI2iEXT""' of type '""PFNGLVERTEXATTRIBI2IEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2ivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI2ivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2ivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI2ivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI2ivEXT""' of type '""PFNGLVERTEXATTRIBI2IVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI2uiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI2uiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI2uiEXT""' of type '""PFNGLVERTEXATTRIBI2UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI2uivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI2uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI2uivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI2uivEXT""' of type '""PFNGLVERTEXATTRIBI2UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3iEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI3iEXT), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3iEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI3iEXT), SWIGTYPE_p_f_unsigned_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI3iEXT""' of type '""PFNGLVERTEXATTRIBI3IEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3ivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI3ivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3ivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI3ivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI3ivEXT""' of type '""PFNGLVERTEXATTRIBI3IVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI3uiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI3uiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI3uiEXT""' of type '""PFNGLVERTEXATTRIBI3UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI3uivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI3uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI3uivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI3uivEXT""' of type '""PFNGLVERTEXATTRIBI3UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4bvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4bvEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4bvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4bvEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4bvEXT""' of type '""PFNGLVERTEXATTRIBI4BVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4iEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4iEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4iEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4iEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4iEXT""' of type '""PFNGLVERTEXATTRIBI4IEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4ivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4ivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4ivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4ivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4ivEXT""' of type '""PFNGLVERTEXATTRIBI4IVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4svEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4svEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4svEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4svEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4svEXT""' of type '""PFNGLVERTEXATTRIBI4SVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4ubvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4ubvEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4ubvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4ubvEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4ubvEXT""' of type '""PFNGLVERTEXATTRIBI4UBVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4uiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4uiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4uiEXT""' of type '""PFNGLVERTEXATTRIBI4UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4uivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4uivEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4uivEXT""' of type '""PFNGLVERTEXATTRIBI4UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4usvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribI4usvEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribI4usvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribI4usvEXT), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribI4usvEXT""' of type '""PFNGLVERTEXATTRIBI4USVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribIPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribIPointerEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribIPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribIPointerEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribIPointerEXT""' of type '""PFNGLVERTEXATTRIBIPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetHistogramEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetHistogramEXT), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetHistogramEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetHistogramEXT), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetHistogramEXT""' of type '""PFNGLGETHISTOGRAMEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetHistogramParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetHistogramParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetHistogramParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetHistogramParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetHistogramParameterfvEXT""' of type '""PFNGLGETHISTOGRAMPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetHistogramParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetHistogramParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetHistogramParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetHistogramParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetHistogramParameterivEXT""' of type '""PFNGLGETHISTOGRAMPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMinmaxEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMinmaxEXT), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMinmaxEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMinmaxEXT), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMinmaxEXT""' of type '""PFNGLGETMINMAXEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMinmaxParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMinmaxParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMinmaxParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMinmaxParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMinmaxParameterfvEXT""' of type '""PFNGLGETMINMAXPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMinmaxParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMinmaxParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMinmaxParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMinmaxParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMinmaxParameterivEXT""' of type '""PFNGLGETMINMAXPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewHistogramEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewHistogramEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewHistogramEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewHistogramEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewHistogramEXT""' of type '""PFNGLHISTOGRAMEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMinmaxEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMinmaxEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMinmaxEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMinmaxEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMinmaxEXT""' of type '""PFNGLMINMAXEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewResetHistogramEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewResetHistogramEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewResetHistogramEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewResetHistogramEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewResetHistogramEXT""' of type '""PFNGLRESETHISTOGRAMEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewResetMinmaxEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewResetMinmaxEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewResetMinmaxEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewResetMinmaxEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewResetMinmaxEXT""' of type '""PFNGLRESETMINMAXEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIndexFuncEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIndexFuncEXT), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIndexFuncEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIndexFuncEXT), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIndexFuncEXT""' of type '""PFNGLINDEXFUNCEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIndexMaterialEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIndexMaterialEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIndexMaterialEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIndexMaterialEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIndexMaterialEXT""' of type '""PFNGLINDEXMATERIALEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewApplyTextureEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewApplyTextureEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewApplyTextureEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewApplyTextureEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewApplyTextureEXT""' of type '""PFNGLAPPLYTEXTUREEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureLightEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureLightEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureLightEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureLightEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureLightEXT""' of type '""PFNGLTEXTURELIGHTEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureMaterialEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureMaterialEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureMaterialEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureMaterialEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureMaterialEXT""' of type '""PFNGLTEXTUREMATERIALEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiDrawArraysEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiDrawArraysEXT), SWIGTYPE_p_f_unsigned_int_p_int_p_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiDrawArraysEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiDrawArraysEXT), SWIGTYPE_p_f_unsigned_int_p_int_p_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiDrawArraysEXT""' of type '""PFNGLMULTIDRAWARRAYSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiDrawElementsEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiDrawElementsEXT), SWIGTYPE_p_f_unsigned_int_p_int_unsigned_int_p_p_q_const__void_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiDrawElementsEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiDrawElementsEXT), SWIGTYPE_p_f_unsigned_int_p_int_unsigned_int_p_p_q_const__void_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiDrawElementsEXT""' of type '""PFNGLMULTIDRAWELEMENTSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSampleMaskEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSampleMaskEXT), SWIGTYPE_p_f_float_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSampleMaskEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSampleMaskEXT), SWIGTYPE_p_f_float_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSampleMaskEXT""' of type '""PFNGLSAMPLEMASKEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSamplePatternEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSamplePatternEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSamplePatternEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSamplePatternEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSamplePatternEXT""' of type '""PFNGLSAMPLEPATTERNEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorTableEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorTableEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorTableEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorTableEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorTableEXT""' of type '""PFNGLCOLORTABLEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetColorTableEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetColorTableEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetColorTableEXT""' of type '""PFNGLGETCOLORTABLEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetColorTableParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetColorTableParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetColorTableParameterfvEXT""' of type '""PFNGLGETCOLORTABLEPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetColorTableParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetColorTableParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetColorTableParameterivEXT""' of type '""PFNGLGETCOLORTABLEPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetPixelTransformParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetPixelTransformParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetPixelTransformParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetPixelTransformParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetPixelTransformParameterfvEXT""' of type '""PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetPixelTransformParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetPixelTransformParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetPixelTransformParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetPixelTransformParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetPixelTransformParameterivEXT""' of type '""PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPixelTransformParameterfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPixelTransformParameterfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPixelTransformParameterfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPixelTransformParameterfEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPixelTransformParameterfEXT""' of type '""PFNGLPIXELTRANSFORMPARAMETERFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPixelTransformParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPixelTransformParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPixelTransformParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPixelTransformParameterfvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPixelTransformParameterfvEXT""' of type '""PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPixelTransformParameteriEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPixelTransformParameteriEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPixelTransformParameteriEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPixelTransformParameteriEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPixelTransformParameteriEXT""' of type '""PFNGLPIXELTRANSFORMPARAMETERIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPixelTransformParameterivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPixelTransformParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPixelTransformParameterivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPixelTransformParameterivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPixelTransformParameterivEXT""' of type '""PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPointParameterfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPointParameterfEXT), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPointParameterfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPointParameterfEXT), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPointParameterfEXT""' of type '""PFNGLPOINTPARAMETERFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPointParameterfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPointParameterfvEXT), SWIGTYPE_p_f_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPointParameterfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPointParameterfvEXT), SWIGTYPE_p_f_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPointParameterfvEXT""' of type '""PFNGLPOINTPARAMETERFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPolygonOffsetEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPolygonOffsetEXT), SWIGTYPE_p_f_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPolygonOffsetEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPolygonOffsetEXT), SWIGTYPE_p_f_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPolygonOffsetEXT""' of type '""PFNGLPOLYGONOFFSETEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBeginSceneEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBeginSceneEXT), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBeginSceneEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBeginSceneEXT), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBeginSceneEXT""' of type '""PFNGLBEGINSCENEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEndSceneEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEndSceneEXT), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEndSceneEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEndSceneEXT), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEndSceneEXT""' of type '""PFNGLENDSCENEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3bEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3bEXT), SWIGTYPE_p_f_signed_char_signed_char_signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3bEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3bEXT), SWIGTYPE_p_f_signed_char_signed_char_signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3bEXT""' of type '""PFNGLSECONDARYCOLOR3BEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3bvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3bvEXT), SWIGTYPE_p_f_p_q_const__signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3bvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3bvEXT), SWIGTYPE_p_f_p_q_const__signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3bvEXT""' of type '""PFNGLSECONDARYCOLOR3BVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3dEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3dEXT), SWIGTYPE_p_f_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3dEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3dEXT), SWIGTYPE_p_f_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3dEXT""' of type '""PFNGLSECONDARYCOLOR3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3dvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3dvEXT), SWIGTYPE_p_f_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3dvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3dvEXT), SWIGTYPE_p_f_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3dvEXT""' of type '""PFNGLSECONDARYCOLOR3DVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3fEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3fEXT), SWIGTYPE_p_f_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3fEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3fEXT), SWIGTYPE_p_f_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3fEXT""' of type '""PFNGLSECONDARYCOLOR3FEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3fvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3fvEXT), SWIGTYPE_p_f_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3fvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3fvEXT), SWIGTYPE_p_f_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3fvEXT""' of type '""PFNGLSECONDARYCOLOR3FVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3iEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3iEXT), SWIGTYPE_p_f_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3iEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3iEXT), SWIGTYPE_p_f_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3iEXT""' of type '""PFNGLSECONDARYCOLOR3IEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3ivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3ivEXT), SWIGTYPE_p_f_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3ivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3ivEXT), SWIGTYPE_p_f_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3ivEXT""' of type '""PFNGLSECONDARYCOLOR3IVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3sEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3sEXT), SWIGTYPE_p_f_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3sEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3sEXT), SWIGTYPE_p_f_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3sEXT""' of type '""PFNGLSECONDARYCOLOR3SEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3svEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3svEXT), SWIGTYPE_p_f_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3svEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3svEXT), SWIGTYPE_p_f_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3svEXT""' of type '""PFNGLSECONDARYCOLOR3SVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3ubEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3ubEXT), SWIGTYPE_p_f_unsigned_char_unsigned_char_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3ubEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3ubEXT), SWIGTYPE_p_f_unsigned_char_unsigned_char_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3ubEXT""' of type '""PFNGLSECONDARYCOLOR3UBEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3ubvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3ubvEXT), SWIGTYPE_p_f_p_q_const__unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3ubvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3ubvEXT), SWIGTYPE_p_f_p_q_const__unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3ubvEXT""' of type '""PFNGLSECONDARYCOLOR3UBVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3uiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3uiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3uiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3uiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3uiEXT""' of type '""PFNGLSECONDARYCOLOR3UIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3uivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3uivEXT), SWIGTYPE_p_f_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3uivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3uivEXT), SWIGTYPE_p_f_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3uivEXT""' of type '""PFNGLSECONDARYCOLOR3UIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3usEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3usEXT), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3usEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3usEXT), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3usEXT""' of type '""PFNGLSECONDARYCOLOR3USEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3usvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3usvEXT), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3usvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3usvEXT), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3usvEXT""' of type '""PFNGLSECONDARYCOLOR3USVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColorPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColorPointerEXT), SWIGTYPE_p_f_int_unsigned_int_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColorPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColorPointerEXT), SWIGTYPE_p_f_int_unsigned_int_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColorPointerEXT""' of type '""PFNGLSECONDARYCOLORPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewActiveStencilFaceEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewActiveStencilFaceEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewActiveStencilFaceEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewActiveStencilFaceEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewActiveStencilFaceEXT""' of type '""PFNGLACTIVESTENCILFACEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexSubImage1DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexSubImage1DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexSubImage1DEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexSubImage1DEXT""' of type '""PFNGLTEXSUBIMAGE1DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexSubImage2DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexSubImage2DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexSubImage2DEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexSubImage2DEXT""' of type '""PFNGLTEXSUBIMAGE2DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexSubImage3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexSubImage3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexSubImage3DEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexSubImage3DEXT""' of type '""PFNGLTEXSUBIMAGE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexImage3DEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexImage3DEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexImage3DEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexImage3DEXT), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexImage3DEXT""' of type '""PFNGLTEXIMAGE3DEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexBufferEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexBufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexBufferEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexBufferEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexBufferEXT""' of type '""PFNGLTEXBUFFEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClearColorIiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClearColorIiEXT), SWIGTYPE_p_f_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClearColorIiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClearColorIiEXT), SWIGTYPE_p_f_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClearColorIiEXT""' of type '""PFNGLCLEARCOLORIIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClearColorIuiEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClearColorIuiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClearColorIuiEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClearColorIuiEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClearColorIuiEXT""' of type '""PFNGLCLEARCOLORIUIEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTexParameterIivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTexParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTexParameterIivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTexParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTexParameterIivEXT""' of type '""PFNGLGETTEXPARAMETERIIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTexParameterIuivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTexParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTexParameterIuivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTexParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTexParameterIuivEXT""' of type '""PFNGLGETTEXPARAMETERIUIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexParameterIivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexParameterIivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexParameterIivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexParameterIivEXT""' of type '""PFNGLTEXPARAMETERIIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexParameterIuivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexParameterIuivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexParameterIuivEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexParameterIuivEXT""' of type '""PFNGLTEXPARAMETERIUIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewAreTexturesResidentEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewAreTexturesResidentEXT), SWIGTYPE_p_f_int_p_q_const__unsigned_int_p_unsigned_char__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewAreTexturesResidentEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewAreTexturesResidentEXT), SWIGTYPE_p_f_int_p_q_const__unsigned_int_p_unsigned_char__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewAreTexturesResidentEXT""' of type '""PFNGLARETEXTURESRESIDENTEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindTextureEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindTextureEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindTextureEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindTextureEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindTextureEXT""' of type '""PFNGLBINDTEXTUREEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteTexturesEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteTexturesEXT), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteTexturesEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteTexturesEXT), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteTexturesEXT""' of type '""PFNGLDELETETEXTURESEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenTexturesEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenTexturesEXT), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenTexturesEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenTexturesEXT), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenTexturesEXT""' of type '""PFNGLGENTEXTURESEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsTextureEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsTextureEXT), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsTextureEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsTextureEXT), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsTextureEXT""' of type '""PFNGLISTEXTUREEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPrioritizeTexturesEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPrioritizeTexturesEXT), SWIGTYPE_p_f_int_p_q_const__unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPrioritizeTexturesEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPrioritizeTexturesEXT), SWIGTYPE_p_f_int_p_q_const__unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPrioritizeTexturesEXT""' of type '""PFNGLPRIORITIZETEXTURESEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureNormalEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureNormalEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureNormalEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureNormalEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureNormalEXT""' of type '""PFNGLTEXTURENORMALEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetQueryObjecti64vEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetQueryObjecti64vEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int64_t__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetQueryObjecti64vEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetQueryObjecti64vEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int64_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetQueryObjecti64vEXT""' of type '""PFNGLGETQUERYOBJECTI64VEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetQueryObjectui64vEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetQueryObjectui64vEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_uint64_t__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetQueryObjectui64vEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetQueryObjectui64vEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_uint64_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetQueryObjectui64vEXT""' of type '""PFNGLGETQUERYOBJECTUI64VEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBeginTransformFeedbackEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBeginTransformFeedbackEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBeginTransformFeedbackEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBeginTransformFeedbackEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBeginTransformFeedbackEXT""' of type '""PFNGLBEGINTRANSFORMFEEDBACKEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindBufferBaseEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindBufferBaseEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindBufferBaseEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindBufferBaseEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindBufferBaseEXT""' of type '""PFNGLBINDBUFFERBASEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindBufferOffsetEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindBufferOffsetEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindBufferOffsetEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindBufferOffsetEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindBufferOffsetEXT""' of type '""PFNGLBINDBUFFEROFFSETEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindBufferRangeEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindBufferRangeEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t_ptrdiff_t__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindBufferRangeEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindBufferRangeEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t_ptrdiff_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindBufferRangeEXT""' of type '""PFNGLBINDBUFFERRANGEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEndTransformFeedbackEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEndTransformFeedbackEXT), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEndTransformFeedbackEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEndTransformFeedbackEXT), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEndTransformFeedbackEXT""' of type '""PFNGLENDTRANSFORMFEEDBACKEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTransformFeedbackVaryingEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTransformFeedbackVaryingEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTransformFeedbackVaryingEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTransformFeedbackVaryingEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTransformFeedbackVaryingEXT""' of type '""PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTransformFeedbackVaryingsEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTransformFeedbackVaryingsEXT), SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__char_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTransformFeedbackVaryingsEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTransformFeedbackVaryingsEXT), SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__char_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTransformFeedbackVaryingsEXT""' of type '""PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewArrayElementEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewArrayElementEXT), SWIGTYPE_p_f_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewArrayElementEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewArrayElementEXT), SWIGTYPE_p_f_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewArrayElementEXT""' of type '""PFNGLARRAYELEMENTEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorPointerEXT), SWIGTYPE_p_f_int_unsigned_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorPointerEXT), SWIGTYPE_p_f_int_unsigned_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorPointerEXT""' of type '""PFNGLCOLORPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawArraysEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawArraysEXT), SWIGTYPE_p_f_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawArraysEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawArraysEXT), SWIGTYPE_p_f_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawArraysEXT""' of type '""PFNGLDRAWARRAYSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEdgeFlagPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEdgeFlagPointerEXT), SWIGTYPE_p_f_int_int_p_q_const__unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEdgeFlagPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEdgeFlagPointerEXT), SWIGTYPE_p_f_int_int_p_q_const__unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEdgeFlagPointerEXT""' of type '""PFNGLEDGEFLAGPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetPointervEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetPointervEXT), SWIGTYPE_p_f_unsigned_int_p_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetPointervEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetPointervEXT), SWIGTYPE_p_f_unsigned_int_p_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetPointervEXT""' of type '""PFNGLGETPOINTERVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIndexPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIndexPointerEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIndexPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIndexPointerEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIndexPointerEXT""' of type '""PFNGLINDEXPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormalPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormalPointerEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormalPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormalPointerEXT), SWIGTYPE_p_f_unsigned_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormalPointerEXT""' of type '""PFNGLNORMALPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoordPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoordPointerEXT), SWIGTYPE_p_f_int_unsigned_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoordPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoordPointerEXT), SWIGTYPE_p_f_int_unsigned_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoordPointerEXT""' of type '""PFNGLTEXCOORDPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexPointerEXT), SWIGTYPE_p_f_int_unsigned_int_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexPointerEXT), SWIGTYPE_p_f_int_unsigned_int_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexPointerEXT""' of type '""PFNGLVERTEXPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBeginVertexShaderEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBeginVertexShaderEXT), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBeginVertexShaderEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBeginVertexShaderEXT), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBeginVertexShaderEXT""' of type '""PFNGLBEGINVERTEXSHADEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindLightParameterEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindLightParameterEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindLightParameterEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindLightParameterEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindLightParameterEXT""' of type '""PFNGLBINDLIGHTPARAMETEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindMaterialParameterEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindMaterialParameterEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindMaterialParameterEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindMaterialParameterEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindMaterialParameterEXT""' of type '""PFNGLBINDMATERIALPARAMETEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindParameterEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindParameterEXT), SWIGTYPE_p_f_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindParameterEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindParameterEXT), SWIGTYPE_p_f_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindParameterEXT""' of type '""PFNGLBINDPARAMETEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindTexGenParameterEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindTexGenParameterEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindTexGenParameterEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindTexGenParameterEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindTexGenParameterEXT""' of type '""PFNGLBINDTEXGENPARAMETEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindTextureUnitParameterEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindTextureUnitParameterEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindTextureUnitParameterEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindTextureUnitParameterEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindTextureUnitParameterEXT""' of type '""PFNGLBINDTEXTUREUNITPARAMETEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindVertexShaderEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindVertexShaderEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindVertexShaderEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindVertexShaderEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindVertexShaderEXT""' of type '""PFNGLBINDVERTEXSHADEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteVertexShaderEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteVertexShaderEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteVertexShaderEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteVertexShaderEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteVertexShaderEXT""' of type '""PFNGLDELETEVERTEXSHADEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDisableVariantClientStateEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDisableVariantClientStateEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDisableVariantClientStateEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDisableVariantClientStateEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDisableVariantClientStateEXT""' of type '""PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEnableVariantClientStateEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEnableVariantClientStateEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEnableVariantClientStateEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEnableVariantClientStateEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEnableVariantClientStateEXT""' of type '""PFNGLENABLEVARIANTCLIENTSTATEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEndVertexShaderEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEndVertexShaderEXT), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEndVertexShaderEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEndVertexShaderEXT), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEndVertexShaderEXT""' of type '""PFNGLENDVERTEXSHADEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewExtractComponentEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewExtractComponentEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewExtractComponentEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewExtractComponentEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewExtractComponentEXT""' of type '""PFNGLEXTRACTCOMPONENTEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenSymbolsEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenSymbolsEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenSymbolsEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenSymbolsEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenSymbolsEXT""' of type '""PFNGLGENSYMBOLSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenVertexShadersEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenVertexShadersEXT), SWIGTYPE_p_f_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenVertexShadersEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenVertexShadersEXT), SWIGTYPE_p_f_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenVertexShadersEXT""' of type '""PFNGLGENVERTEXSHADERSEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetInvariantBooleanvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetInvariantBooleanvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetInvariantBooleanvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetInvariantBooleanvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetInvariantBooleanvEXT""' of type '""PFNGLGETINVARIANTBOOLEANVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetInvariantFloatvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetInvariantFloatvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetInvariantFloatvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetInvariantFloatvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetInvariantFloatvEXT""' of type '""PFNGLGETINVARIANTFLOATVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetInvariantIntegervEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetInvariantIntegervEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetInvariantIntegervEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetInvariantIntegervEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetInvariantIntegervEXT""' of type '""PFNGLGETINVARIANTINTEGERVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetLocalConstantBooleanvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetLocalConstantBooleanvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetLocalConstantBooleanvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetLocalConstantBooleanvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetLocalConstantBooleanvEXT""' of type '""PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetLocalConstantFloatvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetLocalConstantFloatvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetLocalConstantFloatvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetLocalConstantFloatvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetLocalConstantFloatvEXT""' of type '""PFNGLGETLOCALCONSTANTFLOATVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetLocalConstantIntegervEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetLocalConstantIntegervEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetLocalConstantIntegervEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetLocalConstantIntegervEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetLocalConstantIntegervEXT""' of type '""PFNGLGETLOCALCONSTANTINTEGERVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVariantBooleanvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVariantBooleanvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVariantBooleanvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVariantBooleanvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVariantBooleanvEXT""' of type '""PFNGLGETVARIANTBOOLEANVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVariantFloatvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVariantFloatvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVariantFloatvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVariantFloatvEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVariantFloatvEXT""' of type '""PFNGLGETVARIANTFLOATVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVariantIntegervEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVariantIntegervEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVariantIntegervEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVariantIntegervEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVariantIntegervEXT""' of type '""PFNGLGETVARIANTINTEGERVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVariantPointervEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVariantPointervEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVariantPointervEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVariantPointervEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVariantPointervEXT""' of type '""PFNGLGETVARIANTPOINTERVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewInsertComponentEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewInsertComponentEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewInsertComponentEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewInsertComponentEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewInsertComponentEXT""' of type '""PFNGLINSERTCOMPONENTEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsVariantEnabledEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsVariantEnabledEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsVariantEnabledEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsVariantEnabledEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsVariantEnabledEXT""' of type '""PFNGLISVARIANTENABLEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSetInvariantEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSetInvariantEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSetInvariantEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSetInvariantEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSetInvariantEXT""' of type '""PFNGLSETINVARIANTEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSetLocalConstantEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSetLocalConstantEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSetLocalConstantEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSetLocalConstantEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSetLocalConstantEXT""' of type '""PFNGLSETLOCALCONSTANTEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewShaderOp1EXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewShaderOp1EXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewShaderOp1EXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewShaderOp1EXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewShaderOp1EXT""' of type '""PFNGLSHADEROP1EXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewShaderOp2EXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewShaderOp2EXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewShaderOp2EXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewShaderOp2EXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewShaderOp2EXT""' of type '""PFNGLSHADEROP2EXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewShaderOp3EXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewShaderOp3EXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewShaderOp3EXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewShaderOp3EXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewShaderOp3EXT""' of type '""PFNGLSHADEROP3EXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSwizzleEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSwizzleEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSwizzleEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSwizzleEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSwizzleEXT""' of type '""PFNGLSWIZZLEEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVariantPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVariantPointerEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVariantPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVariantPointerEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVariantPointerEXT""' of type '""PFNGLVARIANTPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVariantbvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVariantbvEXT), SWIGTYPE_p_f_unsigned_int_p_signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVariantbvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVariantbvEXT), SWIGTYPE_p_f_unsigned_int_p_signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVariantbvEXT""' of type '""PFNGLVARIANTBVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVariantdvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVariantdvEXT), SWIGTYPE_p_f_unsigned_int_p_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVariantdvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVariantdvEXT), SWIGTYPE_p_f_unsigned_int_p_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVariantdvEXT""' of type '""PFNGLVARIANTDVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVariantfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVariantfvEXT), SWIGTYPE_p_f_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVariantfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVariantfvEXT), SWIGTYPE_p_f_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVariantfvEXT""' of type '""PFNGLVARIANTFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVariantivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVariantivEXT), SWIGTYPE_p_f_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVariantivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVariantivEXT), SWIGTYPE_p_f_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVariantivEXT""' of type '""PFNGLVARIANTIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVariantsvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVariantsvEXT), SWIGTYPE_p_f_unsigned_int_p_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVariantsvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVariantsvEXT), SWIGTYPE_p_f_unsigned_int_p_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVariantsvEXT""' of type '""PFNGLVARIANTSVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVariantubvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVariantubvEXT), SWIGTYPE_p_f_unsigned_int_p_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVariantubvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVariantubvEXT), SWIGTYPE_p_f_unsigned_int_p_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVariantubvEXT""' of type '""PFNGLVARIANTUBVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVariantuivEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVariantuivEXT), SWIGTYPE_p_f_unsigned_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVariantuivEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVariantuivEXT), SWIGTYPE_p_f_unsigned_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVariantuivEXT""' of type '""PFNGLVARIANTUIVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVariantusvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVariantusvEXT), SWIGTYPE_p_f_unsigned_int_p_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVariantusvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVariantusvEXT), SWIGTYPE_p_f_unsigned_int_p_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVariantusvEXT""' of type '""PFNGLVARIANTUSVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWriteMaskEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWriteMaskEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWriteMaskEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWriteMaskEXT), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWriteMaskEXT""' of type '""PFNGLWRITEMASKEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexWeightPointerEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexWeightPointerEXT), SWIGTYPE_p_f_int_unsigned_int_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexWeightPointerEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexWeightPointerEXT), SWIGTYPE_p_f_int_unsigned_int_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexWeightPointerEXT""' of type '""PFNGLVERTEXWEIGHTPOINTEREXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexWeightfEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexWeightfEXT), SWIGTYPE_p_f_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexWeightfEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexWeightfEXT), SWIGTYPE_p_f_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexWeightfEXT""' of type '""PFNGLVERTEXWEIGHTFEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexWeightfvEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexWeightfvEXT), SWIGTYPE_p_f_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexWeightfvEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexWeightfvEXT), SWIGTYPE_p_f_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexWeightfvEXT""' of type '""PFNGLVERTEXWEIGHTFVEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFrameTerminatorGREMEDY_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFrameTerminatorGREMEDY), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFrameTerminatorGREMEDY_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFrameTerminatorGREMEDY), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFrameTerminatorGREMEDY""' of type '""PFNGLFRAMETERMINATORGREMEDYPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewStringMarkerGREMEDY_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewStringMarkerGREMEDY), SWIGTYPE_p_f_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewStringMarkerGREMEDY_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewStringMarkerGREMEDY), SWIGTYPE_p_f_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewStringMarkerGREMEDY""' of type '""PFNGLSTRINGMARKERGREMEDYPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetImageTransformParameterfvHP_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetImageTransformParameterfvHP), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetImageTransformParameterfvHP_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetImageTransformParameterfvHP), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetImageTransformParameterfvHP""' of type '""PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetImageTransformParameterivHP_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetImageTransformParameterivHP), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetImageTransformParameterivHP_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetImageTransformParameterivHP), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetImageTransformParameterivHP""' of type '""PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewImageTransformParameterfHP_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewImageTransformParameterfHP), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewImageTransformParameterfHP_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewImageTransformParameterfHP), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewImageTransformParameterfHP""' of type '""PFNGLIMAGETRANSFORMPARAMETERFHPPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewImageTransformParameterfvHP_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewImageTransformParameterfvHP), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewImageTransformParameterfvHP_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewImageTransformParameterfvHP), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewImageTransformParameterfvHP""' of type '""PFNGLIMAGETRANSFORMPARAMETERFVHPPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewImageTransformParameteriHP_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewImageTransformParameteriHP), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewImageTransformParameteriHP_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewImageTransformParameteriHP), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewImageTransformParameteriHP""' of type '""PFNGLIMAGETRANSFORMPARAMETERIHPPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewImageTransformParameterivHP_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewImageTransformParameterivHP), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewImageTransformParameterivHP_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewImageTransformParameterivHP), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewImageTransformParameterivHP""' of type '""PFNGLIMAGETRANSFORMPARAMETERIVHPPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiModeDrawArraysIBM_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiModeDrawArraysIBM), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__int_p_q_const__int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiModeDrawArraysIBM_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiModeDrawArraysIBM), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__int_p_q_const__int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiModeDrawArraysIBM""' of type '""PFNGLMULTIMODEDRAWARRAYSIBMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiModeDrawElementsIBM_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiModeDrawElementsIBM), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__int_unsigned_int_p_q_const__p_q_const__void_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiModeDrawElementsIBM_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiModeDrawElementsIBM), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__int_unsigned_int_p_q_const__p_q_const__void_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiModeDrawElementsIBM""' of type '""PFNGLMULTIMODEDRAWELEMENTSIBMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorPointerListIBM_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorPointerListIBM), SWIGTYPE_p_f_int_unsigned_int_int_p_p_q_const__void_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorPointerListIBM_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorPointerListIBM), SWIGTYPE_p_f_int_unsigned_int_int_p_p_q_const__void_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorPointerListIBM""' of type '""PFNGLCOLORPOINTERLISTIBMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEdgeFlagPointerListIBM_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEdgeFlagPointerListIBM), SWIGTYPE_p_f_int_p_p_q_const__unsigned_char_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEdgeFlagPointerListIBM_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEdgeFlagPointerListIBM), SWIGTYPE_p_f_int_p_p_q_const__unsigned_char_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEdgeFlagPointerListIBM""' of type '""PFNGLEDGEFLAGPOINTERLISTIBMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogCoordPointerListIBM_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogCoordPointerListIBM), SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__void_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogCoordPointerListIBM_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogCoordPointerListIBM), SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__void_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogCoordPointerListIBM""' of type '""PFNGLFOGCOORDPOINTERLISTIBMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIndexPointerListIBM_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIndexPointerListIBM), SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__void_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIndexPointerListIBM_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIndexPointerListIBM), SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__void_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIndexPointerListIBM""' of type '""PFNGLINDEXPOINTERLISTIBMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormalPointerListIBM_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormalPointerListIBM), SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__void_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormalPointerListIBM_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormalPointerListIBM), SWIGTYPE_p_f_unsigned_int_int_p_p_q_const__void_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormalPointerListIBM""' of type '""PFNGLNORMALPOINTERLISTIBMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColorPointerListIBM_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColorPointerListIBM), SWIGTYPE_p_f_int_unsigned_int_int_p_p_q_const__void_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColorPointerListIBM_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColorPointerListIBM), SWIGTYPE_p_f_int_unsigned_int_int_p_p_q_const__void_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColorPointerListIBM""' of type '""PFNGLSECONDARYCOLORPOINTERLISTIBMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoordPointerListIBM_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoordPointerListIBM), SWIGTYPE_p_f_int_unsigned_int_int_p_p_q_const__void_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoordPointerListIBM_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoordPointerListIBM), SWIGTYPE_p_f_int_unsigned_int_int_p_p_q_const__void_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoordPointerListIBM""' of type '""PFNGLTEXCOORDPOINTERLISTIBMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexPointerListIBM_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexPointerListIBM), SWIGTYPE_p_f_int_unsigned_int_int_p_p_q_const__void_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexPointerListIBM_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexPointerListIBM), SWIGTYPE_p_f_int_unsigned_int_int_p_p_q_const__void_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexPointerListIBM""' of type '""PFNGLVERTEXPOINTERLISTIBMPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorPointervINTEL_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorPointervINTEL), SWIGTYPE_p_f_int_unsigned_int_p_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorPointervINTEL_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorPointervINTEL), SWIGTYPE_p_f_int_unsigned_int_p_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorPointervINTEL""' of type '""PFNGLCOLORPOINTERVINTELPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormalPointervINTEL_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormalPointervINTEL), SWIGTYPE_p_f_unsigned_int_p_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormalPointervINTEL_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormalPointervINTEL), SWIGTYPE_p_f_unsigned_int_p_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormalPointervINTEL""' of type '""PFNGLNORMALPOINTERVINTELPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoordPointervINTEL_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoordPointervINTEL), SWIGTYPE_p_f_int_unsigned_int_p_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoordPointervINTEL_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoordPointervINTEL), SWIGTYPE_p_f_int_unsigned_int_p_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoordPointervINTEL""' of type '""PFNGLTEXCOORDPOINTERVINTELPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexPointervINTEL_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexPointervINTEL), SWIGTYPE_p_f_int_unsigned_int_p_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexPointervINTEL_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexPointervINTEL), SWIGTYPE_p_f_int_unsigned_int_p_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexPointervINTEL""' of type '""PFNGLVERTEXPOINTERVINTELPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexScissorFuncINTEL_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexScissorFuncINTEL), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexScissorFuncINTEL_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexScissorFuncINTEL), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexScissorFuncINTEL""' of type '""PFNGLTEXSCISSORFUNCINTELPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexScissorINTEL_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexScissorINTEL), SWIGTYPE_p_f_unsigned_int_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexScissorINTEL_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexScissorINTEL), SWIGTYPE_p_f_unsigned_int_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexScissorINTEL""' of type '""PFNGLTEXSCISSORINTELPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBufferRegionEnabledEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBufferRegionEnabledEXT), SWIGTYPE_p_f_void__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBufferRegionEnabledEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBufferRegionEnabledEXT), SWIGTYPE_p_f_void__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBufferRegionEnabledEXT""' of type '""PFNGLBUFFERREGIONENABLEDEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteBufferRegionEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteBufferRegionEXT), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteBufferRegionEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteBufferRegionEXT), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteBufferRegionEXT""' of type '""PFNGLDELETEBUFFERREGIONEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDrawBufferRegionEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDrawBufferRegionEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDrawBufferRegionEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDrawBufferRegionEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDrawBufferRegionEXT""' of type '""PFNGLDRAWBUFFERREGIONEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNewBufferRegionEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNewBufferRegionEXT), SWIGTYPE_p_f_unsigned_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNewBufferRegionEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNewBufferRegionEXT), SWIGTYPE_p_f_unsigned_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNewBufferRegionEXT""' of type '""PFNGLNEWBUFFERREGIONEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReadBufferRegionEXT_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReadBufferRegionEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReadBufferRegionEXT_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReadBufferRegionEXT), SWIGTYPE_p_f_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReadBufferRegionEXT""' of type '""PFNGLREADBUFFERREGIONEXTPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewResizeBuffersMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewResizeBuffersMESA), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewResizeBuffersMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewResizeBuffersMESA), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewResizeBuffersMESA""' of type '""PFNGLRESIZEBUFFERSMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2dMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2dMESA), SWIGTYPE_p_f_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2dMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2dMESA), SWIGTYPE_p_f_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2dMESA""' of type '""PFNGLWINDOWPOS2DMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2dvMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2dvMESA), SWIGTYPE_p_f_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2dvMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2dvMESA), SWIGTYPE_p_f_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2dvMESA""' of type '""PFNGLWINDOWPOS2DVMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2fMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2fMESA), SWIGTYPE_p_f_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2fMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2fMESA), SWIGTYPE_p_f_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2fMESA""' of type '""PFNGLWINDOWPOS2FMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2fvMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2fvMESA), SWIGTYPE_p_f_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2fvMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2fvMESA), SWIGTYPE_p_f_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2fvMESA""' of type '""PFNGLWINDOWPOS2FVMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2iMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2iMESA), SWIGTYPE_p_f_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2iMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2iMESA), SWIGTYPE_p_f_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2iMESA""' of type '""PFNGLWINDOWPOS2IMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2ivMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2ivMESA), SWIGTYPE_p_f_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2ivMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2ivMESA), SWIGTYPE_p_f_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2ivMESA""' of type '""PFNGLWINDOWPOS2IVMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2sMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2sMESA), SWIGTYPE_p_f_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2sMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2sMESA), SWIGTYPE_p_f_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2sMESA""' of type '""PFNGLWINDOWPOS2SMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2svMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos2svMESA), SWIGTYPE_p_f_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos2svMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos2svMESA), SWIGTYPE_p_f_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos2svMESA""' of type '""PFNGLWINDOWPOS2SVMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3dMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3dMESA), SWIGTYPE_p_f_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3dMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3dMESA), SWIGTYPE_p_f_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3dMESA""' of type '""PFNGLWINDOWPOS3DMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3dvMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3dvMESA), SWIGTYPE_p_f_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3dvMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3dvMESA), SWIGTYPE_p_f_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3dvMESA""' of type '""PFNGLWINDOWPOS3DVMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3fMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3fMESA), SWIGTYPE_p_f_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3fMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3fMESA), SWIGTYPE_p_f_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3fMESA""' of type '""PFNGLWINDOWPOS3FMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3fvMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3fvMESA), SWIGTYPE_p_f_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3fvMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3fvMESA), SWIGTYPE_p_f_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3fvMESA""' of type '""PFNGLWINDOWPOS3FVMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3iMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3iMESA), SWIGTYPE_p_f_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3iMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3iMESA), SWIGTYPE_p_f_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3iMESA""' of type '""PFNGLWINDOWPOS3IMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3ivMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3ivMESA), SWIGTYPE_p_f_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3ivMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3ivMESA), SWIGTYPE_p_f_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3ivMESA""' of type '""PFNGLWINDOWPOS3IVMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3sMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3sMESA), SWIGTYPE_p_f_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3sMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3sMESA), SWIGTYPE_p_f_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3sMESA""' of type '""PFNGLWINDOWPOS3SMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3svMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos3svMESA), SWIGTYPE_p_f_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos3svMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos3svMESA), SWIGTYPE_p_f_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos3svMESA""' of type '""PFNGLWINDOWPOS3SVMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4dMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos4dMESA), SWIGTYPE_p_f_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4dMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos4dMESA), SWIGTYPE_p_f_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos4dMESA""' of type '""PFNGLWINDOWPOS4DMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4dvMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos4dvMESA), SWIGTYPE_p_f_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4dvMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos4dvMESA), SWIGTYPE_p_f_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos4dvMESA""' of type '""PFNGLWINDOWPOS4DVMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4fMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos4fMESA), SWIGTYPE_p_f_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4fMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos4fMESA), SWIGTYPE_p_f_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos4fMESA""' of type '""PFNGLWINDOWPOS4FMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4fvMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos4fvMESA), SWIGTYPE_p_f_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4fvMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos4fvMESA), SWIGTYPE_p_f_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos4fvMESA""' of type '""PFNGLWINDOWPOS4FVMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4iMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos4iMESA), SWIGTYPE_p_f_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4iMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos4iMESA), SWIGTYPE_p_f_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos4iMESA""' of type '""PFNGLWINDOWPOS4IMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4ivMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos4ivMESA), SWIGTYPE_p_f_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4ivMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos4ivMESA), SWIGTYPE_p_f_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos4ivMESA""' of type '""PFNGLWINDOWPOS4IVMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4sMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos4sMESA), SWIGTYPE_p_f_short_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4sMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos4sMESA), SWIGTYPE_p_f_short_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos4sMESA""' of type '""PFNGLWINDOWPOS4SMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4svMESA_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewWindowPos4svMESA), SWIGTYPE_p_f_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewWindowPos4svMESA_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewWindowPos4svMESA), SWIGTYPE_p_f_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewWindowPos4svMESA""' of type '""PFNGLWINDOWPOS4SVMESAPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBeginConditionalRenderNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBeginConditionalRenderNV), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBeginConditionalRenderNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBeginConditionalRenderNV), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBeginConditionalRenderNV""' of type '""PFNGLBEGINCONDITIONALRENDERNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEndConditionalRenderNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEndConditionalRenderNV), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEndConditionalRenderNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEndConditionalRenderNV), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEndConditionalRenderNV""' of type '""PFNGLENDCONDITIONALRENDERNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClearDepthdNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClearDepthdNV), SWIGTYPE_p_f_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClearDepthdNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClearDepthdNV), SWIGTYPE_p_f_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClearDepthdNV""' of type '""PFNGLCLEARDEPTHDNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDepthBoundsdNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDepthBoundsdNV), SWIGTYPE_p_f_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDepthBoundsdNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDepthBoundsdNV), SWIGTYPE_p_f_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDepthBoundsdNV""' of type '""PFNGLDEPTHBOUNDSDNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDepthRangedNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDepthRangedNV), SWIGTYPE_p_f_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDepthRangedNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDepthRangedNV), SWIGTYPE_p_f_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDepthRangedNV""' of type '""PFNGLDEPTHRANGEDNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEvalMapsNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEvalMapsNV), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEvalMapsNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEvalMapsNV), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEvalMapsNV""' of type '""PFNGLEVALMAPSNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMapAttribParameterfvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMapAttribParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMapAttribParameterfvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMapAttribParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMapAttribParameterfvNV""' of type '""PFNGLGETMAPATTRIBPARAMETERFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMapAttribParameterivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMapAttribParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMapAttribParameterivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMapAttribParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMapAttribParameterivNV""' of type '""PFNGLGETMAPATTRIBPARAMETERIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMapControlPointsNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMapControlPointsNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int_unsigned_char_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMapControlPointsNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMapControlPointsNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int_unsigned_char_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMapControlPointsNV""' of type '""PFNGLGETMAPCONTROLPOINTSNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMapParameterfvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMapParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMapParameterfvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMapParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMapParameterfvNV""' of type '""PFNGLGETMAPPARAMETERFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMapParameterivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMapParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMapParameterivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMapParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMapParameterivNV""' of type '""PFNGLGETMAPPARAMETERIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMapControlPointsNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMapControlPointsNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int_unsigned_char_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMapControlPointsNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMapControlPointsNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int_unsigned_char_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMapControlPointsNV""' of type '""PFNGLMAPCONTROLPOINTSNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMapParameterfvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMapParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMapParameterfvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMapParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMapParameterfvNV""' of type '""PFNGLMAPPARAMETERFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMapParameterivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMapParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMapParameterivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMapParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMapParameterivNV""' of type '""PFNGLMAPPARAMETERIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetMultisamplefvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetMultisamplefvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetMultisamplefvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetMultisamplefvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetMultisamplefvNV""' of type '""PFNGLGETMULTISAMPLEFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSampleMaskIndexedNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSampleMaskIndexedNV), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSampleMaskIndexedNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSampleMaskIndexedNV), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSampleMaskIndexedNV""' of type '""PFNGLSAMPLEMASKINDEXEDNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexRenderbufferNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexRenderbufferNV), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexRenderbufferNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexRenderbufferNV), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexRenderbufferNV""' of type '""PFNGLTEXRENDERBUFFERNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteFencesNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteFencesNV), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteFencesNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteFencesNV), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteFencesNV""' of type '""PFNGLDELETEFENCESNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFinishFenceNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFinishFenceNV), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFinishFenceNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFinishFenceNV), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFinishFenceNV""' of type '""PFNGLFINISHFENCENVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenFencesNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenFencesNV), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenFencesNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenFencesNV), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenFencesNV""' of type '""PFNGLGENFENCESNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFenceivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFenceivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFenceivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFenceivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFenceivNV""' of type '""PFNGLGETFENCEIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsFenceNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsFenceNV), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsFenceNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsFenceNV), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsFenceNV""' of type '""PFNGLISFENCENVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSetFenceNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSetFenceNV), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSetFenceNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSetFenceNV), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSetFenceNV""' of type '""PFNGLSETFENCENVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTestFenceNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTestFenceNV), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTestFenceNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTestFenceNV), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTestFenceNV""' of type '""PFNGLTESTFENCENVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramNamedParameterdvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramNamedParameterdvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_p_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramNamedParameterdvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramNamedParameterdvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_p_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramNamedParameterdvNV""' of type '""PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramNamedParameterfvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramNamedParameterfvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramNamedParameterfvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramNamedParameterfvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramNamedParameterfvNV""' of type '""PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramNamedParameter4dNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramNamedParameter4dNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramNamedParameter4dNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramNamedParameter4dNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramNamedParameter4dNV""' of type '""PFNGLPROGRAMNAMEDPARAMETER4DNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramNamedParameter4dvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramNamedParameter4dvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramNamedParameter4dvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramNamedParameter4dvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramNamedParameter4dvNV""' of type '""PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramNamedParameter4fNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramNamedParameter4fNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramNamedParameter4fNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramNamedParameter4fNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramNamedParameter4fNV""' of type '""PFNGLPROGRAMNAMEDPARAMETER4FNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramNamedParameter4fvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramNamedParameter4fvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramNamedParameter4fvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramNamedParameter4fvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramNamedParameter4fvNV""' of type '""PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewRenderbufferStorageMultisampleCoverageNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewRenderbufferStorageMultisampleCoverageNV), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewRenderbufferStorageMultisampleCoverageNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewRenderbufferStorageMultisampleCoverageNV), SWIGTYPE_p_f_unsigned_int_int_int_unsigned_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewRenderbufferStorageMultisampleCoverageNV""' of type '""PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramVertexLimitNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramVertexLimitNV), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramVertexLimitNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramVertexLimitNV), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramVertexLimitNV""' of type '""PFNGLPROGRAMVERTEXLIMITNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameterI4iNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramEnvParameterI4iNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameterI4iNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramEnvParameterI4iNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramEnvParameterI4iNV""' of type '""PFNGLPROGRAMENVPARAMETERI4INVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameterI4ivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramEnvParameterI4ivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameterI4ivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramEnvParameterI4ivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramEnvParameterI4ivNV""' of type '""PFNGLPROGRAMENVPARAMETERI4IVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameterI4uiNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramEnvParameterI4uiNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameterI4uiNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramEnvParameterI4uiNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramEnvParameterI4uiNV""' of type '""PFNGLPROGRAMENVPARAMETERI4UINVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameterI4uivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramEnvParameterI4uivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParameterI4uivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramEnvParameterI4uivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramEnvParameterI4uivNV""' of type '""PFNGLPROGRAMENVPARAMETERI4UIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParametersI4ivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramEnvParametersI4ivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParametersI4ivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramEnvParametersI4ivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramEnvParametersI4ivNV""' of type '""PFNGLPROGRAMENVPARAMETERSI4IVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParametersI4uivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramEnvParametersI4uivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramEnvParametersI4uivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramEnvParametersI4uivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramEnvParametersI4uivNV""' of type '""PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameterI4iNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramLocalParameterI4iNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameterI4iNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramLocalParameterI4iNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramLocalParameterI4iNV""' of type '""PFNGLPROGRAMLOCALPARAMETERI4INVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameterI4ivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramLocalParameterI4ivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameterI4ivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramLocalParameterI4ivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramLocalParameterI4ivNV""' of type '""PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameterI4uiNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramLocalParameterI4uiNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameterI4uiNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramLocalParameterI4uiNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramLocalParameterI4uiNV""' of type '""PFNGLPROGRAMLOCALPARAMETERI4UINVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameterI4uivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramLocalParameterI4uivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParameterI4uivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramLocalParameterI4uivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramLocalParameterI4uivNV""' of type '""PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParametersI4ivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramLocalParametersI4ivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParametersI4ivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramLocalParametersI4ivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramLocalParametersI4ivNV""' of type '""PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParametersI4uivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramLocalParametersI4uivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramLocalParametersI4uivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramLocalParametersI4uivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramLocalParametersI4uivNV""' of type '""PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColor3hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColor3hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColor3hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColor3hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColor3hNV""' of type '""PFNGLCOLOR3HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColor3hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColor3hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColor3hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColor3hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColor3hvNV""' of type '""PFNGLCOLOR3HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColor4hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColor4hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColor4hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColor4hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColor4hNV""' of type '""PFNGLCOLOR4HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColor4hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColor4hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColor4hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColor4hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColor4hvNV""' of type '""PFNGLCOLOR4HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogCoordhNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogCoordhNV), SWIGTYPE_p_f_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogCoordhNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogCoordhNV), SWIGTYPE_p_f_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogCoordhNV""' of type '""PFNGLFOGCOORDHNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogCoordhvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogCoordhvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogCoordhvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogCoordhvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogCoordhvNV""' of type '""PFNGLFOGCOORDHVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1hNV""' of type '""PFNGLMULTITEXCOORD1HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord1hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord1hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord1hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord1hvNV""' of type '""PFNGLMULTITEXCOORD1HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2hNV""' of type '""PFNGLMULTITEXCOORD2HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord2hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord2hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord2hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord2hvNV""' of type '""PFNGLMULTITEXCOORD2HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3hNV""' of type '""PFNGLMULTITEXCOORD3HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord3hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord3hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord3hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord3hvNV""' of type '""PFNGLMULTITEXCOORD3HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4hNV""' of type '""PFNGLMULTITEXCOORD4HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewMultiTexCoord4hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewMultiTexCoord4hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewMultiTexCoord4hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewMultiTexCoord4hvNV""' of type '""PFNGLMULTITEXCOORD4HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormal3hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormal3hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormal3hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormal3hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormal3hNV""' of type '""PFNGLNORMAL3HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormal3hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormal3hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormal3hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormal3hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormal3hvNV""' of type '""PFNGLNORMAL3HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3hNV""' of type '""PFNGLSECONDARYCOLOR3HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSecondaryColor3hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSecondaryColor3hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSecondaryColor3hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSecondaryColor3hvNV""' of type '""PFNGLSECONDARYCOLOR3HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord1hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord1hNV), SWIGTYPE_p_f_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord1hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord1hNV), SWIGTYPE_p_f_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord1hNV""' of type '""PFNGLTEXCOORD1HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord1hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord1hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord1hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord1hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord1hvNV""' of type '""PFNGLTEXCOORD1HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord2hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord2hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord2hNV""' of type '""PFNGLTEXCOORD2HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord2hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord2hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord2hvNV""' of type '""PFNGLTEXCOORD2HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord3hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord3hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord3hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord3hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord3hNV""' of type '""PFNGLTEXCOORD3HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord3hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord3hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord3hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord3hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord3hvNV""' of type '""PFNGLTEXCOORD3HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord4hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord4hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord4hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord4hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord4hNV""' of type '""PFNGLTEXCOORD4HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord4hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord4hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord4hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord4hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord4hvNV""' of type '""PFNGLTEXCOORD4HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertex2hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertex2hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertex2hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertex2hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertex2hNV""' of type '""PFNGLVERTEX2HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertex2hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertex2hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertex2hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertex2hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertex2hvNV""' of type '""PFNGLVERTEX2HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertex3hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertex3hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertex3hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertex3hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertex3hNV""' of type '""PFNGLVERTEX3HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertex3hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertex3hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertex3hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertex3hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertex3hvNV""' of type '""PFNGLVERTEX3HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertex4hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertex4hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertex4hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertex4hNV), SWIGTYPE_p_f_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertex4hNV""' of type '""PFNGLVERTEX4HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertex4hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertex4hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertex4hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertex4hvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertex4hvNV""' of type '""PFNGLVERTEX4HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1hNV""' of type '""PFNGLVERTEXATTRIB1HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1hvNV""' of type '""PFNGLVERTEXATTRIB1HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2hNV""' of type '""PFNGLVERTEXATTRIB2HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2hvNV""' of type '""PFNGLVERTEXATTRIB2HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3hNV""' of type '""PFNGLVERTEXATTRIB3HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3hvNV""' of type '""PFNGLVERTEXATTRIB3HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4hNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4hNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4hNV), SWIGTYPE_p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4hNV""' of type '""PFNGLVERTEXATTRIB4HNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4hvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4hvNV""' of type '""PFNGLVERTEXATTRIB4HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs1hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs1hvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs1hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs1hvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs1hvNV""' of type '""PFNGLVERTEXATTRIBS1HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs2hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs2hvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs2hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs2hvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs2hvNV""' of type '""PFNGLVERTEXATTRIBS2HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs3hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs3hvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs3hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs3hvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs3hvNV""' of type '""PFNGLVERTEXATTRIBS3HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs4hvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs4hvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs4hvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs4hvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs4hvNV""' of type '""PFNGLVERTEXATTRIBS4HVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexWeighthNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexWeighthNV), SWIGTYPE_p_f_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexWeighthNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexWeighthNV), SWIGTYPE_p_f_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexWeighthNV""' of type '""PFNGLVERTEXWEIGHTHNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexWeighthvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexWeighthvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexWeighthvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexWeighthvNV), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexWeighthvNV""' of type '""PFNGLVERTEXWEIGHTHVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBeginOcclusionQueryNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBeginOcclusionQueryNV), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBeginOcclusionQueryNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBeginOcclusionQueryNV), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBeginOcclusionQueryNV""' of type '""PFNGLBEGINOCCLUSIONQUERYNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteOcclusionQueriesNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteOcclusionQueriesNV), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteOcclusionQueriesNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteOcclusionQueriesNV), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteOcclusionQueriesNV""' of type '""PFNGLDELETEOCCLUSIONQUERIESNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEndOcclusionQueryNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEndOcclusionQueryNV), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEndOcclusionQueryNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEndOcclusionQueryNV), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEndOcclusionQueryNV""' of type '""PFNGLENDOCCLUSIONQUERYNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenOcclusionQueriesNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenOcclusionQueriesNV), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenOcclusionQueriesNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenOcclusionQueriesNV), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenOcclusionQueriesNV""' of type '""PFNGLGENOCCLUSIONQUERIESNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetOcclusionQueryivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetOcclusionQueryivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetOcclusionQueryivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetOcclusionQueryivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetOcclusionQueryivNV""' of type '""PFNGLGETOCCLUSIONQUERYIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetOcclusionQueryuivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetOcclusionQueryuivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetOcclusionQueryuivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetOcclusionQueryuivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetOcclusionQueryuivNV""' of type '""PFNGLGETOCCLUSIONQUERYUIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsOcclusionQueryNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsOcclusionQueryNV), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsOcclusionQueryNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsOcclusionQueryNV), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsOcclusionQueryNV""' of type '""PFNGLISOCCLUSIONQUERYNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramBufferParametersIivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramBufferParametersIivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramBufferParametersIivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramBufferParametersIivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramBufferParametersIivNV""' of type '""PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramBufferParametersIuivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramBufferParametersIuivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramBufferParametersIuivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramBufferParametersIuivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramBufferParametersIuivNV""' of type '""PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramBufferParametersfvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramBufferParametersfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramBufferParametersfvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramBufferParametersfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramBufferParametersfvNV""' of type '""PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFlushPixelDataRangeNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFlushPixelDataRangeNV), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFlushPixelDataRangeNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFlushPixelDataRangeNV), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFlushPixelDataRangeNV""' of type '""PFNGLFLUSHPIXELDATARANGENVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPixelDataRangeNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPixelDataRangeNV), SWIGTYPE_p_f_unsigned_int_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPixelDataRangeNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPixelDataRangeNV), SWIGTYPE_p_f_unsigned_int_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPixelDataRangeNV""' of type '""PFNGLPIXELDATARANGENVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPointParameteriNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPointParameteriNV), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPointParameteriNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPointParameteriNV), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPointParameteriNV""' of type '""PFNGLPOINTPARAMETERINVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPointParameterivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPointParameterivNV), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPointParameterivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPointParameterivNV), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPointParameterivNV""' of type '""PFNGLPOINTPARAMETERIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVideoi64vNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVideoi64vNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int64_t__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVideoi64vNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVideoi64vNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int64_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVideoi64vNV""' of type '""PFNGLGETVIDEOI64VNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVideoivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVideoivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVideoivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVideoivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVideoivNV""' of type '""PFNGLGETVIDEOIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVideoui64vNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVideoui64vNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_uint64_t__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVideoui64vNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVideoui64vNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_uint64_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVideoui64vNV""' of type '""PFNGLGETVIDEOUI64VNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVideouivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVideouivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVideouivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVideouivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVideouivNV""' of type '""PFNGLGETVIDEOUIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPresentFrameDualFillNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPresentFrameDualFillNV), SWIGTYPE_p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPresentFrameDualFillNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPresentFrameDualFillNV), SWIGTYPE_p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPresentFrameDualFillNV""' of type '""PFNGLPRESENTFRAMEDUALFILLNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPresentFrameKeyedNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPresentFrameKeyedNV), SWIGTYPE_p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPresentFrameKeyedNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPresentFrameKeyedNV), SWIGTYPE_p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPresentFrameKeyedNV""' of type '""PFNGLPRESENTFRAMEKEYEDNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVideoParameterivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVideoParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVideoParameterivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVideoParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVideoParameterivNV""' of type '""PFNGLVIDEOPARAMETERIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPrimitiveRestartIndexNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPrimitiveRestartIndexNV), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPrimitiveRestartIndexNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPrimitiveRestartIndexNV), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPrimitiveRestartIndexNV""' of type '""PFNGLPRIMITIVERESTARTINDEXNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPrimitiveRestartNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPrimitiveRestartNV), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPrimitiveRestartNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPrimitiveRestartNV), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPrimitiveRestartNV""' of type '""PFNGLPRIMITIVERESTARTNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCombinerInputNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCombinerInputNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCombinerInputNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCombinerInputNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCombinerInputNV""' of type '""PFNGLCOMBINERINPUTNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCombinerOutputNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCombinerOutputNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_char_unsigned_char_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCombinerOutputNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCombinerOutputNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_char_unsigned_char_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCombinerOutputNV""' of type '""PFNGLCOMBINEROUTPUTNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCombinerParameterfNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCombinerParameterfNV), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCombinerParameterfNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCombinerParameterfNV), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCombinerParameterfNV""' of type '""PFNGLCOMBINERPARAMETERFNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCombinerParameterfvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCombinerParameterfvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCombinerParameterfvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCombinerParameterfvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCombinerParameterfvNV""' of type '""PFNGLCOMBINERPARAMETERFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCombinerParameteriNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCombinerParameteriNV), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCombinerParameteriNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCombinerParameteriNV), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCombinerParameteriNV""' of type '""PFNGLCOMBINERPARAMETERINVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCombinerParameterivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCombinerParameterivNV), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCombinerParameterivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCombinerParameterivNV), SWIGTYPE_p_f_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCombinerParameterivNV""' of type '""PFNGLCOMBINERPARAMETERIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFinalCombinerInputNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFinalCombinerInputNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFinalCombinerInputNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFinalCombinerInputNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFinalCombinerInputNV""' of type '""PFNGLFINALCOMBINERINPUTNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetCombinerInputParameterfvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetCombinerInputParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetCombinerInputParameterfvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetCombinerInputParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetCombinerInputParameterfvNV""' of type '""PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetCombinerInputParameterivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetCombinerInputParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetCombinerInputParameterivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetCombinerInputParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetCombinerInputParameterivNV""' of type '""PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetCombinerOutputParameterfvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetCombinerOutputParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetCombinerOutputParameterfvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetCombinerOutputParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetCombinerOutputParameterfvNV""' of type '""PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetCombinerOutputParameterivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetCombinerOutputParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetCombinerOutputParameterivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetCombinerOutputParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetCombinerOutputParameterivNV""' of type '""PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFinalCombinerInputParameterfvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFinalCombinerInputParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFinalCombinerInputParameterfvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFinalCombinerInputParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFinalCombinerInputParameterfvNV""' of type '""PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFinalCombinerInputParameterivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFinalCombinerInputParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFinalCombinerInputParameterivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFinalCombinerInputParameterivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFinalCombinerInputParameterivNV""' of type '""PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCombinerStageParameterfvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCombinerStageParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCombinerStageParameterfvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCombinerStageParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCombinerStageParameterfvNV""' of type '""PFNGLCOMBINERSTAGEPARAMETERFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetCombinerStageParameterfvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetCombinerStageParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetCombinerStageParameterfvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetCombinerStageParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetCombinerStageParameterfvNV""' of type '""PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewActiveVaryingNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewActiveVaryingNV), SWIGTYPE_p_f_unsigned_int_p_q_const__char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewActiveVaryingNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewActiveVaryingNV), SWIGTYPE_p_f_unsigned_int_p_q_const__char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewActiveVaryingNV""' of type '""PFNGLACTIVEVARYINGNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBeginTransformFeedbackNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBeginTransformFeedbackNV), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBeginTransformFeedbackNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBeginTransformFeedbackNV), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBeginTransformFeedbackNV""' of type '""PFNGLBEGINTRANSFORMFEEDBACKNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindBufferBaseNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindBufferBaseNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindBufferBaseNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindBufferBaseNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindBufferBaseNV""' of type '""PFNGLBINDBUFFERBASENVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindBufferOffsetNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindBufferOffsetNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindBufferOffsetNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindBufferOffsetNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindBufferOffsetNV""' of type '""PFNGLBINDBUFFEROFFSETNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindBufferRangeNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindBufferRangeNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t_ptrdiff_t__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindBufferRangeNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindBufferRangeNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t_ptrdiff_t__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindBufferRangeNV""' of type '""PFNGLBINDBUFFERRANGENVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewEndTransformFeedbackNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewEndTransformFeedbackNV), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewEndTransformFeedbackNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewEndTransformFeedbackNV), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewEndTransformFeedbackNV""' of type '""PFNGLENDTRANSFORMFEEDBACKNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetActiveVaryingNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetActiveVaryingNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetActiveVaryingNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetActiveVaryingNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetActiveVaryingNV""' of type '""PFNGLGETACTIVEVARYINGNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTransformFeedbackVaryingNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTransformFeedbackVaryingNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTransformFeedbackVaryingNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTransformFeedbackVaryingNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTransformFeedbackVaryingNV""' of type '""PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVaryingLocationNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVaryingLocationNV), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVaryingLocationNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVaryingLocationNV), SWIGTYPE_p_f_unsigned_int_p_q_const__char__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVaryingLocationNV""' of type '""PFNGLGETVARYINGLOCATIONNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTransformFeedbackAttribsNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTransformFeedbackAttribsNV), SWIGTYPE_p_f_unsigned_int_p_q_const__int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTransformFeedbackAttribsNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTransformFeedbackAttribsNV), SWIGTYPE_p_f_unsigned_int_p_q_const__int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTransformFeedbackAttribsNV""' of type '""PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTransformFeedbackVaryingsNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTransformFeedbackVaryingsNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTransformFeedbackVaryingsNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTransformFeedbackVaryingsNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTransformFeedbackVaryingsNV""' of type '""PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFlushVertexArrayRangeNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFlushVertexArrayRangeNV), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFlushVertexArrayRangeNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFlushVertexArrayRangeNV), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFlushVertexArrayRangeNV""' of type '""PFNGLFLUSHVERTEXARRAYRANGENVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexArrayRangeNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexArrayRangeNV), SWIGTYPE_p_f_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexArrayRangeNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexArrayRangeNV), SWIGTYPE_p_f_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexArrayRangeNV""' of type '""PFNGLVERTEXARRAYRANGENVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewAreProgramsResidentNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewAreProgramsResidentNV), SWIGTYPE_p_f_int_p_q_const__unsigned_int_p_unsigned_char__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewAreProgramsResidentNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewAreProgramsResidentNV), SWIGTYPE_p_f_int_p_q_const__unsigned_int_p_unsigned_char__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewAreProgramsResidentNV""' of type '""PFNGLAREPROGRAMSRESIDENTNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewBindProgramNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewBindProgramNV), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewBindProgramNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewBindProgramNV), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewBindProgramNV""' of type '""PFNGLBINDPROGRAMNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteProgramsNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteProgramsNV), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteProgramsNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteProgramsNV), SWIGTYPE_p_f_int_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteProgramsNV""' of type '""PFNGLDELETEPROGRAMSNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewExecuteProgramNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewExecuteProgramNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewExecuteProgramNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewExecuteProgramNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewExecuteProgramNV""' of type '""PFNGLEXECUTEPROGRAMNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenProgramsNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenProgramsNV), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenProgramsNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenProgramsNV), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenProgramsNV""' of type '""PFNGLGENPROGRAMSNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramParameterdvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramParameterdvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramParameterdvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramParameterdvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramParameterdvNV""' of type '""PFNGLGETPROGRAMPARAMETERDVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramParameterfvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramParameterfvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramParameterfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramParameterfvNV""' of type '""PFNGLGETPROGRAMPARAMETERFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramStringNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramStringNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramStringNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramStringNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramStringNV""' of type '""PFNGLGETPROGRAMSTRINGNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetProgramivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetProgramivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetProgramivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetProgramivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetProgramivNV""' of type '""PFNGLGETPROGRAMIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTrackMatrixivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTrackMatrixivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTrackMatrixivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTrackMatrixivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTrackMatrixivNV""' of type '""PFNGLGETTRACKMATRIXIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribPointervNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribPointervNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribPointervNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribPointervNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribPointervNV""' of type '""PFNGLGETVERTEXATTRIBPOINTERVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribdvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribdvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribdvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribdvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribdvNV""' of type '""PFNGLGETVERTEXATTRIBDVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribfvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribfvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribfvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribfvNV""' of type '""PFNGLGETVERTEXATTRIBFVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribivNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetVertexAttribivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetVertexAttribivNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetVertexAttribivNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetVertexAttribivNV""' of type '""PFNGLGETVERTEXATTRIBIVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsProgramNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsProgramNV), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsProgramNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsProgramNV), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsProgramNV""' of type '""PFNGLISPROGRAMNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewLoadProgramNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewLoadProgramNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewLoadProgramNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewLoadProgramNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewLoadProgramNV""' of type '""PFNGLLOADPROGRAMNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramParameter4dNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramParameter4dNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramParameter4dNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramParameter4dNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramParameter4dNV""' of type '""PFNGLPROGRAMPARAMETER4DNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramParameter4dvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramParameter4dvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramParameter4dvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramParameter4dvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramParameter4dvNV""' of type '""PFNGLPROGRAMPARAMETER4DVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramParameter4fNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramParameter4fNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramParameter4fNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramParameter4fNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramParameter4fNV""' of type '""PFNGLPROGRAMPARAMETER4FNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramParameter4fvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramParameter4fvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramParameter4fvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramParameter4fvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramParameter4fvNV""' of type '""PFNGLPROGRAMPARAMETER4FVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramParameters4dvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramParameters4dvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramParameters4dvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramParameters4dvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramParameters4dvNV""' of type '""PFNGLPROGRAMPARAMETERS4DVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewProgramParameters4fvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewProgramParameters4fvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewProgramParameters4fvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewProgramParameters4fvNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewProgramParameters4fvNV""' of type '""PFNGLPROGRAMPARAMETERS4FVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewRequestResidentProgramsNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewRequestResidentProgramsNV), SWIGTYPE_p_f_int_p_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewRequestResidentProgramsNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewRequestResidentProgramsNV), SWIGTYPE_p_f_int_p_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewRequestResidentProgramsNV""' of type '""PFNGLREQUESTRESIDENTPROGRAMSNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTrackMatrixNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTrackMatrixNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTrackMatrixNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTrackMatrixNV), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTrackMatrixNV""' of type '""PFNGLTRACKMATRIXNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1dNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1dNV), SWIGTYPE_p_f_unsigned_int_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1dNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1dNV), SWIGTYPE_p_f_unsigned_int_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1dNV""' of type '""PFNGLVERTEXATTRIB1DNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1dvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1dvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1dvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1dvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1dvNV""' of type '""PFNGLVERTEXATTRIB1DVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1fNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1fNV), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1fNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1fNV), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1fNV""' of type '""PFNGLVERTEXATTRIB1FNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1fvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1fvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1fvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1fvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1fvNV""' of type '""PFNGLVERTEXATTRIB1FVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1sNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1sNV), SWIGTYPE_p_f_unsigned_int_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1sNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1sNV), SWIGTYPE_p_f_unsigned_int_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1sNV""' of type '""PFNGLVERTEXATTRIB1SNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1svNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib1svNV), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib1svNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib1svNV), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib1svNV""' of type '""PFNGLVERTEXATTRIB1SVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2dNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2dNV), SWIGTYPE_p_f_unsigned_int_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2dNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2dNV), SWIGTYPE_p_f_unsigned_int_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2dNV""' of type '""PFNGLVERTEXATTRIB2DNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2dvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2dvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2dvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2dvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2dvNV""' of type '""PFNGLVERTEXATTRIB2DVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2fNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2fNV), SWIGTYPE_p_f_unsigned_int_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2fNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2fNV), SWIGTYPE_p_f_unsigned_int_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2fNV""' of type '""PFNGLVERTEXATTRIB2FNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2fvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2fvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2fvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2fvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2fvNV""' of type '""PFNGLVERTEXATTRIB2FVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2sNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2sNV), SWIGTYPE_p_f_unsigned_int_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2sNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2sNV), SWIGTYPE_p_f_unsigned_int_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2sNV""' of type '""PFNGLVERTEXATTRIB2SNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2svNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib2svNV), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib2svNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib2svNV), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib2svNV""' of type '""PFNGLVERTEXATTRIB2SVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3dNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3dNV), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3dNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3dNV), SWIGTYPE_p_f_unsigned_int_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3dNV""' of type '""PFNGLVERTEXATTRIB3DNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3dvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3dvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3dvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3dvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3dvNV""' of type '""PFNGLVERTEXATTRIB3DVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3fNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3fNV), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3fNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3fNV), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3fNV""' of type '""PFNGLVERTEXATTRIB3FNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3fvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3fvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3fvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3fvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3fvNV""' of type '""PFNGLVERTEXATTRIB3FVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3sNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3sNV), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3sNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3sNV), SWIGTYPE_p_f_unsigned_int_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3sNV""' of type '""PFNGLVERTEXATTRIB3SNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3svNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib3svNV), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib3svNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib3svNV), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib3svNV""' of type '""PFNGLVERTEXATTRIB3SVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4dNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4dNV), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4dNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4dNV), SWIGTYPE_p_f_unsigned_int_double_double_double_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4dNV""' of type '""PFNGLVERTEXATTRIB4DNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4dvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4dvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4dvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4dvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4dvNV""' of type '""PFNGLVERTEXATTRIB4DVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4fNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4fNV), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4fNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4fNV), SWIGTYPE_p_f_unsigned_int_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4fNV""' of type '""PFNGLVERTEXATTRIB4FNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4fvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4fvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4fvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4fvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4fvNV""' of type '""PFNGLVERTEXATTRIB4FVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4sNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4sNV), SWIGTYPE_p_f_unsigned_int_short_short_short_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4sNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4sNV), SWIGTYPE_p_f_unsigned_int_short_short_short_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4sNV""' of type '""PFNGLVERTEXATTRIB4SNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4svNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4svNV), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4svNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4svNV), SWIGTYPE_p_f_unsigned_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4svNV""' of type '""PFNGLVERTEXATTRIB4SVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4ubNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4ubNV), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4ubNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4ubNV), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4ubNV""' of type '""PFNGLVERTEXATTRIB4UBNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4ubvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttrib4ubvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttrib4ubvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttrib4ubvNV), SWIGTYPE_p_f_unsigned_int_p_q_const__unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttrib4ubvNV""' of type '""PFNGLVERTEXATTRIB4UBVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribPointerNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribPointerNV), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribPointerNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribPointerNV), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribPointerNV""' of type '""PFNGLVERTEXATTRIBPOINTERNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs1dvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs1dvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs1dvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs1dvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs1dvNV""' of type '""PFNGLVERTEXATTRIBS1DVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs1fvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs1fvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs1fvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs1fvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs1fvNV""' of type '""PFNGLVERTEXATTRIBS1FVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs1svNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs1svNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs1svNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs1svNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs1svNV""' of type '""PFNGLVERTEXATTRIBS1SVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs2dvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs2dvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs2dvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs2dvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs2dvNV""' of type '""PFNGLVERTEXATTRIBS2DVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs2fvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs2fvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs2fvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs2fvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs2fvNV""' of type '""PFNGLVERTEXATTRIBS2FVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs2svNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs2svNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs2svNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs2svNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs2svNV""' of type '""PFNGLVERTEXATTRIBS2SVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs3dvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs3dvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs3dvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs3dvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs3dvNV""' of type '""PFNGLVERTEXATTRIBS3DVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs3fvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs3fvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs3fvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs3fvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs3fvNV""' of type '""PFNGLVERTEXATTRIBS3FVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs3svNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs3svNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs3svNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs3svNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs3svNV""' of type '""PFNGLVERTEXATTRIBS3SVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs4dvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs4dvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs4dvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs4dvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs4dvNV""' of type '""PFNGLVERTEXATTRIBS4DVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs4fvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs4fvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs4fvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs4fvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs4fvNV""' of type '""PFNGLVERTEXATTRIBS4FVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs4svNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs4svNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs4svNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs4svNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs4svNV""' of type '""PFNGLVERTEXATTRIBS4SVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs4ubvNV_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewVertexAttribs4ubvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewVertexAttribs4ubvNV_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewVertexAttribs4ubvNV), SWIGTYPE_p_f_unsigned_int_int_p_q_const__unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewVertexAttribs4ubvNV""' of type '""PFNGLVERTEXATTRIBS4UBVNVPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClearDepthfOES_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClearDepthfOES), SWIGTYPE_p_f_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClearDepthfOES_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClearDepthfOES), SWIGTYPE_p_f_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClearDepthfOES""' of type '""PFNGLCLEARDEPTHFOESPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewClipPlanefOES_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewClipPlanefOES), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewClipPlanefOES_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewClipPlanefOES), SWIGTYPE_p_f_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewClipPlanefOES""' of type '""PFNGLCLIPPLANEFOESPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDepthRangefOES_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDepthRangefOES), SWIGTYPE_p_f_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDepthRangefOES_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDepthRangefOES), SWIGTYPE_p_f_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDepthRangefOES""' of type '""PFNGLDEPTHRANGEFOESPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFrustumfOES_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFrustumfOES), SWIGTYPE_p_f_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFrustumfOES_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFrustumfOES), SWIGTYPE_p_f_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFrustumfOES""' of type '""PFNGLFRUSTUMFOESPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetClipPlanefOES_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetClipPlanefOES), SWIGTYPE_p_f_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetClipPlanefOES_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetClipPlanefOES), SWIGTYPE_p_f_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetClipPlanefOES""' of type '""PFNGLGETCLIPPLANEFOESPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewOrthofOES_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewOrthofOES), SWIGTYPE_p_f_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewOrthofOES_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewOrthofOES), SWIGTYPE_p_f_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewOrthofOES""' of type '""PFNGLORTHOFOESPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDetailTexFuncSGIS_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDetailTexFuncSGIS), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDetailTexFuncSGIS_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDetailTexFuncSGIS), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDetailTexFuncSGIS""' of type '""PFNGLDETAILTEXFUNCSGISPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetDetailTexFuncSGIS_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetDetailTexFuncSGIS), SWIGTYPE_p_f_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetDetailTexFuncSGIS_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetDetailTexFuncSGIS), SWIGTYPE_p_f_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetDetailTexFuncSGIS""' of type '""PFNGLGETDETAILTEXFUNCSGISPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFogFuncSGIS_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFogFuncSGIS), SWIGTYPE_p_f_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFogFuncSGIS_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFogFuncSGIS), SWIGTYPE_p_f_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFogFuncSGIS""' of type '""PFNGLFOGFUNCSGISPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFogFuncSGIS_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFogFuncSGIS), SWIGTYPE_p_f_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFogFuncSGIS_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFogFuncSGIS), SWIGTYPE_p_f_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFogFuncSGIS""' of type '""PFNGLGETFOGFUNCSGISPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSampleMaskSGIS_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSampleMaskSGIS), SWIGTYPE_p_f_float_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSampleMaskSGIS_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSampleMaskSGIS), SWIGTYPE_p_f_float_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSampleMaskSGIS""' of type '""PFNGLSAMPLEMASKSGISPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSamplePatternSGIS_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSamplePatternSGIS), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSamplePatternSGIS_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSamplePatternSGIS), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSamplePatternSGIS""' of type '""PFNGLSAMPLEPATTERNSGISPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetSharpenTexFuncSGIS_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetSharpenTexFuncSGIS), SWIGTYPE_p_f_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetSharpenTexFuncSGIS_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetSharpenTexFuncSGIS), SWIGTYPE_p_f_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetSharpenTexFuncSGIS""' of type '""PFNGLGETSHARPENTEXFUNCSGISPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSharpenTexFuncSGIS_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSharpenTexFuncSGIS), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSharpenTexFuncSGIS_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSharpenTexFuncSGIS), SWIGTYPE_p_f_unsigned_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSharpenTexFuncSGIS""' of type '""PFNGLSHARPENTEXFUNCSGISPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexImage4DSGIS_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexImage4DSGIS), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexImage4DSGIS_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexImage4DSGIS), SWIGTYPE_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexImage4DSGIS""' of type '""PFNGLTEXIMAGE4DSGISPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexSubImage4DSGIS_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexSubImage4DSGIS), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexSubImage4DSGIS_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexSubImage4DSGIS), SWIGTYPE_p_f_unsigned_int_int_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexSubImage4DSGIS""' of type '""PFNGLTEXSUBIMAGE4DSGISPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetTexFilterFuncSGIS_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetTexFilterFuncSGIS), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetTexFilterFuncSGIS_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetTexFilterFuncSGIS), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetTexFilterFuncSGIS""' of type '""PFNGLGETTEXFILTERFUNCSGISPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexFilterFuncSGIS_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexFilterFuncSGIS), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexFilterFuncSGIS_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexFilterFuncSGIS), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexFilterFuncSGIS""' of type '""PFNGLTEXFILTERFUNCSGISPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewAsyncMarkerSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewAsyncMarkerSGIX), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewAsyncMarkerSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewAsyncMarkerSGIX), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewAsyncMarkerSGIX""' of type '""PFNGLASYNCMARKERSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewDeleteAsyncMarkersSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewDeleteAsyncMarkersSGIX), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewDeleteAsyncMarkersSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewDeleteAsyncMarkersSGIX), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewDeleteAsyncMarkersSGIX""' of type '""PFNGLDELETEASYNCMARKERSSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFinishAsyncSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFinishAsyncSGIX), SWIGTYPE_p_f_p_unsigned_int__int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFinishAsyncSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFinishAsyncSGIX), SWIGTYPE_p_f_p_unsigned_int__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFinishAsyncSGIX""' of type '""PFNGLFINISHASYNCSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGenAsyncMarkersSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGenAsyncMarkersSGIX), SWIGTYPE_p_f_int__unsigned_int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGenAsyncMarkersSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGenAsyncMarkersSGIX), SWIGTYPE_p_f_int__unsigned_int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGenAsyncMarkersSGIX""' of type '""PFNGLGENASYNCMARKERSSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewIsAsyncMarkerSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewIsAsyncMarkerSGIX), SWIGTYPE_p_f_unsigned_int__unsigned_char);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewIsAsyncMarkerSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewIsAsyncMarkerSGIX), SWIGTYPE_p_f_unsigned_int__unsigned_char);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewIsAsyncMarkerSGIX""' of type '""PFNGLISASYNCMARKERSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPollAsyncSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPollAsyncSGIX), SWIGTYPE_p_f_p_unsigned_int__int);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPollAsyncSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPollAsyncSGIX), SWIGTYPE_p_f_p_unsigned_int__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPollAsyncSGIX""' of type '""PFNGLPOLLASYNCSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFlushRasterSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFlushRasterSGIX), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFlushRasterSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFlushRasterSGIX), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFlushRasterSGIX""' of type '""PFNGLFLUSHRASTERSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTextureFogSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTextureFogSGIX), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTextureFogSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTextureFogSGIX), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTextureFogSGIX""' of type '""PFNGLTEXTUREFOGSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentColorMaterialSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentColorMaterialSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentColorMaterialSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentColorMaterialSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentColorMaterialSGIX""' of type '""PFNGLFRAGMENTCOLORMATERIALSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModelfSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightModelfSGIX), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModelfSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightModelfSGIX), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightModelfSGIX""' of type '""PFNGLFRAGMENTLIGHTMODELFSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModelfvSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightModelfvSGIX), SWIGTYPE_p_f_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModelfvSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightModelfvSGIX), SWIGTYPE_p_f_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightModelfvSGIX""' of type '""PFNGLFRAGMENTLIGHTMODELFVSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModeliSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightModeliSGIX), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModeliSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightModeliSGIX), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightModeliSGIX""' of type '""PFNGLFRAGMENTLIGHTMODELISGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModelivSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightModelivSGIX), SWIGTYPE_p_f_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightModelivSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightModelivSGIX), SWIGTYPE_p_f_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightModelivSGIX""' of type '""PFNGLFRAGMENTLIGHTMODELIVSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightfSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightfSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightfSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightfSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightfSGIX""' of type '""PFNGLFRAGMENTLIGHTFSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightfvSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightfvSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightfvSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightfvSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightfvSGIX""' of type '""PFNGLFRAGMENTLIGHTFVSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightiSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightiSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightiSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightiSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightiSGIX""' of type '""PFNGLFRAGMENTLIGHTISGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightivSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentLightivSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentLightivSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentLightivSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentLightivSGIX""' of type '""PFNGLFRAGMENTLIGHTIVSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialfSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentMaterialfSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialfSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentMaterialfSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentMaterialfSGIX""' of type '""PFNGLFRAGMENTMATERIALFSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialfvSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentMaterialfvSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialfvSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentMaterialfvSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentMaterialfvSGIX""' of type '""PFNGLFRAGMENTMATERIALFVSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialiSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentMaterialiSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialiSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentMaterialiSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentMaterialiSGIX""' of type '""PFNGLFRAGMENTMATERIALISGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialivSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFragmentMaterialivSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFragmentMaterialivSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFragmentMaterialivSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFragmentMaterialivSGIX""' of type '""PFNGLFRAGMENTMATERIALIVSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentLightfvSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFragmentLightfvSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentLightfvSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFragmentLightfvSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFragmentLightfvSGIX""' of type '""PFNGLGETFRAGMENTLIGHTFVSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentLightivSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFragmentLightivSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentLightivSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFragmentLightivSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFragmentLightivSGIX""' of type '""PFNGLGETFRAGMENTLIGHTIVSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentMaterialfvSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFragmentMaterialfvSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentMaterialfvSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFragmentMaterialfvSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFragmentMaterialfvSGIX""' of type '""PFNGLGETFRAGMENTMATERIALFVSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentMaterialivSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetFragmentMaterialivSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetFragmentMaterialivSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetFragmentMaterialivSGIX), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetFragmentMaterialivSGIX""' of type '""PFNGLGETFRAGMENTMATERIALIVSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFrameZoomSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFrameZoomSGIX), SWIGTYPE_p_f_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFrameZoomSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFrameZoomSGIX), SWIGTYPE_p_f_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFrameZoomSGIX""' of type '""PFNGLFRAMEZOOMSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewPixelTexGenSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewPixelTexGenSGIX), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewPixelTexGenSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewPixelTexGenSGIX), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewPixelTexGenSGIX""' of type '""PFNGLPIXELTEXGENSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReferencePlaneSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReferencePlaneSGIX), SWIGTYPE_p_f_p_q_const__double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReferencePlaneSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReferencePlaneSGIX), SWIGTYPE_p_f_p_q_const__double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReferencePlaneSGIX""' of type '""PFNGLREFERENCEPLANESGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSpriteParameterfSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSpriteParameterfSGIX), SWIGTYPE_p_f_unsigned_int_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSpriteParameterfSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSpriteParameterfSGIX), SWIGTYPE_p_f_unsigned_int_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSpriteParameterfSGIX""' of type '""PFNGLSPRITEPARAMETERFSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSpriteParameterfvSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSpriteParameterfvSGIX), SWIGTYPE_p_f_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSpriteParameterfvSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSpriteParameterfvSGIX), SWIGTYPE_p_f_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSpriteParameterfvSGIX""' of type '""PFNGLSPRITEPARAMETERFVSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSpriteParameteriSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSpriteParameteriSGIX), SWIGTYPE_p_f_unsigned_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSpriteParameteriSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSpriteParameteriSGIX), SWIGTYPE_p_f_unsigned_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSpriteParameteriSGIX""' of type '""PFNGLSPRITEPARAMETERISGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewSpriteParameterivSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewSpriteParameterivSGIX), SWIGTYPE_p_f_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewSpriteParameterivSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewSpriteParameterivSGIX), SWIGTYPE_p_f_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewSpriteParameterivSGIX""' of type '""PFNGLSPRITEPARAMETERIVSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTagSampleBufferSGIX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTagSampleBufferSGIX), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTagSampleBufferSGIX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTagSampleBufferSGIX), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTagSampleBufferSGIX""' of type '""PFNGLTAGSAMPLEBUFFERSGIXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorTableParameterfvSGI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorTableParameterfvSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorTableParameterfvSGI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorTableParameterfvSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorTableParameterfvSGI""' of type '""PFNGLCOLORTABLEPARAMETERFVSGIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorTableParameterivSGI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorTableParameterivSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorTableParameterivSGI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorTableParameterivSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_q_const__int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorTableParameterivSGI""' of type '""PFNGLCOLORTABLEPARAMETERIVSGIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColorTableSGI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColorTableSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColorTableSGI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColorTableSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColorTableSGI""' of type '""PFNGLCOLORTABLESGIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewCopyColorTableSGI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewCopyColorTableSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewCopyColorTableSGI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewCopyColorTableSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewCopyColorTableSGI""' of type '""PFNGLCOPYCOLORTABLESGIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableParameterfvSGI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetColorTableParameterfvSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableParameterfvSGI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetColorTableParameterfvSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetColorTableParameterfvSGI""' of type '""PFNGLGETCOLORTABLEPARAMETERFVSGIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableParameterivSGI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetColorTableParameterivSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableParameterivSGI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetColorTableParameterivSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_p_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetColorTableParameterivSGI""' of type '""PFNGLGETCOLORTABLEPARAMETERIVSGIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableSGI_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGetColorTableSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGetColorTableSGI_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGetColorTableSGI), SWIGTYPE_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGetColorTableSGI""' of type '""PFNGLGETCOLORTABLESGIPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewFinishTextureSUNX_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewFinishTextureSUNX), SWIGTYPE_p_f_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewFinishTextureSUNX_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewFinishTextureSUNX), SWIGTYPE_p_f_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewFinishTextureSUNX""' of type '""PFNGLFINISHTEXTURESUNXPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactorbSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGlobalAlphaFactorbSUN), SWIGTYPE_p_f_signed_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactorbSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGlobalAlphaFactorbSUN), SWIGTYPE_p_f_signed_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGlobalAlphaFactorbSUN""' of type '""PFNGLGLOBALALPHAFACTORBSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactordSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGlobalAlphaFactordSUN), SWIGTYPE_p_f_double__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactordSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGlobalAlphaFactordSUN), SWIGTYPE_p_f_double__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGlobalAlphaFactordSUN""' of type '""PFNGLGLOBALALPHAFACTORDSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactorfSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGlobalAlphaFactorfSUN), SWIGTYPE_p_f_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactorfSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGlobalAlphaFactorfSUN), SWIGTYPE_p_f_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGlobalAlphaFactorfSUN""' of type '""PFNGLGLOBALALPHAFACTORFSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactoriSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGlobalAlphaFactoriSUN), SWIGTYPE_p_f_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactoriSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGlobalAlphaFactoriSUN), SWIGTYPE_p_f_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGlobalAlphaFactoriSUN""' of type '""PFNGLGLOBALALPHAFACTORISUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactorsSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGlobalAlphaFactorsSUN), SWIGTYPE_p_f_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactorsSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGlobalAlphaFactorsSUN), SWIGTYPE_p_f_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGlobalAlphaFactorsSUN""' of type '""PFNGLGLOBALALPHAFACTORSSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactorubSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGlobalAlphaFactorubSUN), SWIGTYPE_p_f_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactorubSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGlobalAlphaFactorubSUN), SWIGTYPE_p_f_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGlobalAlphaFactorubSUN""' of type '""PFNGLGLOBALALPHAFACTORUBSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactoruiSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGlobalAlphaFactoruiSUN), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactoruiSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGlobalAlphaFactoruiSUN), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGlobalAlphaFactoruiSUN""' of type '""PFNGLGLOBALALPHAFACTORUISUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactorusSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewGlobalAlphaFactorusSUN), SWIGTYPE_p_f_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewGlobalAlphaFactorusSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewGlobalAlphaFactorusSUN), SWIGTYPE_p_f_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewGlobalAlphaFactorusSUN""' of type '""PFNGLGLOBALALPHAFACTORUSSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReadVideoPixelsSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReadVideoPixelsSUN), SWIGTYPE_p_f_int_int_int_int_unsigned_int_unsigned_int_p_void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReadVideoPixelsSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReadVideoPixelsSUN), SWIGTYPE_p_f_int_int_int_int_unsigned_int_unsigned_int_p_void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReadVideoPixelsSUN""' of type '""PFNGLREADVIDEOPIXELSSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodePointerSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodePointerSUN), SWIGTYPE_p_f_unsigned_int_int_p_q_const__void__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodePointerSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodePointerSUN), SWIGTYPE_p_f_unsigned_int_int_p_q_const__void__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodePointerSUN""' of type '""PFNGLREPLACEMENTCODEPOINTERSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeubSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeubSUN), SWIGTYPE_p_f_unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeubSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeubSUN), SWIGTYPE_p_f_unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeubSUN""' of type '""PFNGLREPLACEMENTCODEUBSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeubvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeubvSUN), SWIGTYPE_p_f_p_q_const__unsigned_char__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeubvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeubvSUN), SWIGTYPE_p_f_p_q_const__unsigned_char__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeubvSUN""' of type '""PFNGLREPLACEMENTCODEUBVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiSUN), SWIGTYPE_p_f_unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiSUN), SWIGTYPE_p_f_unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiSUN""' of type '""PFNGLREPLACEMENTCODEUISUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuivSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuivSUN), SWIGTYPE_p_f_p_q_const__unsigned_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuivSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuivSUN), SWIGTYPE_p_f_p_q_const__unsigned_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuivSUN""' of type '""PFNGLREPLACEMENTCODEUIVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeusSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeusSUN), SWIGTYPE_p_f_unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeusSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeusSUN), SWIGTYPE_p_f_unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeusSUN""' of type '""PFNGLREPLACEMENTCODEUSSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeusvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeusvSUN), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeusvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeusvSUN), SWIGTYPE_p_f_p_q_const__unsigned_short__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeusvSUN""' of type '""PFNGLREPLACEMENTCODEUSVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColor3fVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColor3fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColor3fVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColor3fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColor3fVertex3fSUN""' of type '""PFNGLCOLOR3FVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColor3fVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColor3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColor3fVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColor3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColor3fVertex3fvSUN""' of type '""PFNGLCOLOR3FVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColor4fNormal3fVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColor4fNormal3fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColor4fNormal3fVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColor4fNormal3fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColor4fNormal3fVertex3fSUN""' of type '""PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColor4fNormal3fVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColor4fNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColor4fNormal3fVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColor4fNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColor4fNormal3fVertex3fvSUN""' of type '""PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColor4ubVertex2fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColor4ubVertex2fSUN), SWIGTYPE_p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColor4ubVertex2fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColor4ubVertex2fSUN), SWIGTYPE_p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColor4ubVertex2fSUN""' of type '""PFNGLCOLOR4UBVERTEX2FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColor4ubVertex2fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColor4ubVertex2fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColor4ubVertex2fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColor4ubVertex2fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColor4ubVertex2fvSUN""' of type '""PFNGLCOLOR4UBVERTEX2FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColor4ubVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColor4ubVertex3fSUN), SWIGTYPE_p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColor4ubVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColor4ubVertex3fSUN), SWIGTYPE_p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColor4ubVertex3fSUN""' of type '""PFNGLCOLOR4UBVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewColor4ubVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewColor4ubVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewColor4ubVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewColor4ubVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewColor4ubVertex3fvSUN""' of type '""PFNGLCOLOR4UBVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormal3fVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormal3fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormal3fVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormal3fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormal3fVertex3fSUN""' of type '""PFNGLNORMAL3FVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewNormal3fVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewNormal3fVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewNormal3fVertex3fvSUN""' of type '""PFNGLNORMAL3FVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiColor3fVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiColor3fVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiColor3fVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiColor3fVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiColor3fVertex3fSUN""' of type '""PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiColor3fVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiColor3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiColor3fVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiColor3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiColor3fVertex3fvSUN""' of type '""PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiColor4fNormal3fVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiColor4fNormal3fVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiColor4fNormal3fVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiColor4fNormal3fVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiColor4fNormal3fVertex3fSUN""' of type '""PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiColor4fNormal3fVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiColor4fNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiColor4fNormal3fVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiColor4fNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiColor4fNormal3fVertex3fvSUN""' of type '""PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiColor4ubVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiColor4ubVertex3fSUN), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiColor4ubVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiColor4ubVertex3fSUN), SWIGTYPE_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiColor4ubVertex3fSUN""' of type '""PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiColor4ubVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiColor4ubVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiColor4ubVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiColor4ubVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiColor4ubVertex3fvSUN""' of type '""PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiNormal3fVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiNormal3fVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiNormal3fVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiNormal3fVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiNormal3fVertex3fSUN""' of type '""PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiNormal3fVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiNormal3fVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiNormal3fVertex3fvSUN""' of type '""PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN""' of type '""PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN""' of type '""PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN""' of type '""PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN""' of type '""PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiTexCoord2fVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiTexCoord2fVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiTexCoord2fVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiTexCoord2fVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiTexCoord2fVertex3fSUN""' of type '""PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiTexCoord2fVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiTexCoord2fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiTexCoord2fVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiTexCoord2fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiTexCoord2fVertex3fvSUN""' of type '""PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiVertex3fSUN), SWIGTYPE_p_f_unsigned_int_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiVertex3fSUN""' of type '""PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewReplacementCodeuiVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewReplacementCodeuiVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewReplacementCodeuiVertex3fvSUN), SWIGTYPE_p_f_p_q_const__unsigned_int_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewReplacementCodeuiVertex3fvSUN""' of type '""PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fColor3fVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord2fColor3fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fColor3fVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord2fColor3fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord2fColor3fVertex3fSUN""' of type '""PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fColor3fVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord2fColor3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fColor3fVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord2fColor3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord2fColor3fVertex3fvSUN""' of type '""PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fColor4fNormal3fVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord2fColor4fNormal3fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float_float_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fColor4fNormal3fVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord2fColor4fNormal3fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float_float_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord2fColor4fNormal3fVertex3fSUN""' of type '""PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fColor4fNormal3fVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord2fColor4fNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fColor4fNormal3fVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord2fColor4fNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord2fColor4fNormal3fVertex3fvSUN""' of type '""PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fColor4ubVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord2fColor4ubVertex3fSUN), SWIGTYPE_p_f_float_float_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fColor4ubVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord2fColor4ubVertex3fSUN), SWIGTYPE_p_f_float_float_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord2fColor4ubVertex3fSUN""' of type '""PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fColor4ubVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord2fColor4ubVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__unsigned_char_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fColor4ubVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord2fColor4ubVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__unsigned_char_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord2fColor4ubVertex3fvSUN""' of type '""PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fNormal3fVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord2fNormal3fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fNormal3fVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord2fNormal3fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord2fNormal3fVertex3fSUN""' of type '""PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fNormal3fVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord2fNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fNormal3fVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord2fNormal3fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord2fNormal3fVertex3fvSUN""' of type '""PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fVertex3fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord2fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fVertex3fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord2fVertex3fSUN), SWIGTYPE_p_f_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord2fVertex3fSUN""' of type '""PFNGLTEXCOORD2FVERTEX3FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fVertex3fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord2fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord2fVertex3fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord2fVertex3fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord2fVertex3fvSUN""' of type '""PFNGLTEXCOORD2FVERTEX3FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord4fColor4fNormal3fVertex4fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord4fColor4fNormal3fVertex4fSUN), SWIGTYPE_p_f_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord4fColor4fNormal3fVertex4fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord4fColor4fNormal3fVertex4fSUN), SWIGTYPE_p_f_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord4fColor4fNormal3fVertex4fSUN""' of type '""PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord4fColor4fNormal3fVertex4fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord4fColor4fNormal3fVertex4fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord4fColor4fNormal3fVertex4fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord4fColor4fNormal3fVertex4fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord4fColor4fNormal3fVertex4fvSUN""' of type '""PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord4fVertex4fSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord4fVertex4fSUN), SWIGTYPE_p_f_float_float_float_float_float_float_float_float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord4fVertex4fSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord4fVertex4fSUN), SWIGTYPE_p_f_float_float_float_float_float_float_float_float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord4fVertex4fSUN""' of type '""PFNGLTEXCOORD4FVERTEX4FSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewTexCoord4fVertex4fvSUN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewTexCoord4fVertex4fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewTexCoord4fVertex4fvSUN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewTexCoord4fVertex4fvSUN), SWIGTYPE_p_f_p_q_const__float_p_q_const__float__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewTexCoord4fVertex4fvSUN""' of type '""PFNGLTEXCOORD4FVERTEX4FVSUNPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___glewAddSwapHintRectWIN_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_NewFunctionPtrObj((void *)(__glewAddSwapHintRectWIN), SWIGTYPE_p_f_int_int_int_int__void);
  return _val;
}


SWIGINTERN VALUE
_wrap___glewAddSwapHintRectWIN_set(VALUE self, VALUE _val) {
  {
    int res = SWIG_ConvertFunctionPtr(_val, (void**)(&__glewAddSwapHintRectWIN), SWIGTYPE_p_f_int_int_int_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__glewAddSwapHintRectWIN""' of type '""PFNGLADDSWAPHINTRECTWINPROC""'"); 
    }
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_1_1_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_VERSION_1_1));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_1_1_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_VERSION_1_1""' of type '""GLboolean""'");
    }
    __GLEW_VERSION_1_1 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_1_2_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_VERSION_1_2));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_1_2_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_VERSION_1_2""' of type '""GLboolean""'");
    }
    __GLEW_VERSION_1_2 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_1_3_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_VERSION_1_3));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_1_3_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_VERSION_1_3""' of type '""GLboolean""'");
    }
    __GLEW_VERSION_1_3 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_1_4_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_VERSION_1_4));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_1_4_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_VERSION_1_4""' of type '""GLboolean""'");
    }
    __GLEW_VERSION_1_4 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_1_5_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_VERSION_1_5));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_1_5_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_VERSION_1_5""' of type '""GLboolean""'");
    }
    __GLEW_VERSION_1_5 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_2_0_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_VERSION_2_0));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_2_0_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_VERSION_2_0""' of type '""GLboolean""'");
    }
    __GLEW_VERSION_2_0 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_2_1_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_VERSION_2_1));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_2_1_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_VERSION_2_1""' of type '""GLboolean""'");
    }
    __GLEW_VERSION_2_1 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_3_0_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_VERSION_3_0));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_VERSION_3_0_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_VERSION_3_0""' of type '""GLboolean""'");
    }
    __GLEW_VERSION_3_0 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_3DFX_multisample_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_3DFX_multisample));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_3DFX_multisample_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_3DFX_multisample""' of type '""GLboolean""'");
    }
    __GLEW_3DFX_multisample = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_3DFX_tbuffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_3DFX_tbuffer));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_3DFX_tbuffer_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_3DFX_tbuffer""' of type '""GLboolean""'");
    }
    __GLEW_3DFX_tbuffer = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_3DFX_texture_compression_FXT1_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_3DFX_texture_compression_FXT1));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_3DFX_texture_compression_FXT1_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_3DFX_texture_compression_FXT1""' of type '""GLboolean""'");
    }
    __GLEW_3DFX_texture_compression_FXT1 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_client_storage_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_APPLE_client_storage));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_client_storage_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_APPLE_client_storage""' of type '""GLboolean""'");
    }
    __GLEW_APPLE_client_storage = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_element_array_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_APPLE_element_array));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_element_array_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_APPLE_element_array""' of type '""GLboolean""'");
    }
    __GLEW_APPLE_element_array = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_fence_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_APPLE_fence));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_fence_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_APPLE_fence""' of type '""GLboolean""'");
    }
    __GLEW_APPLE_fence = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_float_pixels_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_APPLE_float_pixels));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_float_pixels_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_APPLE_float_pixels""' of type '""GLboolean""'");
    }
    __GLEW_APPLE_float_pixels = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_flush_buffer_range_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_APPLE_flush_buffer_range));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_flush_buffer_range_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_APPLE_flush_buffer_range""' of type '""GLboolean""'");
    }
    __GLEW_APPLE_flush_buffer_range = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_pixel_buffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_APPLE_pixel_buffer));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_pixel_buffer_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_APPLE_pixel_buffer""' of type '""GLboolean""'");
    }
    __GLEW_APPLE_pixel_buffer = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_specular_vector_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_APPLE_specular_vector));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_specular_vector_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_APPLE_specular_vector""' of type '""GLboolean""'");
    }
    __GLEW_APPLE_specular_vector = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_texture_range_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_APPLE_texture_range));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_texture_range_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_APPLE_texture_range""' of type '""GLboolean""'");
    }
    __GLEW_APPLE_texture_range = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_transform_hint_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_APPLE_transform_hint));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_transform_hint_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_APPLE_transform_hint""' of type '""GLboolean""'");
    }
    __GLEW_APPLE_transform_hint = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_vertex_array_object_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_APPLE_vertex_array_object));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_vertex_array_object_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_APPLE_vertex_array_object""' of type '""GLboolean""'");
    }
    __GLEW_APPLE_vertex_array_object = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_vertex_array_range_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_APPLE_vertex_array_range));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_vertex_array_range_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_APPLE_vertex_array_range""' of type '""GLboolean""'");
    }
    __GLEW_APPLE_vertex_array_range = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_ycbcr_422_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_APPLE_ycbcr_422));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_APPLE_ycbcr_422_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_APPLE_ycbcr_422""' of type '""GLboolean""'");
    }
    __GLEW_APPLE_ycbcr_422 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_color_buffer_float_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_color_buffer_float));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_color_buffer_float_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_color_buffer_float""' of type '""GLboolean""'");
    }
    __GLEW_ARB_color_buffer_float = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_depth_buffer_float_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_depth_buffer_float));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_depth_buffer_float_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_depth_buffer_float""' of type '""GLboolean""'");
    }
    __GLEW_ARB_depth_buffer_float = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_depth_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_depth_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_depth_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_depth_texture""' of type '""GLboolean""'");
    }
    __GLEW_ARB_depth_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_draw_buffers_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_draw_buffers));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_draw_buffers_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_draw_buffers""' of type '""GLboolean""'");
    }
    __GLEW_ARB_draw_buffers = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_draw_instanced_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_draw_instanced));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_draw_instanced_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_draw_instanced""' of type '""GLboolean""'");
    }
    __GLEW_ARB_draw_instanced = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_fragment_program_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_fragment_program));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_fragment_program_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_fragment_program""' of type '""GLboolean""'");
    }
    __GLEW_ARB_fragment_program = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_fragment_program_shadow_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_fragment_program_shadow));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_fragment_program_shadow_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_fragment_program_shadow""' of type '""GLboolean""'");
    }
    __GLEW_ARB_fragment_program_shadow = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_fragment_shader_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_fragment_shader));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_fragment_shader_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_fragment_shader""' of type '""GLboolean""'");
    }
    __GLEW_ARB_fragment_shader = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_framebuffer_object_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_framebuffer_object));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_framebuffer_object_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_framebuffer_object""' of type '""GLboolean""'");
    }
    __GLEW_ARB_framebuffer_object = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_framebuffer_sRGB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_framebuffer_sRGB));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_framebuffer_sRGB_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_framebuffer_sRGB""' of type '""GLboolean""'");
    }
    __GLEW_ARB_framebuffer_sRGB = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_geometry_shader4_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_geometry_shader4));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_geometry_shader4_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_geometry_shader4""' of type '""GLboolean""'");
    }
    __GLEW_ARB_geometry_shader4 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_half_float_pixel_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_half_float_pixel));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_half_float_pixel_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_half_float_pixel""' of type '""GLboolean""'");
    }
    __GLEW_ARB_half_float_pixel = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_half_float_vertex_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_half_float_vertex));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_half_float_vertex_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_half_float_vertex""' of type '""GLboolean""'");
    }
    __GLEW_ARB_half_float_vertex = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_imaging_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_imaging));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_imaging_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_imaging""' of type '""GLboolean""'");
    }
    __GLEW_ARB_imaging = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_instanced_arrays_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_instanced_arrays));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_instanced_arrays_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_instanced_arrays""' of type '""GLboolean""'");
    }
    __GLEW_ARB_instanced_arrays = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_map_buffer_range_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_map_buffer_range));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_map_buffer_range_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_map_buffer_range""' of type '""GLboolean""'");
    }
    __GLEW_ARB_map_buffer_range = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_matrix_palette_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_matrix_palette));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_matrix_palette_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_matrix_palette""' of type '""GLboolean""'");
    }
    __GLEW_ARB_matrix_palette = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_multisample_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_multisample));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_multisample_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_multisample""' of type '""GLboolean""'");
    }
    __GLEW_ARB_multisample = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_multitexture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_multitexture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_multitexture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_multitexture""' of type '""GLboolean""'");
    }
    __GLEW_ARB_multitexture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_occlusion_query_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_occlusion_query));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_occlusion_query_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_occlusion_query""' of type '""GLboolean""'");
    }
    __GLEW_ARB_occlusion_query = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_pixel_buffer_object_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_pixel_buffer_object));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_pixel_buffer_object_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_pixel_buffer_object""' of type '""GLboolean""'");
    }
    __GLEW_ARB_pixel_buffer_object = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_point_parameters_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_point_parameters));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_point_parameters_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_point_parameters""' of type '""GLboolean""'");
    }
    __GLEW_ARB_point_parameters = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_point_sprite_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_point_sprite));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_point_sprite_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_point_sprite""' of type '""GLboolean""'");
    }
    __GLEW_ARB_point_sprite = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_shader_objects_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_shader_objects));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_shader_objects_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_shader_objects""' of type '""GLboolean""'");
    }
    __GLEW_ARB_shader_objects = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_shading_language_100_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_shading_language_100));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_shading_language_100_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_shading_language_100""' of type '""GLboolean""'");
    }
    __GLEW_ARB_shading_language_100 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_shadow_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_shadow));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_shadow_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_shadow""' of type '""GLboolean""'");
    }
    __GLEW_ARB_shadow = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_shadow_ambient_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_shadow_ambient));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_shadow_ambient_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_shadow_ambient""' of type '""GLboolean""'");
    }
    __GLEW_ARB_shadow_ambient = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_border_clamp_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_border_clamp));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_border_clamp_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_border_clamp""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_border_clamp = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_buffer_object_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_buffer_object));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_buffer_object_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_buffer_object""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_buffer_object = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_compression_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_compression));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_compression_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_compression""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_compression = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_compression_rgtc_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_compression_rgtc));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_compression_rgtc_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_compression_rgtc""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_compression_rgtc = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_cube_map_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_cube_map));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_cube_map_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_cube_map""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_cube_map = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_env_add_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_env_add));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_env_add_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_env_add""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_env_add = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_env_combine_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_env_combine));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_env_combine_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_env_combine""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_env_combine = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_env_crossbar_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_env_crossbar));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_env_crossbar_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_env_crossbar""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_env_crossbar = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_env_dot3_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_env_dot3));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_env_dot3_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_env_dot3""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_env_dot3 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_float_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_float));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_float_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_float""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_float = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_mirrored_repeat_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_mirrored_repeat));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_mirrored_repeat_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_mirrored_repeat""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_mirrored_repeat = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_non_power_of_two_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_non_power_of_two));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_non_power_of_two_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_non_power_of_two""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_non_power_of_two = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_rectangle_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_rectangle));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_rectangle_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_rectangle""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_rectangle = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_rg_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_texture_rg));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_texture_rg_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_texture_rg""' of type '""GLboolean""'");
    }
    __GLEW_ARB_texture_rg = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_transpose_matrix_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_transpose_matrix));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_transpose_matrix_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_transpose_matrix""' of type '""GLboolean""'");
    }
    __GLEW_ARB_transpose_matrix = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_vertex_array_object_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_vertex_array_object));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_vertex_array_object_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_vertex_array_object""' of type '""GLboolean""'");
    }
    __GLEW_ARB_vertex_array_object = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_vertex_blend_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_vertex_blend));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_vertex_blend_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_vertex_blend""' of type '""GLboolean""'");
    }
    __GLEW_ARB_vertex_blend = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_vertex_buffer_object_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_vertex_buffer_object));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_vertex_buffer_object_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_vertex_buffer_object""' of type '""GLboolean""'");
    }
    __GLEW_ARB_vertex_buffer_object = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_vertex_program_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_vertex_program));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_vertex_program_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_vertex_program""' of type '""GLboolean""'");
    }
    __GLEW_ARB_vertex_program = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_vertex_shader_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_vertex_shader));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_vertex_shader_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_vertex_shader""' of type '""GLboolean""'");
    }
    __GLEW_ARB_vertex_shader = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_window_pos_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ARB_window_pos));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ARB_window_pos_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ARB_window_pos""' of type '""GLboolean""'");
    }
    __GLEW_ARB_window_pos = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATIX_point_sprites_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATIX_point_sprites));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATIX_point_sprites_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATIX_point_sprites""' of type '""GLboolean""'");
    }
    __GLEW_ATIX_point_sprites = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATIX_texture_env_combine3_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATIX_texture_env_combine3));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATIX_texture_env_combine3_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATIX_texture_env_combine3""' of type '""GLboolean""'");
    }
    __GLEW_ATIX_texture_env_combine3 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATIX_texture_env_route_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATIX_texture_env_route));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATIX_texture_env_route_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATIX_texture_env_route""' of type '""GLboolean""'");
    }
    __GLEW_ATIX_texture_env_route = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATIX_vertex_shader_output_point_size_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATIX_vertex_shader_output_point_size));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATIX_vertex_shader_output_point_size_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATIX_vertex_shader_output_point_size""' of type '""GLboolean""'");
    }
    __GLEW_ATIX_vertex_shader_output_point_size = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_draw_buffers_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_draw_buffers));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_draw_buffers_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_draw_buffers""' of type '""GLboolean""'");
    }
    __GLEW_ATI_draw_buffers = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_element_array_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_element_array));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_element_array_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_element_array""' of type '""GLboolean""'");
    }
    __GLEW_ATI_element_array = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_envmap_bumpmap_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_envmap_bumpmap));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_envmap_bumpmap_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_envmap_bumpmap""' of type '""GLboolean""'");
    }
    __GLEW_ATI_envmap_bumpmap = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_fragment_shader_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_fragment_shader));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_fragment_shader_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_fragment_shader""' of type '""GLboolean""'");
    }
    __GLEW_ATI_fragment_shader = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_map_object_buffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_map_object_buffer));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_map_object_buffer_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_map_object_buffer""' of type '""GLboolean""'");
    }
    __GLEW_ATI_map_object_buffer = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_pn_triangles_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_pn_triangles));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_pn_triangles_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_pn_triangles""' of type '""GLboolean""'");
    }
    __GLEW_ATI_pn_triangles = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_separate_stencil_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_separate_stencil));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_separate_stencil_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_separate_stencil""' of type '""GLboolean""'");
    }
    __GLEW_ATI_separate_stencil = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_shader_texture_lod_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_shader_texture_lod));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_shader_texture_lod_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_shader_texture_lod""' of type '""GLboolean""'");
    }
    __GLEW_ATI_shader_texture_lod = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_text_fragment_shader_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_text_fragment_shader));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_text_fragment_shader_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_text_fragment_shader""' of type '""GLboolean""'");
    }
    __GLEW_ATI_text_fragment_shader = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_texture_compression_3dc_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_texture_compression_3dc));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_texture_compression_3dc_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_texture_compression_3dc""' of type '""GLboolean""'");
    }
    __GLEW_ATI_texture_compression_3dc = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_texture_env_combine3_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_texture_env_combine3));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_texture_env_combine3_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_texture_env_combine3""' of type '""GLboolean""'");
    }
    __GLEW_ATI_texture_env_combine3 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_texture_float_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_texture_float));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_texture_float_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_texture_float""' of type '""GLboolean""'");
    }
    __GLEW_ATI_texture_float = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_texture_mirror_once_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_texture_mirror_once));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_texture_mirror_once_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_texture_mirror_once""' of type '""GLboolean""'");
    }
    __GLEW_ATI_texture_mirror_once = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_vertex_array_object_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_vertex_array_object));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_vertex_array_object_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_vertex_array_object""' of type '""GLboolean""'");
    }
    __GLEW_ATI_vertex_array_object = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_vertex_attrib_array_object_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_vertex_attrib_array_object));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_vertex_attrib_array_object_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_vertex_attrib_array_object""' of type '""GLboolean""'");
    }
    __GLEW_ATI_vertex_attrib_array_object = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_vertex_streams_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_ATI_vertex_streams));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_ATI_vertex_streams_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_ATI_vertex_streams""' of type '""GLboolean""'");
    }
    __GLEW_ATI_vertex_streams = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_422_pixels_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_422_pixels));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_422_pixels_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_422_pixels""' of type '""GLboolean""'");
    }
    __GLEW_EXT_422_pixels = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_Cg_shader_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_Cg_shader));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_Cg_shader_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_Cg_shader""' of type '""GLboolean""'");
    }
    __GLEW_EXT_Cg_shader = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_abgr_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_abgr));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_abgr_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_abgr""' of type '""GLboolean""'");
    }
    __GLEW_EXT_abgr = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_bgra_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_bgra));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_bgra_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_bgra""' of type '""GLboolean""'");
    }
    __GLEW_EXT_bgra = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_bindable_uniform_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_bindable_uniform));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_bindable_uniform_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_bindable_uniform""' of type '""GLboolean""'");
    }
    __GLEW_EXT_bindable_uniform = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_blend_color_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_blend_color));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_blend_color_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_blend_color""' of type '""GLboolean""'");
    }
    __GLEW_EXT_blend_color = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_blend_equation_separate_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_blend_equation_separate));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_blend_equation_separate_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_blend_equation_separate""' of type '""GLboolean""'");
    }
    __GLEW_EXT_blend_equation_separate = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_blend_func_separate_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_blend_func_separate));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_blend_func_separate_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_blend_func_separate""' of type '""GLboolean""'");
    }
    __GLEW_EXT_blend_func_separate = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_blend_logic_op_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_blend_logic_op));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_blend_logic_op_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_blend_logic_op""' of type '""GLboolean""'");
    }
    __GLEW_EXT_blend_logic_op = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_blend_minmax_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_blend_minmax));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_blend_minmax_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_blend_minmax""' of type '""GLboolean""'");
    }
    __GLEW_EXT_blend_minmax = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_blend_subtract_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_blend_subtract));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_blend_subtract_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_blend_subtract""' of type '""GLboolean""'");
    }
    __GLEW_EXT_blend_subtract = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_clip_volume_hint_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_clip_volume_hint));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_clip_volume_hint_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_clip_volume_hint""' of type '""GLboolean""'");
    }
    __GLEW_EXT_clip_volume_hint = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_cmyka_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_cmyka));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_cmyka_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_cmyka""' of type '""GLboolean""'");
    }
    __GLEW_EXT_cmyka = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_color_subtable_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_color_subtable));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_color_subtable_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_color_subtable""' of type '""GLboolean""'");
    }
    __GLEW_EXT_color_subtable = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_compiled_vertex_array_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_compiled_vertex_array));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_compiled_vertex_array_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_compiled_vertex_array""' of type '""GLboolean""'");
    }
    __GLEW_EXT_compiled_vertex_array = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_convolution_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_convolution));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_convolution_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_convolution""' of type '""GLboolean""'");
    }
    __GLEW_EXT_convolution = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_coordinate_frame_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_coordinate_frame));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_coordinate_frame_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_coordinate_frame""' of type '""GLboolean""'");
    }
    __GLEW_EXT_coordinate_frame = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_copy_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_copy_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_copy_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_copy_texture""' of type '""GLboolean""'");
    }
    __GLEW_EXT_copy_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_cull_vertex_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_cull_vertex));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_cull_vertex_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_cull_vertex""' of type '""GLboolean""'");
    }
    __GLEW_EXT_cull_vertex = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_depth_bounds_test_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_depth_bounds_test));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_depth_bounds_test_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_depth_bounds_test""' of type '""GLboolean""'");
    }
    __GLEW_EXT_depth_bounds_test = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_direct_state_access_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_direct_state_access));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_direct_state_access_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_direct_state_access""' of type '""GLboolean""'");
    }
    __GLEW_EXT_direct_state_access = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_draw_buffers2_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_draw_buffers2));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_draw_buffers2_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_draw_buffers2""' of type '""GLboolean""'");
    }
    __GLEW_EXT_draw_buffers2 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_draw_instanced_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_draw_instanced));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_draw_instanced_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_draw_instanced""' of type '""GLboolean""'");
    }
    __GLEW_EXT_draw_instanced = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_draw_range_elements_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_draw_range_elements));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_draw_range_elements_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_draw_range_elements""' of type '""GLboolean""'");
    }
    __GLEW_EXT_draw_range_elements = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_fog_coord_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_fog_coord));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_fog_coord_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_fog_coord""' of type '""GLboolean""'");
    }
    __GLEW_EXT_fog_coord = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_fragment_lighting_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_fragment_lighting));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_fragment_lighting_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_fragment_lighting""' of type '""GLboolean""'");
    }
    __GLEW_EXT_fragment_lighting = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_framebuffer_blit_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_framebuffer_blit));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_framebuffer_blit_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_framebuffer_blit""' of type '""GLboolean""'");
    }
    __GLEW_EXT_framebuffer_blit = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_framebuffer_multisample_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_framebuffer_multisample));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_framebuffer_multisample_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_framebuffer_multisample""' of type '""GLboolean""'");
    }
    __GLEW_EXT_framebuffer_multisample = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_framebuffer_object_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_framebuffer_object));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_framebuffer_object_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_framebuffer_object""' of type '""GLboolean""'");
    }
    __GLEW_EXT_framebuffer_object = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_framebuffer_sRGB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_framebuffer_sRGB));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_framebuffer_sRGB_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_framebuffer_sRGB""' of type '""GLboolean""'");
    }
    __GLEW_EXT_framebuffer_sRGB = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_geometry_shader4_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_geometry_shader4));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_geometry_shader4_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_geometry_shader4""' of type '""GLboolean""'");
    }
    __GLEW_EXT_geometry_shader4 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_gpu_program_parameters_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_gpu_program_parameters));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_gpu_program_parameters_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_gpu_program_parameters""' of type '""GLboolean""'");
    }
    __GLEW_EXT_gpu_program_parameters = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_gpu_shader4_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_gpu_shader4));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_gpu_shader4_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_gpu_shader4""' of type '""GLboolean""'");
    }
    __GLEW_EXT_gpu_shader4 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_histogram_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_histogram));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_histogram_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_histogram""' of type '""GLboolean""'");
    }
    __GLEW_EXT_histogram = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_index_array_formats_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_index_array_formats));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_index_array_formats_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_index_array_formats""' of type '""GLboolean""'");
    }
    __GLEW_EXT_index_array_formats = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_index_func_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_index_func));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_index_func_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_index_func""' of type '""GLboolean""'");
    }
    __GLEW_EXT_index_func = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_index_material_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_index_material));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_index_material_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_index_material""' of type '""GLboolean""'");
    }
    __GLEW_EXT_index_material = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_index_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_index_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_index_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_index_texture""' of type '""GLboolean""'");
    }
    __GLEW_EXT_index_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_light_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_light_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_light_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_light_texture""' of type '""GLboolean""'");
    }
    __GLEW_EXT_light_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_misc_attribute_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_misc_attribute));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_misc_attribute_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_misc_attribute""' of type '""GLboolean""'");
    }
    __GLEW_EXT_misc_attribute = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_multi_draw_arrays_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_multi_draw_arrays));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_multi_draw_arrays_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_multi_draw_arrays""' of type '""GLboolean""'");
    }
    __GLEW_EXT_multi_draw_arrays = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_multisample_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_multisample));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_multisample_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_multisample""' of type '""GLboolean""'");
    }
    __GLEW_EXT_multisample = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_packed_depth_stencil_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_packed_depth_stencil));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_packed_depth_stencil_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_packed_depth_stencil""' of type '""GLboolean""'");
    }
    __GLEW_EXT_packed_depth_stencil = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_packed_float_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_packed_float));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_packed_float_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_packed_float""' of type '""GLboolean""'");
    }
    __GLEW_EXT_packed_float = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_packed_pixels_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_packed_pixels));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_packed_pixels_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_packed_pixels""' of type '""GLboolean""'");
    }
    __GLEW_EXT_packed_pixels = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_paletted_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_paletted_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_paletted_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_paletted_texture""' of type '""GLboolean""'");
    }
    __GLEW_EXT_paletted_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_pixel_buffer_object_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_pixel_buffer_object));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_pixel_buffer_object_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_pixel_buffer_object""' of type '""GLboolean""'");
    }
    __GLEW_EXT_pixel_buffer_object = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_pixel_transform_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_pixel_transform));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_pixel_transform_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_pixel_transform""' of type '""GLboolean""'");
    }
    __GLEW_EXT_pixel_transform = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_pixel_transform_color_table_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_pixel_transform_color_table));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_pixel_transform_color_table_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_pixel_transform_color_table""' of type '""GLboolean""'");
    }
    __GLEW_EXT_pixel_transform_color_table = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_point_parameters_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_point_parameters));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_point_parameters_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_point_parameters""' of type '""GLboolean""'");
    }
    __GLEW_EXT_point_parameters = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_polygon_offset_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_polygon_offset));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_polygon_offset_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_polygon_offset""' of type '""GLboolean""'");
    }
    __GLEW_EXT_polygon_offset = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_rescale_normal_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_rescale_normal));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_rescale_normal_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_rescale_normal""' of type '""GLboolean""'");
    }
    __GLEW_EXT_rescale_normal = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_scene_marker_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_scene_marker));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_scene_marker_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_scene_marker""' of type '""GLboolean""'");
    }
    __GLEW_EXT_scene_marker = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_secondary_color_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_secondary_color));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_secondary_color_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_secondary_color""' of type '""GLboolean""'");
    }
    __GLEW_EXT_secondary_color = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_separate_specular_color_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_separate_specular_color));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_separate_specular_color_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_separate_specular_color""' of type '""GLboolean""'");
    }
    __GLEW_EXT_separate_specular_color = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_shadow_funcs_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_shadow_funcs));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_shadow_funcs_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_shadow_funcs""' of type '""GLboolean""'");
    }
    __GLEW_EXT_shadow_funcs = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_shared_texture_palette_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_shared_texture_palette));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_shared_texture_palette_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_shared_texture_palette""' of type '""GLboolean""'");
    }
    __GLEW_EXT_shared_texture_palette = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_stencil_clear_tag_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_stencil_clear_tag));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_stencil_clear_tag_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_stencil_clear_tag""' of type '""GLboolean""'");
    }
    __GLEW_EXT_stencil_clear_tag = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_stencil_two_side_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_stencil_two_side));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_stencil_two_side_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_stencil_two_side""' of type '""GLboolean""'");
    }
    __GLEW_EXT_stencil_two_side = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_stencil_wrap_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_stencil_wrap));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_stencil_wrap_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_stencil_wrap""' of type '""GLboolean""'");
    }
    __GLEW_EXT_stencil_wrap = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_subtexture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_subtexture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_subtexture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_subtexture""' of type '""GLboolean""'");
    }
    __GLEW_EXT_subtexture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture3D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture3D));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture3D_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture3D""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture3D = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_array_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_array));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_array_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_array""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_array = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_buffer_object_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_buffer_object));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_buffer_object_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_buffer_object""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_buffer_object = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_compression_dxt1_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_compression_dxt1));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_compression_dxt1_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_compression_dxt1""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_compression_dxt1 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_compression_latc_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_compression_latc));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_compression_latc_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_compression_latc""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_compression_latc = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_compression_rgtc_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_compression_rgtc));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_compression_rgtc_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_compression_rgtc""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_compression_rgtc = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_compression_s3tc_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_compression_s3tc));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_compression_s3tc_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_compression_s3tc""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_compression_s3tc = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_cube_map_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_cube_map));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_cube_map_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_cube_map""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_cube_map = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_edge_clamp_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_edge_clamp));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_edge_clamp_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_edge_clamp""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_edge_clamp = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_env_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_env));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_env_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_env""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_env = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_env_add_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_env_add));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_env_add_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_env_add""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_env_add = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_env_combine_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_env_combine));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_env_combine_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_env_combine""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_env_combine = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_env_dot3_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_env_dot3));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_env_dot3_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_env_dot3""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_env_dot3 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_filter_anisotropic_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_filter_anisotropic));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_filter_anisotropic_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_filter_anisotropic""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_filter_anisotropic = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_integer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_integer));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_integer_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_integer""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_integer = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_lod_bias_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_lod_bias));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_lod_bias_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_lod_bias""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_lod_bias = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_mirror_clamp_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_mirror_clamp));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_mirror_clamp_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_mirror_clamp""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_mirror_clamp = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_object_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_object));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_object_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_object""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_object = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_perturb_normal_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_perturb_normal));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_perturb_normal_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_perturb_normal""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_perturb_normal = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_rectangle_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_rectangle));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_rectangle_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_rectangle""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_rectangle = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_sRGB_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_sRGB));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_sRGB_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_sRGB""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_sRGB = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_shared_exponent_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_shared_exponent));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_shared_exponent_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_shared_exponent""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_shared_exponent = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_swizzle_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_texture_swizzle));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_texture_swizzle_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_texture_swizzle""' of type '""GLboolean""'");
    }
    __GLEW_EXT_texture_swizzle = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_timer_query_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_timer_query));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_timer_query_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_timer_query""' of type '""GLboolean""'");
    }
    __GLEW_EXT_timer_query = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_transform_feedback_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_transform_feedback));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_transform_feedback_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_transform_feedback""' of type '""GLboolean""'");
    }
    __GLEW_EXT_transform_feedback = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_vertex_array_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_vertex_array));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_vertex_array_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_vertex_array""' of type '""GLboolean""'");
    }
    __GLEW_EXT_vertex_array = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_vertex_array_bgra_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_vertex_array_bgra));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_vertex_array_bgra_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_vertex_array_bgra""' of type '""GLboolean""'");
    }
    __GLEW_EXT_vertex_array_bgra = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_vertex_shader_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_vertex_shader));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_vertex_shader_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_vertex_shader""' of type '""GLboolean""'");
    }
    __GLEW_EXT_vertex_shader = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_vertex_weighting_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_EXT_vertex_weighting));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_EXT_vertex_weighting_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_EXT_vertex_weighting""' of type '""GLboolean""'");
    }
    __GLEW_EXT_vertex_weighting = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_GREMEDY_frame_terminator_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_GREMEDY_frame_terminator));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_GREMEDY_frame_terminator_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_GREMEDY_frame_terminator""' of type '""GLboolean""'");
    }
    __GLEW_GREMEDY_frame_terminator = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_GREMEDY_string_marker_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_GREMEDY_string_marker));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_GREMEDY_string_marker_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_GREMEDY_string_marker""' of type '""GLboolean""'");
    }
    __GLEW_GREMEDY_string_marker = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_HP_convolution_border_modes_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_HP_convolution_border_modes));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_HP_convolution_border_modes_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_HP_convolution_border_modes""' of type '""GLboolean""'");
    }
    __GLEW_HP_convolution_border_modes = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_HP_image_transform_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_HP_image_transform));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_HP_image_transform_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_HP_image_transform""' of type '""GLboolean""'");
    }
    __GLEW_HP_image_transform = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_HP_occlusion_test_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_HP_occlusion_test));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_HP_occlusion_test_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_HP_occlusion_test""' of type '""GLboolean""'");
    }
    __GLEW_HP_occlusion_test = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_HP_texture_lighting_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_HP_texture_lighting));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_HP_texture_lighting_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_HP_texture_lighting""' of type '""GLboolean""'");
    }
    __GLEW_HP_texture_lighting = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_IBM_cull_vertex_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_IBM_cull_vertex));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_IBM_cull_vertex_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_IBM_cull_vertex""' of type '""GLboolean""'");
    }
    __GLEW_IBM_cull_vertex = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_IBM_multimode_draw_arrays_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_IBM_multimode_draw_arrays));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_IBM_multimode_draw_arrays_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_IBM_multimode_draw_arrays""' of type '""GLboolean""'");
    }
    __GLEW_IBM_multimode_draw_arrays = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_IBM_rasterpos_clip_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_IBM_rasterpos_clip));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_IBM_rasterpos_clip_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_IBM_rasterpos_clip""' of type '""GLboolean""'");
    }
    __GLEW_IBM_rasterpos_clip = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_IBM_static_data_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_IBM_static_data));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_IBM_static_data_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_IBM_static_data""' of type '""GLboolean""'");
    }
    __GLEW_IBM_static_data = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_IBM_texture_mirrored_repeat_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_IBM_texture_mirrored_repeat));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_IBM_texture_mirrored_repeat_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_IBM_texture_mirrored_repeat""' of type '""GLboolean""'");
    }
    __GLEW_IBM_texture_mirrored_repeat = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_IBM_vertex_array_lists_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_IBM_vertex_array_lists));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_IBM_vertex_array_lists_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_IBM_vertex_array_lists""' of type '""GLboolean""'");
    }
    __GLEW_IBM_vertex_array_lists = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_INGR_color_clamp_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_INGR_color_clamp));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_INGR_color_clamp_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_INGR_color_clamp""' of type '""GLboolean""'");
    }
    __GLEW_INGR_color_clamp = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_INGR_interlace_read_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_INGR_interlace_read));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_INGR_interlace_read_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_INGR_interlace_read""' of type '""GLboolean""'");
    }
    __GLEW_INGR_interlace_read = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_INTEL_parallel_arrays_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_INTEL_parallel_arrays));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_INTEL_parallel_arrays_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_INTEL_parallel_arrays""' of type '""GLboolean""'");
    }
    __GLEW_INTEL_parallel_arrays = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_INTEL_texture_scissor_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_INTEL_texture_scissor));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_INTEL_texture_scissor_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_INTEL_texture_scissor""' of type '""GLboolean""'");
    }
    __GLEW_INTEL_texture_scissor = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_KTX_buffer_region_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_KTX_buffer_region));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_KTX_buffer_region_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_KTX_buffer_region""' of type '""GLboolean""'");
    }
    __GLEW_KTX_buffer_region = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_MESAX_texture_stack_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_MESAX_texture_stack));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_MESAX_texture_stack_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_MESAX_texture_stack""' of type '""GLboolean""'");
    }
    __GLEW_MESAX_texture_stack = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_MESA_pack_invert_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_MESA_pack_invert));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_MESA_pack_invert_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_MESA_pack_invert""' of type '""GLboolean""'");
    }
    __GLEW_MESA_pack_invert = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_MESA_resize_buffers_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_MESA_resize_buffers));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_MESA_resize_buffers_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_MESA_resize_buffers""' of type '""GLboolean""'");
    }
    __GLEW_MESA_resize_buffers = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_MESA_window_pos_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_MESA_window_pos));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_MESA_window_pos_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_MESA_window_pos""' of type '""GLboolean""'");
    }
    __GLEW_MESA_window_pos = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_MESA_ycbcr_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_MESA_ycbcr_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_MESA_ycbcr_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_MESA_ycbcr_texture""' of type '""GLboolean""'");
    }
    __GLEW_MESA_ycbcr_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_blend_square_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_blend_square));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_blend_square_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_blend_square""' of type '""GLboolean""'");
    }
    __GLEW_NV_blend_square = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_conditional_render_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_conditional_render));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_conditional_render_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_conditional_render""' of type '""GLboolean""'");
    }
    __GLEW_NV_conditional_render = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_copy_depth_to_color_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_copy_depth_to_color));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_copy_depth_to_color_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_copy_depth_to_color""' of type '""GLboolean""'");
    }
    __GLEW_NV_copy_depth_to_color = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_depth_buffer_float_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_depth_buffer_float));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_depth_buffer_float_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_depth_buffer_float""' of type '""GLboolean""'");
    }
    __GLEW_NV_depth_buffer_float = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_depth_clamp_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_depth_clamp));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_depth_clamp_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_depth_clamp""' of type '""GLboolean""'");
    }
    __GLEW_NV_depth_clamp = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_depth_range_unclamped_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_depth_range_unclamped));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_depth_range_unclamped_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_depth_range_unclamped""' of type '""GLboolean""'");
    }
    __GLEW_NV_depth_range_unclamped = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_evaluators_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_evaluators));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_evaluators_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_evaluators""' of type '""GLboolean""'");
    }
    __GLEW_NV_evaluators = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_explicit_multisample_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_explicit_multisample));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_explicit_multisample_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_explicit_multisample""' of type '""GLboolean""'");
    }
    __GLEW_NV_explicit_multisample = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_fence_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_fence));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_fence_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_fence""' of type '""GLboolean""'");
    }
    __GLEW_NV_fence = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_float_buffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_float_buffer));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_float_buffer_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_float_buffer""' of type '""GLboolean""'");
    }
    __GLEW_NV_float_buffer = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_fog_distance_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_fog_distance));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_fog_distance_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_fog_distance""' of type '""GLboolean""'");
    }
    __GLEW_NV_fog_distance = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_fragment_program_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_fragment_program));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_fragment_program_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_fragment_program""' of type '""GLboolean""'");
    }
    __GLEW_NV_fragment_program = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_fragment_program2_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_fragment_program2));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_fragment_program2_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_fragment_program2""' of type '""GLboolean""'");
    }
    __GLEW_NV_fragment_program2 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_fragment_program4_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_fragment_program4));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_fragment_program4_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_fragment_program4""' of type '""GLboolean""'");
    }
    __GLEW_NV_fragment_program4 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_fragment_program_option_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_fragment_program_option));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_fragment_program_option_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_fragment_program_option""' of type '""GLboolean""'");
    }
    __GLEW_NV_fragment_program_option = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_framebuffer_multisample_coverage_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_framebuffer_multisample_coverage));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_framebuffer_multisample_coverage_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_framebuffer_multisample_coverage""' of type '""GLboolean""'");
    }
    __GLEW_NV_framebuffer_multisample_coverage = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_geometry_program4_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_geometry_program4));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_geometry_program4_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_geometry_program4""' of type '""GLboolean""'");
    }
    __GLEW_NV_geometry_program4 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_geometry_shader4_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_geometry_shader4));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_geometry_shader4_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_geometry_shader4""' of type '""GLboolean""'");
    }
    __GLEW_NV_geometry_shader4 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_gpu_program4_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_gpu_program4));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_gpu_program4_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_gpu_program4""' of type '""GLboolean""'");
    }
    __GLEW_NV_gpu_program4 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_half_float_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_half_float));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_half_float_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_half_float""' of type '""GLboolean""'");
    }
    __GLEW_NV_half_float = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_light_max_exponent_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_light_max_exponent));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_light_max_exponent_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_light_max_exponent""' of type '""GLboolean""'");
    }
    __GLEW_NV_light_max_exponent = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_multisample_filter_hint_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_multisample_filter_hint));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_multisample_filter_hint_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_multisample_filter_hint""' of type '""GLboolean""'");
    }
    __GLEW_NV_multisample_filter_hint = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_occlusion_query_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_occlusion_query));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_occlusion_query_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_occlusion_query""' of type '""GLboolean""'");
    }
    __GLEW_NV_occlusion_query = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_packed_depth_stencil_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_packed_depth_stencil));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_packed_depth_stencil_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_packed_depth_stencil""' of type '""GLboolean""'");
    }
    __GLEW_NV_packed_depth_stencil = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_parameter_buffer_object_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_parameter_buffer_object));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_parameter_buffer_object_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_parameter_buffer_object""' of type '""GLboolean""'");
    }
    __GLEW_NV_parameter_buffer_object = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_pixel_data_range_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_pixel_data_range));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_pixel_data_range_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_pixel_data_range""' of type '""GLboolean""'");
    }
    __GLEW_NV_pixel_data_range = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_point_sprite_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_point_sprite));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_point_sprite_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_point_sprite""' of type '""GLboolean""'");
    }
    __GLEW_NV_point_sprite = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_present_video_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_present_video));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_present_video_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_present_video""' of type '""GLboolean""'");
    }
    __GLEW_NV_present_video = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_primitive_restart_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_primitive_restart));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_primitive_restart_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_primitive_restart""' of type '""GLboolean""'");
    }
    __GLEW_NV_primitive_restart = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_register_combiners_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_register_combiners));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_register_combiners_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_register_combiners""' of type '""GLboolean""'");
    }
    __GLEW_NV_register_combiners = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_register_combiners2_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_register_combiners2));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_register_combiners2_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_register_combiners2""' of type '""GLboolean""'");
    }
    __GLEW_NV_register_combiners2 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texgen_emboss_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_texgen_emboss));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texgen_emboss_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_texgen_emboss""' of type '""GLboolean""'");
    }
    __GLEW_NV_texgen_emboss = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texgen_reflection_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_texgen_reflection));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texgen_reflection_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_texgen_reflection""' of type '""GLboolean""'");
    }
    __GLEW_NV_texgen_reflection = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_compression_vtc_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_texture_compression_vtc));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_compression_vtc_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_texture_compression_vtc""' of type '""GLboolean""'");
    }
    __GLEW_NV_texture_compression_vtc = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_env_combine4_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_texture_env_combine4));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_env_combine4_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_texture_env_combine4""' of type '""GLboolean""'");
    }
    __GLEW_NV_texture_env_combine4 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_expand_normal_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_texture_expand_normal));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_expand_normal_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_texture_expand_normal""' of type '""GLboolean""'");
    }
    __GLEW_NV_texture_expand_normal = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_rectangle_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_texture_rectangle));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_rectangle_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_texture_rectangle""' of type '""GLboolean""'");
    }
    __GLEW_NV_texture_rectangle = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_shader_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_texture_shader));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_shader_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_texture_shader""' of type '""GLboolean""'");
    }
    __GLEW_NV_texture_shader = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_shader2_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_texture_shader2));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_shader2_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_texture_shader2""' of type '""GLboolean""'");
    }
    __GLEW_NV_texture_shader2 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_shader3_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_texture_shader3));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_texture_shader3_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_texture_shader3""' of type '""GLboolean""'");
    }
    __GLEW_NV_texture_shader3 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_transform_feedback_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_transform_feedback));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_transform_feedback_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_transform_feedback""' of type '""GLboolean""'");
    }
    __GLEW_NV_transform_feedback = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_array_range_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_vertex_array_range));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_array_range_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_vertex_array_range""' of type '""GLboolean""'");
    }
    __GLEW_NV_vertex_array_range = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_array_range2_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_vertex_array_range2));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_array_range2_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_vertex_array_range2""' of type '""GLboolean""'");
    }
    __GLEW_NV_vertex_array_range2 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_program_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_vertex_program));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_program_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_vertex_program""' of type '""GLboolean""'");
    }
    __GLEW_NV_vertex_program = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_program1_1_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_vertex_program1_1));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_program1_1_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_vertex_program1_1""' of type '""GLboolean""'");
    }
    __GLEW_NV_vertex_program1_1 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_program2_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_vertex_program2));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_program2_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_vertex_program2""' of type '""GLboolean""'");
    }
    __GLEW_NV_vertex_program2 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_program2_option_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_vertex_program2_option));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_program2_option_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_vertex_program2_option""' of type '""GLboolean""'");
    }
    __GLEW_NV_vertex_program2_option = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_program3_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_vertex_program3));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_program3_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_vertex_program3""' of type '""GLboolean""'");
    }
    __GLEW_NV_vertex_program3 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_program4_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_NV_vertex_program4));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_NV_vertex_program4_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_NV_vertex_program4""' of type '""GLboolean""'");
    }
    __GLEW_NV_vertex_program4 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_OES_byte_coordinates_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_OES_byte_coordinates));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_OES_byte_coordinates_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_OES_byte_coordinates""' of type '""GLboolean""'");
    }
    __GLEW_OES_byte_coordinates = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_OES_compressed_paletted_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_OES_compressed_paletted_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_OES_compressed_paletted_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_OES_compressed_paletted_texture""' of type '""GLboolean""'");
    }
    __GLEW_OES_compressed_paletted_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_OES_read_format_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_OES_read_format));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_OES_read_format_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_OES_read_format""' of type '""GLboolean""'");
    }
    __GLEW_OES_read_format = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_OES_single_precision_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_OES_single_precision));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_OES_single_precision_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_OES_single_precision""' of type '""GLboolean""'");
    }
    __GLEW_OES_single_precision = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_OML_interlace_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_OML_interlace));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_OML_interlace_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_OML_interlace""' of type '""GLboolean""'");
    }
    __GLEW_OML_interlace = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_OML_resample_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_OML_resample));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_OML_resample_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_OML_resample""' of type '""GLboolean""'");
    }
    __GLEW_OML_resample = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_OML_subsample_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_OML_subsample));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_OML_subsample_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_OML_subsample""' of type '""GLboolean""'");
    }
    __GLEW_OML_subsample = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_PGI_misc_hints_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_PGI_misc_hints));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_PGI_misc_hints_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_PGI_misc_hints""' of type '""GLboolean""'");
    }
    __GLEW_PGI_misc_hints = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_PGI_vertex_hints_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_PGI_vertex_hints));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_PGI_vertex_hints_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_PGI_vertex_hints""' of type '""GLboolean""'");
    }
    __GLEW_PGI_vertex_hints = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_REND_screen_coordinates_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_REND_screen_coordinates));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_REND_screen_coordinates_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_REND_screen_coordinates""' of type '""GLboolean""'");
    }
    __GLEW_REND_screen_coordinates = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_S3_s3tc_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_S3_s3tc));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_S3_s3tc_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_S3_s3tc""' of type '""GLboolean""'");
    }
    __GLEW_S3_s3tc = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_color_range_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_color_range));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_color_range_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_color_range""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_color_range = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_detail_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_detail_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_detail_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_detail_texture""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_detail_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_fog_function_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_fog_function));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_fog_function_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_fog_function""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_fog_function = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_generate_mipmap_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_generate_mipmap));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_generate_mipmap_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_generate_mipmap""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_generate_mipmap = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_multisample_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_multisample));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_multisample_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_multisample""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_multisample = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_pixel_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_pixel_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_pixel_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_pixel_texture""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_pixel_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_point_line_texgen_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_point_line_texgen));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_point_line_texgen_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_point_line_texgen""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_point_line_texgen = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_sharpen_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_sharpen_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_sharpen_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_sharpen_texture""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_sharpen_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_texture4D_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_texture4D));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_texture4D_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_texture4D""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_texture4D = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_texture_border_clamp_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_texture_border_clamp));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_texture_border_clamp_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_texture_border_clamp""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_texture_border_clamp = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_texture_edge_clamp_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_texture_edge_clamp));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_texture_edge_clamp_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_texture_edge_clamp""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_texture_edge_clamp = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_texture_filter4_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_texture_filter4));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_texture_filter4_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_texture_filter4""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_texture_filter4 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_texture_lod_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_texture_lod));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_texture_lod_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_texture_lod""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_texture_lod = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_texture_select_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIS_texture_select));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIS_texture_select_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIS_texture_select""' of type '""GLboolean""'");
    }
    __GLEW_SGIS_texture_select = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_async_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_async));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_async_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_async""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_async = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_async_histogram_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_async_histogram));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_async_histogram_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_async_histogram""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_async_histogram = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_async_pixel_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_async_pixel));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_async_pixel_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_async_pixel""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_async_pixel = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_blend_alpha_minmax_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_blend_alpha_minmax));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_blend_alpha_minmax_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_blend_alpha_minmax""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_blend_alpha_minmax = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_clipmap_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_clipmap));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_clipmap_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_clipmap""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_clipmap = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_convolution_accuracy_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_convolution_accuracy));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_convolution_accuracy_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_convolution_accuracy""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_convolution_accuracy = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_depth_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_depth_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_depth_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_depth_texture""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_depth_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_flush_raster_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_flush_raster));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_flush_raster_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_flush_raster""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_flush_raster = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_fog_offset_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_fog_offset));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_fog_offset_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_fog_offset""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_fog_offset = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_fog_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_fog_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_fog_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_fog_texture""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_fog_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_fragment_specular_lighting_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_fragment_specular_lighting));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_fragment_specular_lighting_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_fragment_specular_lighting""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_fragment_specular_lighting = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_framezoom_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_framezoom));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_framezoom_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_framezoom""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_framezoom = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_interlace_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_interlace));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_interlace_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_interlace""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_interlace = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_ir_instrument1_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_ir_instrument1));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_ir_instrument1_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_ir_instrument1""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_ir_instrument1 = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_list_priority_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_list_priority));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_list_priority_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_list_priority""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_list_priority = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_pixel_texture_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_pixel_texture));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_pixel_texture_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_pixel_texture""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_pixel_texture = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_pixel_texture_bits_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_pixel_texture_bits));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_pixel_texture_bits_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_pixel_texture_bits""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_pixel_texture_bits = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_reference_plane_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_reference_plane));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_reference_plane_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_reference_plane""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_reference_plane = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_resample_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_resample));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_resample_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_resample""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_resample = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_shadow_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_shadow));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_shadow_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_shadow""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_shadow = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_shadow_ambient_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_shadow_ambient));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_shadow_ambient_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_shadow_ambient""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_shadow_ambient = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_sprite_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_sprite));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_sprite_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_sprite""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_sprite = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_tag_sample_buffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_tag_sample_buffer));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_tag_sample_buffer_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_tag_sample_buffer""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_tag_sample_buffer = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_texture_add_env_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_texture_add_env));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_texture_add_env_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_texture_add_env""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_texture_add_env = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_texture_coordinate_clamp_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_texture_coordinate_clamp));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_texture_coordinate_clamp_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_texture_coordinate_clamp""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_texture_coordinate_clamp = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_texture_lod_bias_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_texture_lod_bias));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_texture_lod_bias_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_texture_lod_bias""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_texture_lod_bias = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_texture_multi_buffer_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_texture_multi_buffer));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_texture_multi_buffer_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_texture_multi_buffer""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_texture_multi_buffer = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_texture_range_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_texture_range));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_texture_range_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_texture_range""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_texture_range = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_texture_scale_bias_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_texture_scale_bias));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_texture_scale_bias_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_texture_scale_bias""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_texture_scale_bias = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_vertex_preclip_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_vertex_preclip));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_vertex_preclip_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_vertex_preclip""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_vertex_preclip = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_vertex_preclip_hint_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_vertex_preclip_hint));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_vertex_preclip_hint_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_vertex_preclip_hint""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_vertex_preclip_hint = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_ycrcb_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGIX_ycrcb));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGIX_ycrcb_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGIX_ycrcb""' of type '""GLboolean""'");
    }
    __GLEW_SGIX_ycrcb = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGI_color_matrix_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGI_color_matrix));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGI_color_matrix_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGI_color_matrix""' of type '""GLboolean""'");
    }
    __GLEW_SGI_color_matrix = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGI_color_table_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGI_color_table));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGI_color_table_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGI_color_table""' of type '""GLboolean""'");
    }
    __GLEW_SGI_color_table = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SGI_texture_color_table_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SGI_texture_color_table));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SGI_texture_color_table_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SGI_texture_color_table""' of type '""GLboolean""'");
    }
    __GLEW_SGI_texture_color_table = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SUNX_constant_data_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SUNX_constant_data));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SUNX_constant_data_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SUNX_constant_data""' of type '""GLboolean""'");
    }
    __GLEW_SUNX_constant_data = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_convolution_border_modes_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SUN_convolution_border_modes));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_convolution_border_modes_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SUN_convolution_border_modes""' of type '""GLboolean""'");
    }
    __GLEW_SUN_convolution_border_modes = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_global_alpha_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SUN_global_alpha));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_global_alpha_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SUN_global_alpha""' of type '""GLboolean""'");
    }
    __GLEW_SUN_global_alpha = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_mesh_array_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SUN_mesh_array));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_mesh_array_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SUN_mesh_array""' of type '""GLboolean""'");
    }
    __GLEW_SUN_mesh_array = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_read_video_pixels_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SUN_read_video_pixels));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_read_video_pixels_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SUN_read_video_pixels""' of type '""GLboolean""'");
    }
    __GLEW_SUN_read_video_pixels = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_slice_accum_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SUN_slice_accum));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_slice_accum_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SUN_slice_accum""' of type '""GLboolean""'");
    }
    __GLEW_SUN_slice_accum = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_triangle_list_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SUN_triangle_list));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_triangle_list_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SUN_triangle_list""' of type '""GLboolean""'");
    }
    __GLEW_SUN_triangle_list = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_vertex_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_SUN_vertex));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_SUN_vertex_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_SUN_vertex""' of type '""GLboolean""'");
    }
    __GLEW_SUN_vertex = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_WIN_phong_shading_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_WIN_phong_shading));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_WIN_phong_shading_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_WIN_phong_shading""' of type '""GLboolean""'");
    }
    __GLEW_WIN_phong_shading = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_WIN_specular_fog_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_WIN_specular_fog));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_WIN_specular_fog_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_WIN_specular_fog""' of type '""GLboolean""'");
    }
    __GLEW_WIN_specular_fog = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap___GLEW_WIN_swap_hint_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(__GLEW_WIN_swap_hint));
  return _val;
}


SWIGINTERN VALUE
_wrap___GLEW_WIN_swap_hint_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""__GLEW_WIN_swap_hint""' of type '""GLboolean""'");
    }
    __GLEW_WIN_swap_hint = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glewInit(int argc, VALUE *argv, VALUE self) {
  GLenum result;
  VALUE vresult = Qnil;
  
  if ((argc < 0) || (argc > 0)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 0)",argc); SWIG_fail;
  }
  result = (GLenum)glewInit();
  vresult = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return vresult;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glewIsSupported(int argc, VALUE *argv, VALUE self) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  GLboolean result;
  VALUE vresult = Qnil;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_AsCharPtrAndSize(argv[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "char const *","glewIsSupported", 1, argv[0] ));
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (GLboolean)glewIsSupported((char const *)arg1);
  vresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return vresult;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glewExperimental_get(VALUE self) {
  VALUE _val;
  
  _val = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(glewExperimental));
  return _val;
}


SWIGINTERN VALUE
_wrap_glewExperimental_set(VALUE self, VALUE _val) {
  {
    unsigned char val;
    int res = SWIG_AsVal_unsigned_SS_char(_val, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""glewExperimental""' of type '""GLboolean""'");
    }
    glewExperimental = static_cast< GLboolean >(val);
  }
  return _val;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glewGetExtension(int argc, VALUE *argv, VALUE self) {
  char *arg1 = (char *) 0 ;
  int res1 ;
  char *buf1 = 0 ;
  int alloc1 = 0 ;
  GLboolean result;
  VALUE vresult = Qnil;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  res1 = SWIG_AsCharPtrAndSize(argv[0], &buf1, NULL, &alloc1);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), Ruby_Format_TypeError( "", "char const *","glewGetExtension", 1, argv[0] ));
  }
  arg1 = reinterpret_cast< char * >(buf1);
  result = (GLboolean)glewGetExtension((char const *)arg1);
  vresult = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return vresult;
fail:
  if (alloc1 == SWIG_NEWOBJ) delete[] buf1;
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glewGetErrorString(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  GLubyte *result = 0 ;
  VALUE vresult = Qnil;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glewGetErrorString", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  result = (GLubyte *)glewGetErrorString(arg1);
  vresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  return vresult;
fail:
  return Qnil;
}


SWIGINTERN VALUE
_wrap_glewGetString(int argc, VALUE *argv, VALUE self) {
  GLenum arg1 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  GLubyte *result = 0 ;
  VALUE vresult = Qnil;
  
  if ((argc < 1) || (argc > 1)) {
    rb_raise(rb_eArgError, "wrong # of arguments(%d for 1)",argc); SWIG_fail;
  }
  ecode1 = SWIG_AsVal_unsigned_SS_int(argv[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), Ruby_Format_TypeError( "", "GLenum","glewGetString", 1, argv[0] ));
  } 
  arg1 = static_cast< GLenum >(val1);
  result = (GLubyte *)glewGetString(arg1);
  vresult = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 );
  return vresult;
fail:
  return Qnil;
}



/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static swig_type_info _swigt__p_char = {"_p_char", "char *|GLchar *|GLcharARB *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *|GLclampd *|GLdouble *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_a_16__double__void = {"_p_f_a_16__double__void", "void (*)(double [16])|PFNGLLOADTRANSPOSEMATRIXDARBPROC|PFNGLMULTTRANSPOSEMATRIXDARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_a_16__float__void = {"_p_f_a_16__float__void", "void (*)(float [16])|PFNGLLOADTRANSPOSEMATRIXFARBPROC|PFNGLMULTTRANSPOSEMATRIXFARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_a_16__q_const__double__void = {"_p_f_a_16__q_const__double__void", "PFNGLLOADTRANSPOSEMATRIXDPROC|PFNGLMULTTRANSPOSEMATRIXDPROC|void (*)(double const [16])", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_a_16__q_const__float__void = {"_p_f_a_16__q_const__float__void", "void (*)(float const [16])|PFNGLLOADTRANSPOSEMATRIXFPROC|PFNGLMULTTRANSPOSEMATRIXFPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_double__void = {"_p_f_double__void", "PFNGLGLOBALALPHAFACTORDSUNPROC|PFNGLFOGCOORDDPROC|PFNGLFOGCOORDDEXTPROC|PFNGLCLEARDEPTHFOESPROC|void (*)(double)|PFNGLCLEARDEPTHDNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_double_double__void = {"_p_f_double_double__void", "PFNGLWINDOWPOS2DMESAPROC|PFNGLWINDOWPOS2DPROC|PFNGLWINDOWPOS2DARBPROC|PFNGLDEPTHBOUNDSEXTPROC|void (*)(double,double)|PFNGLDEPTHBOUNDSDNVPROC|PFNGLDEPTHRANGEDNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_double_double_double__void = {"_p_f_double_double_double__void", "PFNGLSECONDARYCOLOR3DPROC|PFNGLWINDOWPOS3DMESAPROC|PFNGLWINDOWPOS3DARBPROC|PFNGLSECONDARYCOLOR3DEXTPROC|void (*)(double,double,double)|PFNGLWINDOWPOS3DPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_double_double_double_double__void = {"_p_f_double_double_double_double__void", "PFNGLWINDOWPOS4DMESAPROC|void (*)(double,double,double,double)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_float__void = {"_p_f_float__void", "void (*)(float)|PFNGLGLOBALALPHAFACTORFSUNPROC|PFNGLFOGCOORDFEXTPROC|PFNGLVERTEXWEIGHTFEXTPROC|PFNGLFOGCOORDFPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_float_float__void = {"_p_f_float_float__void", "void (*)(float,float)|PFNGLWINDOWPOS2FMESAPROC|PFNGLWINDOWPOS2FARBPROC|PFNGLPOLYGONOFFSETEXTPROC|PFNGLDEPTHRANGEFOESPROC|PFNGLWINDOWPOS2FPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_float_float_float__void = {"_p_f_float_float_float__void", "PFNGLWINDOWPOS3FPROC|PFNGLSECONDARYCOLOR3FPROC|void (*)(float,float,float)|PFNGLWINDOWPOS3FMESAPROC|PFNGLWINDOWPOS3FARBPROC|PFNGLSECONDARYCOLOR3FEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_float_float_float_float__void = {"_p_f_float_float_float_float__void", "void (*)(float,float,float,float)|PFNGLWINDOWPOS4FMESAPROC|PFNGLBLENDCOLOREXTPROC|PFNGLBLENDCOLORPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_float_float_float_float_float__void = {"_p_f_float_float_float_float_float__void", "void (*)(float,float,float,float,float)|PFNGLTEXCOORD2FVERTEX3FSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_float_float_float_float_float_float__void = {"_p_f_float_float_float_float_float_float__void", "void (*)(float,float,float,float,float,float)|PFNGLCOLOR3FVERTEX3FSUNPROC|PFNGLNORMAL3FVERTEX3FSUNPROC|PFNGLFRUSTUMFOESPROC|PFNGLORTHOFOESPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_float_float_float_float_float_float_float_float__void = {"_p_f_float_float_float_float_float_float_float_float__void", "void (*)(float,float,float,float,float,float,float,float)|PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC|PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC|PFNGLTEXCOORD4FVERTEX4FSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_float_float_float_float_float_float_float_float_float_float__void = {"_p_f_float_float_float_float_float_float_float_float_float_float__void", "void (*)(float,float,float,float,float,float,float,float,float,float)|PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_float_float_float_float_float_float_float_float_float_float_float_float__void = {"_p_f_float_float_float_float_float_float_float_float_float_float_float_float__void", "void (*)(float,float,float,float,float,float,float,float,float,float,float,float)|PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float__void = {"_p_f_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float__void", "void (*)(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)|PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_float_float_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void = {"_p_f_float_float_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void", "PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC|void (*)(float,float,unsigned char,unsigned char,unsigned char,unsigned char,float,float,float)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_float_unsigned_char__void = {"_p_f_float_unsigned_char__void", "PFNGLSAMPLECOVERAGEPROC|void (*)(float,unsigned char)|PFNGLSAMPLECOVERAGEARBPROC|PFNGLSAMPLEMASKEXTPROC|PFNGLSAMPLEMASKSGISPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int__unsigned_int = {"_p_f_int__unsigned_int", "unsigned int (*)(int)|PFNGLGENASYNCMARKERSSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int__void = {"_p_f_int__void", "void (*)(int)|PFNGLGLOBALALPHAFACTORISUNPROC|PFNGLCURRENTPALETTEMATRIXARBPROC|PFNGLVERTEXBLENDARBPROC|PFNGLARRAYELEMENTEXTPROC|PFNGLFRAMEZOOMSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_float__void = {"_p_f_int_float__void", "void (*)(int,float)|PFNGLUNIFORM1FPROC|PFNGLUNIFORM1FARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_float_float__void = {"_p_f_int_float_float__void", "void (*)(int,float,float)|PFNGLUNIFORM2FARBPROC|PFNGLUNIFORM2FPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_float_float_float__void = {"_p_f_int_float_float_float__void", "PFNGLUNIFORM3FPROC|void (*)(int,float,float,float)|PFNGLUNIFORM3FARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_float_float_float_float__void = {"_p_f_int_float_float_float_float__void", "void (*)(int,float,float,float,float)|PFNGLUNIFORM4FPROC|PFNGLUNIFORM4FARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int__void = {"_p_f_int_int__void", "PFNGLUNIFORM1IPROC|PFNGLWINDOWPOS2IMESAPROC|PFNGLWINDOWPOS2IPROC|void (*)(int,int)|PFNGLUNIFORM1IARBPROC|PFNGLWINDOWPOS2IARBPROC|PFNGLLOCKARRAYSEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int_int__void = {"_p_f_int_int_int__void", "PFNGLWINDOWPOS3IMESAPROC|PFNGLUNIFORM2IPROC|void (*)(int,int,int)|PFNGLUNIFORM2IARBPROC|PFNGLWINDOWPOS3IARBPROC|PFNGLSECONDARYCOLOR3IEXTPROC|PFNGLWINDOWPOS3IPROC|PFNGLSECONDARYCOLOR3IPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int_int_int__void = {"_p_f_int_int_int_int__void", "PFNGLWINDOWPOS4IMESAPROC|void (*)(int,int,int,int)|PFNGLUNIFORM3IARBPROC|PFNGLCLEARCOLORIIEXTPROC|PFNGLUNIFORM3IPROC|PFNGLADDSWAPHINTRECTWINPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int_int_int_int__void = {"_p_f_int_int_int_int_int__void", "PFNGLUNIFORM4IPROC|void (*)(int,int,int,int,int)|PFNGLUNIFORM4IARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int__void = {"_p_f_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int__void", "PFNGLBLITFRAMEBUFFEREXTPROC|void (*)(int,int,int,int,int,int,int,int,unsigned int,unsigned int)|PFNGLBLITFRAMEBUFFERPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int_int_int_unsigned_int_unsigned_int_p_void__void = {"_p_f_int_int_int_int_unsigned_int_unsigned_int_p_void__void", "PFNGLREADVIDEOPIXELSSUNPROC|void (*)(int,int,int,int,unsigned int,unsigned int,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int_p_int_p_char__void = {"_p_f_int_int_p_int_p_char__void", "void (*)(int,int,int *,char *)|PFNGLGETSHADERSOURCEPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int_p_q_const__float__void = {"_p_f_int_int_p_q_const__float__void", "void (*)(int,int,float const *)|PFNGLUNIFORM2FVPROC|PFNGLUNIFORM4FVPROC|PFNGLUNIFORM1FVPROC|PFNGLUNIFORM3FVPROC|PFNGLUNIFORM1FVARBPROC|PFNGLUNIFORM2FVARBPROC|PFNGLUNIFORM3FVARBPROC|PFNGLUNIFORM4FVARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int_p_q_const__int__void = {"_p_f_int_int_p_q_const__int__void", "void (*)(int,int,int const *)|PFNGLUNIFORM2IVPROC|PFNGLUNIFORM4IVPROC|PFNGLUNIFORM1IVPROC|PFNGLUNIFORM3IVPROC|PFNGLUNIFORM1IVARBPROC|PFNGLUNIFORM2IVARBPROC|PFNGLUNIFORM3IVARBPROC|PFNGLUNIFORM4IVARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int_p_q_const__unsigned_char__void = {"_p_f_int_int_p_q_const__unsigned_char__void", "void (*)(int,int,unsigned char const *)|PFNGLEDGEFLAGPOINTEREXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int_p_q_const__unsigned_int__void = {"_p_f_int_int_p_q_const__unsigned_int__void", "void (*)(int,int,unsigned int const *)|PFNGLUNIFORM1UIVPROC|PFNGLUNIFORM2UIVPROC|PFNGLUNIFORM3UIVPROC|PFNGLUNIFORM4UIVPROC|PFNGLUNIFORM1UIVEXTPROC|PFNGLUNIFORM2UIVEXTPROC|PFNGLUNIFORM3UIVEXTPROC|PFNGLUNIFORM4UIVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_int_unsigned_char_p_q_const__float__void = {"_p_f_int_int_unsigned_char_p_q_const__float__void", "void (*)(int,int,unsigned char,float const *)|PFNGLUNIFORMMATRIX2FVPROC|PFNGLUNIFORMMATRIX4FVPROC|PFNGLUNIFORMMATRIX2X4FVPROC|PFNGLUNIFORMMATRIX3X2FVPROC|PFNGLUNIFORMMATRIX3X4FVPROC|PFNGLUNIFORMMATRIX4X2FVPROC|PFNGLUNIFORMMATRIX3FVPROC|PFNGLUNIFORMMATRIX2X3FVPROC|PFNGLUNIFORMMATRIX4X3FVPROC|PFNGLUNIFORMMATRIX2FVARBPROC|PFNGLUNIFORMMATRIX3FVARBPROC|PFNGLUNIFORMMATRIX4FVARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_double__void = {"_p_f_int_p_double__void", "PFNGLWEIGHTDVARBPROC|void (*)(int,double *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_float__void = {"_p_f_int_p_float__void", "void (*)(int,float *)|PFNGLWEIGHTFVARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_int__void = {"_p_f_int_p_int__void", "void (*)(int,int *)|PFNGLWEIGHTIVARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_p_q_const__unsigned_char_int__void = {"_p_f_int_p_p_q_const__unsigned_char_int__void", "PFNGLEDGEFLAGPOINTERLISTIBMPROC|void (*)(int,unsigned char const **,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_q_const__float__void = {"_p_f_int_p_q_const__float__void", "void (*)(int,float const *)|PFNGLFOGFUNCSGISPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_q_const__unsigned_int__void = {"_p_f_int_p_q_const__unsigned_int__void", "PFNGLDELETEVERTEXARRAYSPROC|PFNGLDRAWBUFFERSATIPROC|PFNGLDRAWBUFFERSARBPROC|PFNGLDELETEQUERIESARBPROC|PFNGLDELETEBUFFERSARBPROC|PFNGLDELETEPROGRAMSARBPROC|PFNGLDELETEBUFFERSPROC|PFNGLDRAWBUFFERSPROC|PFNGLDELETEFRAMEBUFFERSPROC|PFNGLDELETERENDERBUFFERSPROC|void (*)(int,unsigned int const *)|PFNGLDELETEFENCESAPPLEPROC|PFNGLDELETEVERTEXARRAYSAPPLEPROC|PFNGLGENVERTEXARRAYSAPPLEPROC|PFNGLDELETEFENCESNVPROC|PFNGLDELETEOCCLUSIONQUERIESNVPROC|PFNGLDELETEPROGRAMSNVPROC|PFNGLDELETEQUERIESPROC|PFNGLDELETEFRAMEBUFFERSEXTPROC|PFNGLDELETERENDERBUFFERSEXTPROC|PFNGLDELETETEXTURESEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_q_const__unsigned_int_p_q_const__float__void = {"_p_f_int_p_q_const__unsigned_int_p_q_const__float__void", "void (*)(int,unsigned int const *,float const *)|PFNGLPRIORITIZETEXTURESEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_q_const__unsigned_int_p_unsigned_char__unsigned_char = {"_p_f_int_p_q_const__unsigned_int_p_unsigned_char__unsigned_char", "unsigned char (*)(int,unsigned int const *,unsigned char *)|PFNGLARETEXTURESRESIDENTEXTPROC|PFNGLAREPROGRAMSRESIDENTNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_q_const__void__void = {"_p_f_int_p_q_const__void__void", "void (*)(int,void const *)|PFNGLSTRINGMARKERGREMEDYPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_q_const__void_unsigned_int__unsigned_int = {"_p_f_int_p_q_const__void_unsigned_int__unsigned_int", "unsigned int (*)(int,void const *,unsigned int)|PFNGLNEWOBJECTBUFFERATIPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_short__void = {"_p_f_int_p_short__void", "void (*)(int,short *)|PFNGLWEIGHTSVARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_signed_char__void = {"_p_f_int_p_signed_char__void", "void (*)(int,signed char *)|PFNGLWEIGHTBVARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_unsigned_char__void = {"_p_f_int_p_unsigned_char__void", "void (*)(int,unsigned char *)|PFNGLMATRIXINDEXUBVARBPROC|PFNGLWEIGHTUBVARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_unsigned_int__void = {"_p_f_int_p_unsigned_int__void", "PFNGLGENVERTEXARRAYSPROC|PFNGLMATRIXINDEXUIVARBPROC|PFNGLGENQUERIESARBPROC|PFNGLWEIGHTUIVARBPROC|PFNGLGENBUFFERSARBPROC|PFNGLGENPROGRAMSARBPROC|PFNGLGENBUFFERSPROC|PFNGLGENFRAMEBUFFERSPROC|PFNGLGENRENDERBUFFERSPROC|PFNGLGENPROGRAMSNVPROC|PFNGLGENOCCLUSIONQUERIESNVPROC|PFNGLGENFENCESNVPROC|PFNGLGENFENCESAPPLEPROC|PFNGLREQUESTRESIDENTPROGRAMSNVPROC|void (*)(int,unsigned int *)|PFNGLGENQUERIESPROC|PFNGLGENTEXTURESEXTPROC|PFNGLGENRENDERBUFFERSEXTPROC|PFNGLGENFRAMEBUFFERSEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_unsigned_short__void = {"_p_f_int_p_unsigned_short__void", "void (*)(int,unsigned short *)|PFNGLMATRIXINDEXUSVARBPROC|PFNGLWEIGHTUSVARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_p_void__void = {"_p_f_int_p_void__void", "PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC|PFNGLVERTEXARRAYRANGEAPPLEPROC|void (*)(int,void *)|PFNGLVERTEXARRAYRANGENVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_unsigned_int__void = {"_p_f_int_unsigned_int__void", "void (*)(int,unsigned int)|PFNGLUNIFORM1UIPROC|PFNGLUNIFORM1UIEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_unsigned_int_int_int_p_q_const__void__void = {"_p_f_int_unsigned_int_int_int_p_q_const__void__void", "void (*)(int,unsigned int,int,int,void const *)|PFNGLCOLORPOINTEREXTPROC|PFNGLTEXCOORDPOINTEREXTPROC|PFNGLVERTEXPOINTEREXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_unsigned_int_int_p_p_q_const__void_int__void = {"_p_f_int_unsigned_int_int_p_p_q_const__void_int__void", "PFNGLCOLORPOINTERLISTIBMPROC|PFNGLSECONDARYCOLORPOINTERLISTIBMPROC|PFNGLTEXCOORDPOINTERLISTIBMPROC|PFNGLVERTEXPOINTERLISTIBMPROC|void (*)(int,unsigned int,int,void const **,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_unsigned_int_int_p_void__void = {"_p_f_int_unsigned_int_int_p_void__void", "PFNGLMATRIXINDEXPOINTERARBPROC|PFNGLWEIGHTPOINTERARBPROC|PFNGLSECONDARYCOLORPOINTEREXTPROC|PFNGLVERTEXWEIGHTPOINTEREXTPROC|void (*)(int,unsigned int,int,void *)|PFNGLSECONDARYCOLORPOINTERPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_unsigned_int_p_p_q_const__void__void = {"_p_f_int_unsigned_int_p_p_q_const__void__void", "void (*)(int,unsigned int,void const **)|PFNGLCOLORPOINTERVINTELPROC|PFNGLTEXCOORDPOINTERVINTELPROC|PFNGLVERTEXPOINTERVINTELPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_unsigned_int_unsigned_int__void = {"_p_f_int_unsigned_int_unsigned_int__void", "void (*)(int,unsigned int,unsigned int)|PFNGLUNIFORM2UIPROC|PFNGLUNIFORM2UIEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_int_unsigned_int_unsigned_int_unsigned_int__void", "PFNGLUNIFORM3UIPROC|PFNGLUNIFORM3UIEXTPROC|void (*)(int,unsigned int,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void", "PFNGLUNIFORM4UIPROC|PFNGLUNIFORM4UIEXTPROC|void (*)(int,unsigned int,unsigned int,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_float__void = {"_p_f_p_float__void", "void (*)(float *)|PFNGLVERTEXWEIGHTFVEXTPROC|PFNGLGETFOGFUNCSGISPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__double__void = {"_p_f_p_q_const__double__void", "PFNGLSECONDARYCOLOR3DVPROC|PFNGLWINDOWPOS3DVPROC|void (*)(double const *)|PFNGLWINDOWPOS2DVMESAPROC|PFNGLWINDOWPOS3DVMESAPROC|PFNGLWINDOWPOS4DVMESAPROC|PFNGLWINDOWPOS2DVARBPROC|PFNGLWINDOWPOS3DVARBPROC|PFNGLFOGCOORDDVEXTPROC|PFNGLSECONDARYCOLOR3DVEXTPROC|PFNGLREFERENCEPLANESGIXPROC|PFNGLFOGCOORDDVPROC|PFNGLWINDOWPOS2DVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__float__void = {"_p_f_p_q_const__float__void", "void (*)(float const *)|PFNGLWINDOWPOS2FVMESAPROC|PFNGLWINDOWPOS3FVMESAPROC|PFNGLWINDOWPOS4FVMESAPROC|PFNGLFOGCOORDFVPROC|PFNGLWINDOWPOS2FVPROC|PFNGLSECONDARYCOLOR3FVPROC|PFNGLWINDOWPOS3FVPROC|PFNGLWINDOWPOS2FVARBPROC|PFNGLWINDOWPOS3FVARBPROC|PFNGLFOGCOORDFVEXTPROC|PFNGLSECONDARYCOLOR3FVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__float_p_q_const__float__void = {"_p_f_p_q_const__float_p_q_const__float__void", "void (*)(float const *,float const *)|PFNGLCOLOR3FVERTEX3FVSUNPROC|PFNGLNORMAL3FVERTEX3FVSUNPROC|PFNGLTEXCOORD2FVERTEX3FVSUNPROC|PFNGLTEXCOORD4FVERTEX4FVSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__float_p_q_const__float_p_q_const__float__void = {"_p_f_p_q_const__float_p_q_const__float_p_q_const__float__void", "void (*)(float const *,float const *,float const *)|PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC|PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC|PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void = {"_p_f_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void", "void (*)(float const *,float const *,float const *,float const *)|PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC|PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__float_p_q_const__unsigned_char_p_q_const__float__void = {"_p_f_p_q_const__float_p_q_const__unsigned_char_p_q_const__float__void", "void (*)(float const *,unsigned char const *,float const *)|PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__int__void = {"_p_f_p_q_const__int__void", "void (*)(int const *)|PFNGLWINDOWPOS2IVPROC|PFNGLWINDOWPOS2IVMESAPROC|PFNGLWINDOWPOS3IVMESAPROC|PFNGLWINDOWPOS4IVMESAPROC|PFNGLSECONDARYCOLOR3IVPROC|PFNGLWINDOWPOS3IVPROC|PFNGLWINDOWPOS2IVARBPROC|PFNGLWINDOWPOS3IVARBPROC|PFNGLSECONDARYCOLOR3IVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__short__void = {"_p_f_p_q_const__short__void", "PFNGLWINDOWPOS2SVPROC|void (*)(short const *)|PFNGLSECONDARYCOLOR3SVPROC|PFNGLWINDOWPOS3SVPROC|PFNGLWINDOWPOS2SVMESAPROC|PFNGLWINDOWPOS3SVMESAPROC|PFNGLWINDOWPOS4SVMESAPROC|PFNGLWINDOWPOS2SVARBPROC|PFNGLWINDOWPOS3SVARBPROC|PFNGLSECONDARYCOLOR3SVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__signed_char__void = {"_p_f_p_q_const__signed_char__void", "void (*)(signed char const *)|PFNGLSECONDARYCOLOR3BVPROC|PFNGLSECONDARYCOLOR3BVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__unsigned_char__void = {"_p_f_p_q_const__unsigned_char__void", "void (*)(unsigned char const *)|PFNGLREPLACEMENTCODEUBVSUNPROC|PFNGLSECONDARYCOLOR3UBVPROC|PFNGLSECONDARYCOLOR3UBVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__unsigned_char_p_q_const__float__void = {"_p_f_p_q_const__unsigned_char_p_q_const__float__void", "void (*)(unsigned char const *,float const *)|PFNGLCOLOR4UBVERTEX2FVSUNPROC|PFNGLCOLOR4UBVERTEX3FVSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__unsigned_int__void = {"_p_f_p_q_const__unsigned_int__void", "void (*)(unsigned int const *)|PFNGLREPLACEMENTCODEUIVSUNPROC|PFNGLSECONDARYCOLOR3UIVPROC|PFNGLSECONDARYCOLOR3UIVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__unsigned_int_p_q_const__float__void = {"_p_f_p_q_const__unsigned_int_p_q_const__float__void", "void (*)(unsigned int const *,float const *)|PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float__void = {"_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float__void", "void (*)(unsigned int const *,float const *,float const *)|PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC|PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC|PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float__void = {"_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float__void", "void (*)(unsigned int const *,float const *,float const *,float const *)|PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC|PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void = {"_p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void", "void (*)(unsigned int const *,float const *,float const *,float const *,float const *)|PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__unsigned_int_p_q_const__int_p_q_const__int_int_int__void = {"_p_f_p_q_const__unsigned_int_p_q_const__int_p_q_const__int_int_int__void", "void (*)(unsigned int const *,int const *,int const *,int,int)|PFNGLMULTIMODEDRAWARRAYSIBMPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__unsigned_int_p_q_const__int_unsigned_int_p_q_const__p_q_const__void_int_int__void = {"_p_f_p_q_const__unsigned_int_p_q_const__int_unsigned_int_p_q_const__p_q_const__void_int_int__void", "PFNGLMULTIMODEDRAWELEMENTSIBMPROC|void (*)(unsigned int const *,int const *,unsigned int,void const *const *,int,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__unsigned_int_p_q_const__unsigned_char_p_q_const__float__void = {"_p_f_p_q_const__unsigned_int_p_q_const__unsigned_char_p_q_const__float__void", "PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC|void (*)(unsigned int const *,unsigned char const *,float const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_q_const__unsigned_short__void = {"_p_f_p_q_const__unsigned_short__void", "PFNGLSECONDARYCOLOR3USVPROC|void (*)(unsigned short const *)|PFNGLCOLOR3HVNVPROC|PFNGLCOLOR4HVNVPROC|PFNGLFOGCOORDHVNVPROC|PFNGLNORMAL3HVNVPROC|PFNGLSECONDARYCOLOR3HVNVPROC|PFNGLTEXCOORD1HVNVPROC|PFNGLTEXCOORD2HVNVPROC|PFNGLTEXCOORD3HVNVPROC|PFNGLTEXCOORD4HVNVPROC|PFNGLVERTEX2HVNVPROC|PFNGLVERTEX3HVNVPROC|PFNGLVERTEX4HVNVPROC|PFNGLVERTEXWEIGHTHVNVPROC|PFNGLSECONDARYCOLOR3USVEXTPROC|PFNGLREPLACEMENTCODEUSVSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_unsigned_int__int = {"_p_f_p_unsigned_int__int", "int (*)(unsigned int *)|PFNGLFINISHASYNCSGIXPROC|PFNGLPOLLASYNCSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_short__void = {"_p_f_short__void", "PFNGLGLOBALALPHAFACTORSSUNPROC|void (*)(short)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_short_short__void = {"_p_f_short_short__void", "PFNGLWINDOWPOS2SPROC|PFNGLWINDOWPOS2SMESAPROC|void (*)(short,short)|PFNGLWINDOWPOS2SARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_short_short_short__void = {"_p_f_short_short_short__void", "PFNGLWINDOWPOS3SMESAPROC|PFNGLWINDOWPOS3SPROC|void (*)(short,short,short)|PFNGLSECONDARYCOLOR3SPROC|PFNGLWINDOWPOS3SARBPROC|PFNGLSECONDARYCOLOR3SEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_short_short_short_short__void = {"_p_f_short_short_short_short__void", "PFNGLWINDOWPOS4SMESAPROC|void (*)(short,short,short,short)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_signed_char__void = {"_p_f_signed_char__void", "void (*)(signed char)|PFNGLGLOBALALPHAFACTORBSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_signed_char_signed_char_signed_char__void = {"_p_f_signed_char_signed_char_signed_char__void", "void (*)(signed char,signed char,signed char)|PFNGLSECONDARYCOLOR3BEXTPROC|PFNGLSECONDARYCOLOR3BPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_char__void = {"_p_f_unsigned_char__void", "void (*)(unsigned char)|PFNGLGLOBALALPHAFACTORUBSUNPROC|PFNGLREPLACEMENTCODEUBSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_char_unsigned_char_unsigned_char__void = {"_p_f_unsigned_char_unsigned_char_unsigned_char__void", "void (*)(unsigned char,unsigned char,unsigned char)|PFNGLSECONDARYCOLOR3UBPROC|PFNGLSECONDARYCOLOR3UBEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float__void = {"_p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float__void", "void (*)(unsigned char,unsigned char,unsigned char,unsigned char,float,float)|PFNGLCOLOR4UBVERTEX2FSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void = {"_p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void", "void (*)(unsigned char,unsigned char,unsigned char,unsigned char,float,float,float)|PFNGLCOLOR4UBVERTEX3FSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int__p_void = {"_p_f_unsigned_int__p_void", "void *(*)(unsigned int)|PFNGLMAPOBJECTBUFFERATIPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int__unsigned_char = {"_p_f_unsigned_int__unsigned_char", "PFNGLISBUFFERPROC|PFNGLUNMAPBUFFERPROC|PFNGLISSHADERPROC|PFNGLISFRAMEBUFFERPROC|PFNGLISRENDERBUFFERPROC|PFNGLISOBJECTBUFFERATIPROC|PFNGLISVERTEXARRAYPROC|PFNGLISPROGRAMARBPROC|PFNGLISQUERYARBPROC|PFNGLISBUFFERARBPROC|PFNGLUNMAPBUFFERARBPROC|PFNGLTESTFENCEAPPLEPROC|PFNGLISVERTEXARRAYAPPLEPROC|PFNGLISFENCEAPPLEPROC|PFNGLISFENCENVPROC|PFNGLTESTFENCENVPROC|PFNGLISOCCLUSIONQUERYNVPROC|PFNGLISPROGRAMNVPROC|unsigned char (*)(unsigned int)|PFNGLISPROGRAMPROC|PFNGLISQUERYPROC|PFNGLUNMAPNAMEDBUFFEREXTPROC|PFNGLISFRAMEBUFFEREXTPROC|PFNGLISRENDERBUFFEREXTPROC|PFNGLISTEXTUREEXTPROC|PFNGLISASYNCMARKERSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int__unsigned_int = {"_p_f_unsigned_int__unsigned_int", "unsigned int (*)(unsigned int)|PFNGLCHECKFRAMEBUFFERSTATUSPROC|PFNGLGENFRAGMENTSHADERSATIPROC|PFNGLCREATESHADEROBJECTARBPROC|PFNGLGETHANDLEARBPROC|PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC|PFNGLBINDPARAMETEREXTPROC|PFNGLGENVERTEXSHADERSEXTPROC|PFNGLNEWBUFFERREGIONEXTPROC|PFNGLCREATESHADERPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int__void = {"_p_f_unsigned_int__void", "PFNGLTBUFFERMASK3DFXPROC|PFNGLBEGINTRANSFORMFEEDBACKPROC|PFNGLCOMPILESHADERPROC|PFNGLDELETESHADERPROC|PFNGLACTIVETEXTUREARBPROC|PFNGLENABLEVERTEXATTRIBARRAYARBPROC|PFNGLDISABLEVERTEXATTRIBARRAYARBPROC|PFNGLVALIDATEPROGRAMARBPROC|PFNGLUSEPROGRAMOBJECTARBPROC|PFNGLLINKPROGRAMARBPROC|PFNGLDELETEOBJECTARBPROC|PFNGLCOMPILESHADERARBPROC|PFNGLENDQUERYARBPROC|PFNGLCLIENTACTIVETEXTUREARBPROC|PFNGLENABLEVERTEXATTRIBARRAYPROC|PFNGLDISABLEVERTEXATTRIBARRAYPROC|PFNGLBINDVERTEXARRAYPROC|PFNGLBLENDEQUATIONPROC|PFNGLFINISHFENCEAPPLEPROC|PFNGLSETFENCEAPPLEPROC|PFNGLBINDVERTEXARRAYAPPLEPROC|PFNGLTEXTURELIGHTEXTPROC|PFNGLAPPLYTEXTUREEXTPROC|PFNGLRESETMINMAXEXTPROC|PFNGLRESETHISTOGRAMEXTPROC|PFNGLGENERATEMIPMAPEXTPROC|PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC|PFNGLMATRIXPUSHEXTPROC|PFNGLMATRIXPOPEXTPROC|PFNGLMATRIXLOADIDENTITYEXTPROC|PFNGLCLIENTATTRIBDEFAULTEXTPROC|PFNGLBLENDEQUATIONEXTPROC|PFNGLGENERATEMIPMAPPROC|PFNGLSAMPLEPATTERNEXTPROC|PFNGLACTIVESTENCILFACEEXTPROC|PFNGLTEXTURENORMALEXTPROC|PFNGLBEGINTRANSFORMFEEDBACKEXTPROC|PFNGLBINDVERTEXSHADEREXTPROC|PFNGLDELETEVERTEXSHADEREXTPROC|PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC|PFNGLENABLEVARIANTCLIENTSTATEEXTPROC|PFNGLDELETEBUFFERREGIONEXTPROC|PFNGLSAMPLEPATTERNSGISPROC|PFNGLRESETHISTOGRAMPROC|PFNGLDELETEPROGRAMPROC|PFNGLLINKPROGRAMPROC|PFNGLUSEPROGRAMPROC|PFNGLVALIDATEPROGRAMPROC|PFNGLUNMAPOBJECTBUFFERATIPROC|PFNGLDELETEFRAGMENTSHADERATIPROC|PFNGLBINDFRAGMENTSHADERATIPROC|PFNGLFREEOBJECTBUFFERATIPROC|PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC|PFNGLGLOBALALPHAFACTORUISUNPROC|PFNGLREPLACEMENTCODEUISUNPROC|PFNGLPRIMITIVERESTARTINDEXNVPROC|PFNGLRESETMINMAXPROC|PFNGLENDQUERYPROC|void (*)(unsigned int)|PFNGLACTIVETEXTUREPROC|PFNGLCLIENTACTIVETEXTUREPROC|PFNGLFINISHFENCENVPROC|PFNGLBEGINOCCLUSIONQUERYNVPROC|PFNGLFLUSHPIXELDATARANGENVPROC|PFNGLBEGINTRANSFORMFEEDBACKNVPROC|PFNGLASYNCMARKERSGIXPROC|PFNGLTEXTUREFOGSGIXPROC|PFNGLPIXELTEXGENSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_double__void = {"_p_f_unsigned_int_double__void", "PFNGLMULTITEXCOORD1DPROC|PFNGLVERTEXATTRIB1DPROC|PFNGLMULTITEXCOORD1DARBPROC|PFNGLVERTEXATTRIB1DARBPROC|void (*)(unsigned int,double)|PFNGLVERTEXATTRIB1DNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_double_double__void = {"_p_f_unsigned_int_double_double__void", "PFNGLVERTEXSTREAM2DATIPROC|PFNGLMULTITEXCOORD2DARBPROC|PFNGLVERTEXATTRIB2DARBPROC|void (*)(unsigned int,double,double)|PFNGLMULTITEXCOORD2DPROC|PFNGLVERTEXATTRIB2DPROC|PFNGLVERTEXATTRIB2DNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_double_double_double__void = {"_p_f_unsigned_int_double_double_double__void", "PFNGLMULTITEXCOORD3DPROC|PFNGLVERTEXATTRIB3DPROC|PFNGLNORMALSTREAM3DATIPROC|PFNGLVERTEXSTREAM3DATIPROC|PFNGLMULTITEXCOORD3DARBPROC|PFNGLVERTEXATTRIB3DARBPROC|PFNGLMATRIXSCALEDEXTPROC|PFNGLMATRIXTRANSLATEDEXTPROC|void (*)(unsigned int,double,double,double)|PFNGLVERTEXATTRIB3DNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_double_double_double_double__void = {"_p_f_unsigned_int_double_double_double_double__void", "PFNGLVERTEXSTREAM4DATIPROC|PFNGLMULTITEXCOORD4DPROC|PFNGLVERTEXATTRIB4DPROC|PFNGLMULTITEXCOORD4DARBPROC|PFNGLVERTEXATTRIB4DARBPROC|PFNGLMATRIXROTATEDEXTPROC|void (*)(unsigned int,double,double,double,double)|PFNGLVERTEXATTRIB4DNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_double_double_double_double_double_double__void = {"_p_f_unsigned_int_double_double_double_double_double_double__void", "void (*)(unsigned int,double,double,double,double,double,double)|PFNGLMATRIXFRUSTUMEXTPROC|PFNGLMATRIXORTHOEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_float__void = {"_p_f_unsigned_int_float__void", "PFNGLPOINTPARAMETERFPROC|PFNGLPNTRIANGLESFATIPROC|PFNGLVERTEXBLENDENVFATIPROC|PFNGLMULTITEXCOORD1FARBPROC|PFNGLPOINTPARAMETERFARBPROC|PFNGLVERTEXATTRIB1FARBPROC|void (*)(unsigned int,float)|PFNGLCOMBINERPARAMETERFNVPROC|PFNGLVERTEXATTRIB1FNVPROC|PFNGLVERTEXATTRIB1FPROC|PFNGLFRAGMENTLIGHTMODELFEXTPROC|PFNGLINDEXFUNCEXTPROC|PFNGLPOINTPARAMETERFEXTPROC|PFNGLFRAGMENTLIGHTMODELFSGIXPROC|PFNGLMULTITEXCOORD1FPROC|PFNGLSPRITEPARAMETERFSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_float_float__void = {"_p_f_unsigned_int_float_float__void", "PFNGLVERTEXSTREAM2FATIPROC|void (*)(unsigned int,float,float)|PFNGLTEXSCISSORINTELPROC|PFNGLMULTITEXCOORD2FARBPROC|PFNGLVERTEXATTRIB2FARBPROC|PFNGLVERTEXATTRIB2FNVPROC|PFNGLMULTITEXCOORD2FPROC|PFNGLVERTEXATTRIB2FPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_float_float_float__void = {"_p_f_unsigned_int_float_float_float__void", "PFNGLMULTITEXCOORD3FPROC|PFNGLVERTEXATTRIB3FPROC|PFNGLNORMALSTREAM3FATIPROC|PFNGLVERTEXSTREAM3FATIPROC|void (*)(unsigned int,float,float,float)|PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC|PFNGLMULTITEXCOORD3FARBPROC|PFNGLVERTEXATTRIB3FARBPROC|PFNGLMATRIXSCALEFEXTPROC|PFNGLMATRIXTRANSLATEFEXTPROC|PFNGLVERTEXATTRIB3FNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_float_float_float_float__void = {"_p_f_unsigned_int_float_float_float_float__void", "PFNGLVERTEXSTREAM4FATIPROC|void (*)(unsigned int,float,float,float,float)|PFNGLMULTITEXCOORD4FPROC|PFNGLVERTEXATTRIB4FPROC|PFNGLMULTITEXCOORD4FARBPROC|PFNGLVERTEXATTRIB4FARBPROC|PFNGLMATRIXROTATEFEXTPROC|PFNGLVERTEXATTRIB4FNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_float_float_float_float_float__void = {"_p_f_unsigned_int_float_float_float_float_float__void", "PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC|void (*)(unsigned int,float,float,float,float,float)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_float_float_float_float_float_float__void = {"_p_f_unsigned_int_float_float_float_float_float_float__void", "PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC|PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC|void (*)(unsigned int,float,float,float,float,float,float)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_float_float_float_float_float_float_float_float__void = {"_p_f_unsigned_int_float_float_float_float_float_float_float_float__void", "void (*)(unsigned int,float,float,float,float,float,float,float,float)|PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float__void = {"_p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float__void", "PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC|void (*)(unsigned int,float,float,float,float,float,float,float,float,float,float)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float_float_float__void = {"_p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float_float_float__void", "PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC|void (*)(unsigned int,float,float,float,float,float,float,float,float,float,float,float,float)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int__int = {"_p_f_unsigned_int_int__int", "int (*)(unsigned int,int)|PFNGLGETUNIFORMBUFFERSIZEEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int__ptrdiff_t = {"_p_f_unsigned_int_int__ptrdiff_t", "ptrdiff_t (*)(unsigned int,int)|PFNGLGETUNIFORMOFFSETEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int__void = {"_p_f_unsigned_int_int__void", "PFNGLVERTEXATTRIBI1IPROC|PFNGLDRAWELEMENTARRAYATIPROC|PFNGLPNTRIANGLESIATIPROC|PFNGLVERTEXBLENDENVIATIPROC|PFNGLMULTITEXCOORD1IARBPROC|PFNGLCOMBINERPARAMETERINVPROC|PFNGLPOINTPARAMETERINVPROC|PFNGLFINISHOBJECTAPPLEPROC|PFNGLVERTEXARRAYPARAMETERIAPPLEPROC|void (*)(unsigned int,int)|PFNGLMULTITEXCOORD1IPROC|PFNGLPROGRAMVERTEXLIMITNVPROC|PFNGLPOINTPARAMETERIPROC|PFNGLVERTEXATTRIBI1IEXTPROC|PFNGLLIGHTENVIEXTPROC|PFNGLFRAGMENTLIGHTMODELIEXTPROC|PFNGLDELETEASYNCMARKERSSGIXPROC|PFNGLFRAGMENTLIGHTMODELISGIXPROC|PFNGLSPRITEPARAMETERISGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_float__void = {"_p_f_unsigned_int_int_float__void", "void (*)(unsigned int,int,float)|PFNGLPROGRAMUNIFORM1FEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_float_float__void = {"_p_f_unsigned_int_int_float_float__void", "void (*)(unsigned int,int,float,float)|PFNGLPROGRAMUNIFORM2FEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_float_float_float__void = {"_p_f_unsigned_int_int_float_float_float__void", "void (*)(unsigned int,int,float,float,float)|PFNGLPROGRAMUNIFORM3FEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_float_float_float_float__void = {"_p_f_unsigned_int_int_float_float_float_float__void", "void (*)(unsigned int,int,float,float,float,float)|PFNGLPROGRAMUNIFORM4FEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_float_int__void = {"_p_f_unsigned_int_int_float_int__void", "PFNGLCLEARBUFFERFIPROC|void (*)(unsigned int,int,float,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int__void = {"_p_f_unsigned_int_int_int__void", "PFNGLVERTEXSTREAM2IATIPROC|PFNGLVERTEXATTRIBI2IPROC|PFNGLDRAWELEMENTARRAYAPPLEPROC|void (*)(unsigned int,int,int)|PFNGLMULTITEXCOORD2IPROC|PFNGLMULTITEXCOORD2IARBPROC|PFNGLPROGRAMUNIFORM1IEXTPROC|PFNGLVERTEXATTRIBI2IEXTPROC|PFNGLDRAWARRAYSEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int__void = {"_p_f_unsigned_int_int_int_int__void", "PFNGLNORMALSTREAM3IATIPROC|PFNGLVERTEXSTREAM3IATIPROC|void (*)(unsigned int,int,int,int)|PFNGLDRAWARRAYSINSTANCEDARBPROC|PFNGLMULTITEXCOORD3IARBPROC|PFNGLPROGRAMUNIFORM2IEXTPROC|PFNGLDRAWARRAYSINSTANCEDEXTPROC|PFNGLVERTEXATTRIBI3IEXTPROC|PFNGLVERTEXATTRIBI3IPROC|PFNGLMULTITEXCOORD3IPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int_int__void = {"_p_f_unsigned_int_int_int_int_int__void", "PFNGLVERTEXATTRIBI4IPROC|PFNGLMULTITEXCOORD4IPROC|PFNGLVERTEXSTREAM4IATIPROC|PFNGLCOPYCOLORSUBTABLEPROC|void (*)(unsigned int,int,int,int,int)|PFNGLMULTITEXCOORD4IARBPROC|PFNGLCOPYCOLORSUBTABLEEXTPROC|PFNGLPROGRAMUNIFORM3IEXTPROC|PFNGLVERTEXATTRIBI4IEXTPROC|PFNGLREADBUFFERREGIONEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int_int_int__void = {"_p_f_unsigned_int_int_int_int_int_int__void", "void (*)(unsigned int,int,int,int,int,int)|PFNGLCOPYTEXSUBIMAGE1DEXTPROC|PFNGLPROGRAMUNIFORM4IEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int_int_int_int__void = {"_p_f_unsigned_int_int_int_int_int_int_int__void", "void (*)(unsigned int,int,int,int,int,int,int)|PFNGLDRAWBUFFERREGIONEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int_int_int_int_int__void = {"_p_f_unsigned_int_int_int_int_int_int_int_int__void", "void (*)(unsigned int,int,int,int,int,int,int,int)|PFNGLCOPYTEXSUBIMAGE2DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int_int_int_int_int_int__void = {"_p_f_unsigned_int_int_int_int_int_int_int_int_int__void", "void (*)(unsigned int,int,int,int,int,int,int,int,int)|PFNGLCOPYTEXSUBIMAGE3DEXTPROC|PFNGLCOPYTEXSUBIMAGE3DPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_int_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,int,int,int,int,int,int,int,int,int,unsigned int,unsigned int,void const *)|PFNGLTEXSUBIMAGE4DSGISPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void = {"_p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void", "void (*)(unsigned int,int,int,int,int,int,int,int,unsigned int,int,void const *)|PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC|PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,int,int,int,int,int,int,int,unsigned int,unsigned int,void const *)|PFNGLTEXSUBIMAGE3DEXTPROC|PFNGLTEXSUBIMAGE3DPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,int,int,int,int,int,int,unsigned int,unsigned int,void const *)|PFNGLTEXIMAGE3DPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void = {"_p_f_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void", "PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC|PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC|void (*)(unsigned int,int,int,int,int,int,unsigned int,int,void const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "PFNGLTEXSUBIMAGE2DEXTPROC|void (*)(unsigned int,int,int,int,int,int,unsigned int,unsigned int,void const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void = {"_p_f_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void", "void (*)(unsigned int,int,int,int,unsigned int,int,void const *)|PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC|PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,int,int,int,unsigned int,unsigned int,void const *)|PFNGLTEXSUBIMAGE1DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_p_q_const__float__void = {"_p_f_unsigned_int_int_int_p_q_const__float__void", "void (*)(unsigned int,int,int,float const *)|PFNGLPROGRAMUNIFORM1FVEXTPROC|PFNGLPROGRAMUNIFORM2FVEXTPROC|PFNGLPROGRAMUNIFORM3FVEXTPROC|PFNGLPROGRAMUNIFORM4FVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_p_q_const__int__void = {"_p_f_unsigned_int_int_int_p_q_const__int__void", "void (*)(unsigned int,int,int,int const *)|PFNGLPROGRAMUNIFORM1IVEXTPROC|PFNGLPROGRAMUNIFORM2IVEXTPROC|PFNGLPROGRAMUNIFORM3IVEXTPROC|PFNGLPROGRAMUNIFORM4IVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_p_q_const__unsigned_int__void = {"_p_f_unsigned_int_int_int_p_q_const__unsigned_int__void", "void (*)(unsigned int,int,int,unsigned int const *)|PFNGLPROGRAMUNIFORM1UIVEXTPROC|PFNGLPROGRAMUNIFORM2UIVEXTPROC|PFNGLPROGRAMUNIFORM3UIVEXTPROC|PFNGLPROGRAMUNIFORM4UIVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_p_q_const__void__void = {"_p_f_unsigned_int_int_int_p_q_const__void__void", "void (*)(unsigned int,int,int,void const *)|PFNGLINDEXPOINTEREXTPROC|PFNGLNORMALPOINTEREXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void = {"_p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void", "void (*)(unsigned int,int,int,unsigned char,float const *)|PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC|PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC|PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC|PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC|PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC|PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC|PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC|PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC|PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_unsigned_int_int_int__void = {"_p_f_unsigned_int_int_int_unsigned_int_int_int__void", "void (*)(unsigned int,int,int,unsigned int,int,int)|PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC|PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,int,int,unsigned int,unsigned int,void const *)|PFNGLCOLORSUBTABLEPROC|PFNGLCOLORSUBTABLEEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_float__void = {"_p_f_unsigned_int_int_p_float__void", "void (*)(unsigned int,int,float *)|PFNGLGETUNIFORMFVPROC|PFNGLGETUNIFORMFVARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_int__void = {"_p_f_unsigned_int_int_p_int__void", "void (*)(unsigned int,int,int *)|PFNGLGETUNIFORMIVPROC|PFNGLGETUNIFORMIVARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_int_p_char__void = {"_p_f_unsigned_int_int_p_int_p_char__void", "void (*)(unsigned int,int,int *,char *)|PFNGLGETPROGRAMINFOLOGPROC|PFNGLGETSHADERINFOLOGPROC|PFNGLGETINFOLOGARBPROC|PFNGLGETSHADERSOURCEARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_int_p_unsigned_int__void = {"_p_f_unsigned_int_int_p_int_p_unsigned_int__void", "void (*)(unsigned int,int,int *,unsigned int *)|PFNGLGETATTACHEDSHADERSPROC|PFNGLGETATTACHEDOBJECTSARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_p_q_const__char_p_q_const__int__void = {"_p_f_unsigned_int_int_p_p_q_const__char_p_q_const__int__void", "PFNGLSHADERSOURCEARBPROC|void (*)(unsigned int,int,char const **,int const *)|PFNGLSHADERSOURCEPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_p_q_const__char_unsigned_int__void = {"_p_f_unsigned_int_int_p_p_q_const__char_unsigned_int__void", "void (*)(unsigned int,int,char const **,unsigned int)|PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_p_q_const__void_int__void = {"_p_f_unsigned_int_int_p_p_q_const__void_int__void", "PFNGLFOGCOORDPOINTERLISTIBMPROC|PFNGLINDEXPOINTERLISTIBMPROC|PFNGLNORMALPOINTERLISTIBMPROC|void (*)(unsigned int,int,void const **,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__double__void = {"_p_f_unsigned_int_int_p_q_const__double__void", "void (*)(unsigned int,int,double const *)|PFNGLVERTEXATTRIBS1DVNVPROC|PFNGLVERTEXATTRIBS2DVNVPROC|PFNGLVERTEXATTRIBS3DVNVPROC|PFNGLVERTEXATTRIBS4DVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__float__void = {"_p_f_unsigned_int_int_p_q_const__float__void", "void (*)(unsigned int,int,float const *)|PFNGLCLEARBUFFERFVPROC|PFNGLVERTEXATTRIBS1FVNVPROC|PFNGLVERTEXATTRIBS2FVNVPROC|PFNGLVERTEXATTRIBS3FVNVPROC|PFNGLVERTEXATTRIBS4FVNVPROC|PFNGLDETAILTEXFUNCSGISPROC|PFNGLSHARPENTEXFUNCSGISPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__int__void = {"_p_f_unsigned_int_int_p_q_const__int__void", "void (*)(unsigned int,int,int const *)|PFNGLCLEARBUFFERIVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__int_unsigned_int__void = {"_p_f_unsigned_int_int_p_q_const__int_unsigned_int__void", "PFNGLTRANSFORMFEEDBACKVARYINGSPROC|void (*)(unsigned int,int,int const *,unsigned int)|PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__short__void = {"_p_f_unsigned_int_int_p_q_const__short__void", "void (*)(unsigned int,int,short const *)|PFNGLVERTEXATTRIBS1SVNVPROC|PFNGLVERTEXATTRIBS2SVNVPROC|PFNGLVERTEXATTRIBS3SVNVPROC|PFNGLVERTEXATTRIBS4SVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__unsigned_char__void = {"_p_f_unsigned_int_int_p_q_const__unsigned_char__void", "void (*)(unsigned int,int,unsigned char const *)|PFNGLVERTEXATTRIBS4UBVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__double__void = {"_p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__double__void", "void (*)(unsigned int,int,unsigned char const *,double const [])|PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__float__void = {"_p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__float__void", "void (*)(unsigned int,int,unsigned char const *,float const [])|PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_double_double_double_double__void = {"_p_f_unsigned_int_int_p_q_const__unsigned_char_double_double_double_double__void", "void (*)(unsigned int,int,unsigned char const *,double,double,double,double)|PFNGLPROGRAMNAMEDPARAMETER4DNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_float_float_float_float__void = {"_p_f_unsigned_int_int_p_q_const__unsigned_char_float_float_float_float__void", "void (*)(unsigned int,int,unsigned char const *,float,float,float,float)|PFNGLPROGRAMNAMEDPARAMETER4FNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_p_double__void = {"_p_f_unsigned_int_int_p_q_const__unsigned_char_p_double__void", "void (*)(unsigned int,int,unsigned char const *,double *)|PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_p_float__void = {"_p_f_unsigned_int_int_p_q_const__unsigned_char_p_float__void", "void (*)(unsigned int,int,unsigned char const *,float *)|PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__unsigned_int__void = {"_p_f_unsigned_int_int_p_q_const__unsigned_int__void", "void (*)(unsigned int,int,unsigned int const *)|PFNGLCLEARBUFFERUIVPROC|PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__unsigned_short__void = {"_p_f_unsigned_int_int_p_q_const__unsigned_short__void", "void (*)(unsigned int,int,unsigned short const *)|PFNGLVERTEXATTRIBS1HVNVPROC|PFNGLVERTEXATTRIBS2HVNVPROC|PFNGLVERTEXATTRIBS3HVNVPROC|PFNGLVERTEXATTRIBS4HVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_q_const__void__void = {"_p_f_unsigned_int_int_p_q_const__void__void", "void (*)(unsigned int,int,void const *)|PFNGLREPLACEMENTCODEPOINTERSUNPROC|PFNGLFOGCOORDPOINTEREXTPROC|PFNGLFOGCOORDPOINTERPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_unsigned_int__void = {"_p_f_unsigned_int_int_p_unsigned_int__void", "void (*)(unsigned int,int,unsigned int *)|PFNGLGETUNIFORMUIVPROC|PFNGLGETUNIFORMUIVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_p_void__void = {"_p_f_unsigned_int_int_p_void__void", "PFNGLGETCOMPRESSEDTEXIMAGEPROC|PFNGLTEXTURERANGEAPPLEPROC|PFNGLGETCOMPRESSEDTEXIMAGEARBPROC|PFNGLBINORMALPOINTEREXTPROC|PFNGLTANGENTPOINTEREXTPROC|void (*)(unsigned int,int,void *)|PFNGLPIXELDATARANGENVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int__void = {"_p_f_unsigned_int_int_unsigned_int__void", "void (*)(unsigned int,int,unsigned int)|PFNGLUNIFORMBUFFEREXTPROC|PFNGLPROGRAMUNIFORM1UIEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_int_int__void = {"_p_f_unsigned_int_int_unsigned_int_int_int__void", "PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC|void (*)(unsigned int,int,unsigned int,int,int)|PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC|PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int__void = {"_p_f_unsigned_int_int_unsigned_int_int_int_int_int__void", "void (*)(unsigned int,int,unsigned int,int,int,int,int)|PFNGLCOPYTEXIMAGE1DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int__void = {"_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int__void", "void (*)(unsigned int,int,unsigned int,int,int,int,int,int)|PFNGLCOPYTEXIMAGE2DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void = {"_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void", "void (*)(unsigned int,int,unsigned int,int,int,int,int,int,void const *)|PFNGLCOMPRESSEDTEXIMAGE3DARBPROC|PFNGLCOMPRESSEDTEXIMAGE3DPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,int,unsigned int,int,int,int,int,int,unsigned int,unsigned int,void const *)|PFNGLTEXIMAGE4DSGISPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void = {"_p_f_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void", "void (*)(unsigned int,int,unsigned int,int,int,int,int,void const *)|PFNGLCOMPRESSEDTEXIMAGE2DPROC|PFNGLCOMPRESSEDTEXIMAGE2DARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,int,unsigned int,int,int,int,int,unsigned int,unsigned int,void const *)|PFNGLTEXIMAGE3DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void = {"_p_f_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void", "void (*)(unsigned int,int,unsigned int,int,int,int,void const *)|PFNGLCOMPRESSEDTEXIMAGE1DPROC|PFNGLCOMPRESSEDTEXIMAGE1DARBPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void = {"_p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void", "void (*)(unsigned int,int,unsigned int,int,void const *)|PFNGLMULTITEXCOORDPOINTEREXTPROC|PFNGLVERTEXATTRIBIPOINTEREXTPROC|PFNGLVERTEXATTRIBPOINTERNVPROC|PFNGLVERTEXATTRIBIPOINTERPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_int_unsigned_int_int_unsigned_int_unsigned_int__void", "PFNGLARRAYOBJECTATIPROC|void (*)(unsigned int,int,unsigned int,int,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_p_q_const__void_int__void = {"_p_f_unsigned_int_int_unsigned_int_p_q_const__void_int__void", "PFNGLDRAWELEMENTSINSTANCEDARBPROC|PFNGLDRAWELEMENTSINSTANCEDEXTPROC|void (*)(unsigned int,int,unsigned int,void const *,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_unsigned_char__void = {"_p_f_unsigned_int_int_unsigned_int_unsigned_char__void", "void (*)(unsigned int,int,unsigned int,unsigned char)|PFNGLHISTOGRAMEXTPROC|PFNGLHISTOGRAMPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_unsigned_char_int_p_q_const__void__void = {"_p_f_unsigned_int_int_unsigned_int_unsigned_char_int_p_q_const__void__void", "void (*)(unsigned int,int,unsigned int,unsigned char,int,void const *)|PFNGLVERTEXATTRIBPOINTERARBPROC|PFNGLVERTEXATTRIBPOINTERPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_unsigned_char_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_int_unsigned_int_unsigned_char_int_unsigned_int_unsigned_int__void", "PFNGLVERTEXATTRIBARRAYOBJECTATIPROC|void (*)(unsigned int,int,unsigned int,unsigned char,int,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_int_unsigned_int_unsigned_int__void", "PFNGLPROGRAMUNIFORM2UIEXTPROC|void (*)(unsigned int,int,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int__void", "PFNGLPROGRAMUNIFORM3UIEXTPROC|void (*)(unsigned int,int,unsigned int,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void", "PFNGLPROGRAMUNIFORM4UIEXTPROC|void (*)(unsigned int,int,unsigned int,unsigned int,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_double__void = {"_p_f_unsigned_int_p_double__void", "PFNGLCULLPARAMETERDVEXTPROC|PFNGLVARIANTDVEXTPROC|void (*)(unsigned int,double *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_float__void = {"_p_f_unsigned_int_p_float__void", "PFNGLTEXBUMPPARAMETERFVATIPROC|PFNGLGETTEXBUMPPARAMETERFVATIPROC|PFNGLGETSHARPENTEXFUNCSGISPROC|PFNGLGETDETAILTEXFUNCSGISPROC|void (*)(unsigned int,float *)|PFNGLPOINTPARAMETERFVARBPROC|PFNGLGETCLIPPLANEFOESPROC|PFNGLSPRITEPARAMETERFVSGIXPROC|PFNGLFRAGMENTLIGHTMODELFVSGIXPROC|PFNGLVARIANTFVEXTPROC|PFNGLPOINTPARAMETERFVEXTPROC|PFNGLFRAGMENTLIGHTMODELFVEXTPROC|PFNGLCULLPARAMETERFVEXTPROC|PFNGLPOINTPARAMETERFVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_int__void = {"_p_f_unsigned_int_p_int__void", "void (*)(unsigned int,int *)|PFNGLGETTEXBUMPPARAMETERIVATIPROC|PFNGLTEXBUMPPARAMETERIVATIPROC|PFNGLPOINTPARAMETERIVPROC|PFNGLFRAGMENTLIGHTMODELIVEXTPROC|PFNGLVARIANTIVEXTPROC|PFNGLFRAGMENTLIGHTMODELIVSGIXPROC|PFNGLSPRITEPARAMETERIVSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_int_p_int_int__void = {"_p_f_unsigned_int_p_int_p_int_int__void", "PFNGLMULTIDRAWARRAYSPROC|PFNGLMULTIDRAWARRAYSEXTPROC|void (*)(unsigned int,int *,int *,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_int_unsigned_int_p_p_q_const__void_int__void = {"_p_f_unsigned_int_p_int_unsigned_int_p_p_q_const__void_int__void", "void (*)(unsigned int,int *,unsigned int,void const **,int)|PFNGLMULTIDRAWELEMENTSEXTPROC|PFNGLMULTIDRAWELEMENTSPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_p_q_const__void__void = {"_p_f_unsigned_int_p_p_q_const__void__void", "void (*)(unsigned int,void const **)|PFNGLNORMALPOINTERVINTELPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_p_void__void = {"_p_f_unsigned_int_p_p_void__void", "void (*)(unsigned int,void **)|PFNGLGETPOINTERVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__char__int = {"_p_f_unsigned_int_p_q_const__char__int", "int (*)(unsigned int,char const *)|PFNGLGETATTRIBLOCATIONPROC|PFNGLGETUNIFORMLOCATIONPROC|PFNGLGETFRAGDATALOCATIONPROC|PFNGLGETUNIFORMLOCATIONARBPROC|PFNGLGETATTRIBLOCATIONARBPROC|PFNGLGETFRAGDATALOCATIONEXTPROC|PFNGLGETVARYINGLOCATIONNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__char__void = {"_p_f_unsigned_int_p_q_const__char__void", "void (*)(unsigned int,char const *)|PFNGLACTIVEVARYINGNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__double__void = {"_p_f_unsigned_int_p_q_const__double__void", "PFNGLVERTEXSTREAM4DVATIPROC|PFNGLVERTEXSTREAM3DVATIPROC|PFNGLVERTEXSTREAM2DVATIPROC|PFNGLNORMALSTREAM3DVATIPROC|PFNGLVERTEXATTRIB4DVARBPROC|PFNGLVERTEXATTRIB3DVARBPROC|PFNGLMULTITEXCOORD1DVARBPROC|PFNGLMULTITEXCOORD2DVARBPROC|PFNGLMULTITEXCOORD3DVARBPROC|PFNGLMULTITEXCOORD4DVARBPROC|PFNGLVERTEXATTRIB1DVARBPROC|PFNGLVERTEXATTRIB2DVARBPROC|void (*)(unsigned int,double const *)|PFNGLVERTEXATTRIB3DVPROC|PFNGLVERTEXATTRIB1DVPROC|PFNGLMULTITEXCOORD3DVPROC|PFNGLMULTITEXCOORD1DVPROC|PFNGLVERTEXATTRIB4DVPROC|PFNGLVERTEXATTRIB2DVPROC|PFNGLMULTITEXCOORD4DVPROC|PFNGLMULTITEXCOORD2DVPROC|PFNGLVERTEXATTRIB1DVNVPROC|PFNGLVERTEXATTRIB2DVNVPROC|PFNGLVERTEXATTRIB3DVNVPROC|PFNGLVERTEXATTRIB4DVNVPROC|PFNGLMATRIXLOADTRANSPOSEDEXTPROC|PFNGLMATRIXLOADDEXTPROC|PFNGLMATRIXMULTTRANSPOSEDEXTPROC|PFNGLMATRIXMULTDEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__float__void = {"_p_f_unsigned_int_p_q_const__float__void", "PFNGLVERTEXSTREAM4FVATIPROC|PFNGLVERTEXSTREAM3FVATIPROC|PFNGLVERTEXSTREAM2FVATIPROC|PFNGLNORMALSTREAM3FVATIPROC|PFNGLSETFRAGMENTSHADERCONSTANTATIPROC|PFNGLVERTEXATTRIB4FVARBPROC|PFNGLVERTEXATTRIB3FVARBPROC|PFNGLMULTITEXCOORD1FVARBPROC|PFNGLMULTITEXCOORD2FVARBPROC|PFNGLMULTITEXCOORD3FVARBPROC|PFNGLMULTITEXCOORD4FVARBPROC|PFNGLVERTEXATTRIB1FVARBPROC|PFNGLVERTEXATTRIB2FVARBPROC|void (*)(unsigned int,float const *)|PFNGLVERTEXATTRIB3FVPROC|PFNGLVERTEXATTRIB1FVPROC|PFNGLMULTITEXCOORD3FVPROC|PFNGLMULTITEXCOORD1FVPROC|PFNGLCLIPPLANEFOESPROC|PFNGLCOMBINERPARAMETERFVNVPROC|PFNGLVERTEXATTRIB1FVNVPROC|PFNGLVERTEXATTRIB2FVNVPROC|PFNGLVERTEXATTRIB3FVNVPROC|PFNGLVERTEXATTRIB4FVNVPROC|PFNGLVERTEXATTRIB4FVPROC|PFNGLVERTEXATTRIB2FVPROC|PFNGLMULTITEXCOORD4FVPROC|PFNGLMULTITEXCOORD2FVPROC|PFNGLMATRIXLOADTRANSPOSEFEXTPROC|PFNGLMATRIXLOADFEXTPROC|PFNGLMATRIXMULTTRANSPOSEFEXTPROC|PFNGLMATRIXMULTFEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__int__void = {"_p_f_unsigned_int_p_q_const__int__void", "PFNGLMULTITEXCOORD1IVPROC|PFNGLMULTITEXCOORD3IVPROC|PFNGLVERTEXATTRIBI1IVPROC|PFNGLVERTEXATTRIBI3IVPROC|PFNGLVERTEXSTREAM4IVATIPROC|PFNGLVERTEXSTREAM3IVATIPROC|PFNGLVERTEXSTREAM2IVATIPROC|PFNGLNORMALSTREAM3IVATIPROC|PFNGLMULTITEXCOORD1IVARBPROC|PFNGLMULTITEXCOORD2IVARBPROC|PFNGLMULTITEXCOORD3IVARBPROC|PFNGLMULTITEXCOORD4IVARBPROC|PFNGLVERTEXATTRIBI4IVPROC|void (*)(unsigned int,int const *)|PFNGLVERTEXATTRIBI2IVPROC|PFNGLVERTEXATTRIB4IVPROC|PFNGLVERTEXATTRIB4NIVPROC|PFNGLMULTITEXCOORD4IVPROC|PFNGLMULTITEXCOORD2IVPROC|PFNGLVERTEXATTRIB4NIVARBPROC|PFNGLVERTEXATTRIB4IVARBPROC|PFNGLPOINTPARAMETERIVNVPROC|PFNGLCOMBINERPARAMETERIVNVPROC|PFNGLVERTEXATTRIBI1IVEXTPROC|PFNGLVERTEXATTRIBI2IVEXTPROC|PFNGLVERTEXATTRIBI3IVEXTPROC|PFNGLVERTEXATTRIBI4IVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__int_p_q_const__int_int__void = {"_p_f_unsigned_int_p_q_const__int_p_q_const__int_int__void", "PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC|void (*)(unsigned int,int const *,int const *,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__int_unsigned_int__void = {"_p_f_unsigned_int_p_q_const__int_unsigned_int__void", "void (*)(unsigned int,int const *,unsigned int)|PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__short__void = {"_p_f_unsigned_int_p_q_const__short__void", "PFNGLVERTEXSTREAM4SVATIPROC|PFNGLVERTEXSTREAM3SVATIPROC|PFNGLVERTEXSTREAM2SVATIPROC|PFNGLNORMALSTREAM3SVATIPROC|PFNGLMULTITEXCOORD1SVPROC|PFNGLMULTITEXCOORD3SVPROC|PFNGLVERTEXATTRIB1SVPROC|PFNGLVERTEXATTRIB3SVPROC|PFNGLVERTEXATTRIB1SVARBPROC|PFNGLMULTITEXCOORD1SVARBPROC|PFNGLMULTITEXCOORD2SVARBPROC|PFNGLMULTITEXCOORD3SVARBPROC|PFNGLMULTITEXCOORD4SVARBPROC|void (*)(unsigned int,short const *)|PFNGLVERTEXATTRIB2SVARBPROC|PFNGLVERTEXATTRIB3SVARBPROC|PFNGLVERTEXATTRIB4NSVARBPROC|PFNGLVERTEXATTRIB4SVARBPROC|PFNGLVERTEXATTRIBI4SVPROC|PFNGLVERTEXATTRIB4SVPROC|PFNGLVERTEXATTRIB4NSVPROC|PFNGLVERTEXATTRIB2SVPROC|PFNGLMULTITEXCOORD4SVPROC|PFNGLMULTITEXCOORD2SVPROC|PFNGLVERTEXATTRIB1SVNVPROC|PFNGLVERTEXATTRIB2SVNVPROC|PFNGLVERTEXATTRIB3SVNVPROC|PFNGLVERTEXATTRIB4SVNVPROC|PFNGLVERTEXATTRIBI4SVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__signed_char__void = {"_p_f_unsigned_int_p_q_const__signed_char__void", "PFNGLNORMALSTREAM3BVATIPROC|void (*)(unsigned int,signed char const *)|PFNGLVERTEXATTRIB4NBVPROC|PFNGLVERTEXATTRIB4BVPROC|PFNGLVERTEXATTRIBI4BVPROC|PFNGLVERTEXATTRIB4NBVARBPROC|PFNGLVERTEXATTRIB4BVARBPROC|PFNGLVERTEXATTRIBI4BVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__unsigned_char__void = {"_p_f_unsigned_int_p_q_const__unsigned_char__void", "void (*)(unsigned int,unsigned char const *)|PFNGLVERTEXATTRIB4NUBVPROC|PFNGLVERTEXATTRIB4UBVPROC|PFNGLVERTEXATTRIBI4UBVPROC|PFNGLVERTEXATTRIB4NUBVARBPROC|PFNGLVERTEXATTRIB4UBVARBPROC|PFNGLVERTEXATTRIBI4UBVEXTPROC|PFNGLVERTEXATTRIB4UBVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__unsigned_int__void = {"_p_f_unsigned_int_p_q_const__unsigned_int__void", "void (*)(unsigned int,unsigned int const *)|PFNGLVERTEXATTRIB4NUIVPROC|PFNGLVERTEXATTRIB4UIVPROC|PFNGLVERTEXATTRIBI1UIVPROC|PFNGLVERTEXATTRIBI2UIVPROC|PFNGLVERTEXATTRIBI3UIVPROC|PFNGLVERTEXATTRIBI4UIVPROC|PFNGLVERTEXATTRIB4NUIVARBPROC|PFNGLVERTEXATTRIB4UIVARBPROC|PFNGLVERTEXATTRIBI1UIVEXTPROC|PFNGLVERTEXATTRIBI2UIVEXTPROC|PFNGLVERTEXATTRIBI3UIVEXTPROC|PFNGLVERTEXATTRIBI4UIVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__unsigned_short__void = {"_p_f_unsigned_int_p_q_const__unsigned_short__void", "PFNGLVERTEXATTRIB4NUSVPROC|PFNGLVERTEXATTRIB4USVPROC|PFNGLVERTEXATTRIBI4USVPROC|PFNGLVERTEXATTRIB4NUSVARBPROC|PFNGLVERTEXATTRIB4USVARBPROC|void (*)(unsigned int,unsigned short const *)|PFNGLMULTITEXCOORD1HVNVPROC|PFNGLMULTITEXCOORD2HVNVPROC|PFNGLMULTITEXCOORD3HVNVPROC|PFNGLMULTITEXCOORD4HVNVPROC|PFNGLVERTEXATTRIB1HVNVPROC|PFNGLVERTEXATTRIB2HVNVPROC|PFNGLVERTEXATTRIB3HVNVPROC|PFNGLVERTEXATTRIB4HVNVPROC|PFNGLVERTEXATTRIBI4USVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_p_q_const__void__void", "PFNGLELEMENTPOINTERATIPROC|void (*)(unsigned int,void const *)|PFNGLELEMENTPOINTERAPPLEPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_short__void = {"_p_f_unsigned_int_p_short__void", "void (*)(unsigned int,short *)|PFNGLVARIANTSVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_signed_char__void = {"_p_f_unsigned_int_p_signed_char__void", "void (*)(unsigned int,signed char *)|PFNGLVARIANTBVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_unsigned_char__void = {"_p_f_unsigned_int_p_unsigned_char__void", "void (*)(unsigned int,unsigned char *)|PFNGLVARIANTUBVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_unsigned_int__void = {"_p_f_unsigned_int_p_unsigned_int__void", "void (*)(unsigned int,unsigned int *)|PFNGLVARIANTUIVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_p_unsigned_short__void = {"_p_f_unsigned_int_p_unsigned_short__void", "void (*)(unsigned int,unsigned short *)|PFNGLVARIANTUSVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_ptrdiff_t_p_q_const__void_unsigned_int__void = {"_p_f_unsigned_int_ptrdiff_t_p_q_const__void_unsigned_int__void", "PFNGLBUFFERDATAPROC|PFNGLBUFFERDATAARBPROC|PFNGLNAMEDBUFFERDATAEXTPROC|void (*)(unsigned int,ptrdiff_t,void const *,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_ptrdiff_t_ptrdiff_t__void = {"_p_f_unsigned_int_ptrdiff_t_ptrdiff_t__void", "PFNGLFLUSHMAPPEDBUFFERRANGEPROC|PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC|void (*)(unsigned int,ptrdiff_t,ptrdiff_t)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_q_const__void__void = {"_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_q_const__void__void", "PFNGLBUFFERSUBDATAPROC|PFNGLBUFFERSUBDATAARBPROC|PFNGLNAMEDBUFFERSUBDATAEXTPROC|void (*)(unsigned int,ptrdiff_t,ptrdiff_t,void const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_void__void = {"_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_void__void", "PFNGLGETBUFFERSUBDATAPROC|PFNGLGETBUFFERSUBDATAARBPROC|PFNGLGETNAMEDBUFFERSUBDATAEXTPROC|void (*)(unsigned int,ptrdiff_t,ptrdiff_t,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_unsigned_int__p_void = {"_p_f_unsigned_int_ptrdiff_t_ptrdiff_t_unsigned_int__p_void", "PFNGLMAPBUFFERRANGEPROC|void *(*)(unsigned int,ptrdiff_t,ptrdiff_t,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_short__void = {"_p_f_unsigned_int_short__void", "PFNGLMULTITEXCOORD1SPROC|PFNGLVERTEXATTRIB1SPROC|void (*)(unsigned int,short)|PFNGLMULTITEXCOORD1SARBPROC|PFNGLVERTEXATTRIB1SARBPROC|PFNGLVERTEXATTRIB1SNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_short_short__void = {"_p_f_unsigned_int_short_short__void", "PFNGLVERTEXSTREAM2SATIPROC|PFNGLMULTITEXCOORD2SPROC|PFNGLVERTEXATTRIB2SPROC|void (*)(unsigned int,short,short)|PFNGLMULTITEXCOORD2SARBPROC|PFNGLVERTEXATTRIB2SARBPROC|PFNGLVERTEXATTRIB2SNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_short_short_short__void = {"_p_f_unsigned_int_short_short_short__void", "PFNGLNORMALSTREAM3SATIPROC|PFNGLVERTEXSTREAM3SATIPROC|void (*)(unsigned int,short,short,short)|PFNGLMULTITEXCOORD3SPROC|PFNGLVERTEXATTRIB3SPROC|PFNGLMULTITEXCOORD3SARBPROC|PFNGLVERTEXATTRIB3SARBPROC|PFNGLVERTEXATTRIB3SNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_short_short_short_short__void = {"_p_f_unsigned_int_short_short_short_short__void", "PFNGLVERTEXSTREAM4SATIPROC|void (*)(unsigned int,short,short,short,short)|PFNGLMULTITEXCOORD4SARBPROC|PFNGLVERTEXATTRIB4SARBPROC|PFNGLMULTITEXCOORD4SPROC|PFNGLVERTEXATTRIB4SPROC|PFNGLVERTEXATTRIB4SNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_signed_char_signed_char_signed_char__void = {"_p_f_unsigned_int_signed_char_signed_char_signed_char__void", "PFNGLNORMALSTREAM3BATIPROC|void (*)(unsigned int,signed char,signed char,signed char)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void", "void (*)(unsigned int,uint64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int)|PFNGLPRESENTFRAMEKEYEDNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void", "void (*)(unsigned int,uint64_t,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int)|PFNGLPRESENTFRAMEDUALFILLNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void = {"_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void", "PFNGLVERTEXATTRIB4NUBPROC|PFNGLCOLORMASKIPROC|PFNGLVERTEXATTRIB4NUBARBPROC|PFNGLCOLORMASKINDEXEDEXTPROC|void (*)(unsigned int,unsigned char,unsigned char,unsigned char,unsigned char)|PFNGLVERTEXATTRIB4UBNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void = {"_p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void", "PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC|void (*)(unsigned int,unsigned char,unsigned char,unsigned char,unsigned char,float,float,float)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void = {"_p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void", "PFNGLGETMINMAXPROC|PFNGLGETHISTOGRAMEXTPROC|PFNGLGETMINMAXEXTPROC|void (*)(unsigned int,unsigned char,unsigned int,unsigned int,void *)|PFNGLGETHISTOGRAMPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int__p_unsigned_char = {"_p_f_unsigned_int_unsigned_int__p_unsigned_char", "unsigned char *(*)(unsigned int,unsigned int)|PFNGLGETSTRINGIPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int__p_void = {"_p_f_unsigned_int_unsigned_int__p_void", "void *(*)(unsigned int,unsigned int)|PFNGLMAPBUFFERARBPROC|PFNGLMAPNAMEDBUFFEREXTPROC|PFNGLMAPBUFFERPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int__unsigned_char = {"_p_f_unsigned_int_unsigned_int__unsigned_char", "unsigned char (*)(unsigned int,unsigned int)|PFNGLTESTOBJECTAPPLEPROC|PFNGLISENABLEDIPROC|PFNGLISENABLEDINDEXEDEXTPROC|PFNGLISVARIANTENABLEDEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int__unsigned_int = {"_p_f_unsigned_int_unsigned_int__unsigned_int", "unsigned int (*)(unsigned int,unsigned int)|PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC|PFNGLBINDLIGHTPARAMETEREXTPROC|PFNGLBINDMATERIALPARAMETEREXTPROC|PFNGLBINDTEXTUREUNITPARAMETEREXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int__void", "PFNGLVERTEXATTRIBI1UIPROC|PFNGLDISABLEIPROC|PFNGLENABLEIPROC|PFNGLBINDBUFFERPROC|PFNGLATTACHSHADERPROC|PFNGLDETACHSHADERPROC|PFNGLBEGINCONDITIONALRENDERPROC|PFNGLBINDFRAMEBUFFERPROC|PFNGLBINDRENDERBUFFERPROC|PFNGLCLAMPCOLORARBPROC|PFNGLVERTEXATTRIBDIVISORARBPROC|PFNGLBEGINQUERYARBPROC|PFNGLBINDPROGRAMARBPROC|PFNGLBINDBUFFERARBPROC|PFNGLDETACHOBJECTARBPROC|PFNGLATTACHOBJECTARBPROC|PFNGLBINDTEXTUREEXTPROC|PFNGLTEXTUREMATERIALEXTPROC|PFNGLBLENDEQUATIONSEPARATEEXTPROC|PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC|PFNGLENABLECLIENTSTATEINDEXEDEXTPROC|PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC|PFNGLFRAMEBUFFERREADBUFFEREXTPROC|PFNGLGENERATEMULTITEXMIPMAPEXTPROC|PFNGLGENERATETEXTUREMIPMAPEXTPROC|PFNGLDISABLEINDEXEDEXTPROC|PFNGLENABLEINDEXEDEXTPROC|PFNGLFRAGMENTCOLORMATERIALEXTPROC|PFNGLBINDFRAMEBUFFEREXTPROC|PFNGLBINDRENDERBUFFEREXTPROC|PFNGLVERTEXATTRIBI1UIEXTPROC|PFNGLINDEXMATERIALEXTPROC|PFNGLCLAMPCOLORPROC|PFNGLBEGINCONDITIONALRENDERNVPROC|PFNGLSAMPLEMASKINDEXEDNVPROC|PFNGLTEXRENDERBUFFERNVPROC|PFNGLBEGINQUERYPROC|void (*)(unsigned int,unsigned int)|PFNGLEVALMAPSNVPROC|PFNGLSETFENCENVPROC|PFNGLBINDPROGRAMNVPROC|PFNGLBLENDEQUATIONSEPARATEPROC|PFNGLSTENCILMASKSEPARATEPROC|PFNGLFRAGMENTCOLORMATERIALSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_double_double_double_double__void = {"_p_f_unsigned_int_unsigned_int_double_double_double_double__void", "PFNGLPROGRAMENVPARAMETER4DARBPROC|PFNGLPROGRAMLOCALPARAMETER4DARBPROC|void (*)(unsigned int,unsigned int,double,double,double,double)|PFNGLPROGRAMPARAMETER4DNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_float__void = {"_p_f_unsigned_int_unsigned_int_float__void", "void (*)(unsigned int,unsigned int,float)|PFNGLCONVOLUTIONPARAMETERFEXTPROC|PFNGLFRAGMENTLIGHTFEXTPROC|PFNGLFRAGMENTLIGHTFSGIXPROC|PFNGLCONVOLUTIONPARAMETERFPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_float_float_float_float__void = {"_p_f_unsigned_int_unsigned_int_float_float_float_float__void", "void (*)(unsigned int,unsigned int,float,float,float,float)|PFNGLPROGRAMENVPARAMETER4FARBPROC|PFNGLPROGRAMLOCALPARAMETER4FARBPROC|PFNGLPROGRAMPARAMETER4FNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int__void = {"_p_f_unsigned_int_unsigned_int_int__void", "PFNGLBUFFERPARAMETERIAPPLEPROC|void (*)(unsigned int,unsigned int,int)|PFNGLPROGRAMPARAMETERIARBPROC|PFNGLCONVOLUTIONPARAMETERIPROC|PFNGLCONVOLUTIONPARAMETERIEXTPROC|PFNGLFRAGMENTLIGHTIEXTPROC|PFNGLPROGRAMPARAMETERIEXTPROC|PFNGLFRAGMENTLIGHTISGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int__void = {"_p_f_unsigned_int_unsigned_int_int_int__void", "PFNGLRENDERBUFFERSTORAGEPROC|void (*)(unsigned int,unsigned int,int,int)|PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC|PFNGLRENDERBUFFERSTORAGEEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_int__void = {"_p_f_unsigned_int_unsigned_int_int_int_int__void", "PFNGLCOPYCOLORTABLEPROC|PFNGLCOPYCONVOLUTIONFILTER1DPROC|PFNGLCOPYCOLORTABLESGIPROC|void (*)(unsigned int,unsigned int,int,int,int)|PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_int_int__void = {"_p_f_unsigned_int_unsigned_int_int_int_int_int__void", "void (*)(unsigned int,unsigned int,int,int,int,int)|PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC|PFNGLCOPYCONVOLUTIONFILTER2DPROC|PFNGLPROGRAMENVPARAMETERI4INVPROC|PFNGLPROGRAMLOCALPARAMETERI4INVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int__void = {"_p_f_unsigned_int_unsigned_int_int_int_int_int_int__void", "void (*)(unsigned int,unsigned int,int,int,int,int,int)|PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC|PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int__void = {"_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int__void", "void (*)(unsigned int,unsigned int,int,int,int,int,int,int,int)|PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC|PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_int__void = {"_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_int__void", "void (*)(unsigned int,unsigned int,int,int,int,int,int,int,int,int)|PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC|PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void", "void (*)(unsigned int,unsigned int,int,int,int,int,int,int,int,unsigned int,int,void const *)|PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC|PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,unsigned int,int,int,int,int,int,int,int,unsigned int,unsigned int,void const *)|PFNGLMULTITEXSUBIMAGE3DEXTPROC|PFNGLTEXTURESUBIMAGE3DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,unsigned int,int,int,int,int,int,int,unsigned int,unsigned int,void const *)|PFNGLMULTITEXIMAGE3DEXTPROC|PFNGLTEXTUREIMAGE3DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void", "void (*)(unsigned int,unsigned int,int,int,int,int,int,unsigned int,int,void const *)|PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC|PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,unsigned int,int,int,int,int,int,unsigned int,unsigned int,void const *)|PFNGLMULTITEXIMAGE2DEXTPROC|PFNGLMULTITEXSUBIMAGE2DEXTPROC|PFNGLTEXTUREIMAGE2DEXTPROC|PFNGLTEXTURESUBIMAGE2DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,unsigned int,int,int,int,int,unsigned int,unsigned int,void const *)|PFNGLMULTITEXIMAGE1DEXTPROC|PFNGLTEXTUREIMAGE1DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void", "void (*)(unsigned int,unsigned int,int,int,int,unsigned int,int,void const *)|PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC|PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,unsigned int,int,int,int,unsigned int,unsigned int,void const *)|PFNGLMULTITEXSUBIMAGE1DEXTPROC|PFNGLTEXTURESUBIMAGE1DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,unsigned int,int,int,unsigned int,unsigned int,void const *)|PFNGLCONVOLUTIONFILTER2DEXTPROC|PFNGLCONVOLUTIONFILTER2DPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void_p_q_const__void__void", "void (*)(unsigned int,unsigned int,int,int,unsigned int,unsigned int,void const *,void const *)|PFNGLSEPARABLEFILTER2DEXTPROC|PFNGLSEPARABLEFILTER2DPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void = {"_p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void", "PFNGLGETACTIVEUNIFORMARBPROC|PFNGLGETACTIVEATTRIBARBPROC|PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC|void (*)(unsigned int,unsigned int,int,int *,int *,unsigned int *,char *)|PFNGLGETACTIVEATTRIBPROC|PFNGLGETACTIVEUNIFORMPROC|PFNGLGETACTIVEVARYINGNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__float__void = {"_p_f_unsigned_int_unsigned_int_int_p_q_const__float__void", "void (*)(unsigned int,unsigned int,int,float const *)|PFNGLPROGRAMENVPARAMETERS4FVEXTPROC|PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC|PFNGLTEXFILTERFUNCSGISPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__int__void = {"_p_f_unsigned_int_unsigned_int_int_p_q_const__int__void", "void (*)(unsigned int,unsigned int,int,int const *)|PFNGLPROGRAMENVPARAMETERSI4IVNVPROC|PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_char__void = {"_p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_char__void", "void (*)(unsigned int,unsigned int,int,unsigned char const *)|PFNGLLOADPROGRAMNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void", "PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC|PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC|void (*)(unsigned int,unsigned int,int,unsigned int const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_p_q_const__void__void", "PFNGLPROGRAMSTRINGARBPROC|void (*)(unsigned int,unsigned int,int,void const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__void_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_int_p_q_const__void_unsigned_int__void", "PFNGLUPDATEOBJECTBUFFERATIPROC|void (*)(unsigned int,unsigned int,int,void const *,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_p_void__void = {"_p_f_unsigned_int_unsigned_int_int_p_void__void", "PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC|PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC|void (*)(unsigned int,unsigned int,int,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_int_unsigned_int__void", "PFNGLSTENCILFUNCSEPARATEATIPROC|void (*)(unsigned int,unsigned int,int,unsigned int)|PFNGLSTENCILFUNCSEPARATEPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int__void = {"_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int__void", "PFNGLCOPYMULTITEXIMAGE1DEXTPROC|PFNGLCOPYTEXTUREIMAGE1DEXTPROC|void (*)(unsigned int,unsigned int,int,unsigned int,int,int,int,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int__void = {"_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int__void", "PFNGLCOPYMULTITEXIMAGE2DEXTPROC|PFNGLCOPYTEXTUREIMAGE2DEXTPROC|void (*)(unsigned int,unsigned int,int,unsigned int,int,int,int,int,int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void", "PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC|PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC|void (*)(unsigned int,unsigned int,int,unsigned int,int,int,int,int,int,void const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void", "PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC|PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC|void (*)(unsigned int,unsigned int,int,unsigned int,int,int,int,int,void const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void", "PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC|PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC|void (*)(unsigned int,unsigned int,int,unsigned int,int,int,int,void const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_p_float__void = {"_p_f_unsigned_int_unsigned_int_int_unsigned_int_p_float__void", "PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC|PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC|void (*)(unsigned int,unsigned int,int,unsigned int,float *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_p_int__void = {"_p_f_unsigned_int_unsigned_int_int_unsigned_int_p_int__void", "PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC|PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC|void (*)(unsigned int,unsigned int,int,unsigned int,int *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int__void", "PFNGLVARIANTARRAYOBJECTATIPROC|void (*)(unsigned int,unsigned int,int,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void", "PFNGLCOLORTABLEPROC|PFNGLCONVOLUTIONFILTER1DPROC|PFNGLCOLORTABLESGIPROC|PFNGLCONVOLUTIONFILTER1DEXTPROC|PFNGLCOLORTABLEEXTPROC|void (*)(unsigned int,unsigned int,int,unsigned int,unsigned int,void const *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_void__void = {"_p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_void__void", "PFNGLGETMULTITEXIMAGEEXTPROC|PFNGLGETTEXTUREIMAGEEXTPROC|void (*)(unsigned int,unsigned int,int,unsigned int,unsigned int,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_double__void = {"_p_f_unsigned_int_unsigned_int_p_double__void", "PFNGLGETPROGRAMENVPARAMETERDVARBPROC|PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC|PFNGLGETVERTEXATTRIBDVARBPROC|PFNGLGETDOUBLEINDEXEDVEXTPROC|void (*)(unsigned int,unsigned int,double *)|PFNGLGETVERTEXATTRIBDVNVPROC|PFNGLGETVERTEXATTRIBDVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_float__void = {"_p_f_unsigned_int_unsigned_int_p_float__void", "PFNGLGETARRAYOBJECTFVATIPROC|PFNGLGETOBJECTBUFFERFVATIPROC|PFNGLGETVARIANTARRAYOBJECTFVATIPROC|PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC|PFNGLGETTEXFILTERFUNCSGISPROC|void (*)(unsigned int,unsigned int,float *)|PFNGLGETOBJECTPARAMETERFVARBPROC|PFNGLGETPROGRAMENVPARAMETERFVARBPROC|PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC|PFNGLGETVERTEXATTRIBFVARBPROC|PFNGLGETCOLORTABLEPARAMETERFVSGIPROC|PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC|PFNGLGETMULTISAMPLEFVNVPROC|PFNGLGETMAPPARAMETERFVNVPROC|PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC|PFNGLGETVERTEXATTRIBFVNVPROC|PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC|PFNGLGETMINMAXPARAMETERFVPROC|PFNGLGETHISTOGRAMPARAMETERFVPROC|PFNGLGETCONVOLUTIONPARAMETERFVPROC|PFNGLGETCOLORTABLEPARAMETERFVPROC|PFNGLGETVERTEXATTRIBFVPROC|PFNGLGETFLOATINDEXEDVEXTPROC|PFNGLFRAGMENTLIGHTFVEXTPROC|PFNGLGETFRAGMENTLIGHTFVEXTPROC|PFNGLGETHISTOGRAMPARAMETERFVEXTPROC|PFNGLGETMINMAXPARAMETERFVEXTPROC|PFNGLGETCOLORTABLEPARAMETERFVEXTPROC|PFNGLGETINVARIANTFLOATVEXTPROC|PFNGLGETLOCALCONSTANTFLOATVEXTPROC|PFNGLGETVARIANTFLOATVEXTPROC|PFNGLFRAGMENTLIGHTFVSGIXPROC|PFNGLGETFRAGMENTLIGHTFVSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_int64_t__void = {"_p_f_unsigned_int_unsigned_int_p_int64_t__void", "PFNGLGETQUERYOBJECTI64VEXTPROC|void (*)(unsigned int,unsigned int,int64_t *)|PFNGLGETVIDEOI64VNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_int__void = {"_p_f_unsigned_int_unsigned_int_p_int__void", "PFNGLGETQUERYIVPROC|PFNGLGETPROGRAMIVPROC|PFNGLGETTEXPARAMETERIIVPROC|PFNGLGETVERTEXATTRIBIIVPROC|PFNGLGETVERTEXATTRIBIVARBPROC|PFNGLGETPROGRAMIVARBPROC|PFNGLGETBUFFERPARAMETERIVARBPROC|PFNGLGETOBJECTPARAMETERIVARBPROC|PFNGLGETQUERYIVARBPROC|PFNGLGETQUERYOBJECTIVARBPROC|void (*)(unsigned int,unsigned int,int *)|PFNGLGETINTEGERI_VPROC|PFNGLGETVARIANTINTEGERVEXTPROC|PFNGLGETLOCALCONSTANTINTEGERVEXTPROC|PFNGLGETINVARIANTINTEGERVEXTPROC|PFNGLGETTEXPARAMETERIIVEXTPROC|PFNGLGETCOLORTABLEPARAMETERIVEXTPROC|PFNGLGETMINMAXPARAMETERIVEXTPROC|PFNGLGETHISTOGRAMPARAMETERIVEXTPROC|PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC|PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC|PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC|PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC|PFNGLGETINTEGERINDEXEDVEXTPROC|PFNGLFRAGMENTLIGHTIVEXTPROC|PFNGLGETFRAGMENTLIGHTIVEXTPROC|PFNGLGETVERTEXATTRIBIIVEXTPROC|PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC|PFNGLGETCOLORTABLEPARAMETERIVSGIPROC|PFNGLGETTRANSFORMFEEDBACKVARYINGPROC|PFNGLGETARRAYOBJECTIVATIPROC|PFNGLGETOBJECTBUFFERIVATIPROC|PFNGLGETVARIANTARRAYOBJECTIVATIPROC|PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC|PFNGLGETMAPPARAMETERIVNVPROC|PFNGLGETFENCEIVNVPROC|PFNGLGETOCCLUSIONQUERYIVNVPROC|PFNGLGETVIDEOIVNVPROC|PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC|PFNGLGETPROGRAMIVNVPROC|PFNGLGETVERTEXATTRIBIVNVPROC|PFNGLGETMINMAXPARAMETERIVPROC|PFNGLGETBUFFERPARAMETERIVPROC|PFNGLGETQUERYOBJECTIVPROC|PFNGLGETSHADERIVPROC|PFNGLGETVERTEXATTRIBIVPROC|PFNGLGETRENDERBUFFERPARAMETERIVPROC|PFNGLGETCOLORTABLEPARAMETERIVPROC|PFNGLGETCONVOLUTIONPARAMETERIVPROC|PFNGLGETHISTOGRAMPARAMETERIVPROC|PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC|PFNGLFRAGMENTLIGHTIVSGIXPROC|PFNGLGETFRAGMENTLIGHTIVSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_p_void__void = {"_p_f_unsigned_int_unsigned_int_p_p_void__void", "PFNGLGETBUFFERPOINTERVPROC|void (*)(unsigned int,unsigned int,void **)|PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC|PFNGLGETBUFFERPOINTERVARBPROC|PFNGLGETVERTEXATTRIBPOINTERVARBPROC|PFNGLGETNAMEDBUFFERPOINTERVEXTPROC|PFNGLGETPOINTERINDEXEDVEXTPROC|PFNGLGETVARIANTPOINTERVEXTPROC|PFNGLGETVERTEXATTRIBPOINTERVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_q_const__char__void = {"_p_f_unsigned_int_unsigned_int_p_q_const__char__void", "void (*)(unsigned int,unsigned int,char const *)|PFNGLBINDATTRIBLOCATIONPROC|PFNGLBINDFRAGDATALOCATIONPROC|PFNGLBINDATTRIBLOCATIONARBPROC|PFNGLBINDFRAGDATALOCATIONEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_q_const__double__void = {"_p_f_unsigned_int_unsigned_int_p_q_const__double__void", "void (*)(unsigned int,unsigned int,double const *)|PFNGLPROGRAMENVPARAMETER4DVARBPROC|PFNGLPROGRAMLOCALPARAMETER4DVARBPROC|PFNGLPROGRAMPARAMETER4DVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_q_const__float__void = {"_p_f_unsigned_int_unsigned_int_p_q_const__float__void", "PFNGLPROGRAMENVPARAMETER4FVARBPROC|PFNGLPROGRAMLOCALPARAMETER4FVARBPROC|void (*)(unsigned int,unsigned int,float const *)|PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC|PFNGLIMAGETRANSFORMPARAMETERFVHPPROC|PFNGLCOLORTABLEPARAMETERFVSGIPROC|PFNGLEXECUTEPROGRAMNVPROC|PFNGLPROGRAMPARAMETER4FVNVPROC|PFNGLMAPPARAMETERFVNVPROC|PFNGLCOMBINERSTAGEPARAMETERFVNVPROC|PFNGLFRAGMENTMATERIALFVEXTPROC|PFNGLGETFRAGMENTMATERIALFVEXTPROC|PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC|PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC|PFNGLCONVOLUTIONPARAMETERFVEXTPROC|PFNGLCONVOLUTIONPARAMETERFVPROC|PFNGLCOLORTABLEPARAMETERFVPROC|PFNGLFRAGMENTMATERIALFVSGIXPROC|PFNGLGETFRAGMENTMATERIALFVSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_q_const__int__void = {"_p_f_unsigned_int_unsigned_int_p_q_const__int__void", "PFNGLTEXPARAMETERIIVPROC|PFNGLCOLORTABLEPARAMETERIVPROC|PFNGLCONVOLUTIONPARAMETERIVPROC|void (*)(unsigned int,unsigned int,int const *)|PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC|PFNGLIMAGETRANSFORMPARAMETERIVHPPROC|PFNGLCOLORTABLEPARAMETERIVSGIPROC|PFNGLVIDEOPARAMETERIVNVPROC|PFNGLMAPPARAMETERIVNVPROC|PFNGLPROGRAMENVPARAMETERI4IVNVPROC|PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC|PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC|PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC|PFNGLTEXPARAMETERIIVEXTPROC|PFNGLGETFRAGMENTMATERIALIVEXTPROC|PFNGLFRAGMENTMATERIALIVEXTPROC|PFNGLCONVOLUTIONPARAMETERIVEXTPROC|PFNGLFRAGMENTMATERIALIVSGIXPROC|PFNGLGETFRAGMENTMATERIALIVSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void", "PFNGLTEXPARAMETERIUIVPROC|PFNGLTEXPARAMETERIUIVEXTPROC|void (*)(unsigned int,unsigned int,unsigned int const *)|PFNGLPROGRAMENVPARAMETERI4UIVNVPROC|PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_uint64_t__void = {"_p_f_unsigned_int_unsigned_int_p_uint64_t__void", "PFNGLGETQUERYOBJECTUI64VEXTPROC|void (*)(unsigned int,unsigned int,uint64_t *)|PFNGLGETVIDEOUI64VNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_unsigned_char__void = {"_p_f_unsigned_int_unsigned_int_p_unsigned_char__void", "void (*)(unsigned int,unsigned int,unsigned char *)|PFNGLGETBOOLEANI_VPROC|PFNGLGETBOOLEANINDEXEDVEXTPROC|PFNGLGETINVARIANTBOOLEANVEXTPROC|PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC|PFNGLGETVARIANTBOOLEANVEXTPROC|PFNGLGETPROGRAMSTRINGNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_p_unsigned_int__void", "void (*)(unsigned int,unsigned int,unsigned int *)|PFNGLGETQUERYOBJECTUIVPROC|PFNGLGETTEXPARAMETERIUIVPROC|PFNGLGETVERTEXATTRIBIUIVPROC|PFNGLGETQUERYOBJECTUIVARBPROC|PFNGLGETVERTEXATTRIBIUIVEXTPROC|PFNGLGETTEXPARAMETERIUIVEXTPROC|PFNGLGETOCCLUSIONQUERYUIVNVPROC|PFNGLGETVIDEOUIVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_p_void__void = {"_p_f_unsigned_int_unsigned_int_p_void__void", "PFNGLGETVERTEXATTRIBPOINTERVPROC|PFNGLGETPROGRAMSTRINGARBPROC|PFNGLSETINVARIANTEXTPROC|PFNGLSETLOCALCONSTANTEXTPROC|void (*)(unsigned int,unsigned int,void *)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_q_const__float__void = {"_p_f_unsigned_int_unsigned_int_q_const__float__void", "void (*)(unsigned int,unsigned int,float const)|PFNGLFRAGMENTMATERIALFEXTPROC|PFNGLPIXELTRANSFORMPARAMETERFEXTPROC|PFNGLIMAGETRANSFORMPARAMETERFHPPROC|PFNGLFRAGMENTMATERIALFSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_q_const__int__void = {"_p_f_unsigned_int_unsigned_int_q_const__int__void", "void (*)(unsigned int,unsigned int,int const)|PFNGLFRAGMENTMATERIALIEXTPROC|PFNGLPIXELTRANSFORMPARAMETERIEXTPROC|PFNGLFRAGMENTMATERIALISGIXPROC|PFNGLIMAGETRANSFORMPARAMETERIHPPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_char__void = {"_p_f_unsigned_int_unsigned_int_unsigned_char__void", "void (*)(unsigned int,unsigned int,unsigned char)|PFNGLMINMAXPROC|PFNGLMINMAXEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int__unsigned_int = {"_p_f_unsigned_int_unsigned_int_unsigned_int__unsigned_int", "unsigned int (*)(unsigned int,unsigned int,unsigned int)|PFNGLBINDTEXGENPARAMETEREXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int__void", "PFNGLPASSTEXCOORDATIPROC|PFNGLSAMPLEMAPATIPROC|PFNGLBINDBUFFERBASEPROC|PFNGLSECONDARYCOLOR3UIPROC|PFNGLTEXBUFFERARBPROC|PFNGLTEXSCISSORFUNCINTELPROC|PFNGLVERTEXATTRIBI2UIPROC|PFNGLBINDBUFFERBASENVPROC|void (*)(unsigned int,unsigned int,unsigned int)|PFNGLVERTEXATTRIBI2UIEXTPROC|PFNGLSECONDARYCOLOR3UIEXTPROC|PFNGLTEXBUFFEREXTPROC|PFNGLBINDBUFFERBASEEXTPROC|PFNGLEXTRACTCOMPONENTEXTPROC|PFNGLTEXTURERENDERBUFFEREXTPROC|PFNGLMULTITEXRENDERBUFFEREXTPROC|PFNGLBINDMULTITEXTUREEXTPROC|PFNGLINSERTCOMPONENTEXTPROC|PFNGLSHADEROP1EXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_double__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_double__void", "PFNGLMULTITEXGENDEXTPROC|void (*)(unsigned int,unsigned int,unsigned int,double)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_double_double_double_double__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_double_double_double_double__void", "PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC|void (*)(unsigned int,unsigned int,unsigned int,double,double,double,double)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_float__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_float__void", "void (*)(unsigned int,unsigned int,unsigned int,float)|PFNGLMULTITEXENVFEXTPROC|PFNGLMULTITEXGENFEXTPROC|PFNGLMULTITEXPARAMETERFEXTPROC|PFNGLTEXTUREPARAMETERFEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_float_float_float_float__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_float_float_float_float__void", "void (*)(unsigned int,unsigned int,unsigned int,float,float,float,float)|PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_int__void", "PFNGLDRAWRANGEELEMENTARRAYATIPROC|void (*)(unsigned int,unsigned int,unsigned int,int)|PFNGLFRAMEBUFFERTEXTUREARBPROC|PFNGLMULTITEXENVIEXTPROC|PFNGLMULTITEXGENIEXTPROC|PFNGLMULTITEXPARAMETERIEXTPROC|PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC|PFNGLTEXTUREPARAMETERIEXTPROC|PFNGLFRAMEBUFFERTEXTUREEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void", "PFNGLFRAMEBUFFERTEXTURLAYERPROC|void (*)(unsigned int,unsigned int,unsigned int,int,int)|PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC|PFNGLFRAMEBUFFERTEXTURELAYERARBPROC|PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC|PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int__void", "void (*)(unsigned int,unsigned int,unsigned int,int,int,int,int)|PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int_unsigned_char_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int_unsigned_char_p_q_const__void__void", "void (*)(unsigned int,unsigned int,unsigned int,int,int,int,int,unsigned char,void const *)|PFNGLMAPCONTROLPOINTSNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_unsigned_char_p_void__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_int_int_unsigned_char_p_void__void", "void (*)(unsigned int,unsigned int,unsigned int,int,int,unsigned char,void *)|PFNGLGETMAPCONTROLPOINTSNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__float__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__float__void", "void (*)(unsigned int,unsigned int,unsigned int,int,float const *)|PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC|PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__int__void", "void (*)(unsigned int,unsigned int,unsigned int,int,int const *)|PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC|PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void", "void (*)(unsigned int,unsigned int,unsigned int,int,unsigned int const *)|PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC|PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__void__void", "void (*)(unsigned int,unsigned int,unsigned int,int,void const *)|PFNGLNAMEDPROGRAMSTRINGEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int__void", "void (*)(unsigned int,unsigned int,unsigned int,int,unsigned int)|PFNGLFRAMEBUFFERTEXTUREFACEARBPROC|PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC|PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int_p_q_const__void__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int_p_q_const__void__void", "void (*)(unsigned int,unsigned int,unsigned int,int,unsigned int,void const *)|PFNGLDRAWRANGEELEMENTSEXTPROC|PFNGLDRAWRANGEELEMENTSPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_double__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_p_double__void", "PFNGLGETMULTITEXGENDVEXTPROC|PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC|void (*)(unsigned int,unsigned int,unsigned int,double *)|PFNGLGETPROGRAMPARAMETERDVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void", "void (*)(unsigned int,unsigned int,unsigned int,float *)|PFNGLGETMULTITEXENVFVEXTPROC|PFNGLGETMULTITEXGENFVEXTPROC|PFNGLGETMULTITEXPARAMETERFVEXTPROC|PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC|PFNGLGETTEXTUREPARAMETERFVEXTPROC|PFNGLGETMAPATTRIBPARAMETERFVNVPROC|PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC|PFNGLGETPROGRAMPARAMETERFVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void", "PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC|void (*)(unsigned int,unsigned int,unsigned int,int *)|PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC|PFNGLGETMAPATTRIBPARAMETERIVNVPROC|PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC|PFNGLGETTRACKMATRIXIVNVPROC|PFNGLGETMULTITEXGENIVEXTPROC|PFNGLGETMULTITEXPARAMETERIIVEXTPROC|PFNGLGETMULTITEXPARAMETERIVEXTPROC|PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC|PFNGLGETNAMEDPROGRAMIVEXTPROC|PFNGLGETTEXTUREPARAMETERIIVEXTPROC|PFNGLGETTEXTUREPARAMETERIVEXTPROC|PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC|PFNGLGETMULTITEXENVIVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__double__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__double__void", "PFNGLMULTITEXGENDVEXTPROC|PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC|void (*)(unsigned int,unsigned int,unsigned int,double const *)|PFNGLPROGRAMPARAMETERS4DVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void", "void (*)(unsigned int,unsigned int,unsigned int,float const *)|PFNGLMULTITEXENVFVEXTPROC|PFNGLMULTITEXGENFVEXTPROC|PFNGLMULTITEXPARAMETERFVEXTPROC|PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC|PFNGLTEXTUREPARAMETERFVEXTPROC|PFNGLPROGRAMPARAMETERS4FVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void", "void (*)(unsigned int,unsigned int,unsigned int,int const *)|PFNGLMULTITEXENVIVEXTPROC|PFNGLMULTITEXGENIVEXTPROC|PFNGLMULTITEXPARAMETERIIVEXTPROC|PFNGLMULTITEXPARAMETERIVEXTPROC|PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC|PFNGLTEXTUREPARAMETERIIVEXTPROC|PFNGLTEXTUREPARAMETERIVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int_p_q_const__int_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int_p_q_const__int_int__void", "void (*)(unsigned int,unsigned int,unsigned int,int const *,int const *,int)|PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__unsigned_int__void", "void (*)(unsigned int,unsigned int,unsigned int,unsigned int const *)|PFNGLMULTITEXPARAMETERIUIVEXTPROC|PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC|PFNGLTEXTUREPARAMETERIUIVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_p_unsigned_int__void", "void (*)(unsigned int,unsigned int,unsigned int,unsigned int *)|PFNGLGETMULTITEXPARAMETERIUIVEXTPROC|PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC|PFNGLGETTEXTUREPARAMETERIUIVEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void", "void (*)(unsigned int,unsigned int,unsigned int,void *)|PFNGLGETCOLORTABLEPROC|PFNGLGETCOLORTABLESGIPROC|PFNGLGETCONVOLUTIONFILTEREXTPROC|PFNGLGETNAMEDPROGRAMSTRINGEXTPROC|PFNGLGETCOLORTABLEEXTPROC|PFNGLVARIANTPOINTEREXTPROC|PFNGLGETCONVOLUTIONFILTERPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_void_p_void_p_void__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_p_void_p_void_p_void__void", "void (*)(unsigned int,unsigned int,unsigned int,void *,void *,void *)|PFNGLGETSEPARABLEFILTEREXTPROC|PFNGLGETSEPARABLEFILTERPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t__void", "void (*)(unsigned int,unsigned int,unsigned int,ptrdiff_t)|PFNGLBINDBUFFEROFFSETEXTPROC|PFNGLBINDBUFFEROFFSETNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t_ptrdiff_t__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t_ptrdiff_t__void", "PFNGLBINDBUFFERRANGEPROC|void (*)(unsigned int,unsigned int,unsigned int,ptrdiff_t,ptrdiff_t)|PFNGLBINDBUFFERRANGEEXTPROC|PFNGLBINDBUFFERRANGENVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__unsigned_int = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__unsigned_int", "unsigned int (*)(unsigned int,unsigned int,unsigned int,unsigned int)|PFNGLGENSYMBOLSEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void", "PFNGLFRAMEBUFFERRENDERBUFFERPROC|PFNGLSTENCILOPSEPARATEATIPROC|PFNGLVERTEXATTRIBI3UIPROC|PFNGLBLENDFUNCSEPARATEPROC|PFNGLSTENCILOPSEPARATEPROC|void (*)(unsigned int,unsigned int,unsigned int,unsigned int)|PFNGLTRACKMATRIXNVPROC|PFNGLFINALCOMBINERINPUTNVPROC|PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC|PFNGLTEXTUREBUFFEREXTPROC|PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC|PFNGLVERTEXATTRIBI3UIEXTPROC|PFNGLCLEARCOLORIUIEXTPROC|PFNGLSHADEROP2EXTPROC|PFNGLMULTITEXBUFFEREXTPROC|PFNGLBLENDFUNCSEPARATEEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void", "void (*)(unsigned int,unsigned int,unsigned int,unsigned int,int)|PFNGLFRAMEBUFFERTEXTURE1DPROC|PFNGLFRAMEBUFFERTEXTURE2DPROC|PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC|PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC|PFNGLFRAMEBUFFERTEXTURE1DEXTPROC|PFNGLFRAMEBUFFERTEXTURE2DEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int_int__void", "void (*)(unsigned int,unsigned int,unsigned int,unsigned int,int,int)|PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC|PFNGLFRAMEBUFFERTEXTURE3DEXTPROC|PFNGLFRAMEBUFFERTEXTURE3DPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_float__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_float__void", "void (*)(unsigned int,unsigned int,unsigned int,unsigned int,float *)|PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_int__void", "void (*)(unsigned int,unsigned int,unsigned int,unsigned int,int *)|PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void", "void (*)(unsigned int,unsigned int,unsigned int,unsigned int,unsigned int)|PFNGLVERTEXATTRIBI4UIPROC|PFNGLVERTEXATTRIBI4UIEXTPROC|PFNGLSHADEROP3EXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void", "PFNGLALPHAFRAGMENTOP1ATIPROC|void (*)(unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int)|PFNGLSWIZZLEEXTPROC|PFNGLWRITEMASKEXTPROC|PFNGLCOMBINERINPUTNVPROC|PFNGLPROGRAMENVPARAMETERI4UINVPROC|PFNGLPROGRAMLOCALPARAMETERI4UINVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void", "PFNGLCOLORFRAGMENTOP1ATIPROC|void (*)(unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int)|PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_char_unsigned_char_unsigned_char__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_char_unsigned_char_unsigned_char__void", "void (*)(unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned char,unsigned char,unsigned char)|PFNGLCOMBINEROUTPUTNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void", "PFNGLALPHAFRAGMENTOP2ATIPROC|void (*)(unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void", "PFNGLCOLORFRAGMENTOP2ATIPROC|void (*)(unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void", "PFNGLALPHAFRAGMENTOP3ATIPROC|void (*)(unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void = {"_p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void", "PFNGLCOLORFRAGMENTOP3ATIPROC|void (*)(unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned int)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_short__void = {"_p_f_unsigned_int_unsigned_short__void", "void (*)(unsigned int,unsigned short)|PFNGLMULTITEXCOORD1HNVPROC|PFNGLVERTEXATTRIB1HNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_short_unsigned_short__void = {"_p_f_unsigned_int_unsigned_short_unsigned_short__void", "void (*)(unsigned int,unsigned short,unsigned short)|PFNGLMULTITEXCOORD2HNVPROC|PFNGLVERTEXATTRIB2HNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short__void = {"_p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short__void", "void (*)(unsigned int,unsigned short,unsigned short,unsigned short)|PFNGLMULTITEXCOORD3HNVPROC|PFNGLVERTEXATTRIB3HNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void = {"_p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void", "void (*)(unsigned int,unsigned short,unsigned short,unsigned short,unsigned short)|PFNGLMULTITEXCOORD4HNVPROC|PFNGLVERTEXATTRIB4HNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_short__void = {"_p_f_unsigned_short__void", "PFNGLGLOBALALPHAFACTORUSSUNPROC|PFNGLREPLACEMENTCODEUSSUNPROC|void (*)(unsigned short)|PFNGLFOGCOORDHNVPROC|PFNGLTEXCOORD1HNVPROC|PFNGLVERTEXWEIGHTHNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_short_unsigned_short__void = {"_p_f_unsigned_short_unsigned_short__void", "void (*)(unsigned short,unsigned short)|PFNGLTEXCOORD2HNVPROC|PFNGLVERTEX2HNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_short_unsigned_short_unsigned_short__void = {"_p_f_unsigned_short_unsigned_short_unsigned_short__void", "PFNGLSECONDARYCOLOR3USPROC|PFNGLSECONDARYCOLOR3USEXTPROC|void (*)(unsigned short,unsigned short,unsigned short)|PFNGLCOLOR3HNVPROC|PFNGLNORMAL3HNVPROC|PFNGLSECONDARYCOLOR3HNVPROC|PFNGLTEXCOORD3HNVPROC|PFNGLVERTEX3HNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void = {"_p_f_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void", "void (*)(unsigned short,unsigned short,unsigned short,unsigned short)|PFNGLCOLOR4HNVPROC|PFNGLTEXCOORD4HNVPROC|PFNGLVERTEX4HNVPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_void__unsigned_int = {"_p_f_void__unsigned_int", "unsigned int (*)(void)|PFNGLCREATEPROGRAMOBJECTARBPROC|PFNGLBUFFERREGIONENABLEDEXTPROC|PFNGLCREATEPROGRAMPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_void__void = {"_p_f_void__void", "PFNGLENDTRANSFORMFEEDBACKPROC|PFNGLENDCONDITIONALRENDERPROC|void (*)(void)|PFNGLBEGINFRAGMENTSHADERATIPROC|PFNGLENDFRAGMENTSHADERATIPROC|PFNGLFRAMETERMINATORGREMEDYPROC|PFNGLRESIZEBUFFERSMESAPROC|PFNGLFINISHTEXTURESUNXPROC|PFNGLFLUSHVERTEXARRAYRANGENVPROC|PFNGLENDTRANSFORMFEEDBACKNVPROC|PFNGLENDOCCLUSIONQUERYNVPROC|PFNGLPRIMITIVERESTARTNVPROC|PFNGLENDCONDITIONALRENDERNVPROC|PFNGLENDVERTEXSHADEREXTPROC|PFNGLBEGINVERTEXSHADEREXTPROC|PFNGLENDTRANSFORMFEEDBACKEXTPROC|PFNGLENDSCENEEXTPROC|PFNGLBEGINSCENEEXTPROC|PFNGLUNLOCKARRAYSEXTPROC|PFNGLFLUSHRASTERSGIXPROC|PFNGLTAGSAMPLEBUFFERSGIXPROC", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "GLclampf *|float *|GLfloat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "GLsizei *|int *|GLint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int64_t = {"_p_int64_t", "int64_t *|GLint64EXT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_void = {"_p_p_void", "void **|GLvoid **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ptrdiff_t = {"_p_ptrdiff_t", "ptrdiff_t *|GLsizeiptr *|GLsizeiptrARB *|GLintptrARB *|GLintptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "short *|GLshort *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "signed char *|GLbyte *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint64_t = {"_p_uint64_t", "uint64_t *|GLuint64EXT *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|GLubyte *|GLboolean *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "unsigned int *|GLuint *|GLhandleARB *|GLenum *|GLbitfield *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "GLulong *|unsigned long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "unsigned short *|GLushort *|GLhalf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *|GLvoid *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_char,
  &_swigt__p_double,
  &_swigt__p_f_a_16__double__void,
  &_swigt__p_f_a_16__float__void,
  &_swigt__p_f_a_16__q_const__double__void,
  &_swigt__p_f_a_16__q_const__float__void,
  &_swigt__p_f_double__void,
  &_swigt__p_f_double_double__void,
  &_swigt__p_f_double_double_double__void,
  &_swigt__p_f_double_double_double_double__void,
  &_swigt__p_f_float__void,
  &_swigt__p_f_float_float__void,
  &_swigt__p_f_float_float_float__void,
  &_swigt__p_f_float_float_float_float__void,
  &_swigt__p_f_float_float_float_float_float__void,
  &_swigt__p_f_float_float_float_float_float_float__void,
  &_swigt__p_f_float_float_float_float_float_float_float_float__void,
  &_swigt__p_f_float_float_float_float_float_float_float_float_float_float__void,
  &_swigt__p_f_float_float_float_float_float_float_float_float_float_float_float_float__void,
  &_swigt__p_f_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float__void,
  &_swigt__p_f_float_float_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void,
  &_swigt__p_f_float_unsigned_char__void,
  &_swigt__p_f_int__unsigned_int,
  &_swigt__p_f_int__void,
  &_swigt__p_f_int_float__void,
  &_swigt__p_f_int_float_float__void,
  &_swigt__p_f_int_float_float_float__void,
  &_swigt__p_f_int_float_float_float_float__void,
  &_swigt__p_f_int_int__void,
  &_swigt__p_f_int_int_int__void,
  &_swigt__p_f_int_int_int_int__void,
  &_swigt__p_f_int_int_int_int_int__void,
  &_swigt__p_f_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_int_int_int_int_unsigned_int_unsigned_int_p_void__void,
  &_swigt__p_f_int_int_p_int_p_char__void,
  &_swigt__p_f_int_int_p_q_const__float__void,
  &_swigt__p_f_int_int_p_q_const__int__void,
  &_swigt__p_f_int_int_p_q_const__unsigned_char__void,
  &_swigt__p_f_int_int_p_q_const__unsigned_int__void,
  &_swigt__p_f_int_int_unsigned_char_p_q_const__float__void,
  &_swigt__p_f_int_p_double__void,
  &_swigt__p_f_int_p_float__void,
  &_swigt__p_f_int_p_int__void,
  &_swigt__p_f_int_p_p_q_const__unsigned_char_int__void,
  &_swigt__p_f_int_p_q_const__float__void,
  &_swigt__p_f_int_p_q_const__unsigned_int__void,
  &_swigt__p_f_int_p_q_const__unsigned_int_p_q_const__float__void,
  &_swigt__p_f_int_p_q_const__unsigned_int_p_unsigned_char__unsigned_char,
  &_swigt__p_f_int_p_q_const__void__void,
  &_swigt__p_f_int_p_q_const__void_unsigned_int__unsigned_int,
  &_swigt__p_f_int_p_short__void,
  &_swigt__p_f_int_p_signed_char__void,
  &_swigt__p_f_int_p_unsigned_char__void,
  &_swigt__p_f_int_p_unsigned_int__void,
  &_swigt__p_f_int_p_unsigned_short__void,
  &_swigt__p_f_int_p_void__void,
  &_swigt__p_f_int_unsigned_int__void,
  &_swigt__p_f_int_unsigned_int_int_int_p_q_const__void__void,
  &_swigt__p_f_int_unsigned_int_int_p_p_q_const__void_int__void,
  &_swigt__p_f_int_unsigned_int_int_p_void__void,
  &_swigt__p_f_int_unsigned_int_p_p_q_const__void__void,
  &_swigt__p_f_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_p_float__void,
  &_swigt__p_f_p_q_const__double__void,
  &_swigt__p_f_p_q_const__float__void,
  &_swigt__p_f_p_q_const__float_p_q_const__float__void,
  &_swigt__p_f_p_q_const__float_p_q_const__float_p_q_const__float__void,
  &_swigt__p_f_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void,
  &_swigt__p_f_p_q_const__float_p_q_const__unsigned_char_p_q_const__float__void,
  &_swigt__p_f_p_q_const__int__void,
  &_swigt__p_f_p_q_const__short__void,
  &_swigt__p_f_p_q_const__signed_char__void,
  &_swigt__p_f_p_q_const__unsigned_char__void,
  &_swigt__p_f_p_q_const__unsigned_char_p_q_const__float__void,
  &_swigt__p_f_p_q_const__unsigned_int__void,
  &_swigt__p_f_p_q_const__unsigned_int_p_q_const__float__void,
  &_swigt__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float__void,
  &_swigt__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float__void,
  &_swigt__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void,
  &_swigt__p_f_p_q_const__unsigned_int_p_q_const__int_p_q_const__int_int_int__void,
  &_swigt__p_f_p_q_const__unsigned_int_p_q_const__int_unsigned_int_p_q_const__p_q_const__void_int_int__void,
  &_swigt__p_f_p_q_const__unsigned_int_p_q_const__unsigned_char_p_q_const__float__void,
  &_swigt__p_f_p_q_const__unsigned_short__void,
  &_swigt__p_f_p_unsigned_int__int,
  &_swigt__p_f_short__void,
  &_swigt__p_f_short_short__void,
  &_swigt__p_f_short_short_short__void,
  &_swigt__p_f_short_short_short_short__void,
  &_swigt__p_f_signed_char__void,
  &_swigt__p_f_signed_char_signed_char_signed_char__void,
  &_swigt__p_f_unsigned_char__void,
  &_swigt__p_f_unsigned_char_unsigned_char_unsigned_char__void,
  &_swigt__p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float__void,
  &_swigt__p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void,
  &_swigt__p_f_unsigned_int__p_void,
  &_swigt__p_f_unsigned_int__unsigned_char,
  &_swigt__p_f_unsigned_int__unsigned_int,
  &_swigt__p_f_unsigned_int__void,
  &_swigt__p_f_unsigned_int_double__void,
  &_swigt__p_f_unsigned_int_double_double__void,
  &_swigt__p_f_unsigned_int_double_double_double__void,
  &_swigt__p_f_unsigned_int_double_double_double_double__void,
  &_swigt__p_f_unsigned_int_double_double_double_double_double_double__void,
  &_swigt__p_f_unsigned_int_float__void,
  &_swigt__p_f_unsigned_int_float_float__void,
  &_swigt__p_f_unsigned_int_float_float_float__void,
  &_swigt__p_f_unsigned_int_float_float_float_float__void,
  &_swigt__p_f_unsigned_int_float_float_float_float_float__void,
  &_swigt__p_f_unsigned_int_float_float_float_float_float_float__void,
  &_swigt__p_f_unsigned_int_float_float_float_float_float_float_float_float__void,
  &_swigt__p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float__void,
  &_swigt__p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float_float_float__void,
  &_swigt__p_f_unsigned_int_int__int,
  &_swigt__p_f_unsigned_int_int__ptrdiff_t,
  &_swigt__p_f_unsigned_int_int__void,
  &_swigt__p_f_unsigned_int_int_float__void,
  &_swigt__p_f_unsigned_int_int_float_float__void,
  &_swigt__p_f_unsigned_int_int_float_float_float__void,
  &_swigt__p_f_unsigned_int_int_float_float_float_float__void,
  &_swigt__p_f_unsigned_int_int_float_int__void,
  &_swigt__p_f_unsigned_int_int_int__void,
  &_swigt__p_f_unsigned_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_int_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_int_int_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_int_int_int_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_int_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_int_p_q_const__float__void,
  &_swigt__p_f_unsigned_int_int_int_p_q_const__int__void,
  &_swigt__p_f_unsigned_int_int_int_p_q_const__unsigned_int__void,
  &_swigt__p_f_unsigned_int_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void,
  &_swigt__p_f_unsigned_int_int_int_unsigned_int_int_int__void,
  &_swigt__p_f_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_p_float__void,
  &_swigt__p_f_unsigned_int_int_p_int__void,
  &_swigt__p_f_unsigned_int_int_p_int_p_char__void,
  &_swigt__p_f_unsigned_int_int_p_int_p_unsigned_int__void,
  &_swigt__p_f_unsigned_int_int_p_p_q_const__char_p_q_const__int__void,
  &_swigt__p_f_unsigned_int_int_p_p_q_const__char_unsigned_int__void,
  &_swigt__p_f_unsigned_int_int_p_p_q_const__void_int__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__double__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__float__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__int__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__short__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__double__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__float__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_double_double_double_double__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_float_float_float_float__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_p_double__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_p_float__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__unsigned_int__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__unsigned_short__void,
  &_swigt__p_f_unsigned_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_p_unsigned_int__void,
  &_swigt__p_f_unsigned_int_int_p_void__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_int_int__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_p_q_const__void_int__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_unsigned_char__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_unsigned_char_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_unsigned_char_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_p_double__void,
  &_swigt__p_f_unsigned_int_p_float__void,
  &_swigt__p_f_unsigned_int_p_int__void,
  &_swigt__p_f_unsigned_int_p_int_p_int_int__void,
  &_swigt__p_f_unsigned_int_p_int_unsigned_int_p_p_q_const__void_int__void,
  &_swigt__p_f_unsigned_int_p_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_p_p_void__void,
  &_swigt__p_f_unsigned_int_p_q_const__char__int,
  &_swigt__p_f_unsigned_int_p_q_const__char__void,
  &_swigt__p_f_unsigned_int_p_q_const__double__void,
  &_swigt__p_f_unsigned_int_p_q_const__float__void,
  &_swigt__p_f_unsigned_int_p_q_const__int__void,
  &_swigt__p_f_unsigned_int_p_q_const__int_p_q_const__int_int__void,
  &_swigt__p_f_unsigned_int_p_q_const__int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_p_q_const__short__void,
  &_swigt__p_f_unsigned_int_p_q_const__signed_char__void,
  &_swigt__p_f_unsigned_int_p_q_const__unsigned_char__void,
  &_swigt__p_f_unsigned_int_p_q_const__unsigned_int__void,
  &_swigt__p_f_unsigned_int_p_q_const__unsigned_short__void,
  &_swigt__p_f_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_p_short__void,
  &_swigt__p_f_unsigned_int_p_signed_char__void,
  &_swigt__p_f_unsigned_int_p_unsigned_char__void,
  &_swigt__p_f_unsigned_int_p_unsigned_int__void,
  &_swigt__p_f_unsigned_int_p_unsigned_short__void,
  &_swigt__p_f_unsigned_int_ptrdiff_t_p_q_const__void_unsigned_int__void,
  &_swigt__p_f_unsigned_int_ptrdiff_t_ptrdiff_t__void,
  &_swigt__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_void__void,
  &_swigt__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_unsigned_int__p_void,
  &_swigt__p_f_unsigned_int_short__void,
  &_swigt__p_f_unsigned_int_short_short__void,
  &_swigt__p_f_unsigned_int_short_short_short__void,
  &_swigt__p_f_unsigned_int_short_short_short_short__void,
  &_swigt__p_f_unsigned_int_signed_char_signed_char_signed_char__void,
  &_swigt__p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void,
  &_swigt__p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void,
  &_swigt__p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void,
  &_swigt__p_f_unsigned_int_unsigned_int__p_unsigned_char,
  &_swigt__p_f_unsigned_int_unsigned_int__p_void,
  &_swigt__p_f_unsigned_int_unsigned_int__unsigned_char,
  &_swigt__p_f_unsigned_int_unsigned_int__unsigned_int,
  &_swigt__p_f_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_double_double_double_double__void,
  &_swigt__p_f_unsigned_int_unsigned_int_float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_float_float_float_float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_char__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__void_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_p_void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_p_float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_p_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_double__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_int64_t__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_p_void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_q_const__char__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_q_const__double__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_q_const__float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_q_const__int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_uint64_t__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_unsigned_char__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_p_void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_q_const__float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_q_const__int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_char__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int__unsigned_int,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_double__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_double_double_double_double__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_float_float_float_float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int_unsigned_char_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_unsigned_char_p_void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int_p_q_const__void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_double__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__double__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int_p_q_const__int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_void_p_void_p_void__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t_ptrdiff_t__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__unsigned_int,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_float__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_char_unsigned_char_unsigned_char__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  &_swigt__p_f_unsigned_int_unsigned_short__void,
  &_swigt__p_f_unsigned_int_unsigned_short_unsigned_short__void,
  &_swigt__p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short__void,
  &_swigt__p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void,
  &_swigt__p_f_unsigned_short__void,
  &_swigt__p_f_unsigned_short_unsigned_short__void,
  &_swigt__p_f_unsigned_short_unsigned_short_unsigned_short__void,
  &_swigt__p_f_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void,
  &_swigt__p_f_void__unsigned_int,
  &_swigt__p_f_void__void,
  &_swigt__p_float,
  &_swigt__p_int,
  &_swigt__p_int64_t,
  &_swigt__p_p_void,
  &_swigt__p_ptrdiff_t,
  &_swigt__p_short,
  &_swigt__p_signed_char,
  &_swigt__p_uint64_t,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_a_16__double__void[] = {  {&_swigt__p_f_a_16__double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_a_16__float__void[] = {  {&_swigt__p_f_a_16__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_a_16__q_const__double__void[] = {  {&_swigt__p_f_a_16__q_const__double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_a_16__q_const__float__void[] = {  {&_swigt__p_f_a_16__q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_double__void[] = {  {&_swigt__p_f_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_double_double__void[] = {  {&_swigt__p_f_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_double_double_double__void[] = {  {&_swigt__p_f_double_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_double_double_double_double__void[] = {  {&_swigt__p_f_double_double_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_float__void[] = {  {&_swigt__p_f_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_float_float__void[] = {  {&_swigt__p_f_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_float_float_float__void[] = {  {&_swigt__p_f_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_float_float_float_float__void[] = {  {&_swigt__p_f_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_float_float_float_float_float__void[] = {  {&_swigt__p_f_float_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_float_float_float_float_float_float__void[] = {  {&_swigt__p_f_float_float_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_float_float_float_float_float_float_float_float__void[] = {  {&_swigt__p_f_float_float_float_float_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_float_float_float_float_float_float_float_float_float_float__void[] = {  {&_swigt__p_f_float_float_float_float_float_float_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_float_float_float_float_float_float_float_float_float_float_float_float__void[] = {  {&_swigt__p_f_float_float_float_float_float_float_float_float_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float__void[] = {  {&_swigt__p_f_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_float_float_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void[] = {  {&_swigt__p_f_float_float_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_float_unsigned_char__void[] = {  {&_swigt__p_f_float_unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int__unsigned_int[] = {  {&_swigt__p_f_int__unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int__void[] = {  {&_swigt__p_f_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_float__void[] = {  {&_swigt__p_f_int_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_float_float__void[] = {  {&_swigt__p_f_int_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_float_float_float__void[] = {  {&_swigt__p_f_int_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_float_float_float_float__void[] = {  {&_swigt__p_f_int_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int__void[] = {  {&_swigt__p_f_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int_int__void[] = {  {&_swigt__p_f_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int_int_int__void[] = {  {&_swigt__p_f_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int_int_int_int__void[] = {  {&_swigt__p_f_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int_int_int_unsigned_int_unsigned_int_p_void__void[] = {  {&_swigt__p_f_int_int_int_int_unsigned_int_unsigned_int_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int_p_int_p_char__void[] = {  {&_swigt__p_f_int_int_p_int_p_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int_p_q_const__float__void[] = {  {&_swigt__p_f_int_int_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int_p_q_const__int__void[] = {  {&_swigt__p_f_int_int_p_q_const__int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int_p_q_const__unsigned_char__void[] = {  {&_swigt__p_f_int_int_p_q_const__unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int_p_q_const__unsigned_int__void[] = {  {&_swigt__p_f_int_int_p_q_const__unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_int_unsigned_char_p_q_const__float__void[] = {  {&_swigt__p_f_int_int_unsigned_char_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_double__void[] = {  {&_swigt__p_f_int_p_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_float__void[] = {  {&_swigt__p_f_int_p_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_int__void[] = {  {&_swigt__p_f_int_p_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_p_q_const__unsigned_char_int__void[] = {  {&_swigt__p_f_int_p_p_q_const__unsigned_char_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_q_const__float__void[] = {  {&_swigt__p_f_int_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_q_const__unsigned_int__void[] = {  {&_swigt__p_f_int_p_q_const__unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_q_const__unsigned_int_p_q_const__float__void[] = {  {&_swigt__p_f_int_p_q_const__unsigned_int_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_q_const__unsigned_int_p_unsigned_char__unsigned_char[] = {  {&_swigt__p_f_int_p_q_const__unsigned_int_p_unsigned_char__unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_q_const__void__void[] = {  {&_swigt__p_f_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_q_const__void_unsigned_int__unsigned_int[] = {  {&_swigt__p_f_int_p_q_const__void_unsigned_int__unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_short__void[] = {  {&_swigt__p_f_int_p_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_signed_char__void[] = {  {&_swigt__p_f_int_p_signed_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_unsigned_char__void[] = {  {&_swigt__p_f_int_p_unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_unsigned_int__void[] = {  {&_swigt__p_f_int_p_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_unsigned_short__void[] = {  {&_swigt__p_f_int_p_unsigned_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_p_void__void[] = {  {&_swigt__p_f_int_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_unsigned_int__void[] = {  {&_swigt__p_f_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_unsigned_int_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_int_unsigned_int_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_unsigned_int_int_p_p_q_const__void_int__void[] = {  {&_swigt__p_f_int_unsigned_int_int_p_p_q_const__void_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_unsigned_int_int_p_void__void[] = {  {&_swigt__p_f_int_unsigned_int_int_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_unsigned_int_p_p_q_const__void__void[] = {  {&_swigt__p_f_int_unsigned_int_p_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_float__void[] = {  {&_swigt__p_f_p_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__double__void[] = {  {&_swigt__p_f_p_q_const__double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__float__void[] = {  {&_swigt__p_f_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__float_p_q_const__float__void[] = {  {&_swigt__p_f_p_q_const__float_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__float_p_q_const__float_p_q_const__float__void[] = {  {&_swigt__p_f_p_q_const__float_p_q_const__float_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void[] = {  {&_swigt__p_f_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__float_p_q_const__unsigned_char_p_q_const__float__void[] = {  {&_swigt__p_f_p_q_const__float_p_q_const__unsigned_char_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__int__void[] = {  {&_swigt__p_f_p_q_const__int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__short__void[] = {  {&_swigt__p_f_p_q_const__short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__signed_char__void[] = {  {&_swigt__p_f_p_q_const__signed_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__unsigned_char__void[] = {  {&_swigt__p_f_p_q_const__unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__unsigned_char_p_q_const__float__void[] = {  {&_swigt__p_f_p_q_const__unsigned_char_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__unsigned_int__void[] = {  {&_swigt__p_f_p_q_const__unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__unsigned_int_p_q_const__float__void[] = {  {&_swigt__p_f_p_q_const__unsigned_int_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float__void[] = {  {&_swigt__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float__void[] = {  {&_swigt__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void[] = {  {&_swigt__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__unsigned_int_p_q_const__int_p_q_const__int_int_int__void[] = {  {&_swigt__p_f_p_q_const__unsigned_int_p_q_const__int_p_q_const__int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__unsigned_int_p_q_const__int_unsigned_int_p_q_const__p_q_const__void_int_int__void[] = {  {&_swigt__p_f_p_q_const__unsigned_int_p_q_const__int_unsigned_int_p_q_const__p_q_const__void_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__unsigned_int_p_q_const__unsigned_char_p_q_const__float__void[] = {  {&_swigt__p_f_p_q_const__unsigned_int_p_q_const__unsigned_char_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_q_const__unsigned_short__void[] = {  {&_swigt__p_f_p_q_const__unsigned_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_unsigned_int__int[] = {  {&_swigt__p_f_p_unsigned_int__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_short__void[] = {  {&_swigt__p_f_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_short_short__void[] = {  {&_swigt__p_f_short_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_short_short_short__void[] = {  {&_swigt__p_f_short_short_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_short_short_short_short__void[] = {  {&_swigt__p_f_short_short_short_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_signed_char__void[] = {  {&_swigt__p_f_signed_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_signed_char_signed_char_signed_char__void[] = {  {&_swigt__p_f_signed_char_signed_char_signed_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_char__void[] = {  {&_swigt__p_f_unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_char_unsigned_char_unsigned_char__void[] = {  {&_swigt__p_f_unsigned_char_unsigned_char_unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float__void[] = {  {&_swigt__p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void[] = {  {&_swigt__p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int__p_void[] = {  {&_swigt__p_f_unsigned_int__p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int__unsigned_char[] = {  {&_swigt__p_f_unsigned_int__unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int__unsigned_int[] = {  {&_swigt__p_f_unsigned_int__unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_double__void[] = {  {&_swigt__p_f_unsigned_int_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_double_double__void[] = {  {&_swigt__p_f_unsigned_int_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_double_double_double__void[] = {  {&_swigt__p_f_unsigned_int_double_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_double_double_double_double__void[] = {  {&_swigt__p_f_unsigned_int_double_double_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_double_double_double_double_double_double__void[] = {  {&_swigt__p_f_unsigned_int_double_double_double_double_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_float__void[] = {  {&_swigt__p_f_unsigned_int_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_float_float__void[] = {  {&_swigt__p_f_unsigned_int_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_float_float_float__void[] = {  {&_swigt__p_f_unsigned_int_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_float_float_float_float__void[] = {  {&_swigt__p_f_unsigned_int_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_float_float_float_float_float__void[] = {  {&_swigt__p_f_unsigned_int_float_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_float_float_float_float_float_float__void[] = {  {&_swigt__p_f_unsigned_int_float_float_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_float_float_float_float_float_float_float_float__void[] = {  {&_swigt__p_f_unsigned_int_float_float_float_float_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float__void[] = {  {&_swigt__p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float_float_float__void[] = {  {&_swigt__p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int__int[] = {  {&_swigt__p_f_unsigned_int_int__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int__ptrdiff_t[] = {  {&_swigt__p_f_unsigned_int_int__ptrdiff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int__void[] = {  {&_swigt__p_f_unsigned_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_float__void[] = {  {&_swigt__p_f_unsigned_int_int_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_float_float__void[] = {  {&_swigt__p_f_unsigned_int_int_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_float_float_float__void[] = {  {&_swigt__p_f_unsigned_int_int_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_float_float_float_float__void[] = {  {&_swigt__p_f_unsigned_int_int_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_float_int__void[] = {  {&_swigt__p_f_unsigned_int_int_float_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_p_q_const__float__void[] = {  {&_swigt__p_f_unsigned_int_int_int_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_p_q_const__int__void[] = {  {&_swigt__p_f_unsigned_int_int_int_p_q_const__int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_p_q_const__unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_int_int_p_q_const__unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void[] = {  {&_swigt__p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_unsigned_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_int_int_unsigned_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_float__void[] = {  {&_swigt__p_f_unsigned_int_int_p_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_int__void[] = {  {&_swigt__p_f_unsigned_int_int_p_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_int_p_char__void[] = {  {&_swigt__p_f_unsigned_int_int_p_int_p_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_int_p_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_int_p_int_p_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_p_q_const__char_p_q_const__int__void[] = {  {&_swigt__p_f_unsigned_int_int_p_p_q_const__char_p_q_const__int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_p_q_const__char_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_int_p_p_q_const__char_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_p_q_const__void_int__void[] = {  {&_swigt__p_f_unsigned_int_int_p_p_q_const__void_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__double__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__float__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__int__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__short__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__double__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__float__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char_double_double_double_double__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_double_double_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char_float_float_float_float__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char_p_double__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_p_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char_p_float__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__unsigned_char_p_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__unsigned_short__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__unsigned_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_int_p_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_p_void__void[] = {  {&_swigt__p_f_unsigned_int_int_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_p_q_const__void_int__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_p_q_const__void_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_unsigned_char__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_unsigned_char_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_unsigned_char_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_unsigned_char_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_unsigned_char_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_double__void[] = {  {&_swigt__p_f_unsigned_int_p_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_float__void[] = {  {&_swigt__p_f_unsigned_int_p_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_int__void[] = {  {&_swigt__p_f_unsigned_int_p_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_int_p_int_int__void[] = {  {&_swigt__p_f_unsigned_int_p_int_p_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_int_unsigned_int_p_p_q_const__void_int__void[] = {  {&_swigt__p_f_unsigned_int_p_int_unsigned_int_p_p_q_const__void_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_p_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_p_void__void[] = {  {&_swigt__p_f_unsigned_int_p_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__char__int[] = {  {&_swigt__p_f_unsigned_int_p_q_const__char__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__char__void[] = {  {&_swigt__p_f_unsigned_int_p_q_const__char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__double__void[] = {  {&_swigt__p_f_unsigned_int_p_q_const__double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__float__void[] = {  {&_swigt__p_f_unsigned_int_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__int__void[] = {  {&_swigt__p_f_unsigned_int_p_q_const__int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__int_p_q_const__int_int__void[] = {  {&_swigt__p_f_unsigned_int_p_q_const__int_p_q_const__int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_p_q_const__int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__short__void[] = {  {&_swigt__p_f_unsigned_int_p_q_const__short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__signed_char__void[] = {  {&_swigt__p_f_unsigned_int_p_q_const__signed_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__unsigned_char__void[] = {  {&_swigt__p_f_unsigned_int_p_q_const__unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_p_q_const__unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__unsigned_short__void[] = {  {&_swigt__p_f_unsigned_int_p_q_const__unsigned_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_short__void[] = {  {&_swigt__p_f_unsigned_int_p_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_signed_char__void[] = {  {&_swigt__p_f_unsigned_int_p_signed_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_unsigned_char__void[] = {  {&_swigt__p_f_unsigned_int_p_unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_p_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_p_unsigned_short__void[] = {  {&_swigt__p_f_unsigned_int_p_unsigned_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_ptrdiff_t_p_q_const__void_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_ptrdiff_t_p_q_const__void_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_ptrdiff_t_ptrdiff_t__void[] = {  {&_swigt__p_f_unsigned_int_ptrdiff_t_ptrdiff_t__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_void__void[] = {  {&_swigt__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_unsigned_int__p_void[] = {  {&_swigt__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_unsigned_int__p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_short__void[] = {  {&_swigt__p_f_unsigned_int_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_short_short__void[] = {  {&_swigt__p_f_unsigned_int_short_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_short_short_short__void[] = {  {&_swigt__p_f_unsigned_int_short_short_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_short_short_short_short__void[] = {  {&_swigt__p_f_unsigned_int_short_short_short_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_signed_char_signed_char_signed_char__void[] = {  {&_swigt__p_f_unsigned_int_signed_char_signed_char_signed_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int__p_unsigned_char[] = {  {&_swigt__p_f_unsigned_int_unsigned_int__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int__p_void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int__p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int__unsigned_char[] = {  {&_swigt__p_f_unsigned_int_unsigned_int__unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int__unsigned_int[] = {  {&_swigt__p_f_unsigned_int_unsigned_int__unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_double_double_double_double__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_double_double_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_float_float_float_float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_p_q_const__float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_p_q_const__int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_char__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_p_q_const__void_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_p_q_const__void_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_p_void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_p_float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_p_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_p_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_p_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_double__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_int64_t__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_int64_t__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_p_void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_q_const__char__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_q_const__char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_q_const__double__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_q_const__double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_q_const__float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_q_const__int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_q_const__int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_uint64_t__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_uint64_t__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_unsigned_char__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_p_void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_q_const__float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_q_const__int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_q_const__int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_char__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int__unsigned_int[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int__unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_double__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_double_double_double_double__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_double_double_double_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_float_float_float_float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_float_float_float_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int_unsigned_char_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int_unsigned_char_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_unsigned_char_p_void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_unsigned_char_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int_p_q_const__void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int_p_q_const__void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_double__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__double__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__double__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int_p_q_const__int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int_p_q_const__int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_void_p_void_p_void__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_p_void_p_void_p_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t_ptrdiff_t__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t_ptrdiff_t__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__unsigned_int[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_float__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_float__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_char_unsigned_char_unsigned_char__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_char_unsigned_char_unsigned_char__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_short__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_short_unsigned_short__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_short_unsigned_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void[] = {  {&_swigt__p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_short__void[] = {  {&_swigt__p_f_unsigned_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_short_unsigned_short__void[] = {  {&_swigt__p_f_unsigned_short_unsigned_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_short_unsigned_short_unsigned_short__void[] = {  {&_swigt__p_f_unsigned_short_unsigned_short_unsigned_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void[] = {  {&_swigt__p_f_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_void__unsigned_int[] = {  {&_swigt__p_f_void__unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_void__void[] = {  {&_swigt__p_f_void__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int64_t[] = {  {&_swigt__p_int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_void[] = {  {&_swigt__p_p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ptrdiff_t[] = {  {&_swigt__p_ptrdiff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint64_t[] = {  {&_swigt__p_uint64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_char,
  _swigc__p_double,
  _swigc__p_f_a_16__double__void,
  _swigc__p_f_a_16__float__void,
  _swigc__p_f_a_16__q_const__double__void,
  _swigc__p_f_a_16__q_const__float__void,
  _swigc__p_f_double__void,
  _swigc__p_f_double_double__void,
  _swigc__p_f_double_double_double__void,
  _swigc__p_f_double_double_double_double__void,
  _swigc__p_f_float__void,
  _swigc__p_f_float_float__void,
  _swigc__p_f_float_float_float__void,
  _swigc__p_f_float_float_float_float__void,
  _swigc__p_f_float_float_float_float_float__void,
  _swigc__p_f_float_float_float_float_float_float__void,
  _swigc__p_f_float_float_float_float_float_float_float_float__void,
  _swigc__p_f_float_float_float_float_float_float_float_float_float_float__void,
  _swigc__p_f_float_float_float_float_float_float_float_float_float_float_float_float__void,
  _swigc__p_f_float_float_float_float_float_float_float_float_float_float_float_float_float_float_float__void,
  _swigc__p_f_float_float_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void,
  _swigc__p_f_float_unsigned_char__void,
  _swigc__p_f_int__unsigned_int,
  _swigc__p_f_int__void,
  _swigc__p_f_int_float__void,
  _swigc__p_f_int_float_float__void,
  _swigc__p_f_int_float_float_float__void,
  _swigc__p_f_int_float_float_float_float__void,
  _swigc__p_f_int_int__void,
  _swigc__p_f_int_int_int__void,
  _swigc__p_f_int_int_int_int__void,
  _swigc__p_f_int_int_int_int_int__void,
  _swigc__p_f_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_int_int_int_int_unsigned_int_unsigned_int_p_void__void,
  _swigc__p_f_int_int_p_int_p_char__void,
  _swigc__p_f_int_int_p_q_const__float__void,
  _swigc__p_f_int_int_p_q_const__int__void,
  _swigc__p_f_int_int_p_q_const__unsigned_char__void,
  _swigc__p_f_int_int_p_q_const__unsigned_int__void,
  _swigc__p_f_int_int_unsigned_char_p_q_const__float__void,
  _swigc__p_f_int_p_double__void,
  _swigc__p_f_int_p_float__void,
  _swigc__p_f_int_p_int__void,
  _swigc__p_f_int_p_p_q_const__unsigned_char_int__void,
  _swigc__p_f_int_p_q_const__float__void,
  _swigc__p_f_int_p_q_const__unsigned_int__void,
  _swigc__p_f_int_p_q_const__unsigned_int_p_q_const__float__void,
  _swigc__p_f_int_p_q_const__unsigned_int_p_unsigned_char__unsigned_char,
  _swigc__p_f_int_p_q_const__void__void,
  _swigc__p_f_int_p_q_const__void_unsigned_int__unsigned_int,
  _swigc__p_f_int_p_short__void,
  _swigc__p_f_int_p_signed_char__void,
  _swigc__p_f_int_p_unsigned_char__void,
  _swigc__p_f_int_p_unsigned_int__void,
  _swigc__p_f_int_p_unsigned_short__void,
  _swigc__p_f_int_p_void__void,
  _swigc__p_f_int_unsigned_int__void,
  _swigc__p_f_int_unsigned_int_int_int_p_q_const__void__void,
  _swigc__p_f_int_unsigned_int_int_p_p_q_const__void_int__void,
  _swigc__p_f_int_unsigned_int_int_p_void__void,
  _swigc__p_f_int_unsigned_int_p_p_q_const__void__void,
  _swigc__p_f_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_p_float__void,
  _swigc__p_f_p_q_const__double__void,
  _swigc__p_f_p_q_const__float__void,
  _swigc__p_f_p_q_const__float_p_q_const__float__void,
  _swigc__p_f_p_q_const__float_p_q_const__float_p_q_const__float__void,
  _swigc__p_f_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void,
  _swigc__p_f_p_q_const__float_p_q_const__unsigned_char_p_q_const__float__void,
  _swigc__p_f_p_q_const__int__void,
  _swigc__p_f_p_q_const__short__void,
  _swigc__p_f_p_q_const__signed_char__void,
  _swigc__p_f_p_q_const__unsigned_char__void,
  _swigc__p_f_p_q_const__unsigned_char_p_q_const__float__void,
  _swigc__p_f_p_q_const__unsigned_int__void,
  _swigc__p_f_p_q_const__unsigned_int_p_q_const__float__void,
  _swigc__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float__void,
  _swigc__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float__void,
  _swigc__p_f_p_q_const__unsigned_int_p_q_const__float_p_q_const__float_p_q_const__float_p_q_const__float__void,
  _swigc__p_f_p_q_const__unsigned_int_p_q_const__int_p_q_const__int_int_int__void,
  _swigc__p_f_p_q_const__unsigned_int_p_q_const__int_unsigned_int_p_q_const__p_q_const__void_int_int__void,
  _swigc__p_f_p_q_const__unsigned_int_p_q_const__unsigned_char_p_q_const__float__void,
  _swigc__p_f_p_q_const__unsigned_short__void,
  _swigc__p_f_p_unsigned_int__int,
  _swigc__p_f_short__void,
  _swigc__p_f_short_short__void,
  _swigc__p_f_short_short_short__void,
  _swigc__p_f_short_short_short_short__void,
  _swigc__p_f_signed_char__void,
  _swigc__p_f_signed_char_signed_char_signed_char__void,
  _swigc__p_f_unsigned_char__void,
  _swigc__p_f_unsigned_char_unsigned_char_unsigned_char__void,
  _swigc__p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float__void,
  _swigc__p_f_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void,
  _swigc__p_f_unsigned_int__p_void,
  _swigc__p_f_unsigned_int__unsigned_char,
  _swigc__p_f_unsigned_int__unsigned_int,
  _swigc__p_f_unsigned_int__void,
  _swigc__p_f_unsigned_int_double__void,
  _swigc__p_f_unsigned_int_double_double__void,
  _swigc__p_f_unsigned_int_double_double_double__void,
  _swigc__p_f_unsigned_int_double_double_double_double__void,
  _swigc__p_f_unsigned_int_double_double_double_double_double_double__void,
  _swigc__p_f_unsigned_int_float__void,
  _swigc__p_f_unsigned_int_float_float__void,
  _swigc__p_f_unsigned_int_float_float_float__void,
  _swigc__p_f_unsigned_int_float_float_float_float__void,
  _swigc__p_f_unsigned_int_float_float_float_float_float__void,
  _swigc__p_f_unsigned_int_float_float_float_float_float_float__void,
  _swigc__p_f_unsigned_int_float_float_float_float_float_float_float_float__void,
  _swigc__p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float__void,
  _swigc__p_f_unsigned_int_float_float_float_float_float_float_float_float_float_float_float_float__void,
  _swigc__p_f_unsigned_int_int__int,
  _swigc__p_f_unsigned_int_int__ptrdiff_t,
  _swigc__p_f_unsigned_int_int__void,
  _swigc__p_f_unsigned_int_int_float__void,
  _swigc__p_f_unsigned_int_int_float_float__void,
  _swigc__p_f_unsigned_int_int_float_float_float__void,
  _swigc__p_f_unsigned_int_int_float_float_float_float__void,
  _swigc__p_f_unsigned_int_int_float_int__void,
  _swigc__p_f_unsigned_int_int_int__void,
  _swigc__p_f_unsigned_int_int_int_int__void,
  _swigc__p_f_unsigned_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_int_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_int_int_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_int_int_int_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_int_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_int_p_q_const__float__void,
  _swigc__p_f_unsigned_int_int_int_p_q_const__int__void,
  _swigc__p_f_unsigned_int_int_int_p_q_const__unsigned_int__void,
  _swigc__p_f_unsigned_int_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_int_unsigned_char_p_q_const__float__void,
  _swigc__p_f_unsigned_int_int_int_unsigned_int_int_int__void,
  _swigc__p_f_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_p_float__void,
  _swigc__p_f_unsigned_int_int_p_int__void,
  _swigc__p_f_unsigned_int_int_p_int_p_char__void,
  _swigc__p_f_unsigned_int_int_p_int_p_unsigned_int__void,
  _swigc__p_f_unsigned_int_int_p_p_q_const__char_p_q_const__int__void,
  _swigc__p_f_unsigned_int_int_p_p_q_const__char_unsigned_int__void,
  _swigc__p_f_unsigned_int_int_p_p_q_const__void_int__void,
  _swigc__p_f_unsigned_int_int_p_q_const__double__void,
  _swigc__p_f_unsigned_int_int_p_q_const__float__void,
  _swigc__p_f_unsigned_int_int_p_q_const__int__void,
  _swigc__p_f_unsigned_int_int_p_q_const__int_unsigned_int__void,
  _swigc__p_f_unsigned_int_int_p_q_const__short__void,
  _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char__void,
  _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__double__void,
  _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char_a___q_const__float__void,
  _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char_double_double_double_double__void,
  _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char_float_float_float_float__void,
  _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char_p_double__void,
  _swigc__p_f_unsigned_int_int_p_q_const__unsigned_char_p_float__void,
  _swigc__p_f_unsigned_int_int_p_q_const__unsigned_int__void,
  _swigc__p_f_unsigned_int_int_p_q_const__unsigned_short__void,
  _swigc__p_f_unsigned_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_p_unsigned_int__void,
  _swigc__p_f_unsigned_int_int_p_void__void,
  _swigc__p_f_unsigned_int_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_int_int__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_p_q_const__void_int__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_unsigned_char__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_unsigned_char_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_unsigned_char_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_p_double__void,
  _swigc__p_f_unsigned_int_p_float__void,
  _swigc__p_f_unsigned_int_p_int__void,
  _swigc__p_f_unsigned_int_p_int_p_int_int__void,
  _swigc__p_f_unsigned_int_p_int_unsigned_int_p_p_q_const__void_int__void,
  _swigc__p_f_unsigned_int_p_p_q_const__void__void,
  _swigc__p_f_unsigned_int_p_p_void__void,
  _swigc__p_f_unsigned_int_p_q_const__char__int,
  _swigc__p_f_unsigned_int_p_q_const__char__void,
  _swigc__p_f_unsigned_int_p_q_const__double__void,
  _swigc__p_f_unsigned_int_p_q_const__float__void,
  _swigc__p_f_unsigned_int_p_q_const__int__void,
  _swigc__p_f_unsigned_int_p_q_const__int_p_q_const__int_int__void,
  _swigc__p_f_unsigned_int_p_q_const__int_unsigned_int__void,
  _swigc__p_f_unsigned_int_p_q_const__short__void,
  _swigc__p_f_unsigned_int_p_q_const__signed_char__void,
  _swigc__p_f_unsigned_int_p_q_const__unsigned_char__void,
  _swigc__p_f_unsigned_int_p_q_const__unsigned_int__void,
  _swigc__p_f_unsigned_int_p_q_const__unsigned_short__void,
  _swigc__p_f_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_p_short__void,
  _swigc__p_f_unsigned_int_p_signed_char__void,
  _swigc__p_f_unsigned_int_p_unsigned_char__void,
  _swigc__p_f_unsigned_int_p_unsigned_int__void,
  _swigc__p_f_unsigned_int_p_unsigned_short__void,
  _swigc__p_f_unsigned_int_ptrdiff_t_p_q_const__void_unsigned_int__void,
  _swigc__p_f_unsigned_int_ptrdiff_t_ptrdiff_t__void,
  _swigc__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_q_const__void__void,
  _swigc__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_p_void__void,
  _swigc__p_f_unsigned_int_ptrdiff_t_ptrdiff_t_unsigned_int__p_void,
  _swigc__p_f_unsigned_int_short__void,
  _swigc__p_f_unsigned_int_short_short__void,
  _swigc__p_f_unsigned_int_short_short_short__void,
  _swigc__p_f_unsigned_int_short_short_short_short__void,
  _swigc__p_f_unsigned_int_signed_char_signed_char_signed_char__void,
  _swigc__p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_uint64_t_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char__void,
  _swigc__p_f_unsigned_int_unsigned_char_unsigned_char_unsigned_char_unsigned_char_float_float_float__void,
  _swigc__p_f_unsigned_int_unsigned_char_unsigned_int_unsigned_int_p_void__void,
  _swigc__p_f_unsigned_int_unsigned_int__p_unsigned_char,
  _swigc__p_f_unsigned_int_unsigned_int__p_void,
  _swigc__p_f_unsigned_int_unsigned_int__unsigned_char,
  _swigc__p_f_unsigned_int_unsigned_int__unsigned_int,
  _swigc__p_f_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_double_double_double_double__void,
  _swigc__p_f_unsigned_int_unsigned_int_float__void,
  _swigc__p_f_unsigned_int_unsigned_int_float_float_float_float__void,
  _swigc__p_f_unsigned_int_unsigned_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_int_unsigned_int_unsigned_int_p_q_const__void_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_p_int_p_int_p_unsigned_int_p_char__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_p_q_const__float__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_p_q_const__int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_char__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_p_q_const__void_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_p_void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_int_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_p_float__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_p_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_int_unsigned_int_unsigned_int_p_void__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_double__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_float__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_int64_t__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_p_void__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_q_const__char__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_q_const__double__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_q_const__float__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_q_const__int__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_q_const__unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_uint64_t__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_unsigned_char__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_p_void__void,
  _swigc__p_f_unsigned_int_unsigned_int_q_const__float__void,
  _swigc__p_f_unsigned_int_unsigned_int_q_const__int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_char__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int__unsigned_int,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_double__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_double_double_double_double__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_float__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_float_float_float_float__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_int_int_unsigned_char_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_int_unsigned_char_p_void__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__float__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_int_unsigned_int_p_q_const__void__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_double__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_float__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__double__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__float__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__int_p_q_const__int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_q_const__unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_void__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_p_void_p_void_p_void__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_ptrdiff_t_ptrdiff_t__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__unsigned_int,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_int_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_float__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_p_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_char_unsigned_char_unsigned_char__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int_unsigned_int__void,
  _swigc__p_f_unsigned_int_unsigned_short__void,
  _swigc__p_f_unsigned_int_unsigned_short_unsigned_short__void,
  _swigc__p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short__void,
  _swigc__p_f_unsigned_int_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void,
  _swigc__p_f_unsigned_short__void,
  _swigc__p_f_unsigned_short_unsigned_short__void,
  _swigc__p_f_unsigned_short_unsigned_short_unsigned_short__void,
  _swigc__p_f_unsigned_short_unsigned_short_unsigned_short_unsigned_short__void,
  _swigc__p_f_void__unsigned_int,
  _swigc__p_f_void__void,
  _swigc__p_float,
  _swigc__p_int,
  _swigc__p_int64_t,
  _swigc__p_p_void,
  _swigc__p_ptrdiff_t,
  _swigc__p_short,
  _swigc__p_signed_char,
  _swigc__p_uint64_t,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_unsigned_short,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;

  clientdata = clientdata;

  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }

  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);

    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }

  /* When multiple interpeters are used, a module could have already been initialized in
     a different interpreter, but not yet have a pointer in this interpreter.
     In this case, we do not want to continue adding types... everything should be
     set up already */
  if (init == 0) return;

  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
  
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif

    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
	type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }

    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
    
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
	if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
	if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
	  printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
	  cast->type = ret;
	  ret = 0;
	} else {
	  /* Check for casting already in the list */
	  swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
	  if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
	  if (!ocast) ret = 0;
	}
      }

      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
	printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;

#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
  printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;

  if (init_run) return;
  init_run = 1;

  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
            SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{ /* c-mode */
#endif
}
#endif

/*

*/
#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void Init_glew(void) {
  size_t i;
  
  SWIG_InitRuntime();
  mGlew = rb_define_module("Glew");
  
  SWIG_InitializeModule(0);
  for (i = 0; i < swig_module.size; i++) {
    SWIG_define_class(swig_module.types[i]);
  }
  
  SWIG_RubyInitializeTrackings();
  rb_define_const(mGlew, "GL_VERSION_1_1", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ACCUM", SWIG_From_int(static_cast< int >(0x0100)));
  rb_define_const(mGlew, "GL_LOAD", SWIG_From_int(static_cast< int >(0x0101)));
  rb_define_const(mGlew, "GL_RETURN", SWIG_From_int(static_cast< int >(0x0102)));
  rb_define_const(mGlew, "GL_MULT", SWIG_From_int(static_cast< int >(0x0103)));
  rb_define_const(mGlew, "GL_ADD", SWIG_From_int(static_cast< int >(0x0104)));
  rb_define_const(mGlew, "GL_NEVER", SWIG_From_int(static_cast< int >(0x0200)));
  rb_define_const(mGlew, "GL_LESS", SWIG_From_int(static_cast< int >(0x0201)));
  rb_define_const(mGlew, "GL_EQUAL", SWIG_From_int(static_cast< int >(0x0202)));
  rb_define_const(mGlew, "GL_LEQUAL", SWIG_From_int(static_cast< int >(0x0203)));
  rb_define_const(mGlew, "GL_GREATER", SWIG_From_int(static_cast< int >(0x0204)));
  rb_define_const(mGlew, "GL_NOTEQUAL", SWIG_From_int(static_cast< int >(0x0205)));
  rb_define_const(mGlew, "GL_GEQUAL", SWIG_From_int(static_cast< int >(0x0206)));
  rb_define_const(mGlew, "GL_ALWAYS", SWIG_From_int(static_cast< int >(0x0207)));
  rb_define_const(mGlew, "GL_CURRENT_BIT", SWIG_From_int(static_cast< int >(0x00000001)));
  rb_define_const(mGlew, "GL_POINT_BIT", SWIG_From_int(static_cast< int >(0x00000002)));
  rb_define_const(mGlew, "GL_LINE_BIT", SWIG_From_int(static_cast< int >(0x00000004)));
  rb_define_const(mGlew, "GL_POLYGON_BIT", SWIG_From_int(static_cast< int >(0x00000008)));
  rb_define_const(mGlew, "GL_POLYGON_STIPPLE_BIT", SWIG_From_int(static_cast< int >(0x00000010)));
  rb_define_const(mGlew, "GL_PIXEL_MODE_BIT", SWIG_From_int(static_cast< int >(0x00000020)));
  rb_define_const(mGlew, "GL_LIGHTING_BIT", SWIG_From_int(static_cast< int >(0x00000040)));
  rb_define_const(mGlew, "GL_FOG_BIT", SWIG_From_int(static_cast< int >(0x00000080)));
  rb_define_const(mGlew, "GL_DEPTH_BUFFER_BIT", SWIG_From_int(static_cast< int >(0x00000100)));
  rb_define_const(mGlew, "GL_ACCUM_BUFFER_BIT", SWIG_From_int(static_cast< int >(0x00000200)));
  rb_define_const(mGlew, "GL_STENCIL_BUFFER_BIT", SWIG_From_int(static_cast< int >(0x00000400)));
  rb_define_const(mGlew, "GL_VIEWPORT_BIT", SWIG_From_int(static_cast< int >(0x00000800)));
  rb_define_const(mGlew, "GL_TRANSFORM_BIT", SWIG_From_int(static_cast< int >(0x00001000)));
  rb_define_const(mGlew, "GL_ENABLE_BIT", SWIG_From_int(static_cast< int >(0x00002000)));
  rb_define_const(mGlew, "GL_COLOR_BUFFER_BIT", SWIG_From_int(static_cast< int >(0x00004000)));
  rb_define_const(mGlew, "GL_HINT_BIT", SWIG_From_int(static_cast< int >(0x00008000)));
  rb_define_const(mGlew, "GL_EVAL_BIT", SWIG_From_int(static_cast< int >(0x00010000)));
  rb_define_const(mGlew, "GL_LIST_BIT", SWIG_From_int(static_cast< int >(0x00020000)));
  rb_define_const(mGlew, "GL_TEXTURE_BIT", SWIG_From_int(static_cast< int >(0x00040000)));
  rb_define_const(mGlew, "GL_SCISSOR_BIT", SWIG_From_int(static_cast< int >(0x00080000)));
  rb_define_const(mGlew, "GL_ALL_ATTRIB_BITS", SWIG_From_int(static_cast< int >(0x000fffff)));
  rb_define_const(mGlew, "GL_POINTS", SWIG_From_int(static_cast< int >(0x0000)));
  rb_define_const(mGlew, "GL_LINES", SWIG_From_int(static_cast< int >(0x0001)));
  rb_define_const(mGlew, "GL_LINE_LOOP", SWIG_From_int(static_cast< int >(0x0002)));
  rb_define_const(mGlew, "GL_LINE_STRIP", SWIG_From_int(static_cast< int >(0x0003)));
  rb_define_const(mGlew, "GL_TRIANGLES", SWIG_From_int(static_cast< int >(0x0004)));
  rb_define_const(mGlew, "GL_TRIANGLE_STRIP", SWIG_From_int(static_cast< int >(0x0005)));
  rb_define_const(mGlew, "GL_TRIANGLE_FAN", SWIG_From_int(static_cast< int >(0x0006)));
  rb_define_const(mGlew, "GL_QUADS", SWIG_From_int(static_cast< int >(0x0007)));
  rb_define_const(mGlew, "GL_QUAD_STRIP", SWIG_From_int(static_cast< int >(0x0008)));
  rb_define_const(mGlew, "GL_POLYGON", SWIG_From_int(static_cast< int >(0x0009)));
  rb_define_const(mGlew, "GL_ZERO", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_ONE", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SRC_COLOR", SWIG_From_int(static_cast< int >(0x0300)));
  rb_define_const(mGlew, "GL_ONE_MINUS_SRC_COLOR", SWIG_From_int(static_cast< int >(0x0301)));
  rb_define_const(mGlew, "GL_SRC_ALPHA", SWIG_From_int(static_cast< int >(0x0302)));
  rb_define_const(mGlew, "GL_ONE_MINUS_SRC_ALPHA", SWIG_From_int(static_cast< int >(0x0303)));
  rb_define_const(mGlew, "GL_DST_ALPHA", SWIG_From_int(static_cast< int >(0x0304)));
  rb_define_const(mGlew, "GL_ONE_MINUS_DST_ALPHA", SWIG_From_int(static_cast< int >(0x0305)));
  rb_define_const(mGlew, "GL_DST_COLOR", SWIG_From_int(static_cast< int >(0x0306)));
  rb_define_const(mGlew, "GL_ONE_MINUS_DST_COLOR", SWIG_From_int(static_cast< int >(0x0307)));
  rb_define_const(mGlew, "GL_SRC_ALPHA_SATURATE", SWIG_From_int(static_cast< int >(0x0308)));
  rb_define_const(mGlew, "GL_TRUE", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FALSE", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_CLIP_PLANE0", SWIG_From_int(static_cast< int >(0x3000)));
  rb_define_const(mGlew, "GL_CLIP_PLANE1", SWIG_From_int(static_cast< int >(0x3001)));
  rb_define_const(mGlew, "GL_CLIP_PLANE2", SWIG_From_int(static_cast< int >(0x3002)));
  rb_define_const(mGlew, "GL_CLIP_PLANE3", SWIG_From_int(static_cast< int >(0x3003)));
  rb_define_const(mGlew, "GL_CLIP_PLANE4", SWIG_From_int(static_cast< int >(0x3004)));
  rb_define_const(mGlew, "GL_CLIP_PLANE5", SWIG_From_int(static_cast< int >(0x3005)));
  rb_define_const(mGlew, "GL_BYTE", SWIG_From_int(static_cast< int >(0x1400)));
  rb_define_const(mGlew, "GL_UNSIGNED_BYTE", SWIG_From_int(static_cast< int >(0x1401)));
  rb_define_const(mGlew, "GL_SHORT", SWIG_From_int(static_cast< int >(0x1402)));
  rb_define_const(mGlew, "GL_UNSIGNED_SHORT", SWIG_From_int(static_cast< int >(0x1403)));
  rb_define_const(mGlew, "GL_INT", SWIG_From_int(static_cast< int >(0x1404)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT", SWIG_From_int(static_cast< int >(0x1405)));
  rb_define_const(mGlew, "GL_FLOAT", SWIG_From_int(static_cast< int >(0x1406)));
  rb_define_const(mGlew, "GL_2_BYTES", SWIG_From_int(static_cast< int >(0x1407)));
  rb_define_const(mGlew, "GL_3_BYTES", SWIG_From_int(static_cast< int >(0x1408)));
  rb_define_const(mGlew, "GL_4_BYTES", SWIG_From_int(static_cast< int >(0x1409)));
  rb_define_const(mGlew, "GL_DOUBLE", SWIG_From_int(static_cast< int >(0x140A)));
  rb_define_const(mGlew, "GL_NONE", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_FRONT_LEFT", SWIG_From_int(static_cast< int >(0x0400)));
  rb_define_const(mGlew, "GL_FRONT_RIGHT", SWIG_From_int(static_cast< int >(0x0401)));
  rb_define_const(mGlew, "GL_BACK_LEFT", SWIG_From_int(static_cast< int >(0x0402)));
  rb_define_const(mGlew, "GL_BACK_RIGHT", SWIG_From_int(static_cast< int >(0x0403)));
  rb_define_const(mGlew, "GL_FRONT", SWIG_From_int(static_cast< int >(0x0404)));
  rb_define_const(mGlew, "GL_BACK", SWIG_From_int(static_cast< int >(0x0405)));
  rb_define_const(mGlew, "GL_LEFT", SWIG_From_int(static_cast< int >(0x0406)));
  rb_define_const(mGlew, "GL_RIGHT", SWIG_From_int(static_cast< int >(0x0407)));
  rb_define_const(mGlew, "GL_FRONT_AND_BACK", SWIG_From_int(static_cast< int >(0x0408)));
  rb_define_const(mGlew, "GL_AUX0", SWIG_From_int(static_cast< int >(0x0409)));
  rb_define_const(mGlew, "GL_AUX1", SWIG_From_int(static_cast< int >(0x040A)));
  rb_define_const(mGlew, "GL_AUX2", SWIG_From_int(static_cast< int >(0x040B)));
  rb_define_const(mGlew, "GL_AUX3", SWIG_From_int(static_cast< int >(0x040C)));
  rb_define_const(mGlew, "GL_NO_ERROR", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_INVALID_ENUM", SWIG_From_int(static_cast< int >(0x0500)));
  rb_define_const(mGlew, "GL_INVALID_VALUE", SWIG_From_int(static_cast< int >(0x0501)));
  rb_define_const(mGlew, "GL_INVALID_OPERATION", SWIG_From_int(static_cast< int >(0x0502)));
  rb_define_const(mGlew, "GL_STACK_OVERFLOW", SWIG_From_int(static_cast< int >(0x0503)));
  rb_define_const(mGlew, "GL_STACK_UNDERFLOW", SWIG_From_int(static_cast< int >(0x0504)));
  rb_define_const(mGlew, "GL_OUT_OF_MEMORY", SWIG_From_int(static_cast< int >(0x0505)));
  rb_define_const(mGlew, "GL_2D", SWIG_From_int(static_cast< int >(0x0600)));
  rb_define_const(mGlew, "GL_3D", SWIG_From_int(static_cast< int >(0x0601)));
  rb_define_const(mGlew, "GL_3D_COLOR", SWIG_From_int(static_cast< int >(0x0602)));
  rb_define_const(mGlew, "GL_3D_COLOR_TEXTURE", SWIG_From_int(static_cast< int >(0x0603)));
  rb_define_const(mGlew, "GL_4D_COLOR_TEXTURE", SWIG_From_int(static_cast< int >(0x0604)));
  rb_define_const(mGlew, "GL_PASS_THROUGH_TOKEN", SWIG_From_int(static_cast< int >(0x0700)));
  rb_define_const(mGlew, "GL_POINT_TOKEN", SWIG_From_int(static_cast< int >(0x0701)));
  rb_define_const(mGlew, "GL_LINE_TOKEN", SWIG_From_int(static_cast< int >(0x0702)));
  rb_define_const(mGlew, "GL_POLYGON_TOKEN", SWIG_From_int(static_cast< int >(0x0703)));
  rb_define_const(mGlew, "GL_BITMAP_TOKEN", SWIG_From_int(static_cast< int >(0x0704)));
  rb_define_const(mGlew, "GL_DRAW_PIXEL_TOKEN", SWIG_From_int(static_cast< int >(0x0705)));
  rb_define_const(mGlew, "GL_COPY_PIXEL_TOKEN", SWIG_From_int(static_cast< int >(0x0706)));
  rb_define_const(mGlew, "GL_LINE_RESET_TOKEN", SWIG_From_int(static_cast< int >(0x0707)));
  rb_define_const(mGlew, "GL_EXP", SWIG_From_int(static_cast< int >(0x0800)));
  rb_define_const(mGlew, "GL_EXP2", SWIG_From_int(static_cast< int >(0x0801)));
  rb_define_const(mGlew, "GL_CW", SWIG_From_int(static_cast< int >(0x0900)));
  rb_define_const(mGlew, "GL_CCW", SWIG_From_int(static_cast< int >(0x0901)));
  rb_define_const(mGlew, "GL_COEFF", SWIG_From_int(static_cast< int >(0x0A00)));
  rb_define_const(mGlew, "GL_ORDER", SWIG_From_int(static_cast< int >(0x0A01)));
  rb_define_const(mGlew, "GL_DOMAIN", SWIG_From_int(static_cast< int >(0x0A02)));
  rb_define_const(mGlew, "GL_CURRENT_COLOR", SWIG_From_int(static_cast< int >(0x0B00)));
  rb_define_const(mGlew, "GL_CURRENT_INDEX", SWIG_From_int(static_cast< int >(0x0B01)));
  rb_define_const(mGlew, "GL_CURRENT_NORMAL", SWIG_From_int(static_cast< int >(0x0B02)));
  rb_define_const(mGlew, "GL_CURRENT_TEXTURE_COORDS", SWIG_From_int(static_cast< int >(0x0B03)));
  rb_define_const(mGlew, "GL_CURRENT_RASTER_COLOR", SWIG_From_int(static_cast< int >(0x0B04)));
  rb_define_const(mGlew, "GL_CURRENT_RASTER_INDEX", SWIG_From_int(static_cast< int >(0x0B05)));
  rb_define_const(mGlew, "GL_CURRENT_RASTER_TEXTURE_COORDS", SWIG_From_int(static_cast< int >(0x0B06)));
  rb_define_const(mGlew, "GL_CURRENT_RASTER_POSITION", SWIG_From_int(static_cast< int >(0x0B07)));
  rb_define_const(mGlew, "GL_CURRENT_RASTER_POSITION_VALID", SWIG_From_int(static_cast< int >(0x0B08)));
  rb_define_const(mGlew, "GL_CURRENT_RASTER_DISTANCE", SWIG_From_int(static_cast< int >(0x0B09)));
  rb_define_const(mGlew, "GL_POINT_SMOOTH", SWIG_From_int(static_cast< int >(0x0B10)));
  rb_define_const(mGlew, "GL_POINT_SIZE", SWIG_From_int(static_cast< int >(0x0B11)));
  rb_define_const(mGlew, "GL_POINT_SIZE_RANGE", SWIG_From_int(static_cast< int >(0x0B12)));
  rb_define_const(mGlew, "GL_POINT_SIZE_GRANULARITY", SWIG_From_int(static_cast< int >(0x0B13)));
  rb_define_const(mGlew, "GL_LINE_SMOOTH", SWIG_From_int(static_cast< int >(0x0B20)));
  rb_define_const(mGlew, "GL_LINE_WIDTH", SWIG_From_int(static_cast< int >(0x0B21)));
  rb_define_const(mGlew, "GL_LINE_WIDTH_RANGE", SWIG_From_int(static_cast< int >(0x0B22)));
  rb_define_const(mGlew, "GL_LINE_WIDTH_GRANULARITY", SWIG_From_int(static_cast< int >(0x0B23)));
  rb_define_const(mGlew, "GL_LINE_STIPPLE", SWIG_From_int(static_cast< int >(0x0B24)));
  rb_define_const(mGlew, "GL_LINE_STIPPLE_PATTERN", SWIG_From_int(static_cast< int >(0x0B25)));
  rb_define_const(mGlew, "GL_LINE_STIPPLE_REPEAT", SWIG_From_int(static_cast< int >(0x0B26)));
  rb_define_const(mGlew, "GL_LIST_MODE", SWIG_From_int(static_cast< int >(0x0B30)));
  rb_define_const(mGlew, "GL_MAX_LIST_NESTING", SWIG_From_int(static_cast< int >(0x0B31)));
  rb_define_const(mGlew, "GL_LIST_BASE", SWIG_From_int(static_cast< int >(0x0B32)));
  rb_define_const(mGlew, "GL_LIST_INDEX", SWIG_From_int(static_cast< int >(0x0B33)));
  rb_define_const(mGlew, "GL_POLYGON_MODE", SWIG_From_int(static_cast< int >(0x0B40)));
  rb_define_const(mGlew, "GL_POLYGON_SMOOTH", SWIG_From_int(static_cast< int >(0x0B41)));
  rb_define_const(mGlew, "GL_POLYGON_STIPPLE", SWIG_From_int(static_cast< int >(0x0B42)));
  rb_define_const(mGlew, "GL_EDGE_FLAG", SWIG_From_int(static_cast< int >(0x0B43)));
  rb_define_const(mGlew, "GL_CULL_FACE", SWIG_From_int(static_cast< int >(0x0B44)));
  rb_define_const(mGlew, "GL_CULL_FACE_MODE", SWIG_From_int(static_cast< int >(0x0B45)));
  rb_define_const(mGlew, "GL_FRONT_FACE", SWIG_From_int(static_cast< int >(0x0B46)));
  rb_define_const(mGlew, "GL_LIGHTING", SWIG_From_int(static_cast< int >(0x0B50)));
  rb_define_const(mGlew, "GL_LIGHT_MODEL_LOCAL_VIEWER", SWIG_From_int(static_cast< int >(0x0B51)));
  rb_define_const(mGlew, "GL_LIGHT_MODEL_TWO_SIDE", SWIG_From_int(static_cast< int >(0x0B52)));
  rb_define_const(mGlew, "GL_LIGHT_MODEL_AMBIENT", SWIG_From_int(static_cast< int >(0x0B53)));
  rb_define_const(mGlew, "GL_SHADE_MODEL", SWIG_From_int(static_cast< int >(0x0B54)));
  rb_define_const(mGlew, "GL_COLOR_MATERIAL_FACE", SWIG_From_int(static_cast< int >(0x0B55)));
  rb_define_const(mGlew, "GL_COLOR_MATERIAL_PARAMETER", SWIG_From_int(static_cast< int >(0x0B56)));
  rb_define_const(mGlew, "GL_COLOR_MATERIAL", SWIG_From_int(static_cast< int >(0x0B57)));
  rb_define_const(mGlew, "GL_FOG", SWIG_From_int(static_cast< int >(0x0B60)));
  rb_define_const(mGlew, "GL_FOG_INDEX", SWIG_From_int(static_cast< int >(0x0B61)));
  rb_define_const(mGlew, "GL_FOG_DENSITY", SWIG_From_int(static_cast< int >(0x0B62)));
  rb_define_const(mGlew, "GL_FOG_START", SWIG_From_int(static_cast< int >(0x0B63)));
  rb_define_const(mGlew, "GL_FOG_END", SWIG_From_int(static_cast< int >(0x0B64)));
  rb_define_const(mGlew, "GL_FOG_MODE", SWIG_From_int(static_cast< int >(0x0B65)));
  rb_define_const(mGlew, "GL_FOG_COLOR", SWIG_From_int(static_cast< int >(0x0B66)));
  rb_define_const(mGlew, "GL_DEPTH_RANGE", SWIG_From_int(static_cast< int >(0x0B70)));
  rb_define_const(mGlew, "GL_DEPTH_TEST", SWIG_From_int(static_cast< int >(0x0B71)));
  rb_define_const(mGlew, "GL_DEPTH_WRITEMASK", SWIG_From_int(static_cast< int >(0x0B72)));
  rb_define_const(mGlew, "GL_DEPTH_CLEAR_VALUE", SWIG_From_int(static_cast< int >(0x0B73)));
  rb_define_const(mGlew, "GL_DEPTH_FUNC", SWIG_From_int(static_cast< int >(0x0B74)));
  rb_define_const(mGlew, "GL_ACCUM_CLEAR_VALUE", SWIG_From_int(static_cast< int >(0x0B80)));
  rb_define_const(mGlew, "GL_STENCIL_TEST", SWIG_From_int(static_cast< int >(0x0B90)));
  rb_define_const(mGlew, "GL_STENCIL_CLEAR_VALUE", SWIG_From_int(static_cast< int >(0x0B91)));
  rb_define_const(mGlew, "GL_STENCIL_FUNC", SWIG_From_int(static_cast< int >(0x0B92)));
  rb_define_const(mGlew, "GL_STENCIL_VALUE_MASK", SWIG_From_int(static_cast< int >(0x0B93)));
  rb_define_const(mGlew, "GL_STENCIL_FAIL", SWIG_From_int(static_cast< int >(0x0B94)));
  rb_define_const(mGlew, "GL_STENCIL_PASS_DEPTH_FAIL", SWIG_From_int(static_cast< int >(0x0B95)));
  rb_define_const(mGlew, "GL_STENCIL_PASS_DEPTH_PASS", SWIG_From_int(static_cast< int >(0x0B96)));
  rb_define_const(mGlew, "GL_STENCIL_REF", SWIG_From_int(static_cast< int >(0x0B97)));
  rb_define_const(mGlew, "GL_STENCIL_WRITEMASK", SWIG_From_int(static_cast< int >(0x0B98)));
  rb_define_const(mGlew, "GL_MATRIX_MODE", SWIG_From_int(static_cast< int >(0x0BA0)));
  rb_define_const(mGlew, "GL_NORMALIZE", SWIG_From_int(static_cast< int >(0x0BA1)));
  rb_define_const(mGlew, "GL_VIEWPORT", SWIG_From_int(static_cast< int >(0x0BA2)));
  rb_define_const(mGlew, "GL_MODELVIEW_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0BA3)));
  rb_define_const(mGlew, "GL_PROJECTION_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0BA4)));
  rb_define_const(mGlew, "GL_TEXTURE_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0BA5)));
  rb_define_const(mGlew, "GL_MODELVIEW_MATRIX", SWIG_From_int(static_cast< int >(0x0BA6)));
  rb_define_const(mGlew, "GL_PROJECTION_MATRIX", SWIG_From_int(static_cast< int >(0x0BA7)));
  rb_define_const(mGlew, "GL_TEXTURE_MATRIX", SWIG_From_int(static_cast< int >(0x0BA8)));
  rb_define_const(mGlew, "GL_ATTRIB_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0BB0)));
  rb_define_const(mGlew, "GL_CLIENT_ATTRIB_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0BB1)));
  rb_define_const(mGlew, "GL_ALPHA_TEST", SWIG_From_int(static_cast< int >(0x0BC0)));
  rb_define_const(mGlew, "GL_ALPHA_TEST_FUNC", SWIG_From_int(static_cast< int >(0x0BC1)));
  rb_define_const(mGlew, "GL_ALPHA_TEST_REF", SWIG_From_int(static_cast< int >(0x0BC2)));
  rb_define_const(mGlew, "GL_DITHER", SWIG_From_int(static_cast< int >(0x0BD0)));
  rb_define_const(mGlew, "GL_BLEND_DST", SWIG_From_int(static_cast< int >(0x0BE0)));
  rb_define_const(mGlew, "GL_BLEND_SRC", SWIG_From_int(static_cast< int >(0x0BE1)));
  rb_define_const(mGlew, "GL_BLEND", SWIG_From_int(static_cast< int >(0x0BE2)));
  rb_define_const(mGlew, "GL_LOGIC_OP_MODE", SWIG_From_int(static_cast< int >(0x0BF0)));
  rb_define_const(mGlew, "GL_INDEX_LOGIC_OP", SWIG_From_int(static_cast< int >(0x0BF1)));
  rb_define_const(mGlew, "GL_COLOR_LOGIC_OP", SWIG_From_int(static_cast< int >(0x0BF2)));
  rb_define_const(mGlew, "GL_AUX_BUFFERS", SWIG_From_int(static_cast< int >(0x0C00)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER", SWIG_From_int(static_cast< int >(0x0C01)));
  rb_define_const(mGlew, "GL_READ_BUFFER", SWIG_From_int(static_cast< int >(0x0C02)));
  rb_define_const(mGlew, "GL_SCISSOR_BOX", SWIG_From_int(static_cast< int >(0x0C10)));
  rb_define_const(mGlew, "GL_SCISSOR_TEST", SWIG_From_int(static_cast< int >(0x0C11)));
  rb_define_const(mGlew, "GL_INDEX_CLEAR_VALUE", SWIG_From_int(static_cast< int >(0x0C20)));
  rb_define_const(mGlew, "GL_INDEX_WRITEMASK", SWIG_From_int(static_cast< int >(0x0C21)));
  rb_define_const(mGlew, "GL_COLOR_CLEAR_VALUE", SWIG_From_int(static_cast< int >(0x0C22)));
  rb_define_const(mGlew, "GL_COLOR_WRITEMASK", SWIG_From_int(static_cast< int >(0x0C23)));
  rb_define_const(mGlew, "GL_INDEX_MODE", SWIG_From_int(static_cast< int >(0x0C30)));
  rb_define_const(mGlew, "GL_RGBA_MODE", SWIG_From_int(static_cast< int >(0x0C31)));
  rb_define_const(mGlew, "GL_DOUBLEBUFFER", SWIG_From_int(static_cast< int >(0x0C32)));
  rb_define_const(mGlew, "GL_STEREO", SWIG_From_int(static_cast< int >(0x0C33)));
  rb_define_const(mGlew, "GL_RENDER_MODE", SWIG_From_int(static_cast< int >(0x0C40)));
  rb_define_const(mGlew, "GL_PERSPECTIVE_CORRECTION_HINT", SWIG_From_int(static_cast< int >(0x0C50)));
  rb_define_const(mGlew, "GL_POINT_SMOOTH_HINT", SWIG_From_int(static_cast< int >(0x0C51)));
  rb_define_const(mGlew, "GL_LINE_SMOOTH_HINT", SWIG_From_int(static_cast< int >(0x0C52)));
  rb_define_const(mGlew, "GL_POLYGON_SMOOTH_HINT", SWIG_From_int(static_cast< int >(0x0C53)));
  rb_define_const(mGlew, "GL_FOG_HINT", SWIG_From_int(static_cast< int >(0x0C54)));
  rb_define_const(mGlew, "GL_TEXTURE_GEN_S", SWIG_From_int(static_cast< int >(0x0C60)));
  rb_define_const(mGlew, "GL_TEXTURE_GEN_T", SWIG_From_int(static_cast< int >(0x0C61)));
  rb_define_const(mGlew, "GL_TEXTURE_GEN_R", SWIG_From_int(static_cast< int >(0x0C62)));
  rb_define_const(mGlew, "GL_TEXTURE_GEN_Q", SWIG_From_int(static_cast< int >(0x0C63)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_I_TO_I", SWIG_From_int(static_cast< int >(0x0C70)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_S_TO_S", SWIG_From_int(static_cast< int >(0x0C71)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_I_TO_R", SWIG_From_int(static_cast< int >(0x0C72)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_I_TO_G", SWIG_From_int(static_cast< int >(0x0C73)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_I_TO_B", SWIG_From_int(static_cast< int >(0x0C74)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_I_TO_A", SWIG_From_int(static_cast< int >(0x0C75)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_R_TO_R", SWIG_From_int(static_cast< int >(0x0C76)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_G_TO_G", SWIG_From_int(static_cast< int >(0x0C77)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_B_TO_B", SWIG_From_int(static_cast< int >(0x0C78)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_A_TO_A", SWIG_From_int(static_cast< int >(0x0C79)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_I_TO_I_SIZE", SWIG_From_int(static_cast< int >(0x0CB0)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_S_TO_S_SIZE", SWIG_From_int(static_cast< int >(0x0CB1)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_I_TO_R_SIZE", SWIG_From_int(static_cast< int >(0x0CB2)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_I_TO_G_SIZE", SWIG_From_int(static_cast< int >(0x0CB3)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_I_TO_B_SIZE", SWIG_From_int(static_cast< int >(0x0CB4)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_I_TO_A_SIZE", SWIG_From_int(static_cast< int >(0x0CB5)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_R_TO_R_SIZE", SWIG_From_int(static_cast< int >(0x0CB6)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_G_TO_G_SIZE", SWIG_From_int(static_cast< int >(0x0CB7)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_B_TO_B_SIZE", SWIG_From_int(static_cast< int >(0x0CB8)));
  rb_define_const(mGlew, "GL_PIXEL_MAP_A_TO_A_SIZE", SWIG_From_int(static_cast< int >(0x0CB9)));
  rb_define_const(mGlew, "GL_UNPACK_SWAP_BYTES", SWIG_From_int(static_cast< int >(0x0CF0)));
  rb_define_const(mGlew, "GL_UNPACK_LSB_FIRST", SWIG_From_int(static_cast< int >(0x0CF1)));
  rb_define_const(mGlew, "GL_UNPACK_ROW_LENGTH", SWIG_From_int(static_cast< int >(0x0CF2)));
  rb_define_const(mGlew, "GL_UNPACK_SKIP_ROWS", SWIG_From_int(static_cast< int >(0x0CF3)));
  rb_define_const(mGlew, "GL_UNPACK_SKIP_PIXELS", SWIG_From_int(static_cast< int >(0x0CF4)));
  rb_define_const(mGlew, "GL_UNPACK_ALIGNMENT", SWIG_From_int(static_cast< int >(0x0CF5)));
  rb_define_const(mGlew, "GL_PACK_SWAP_BYTES", SWIG_From_int(static_cast< int >(0x0D00)));
  rb_define_const(mGlew, "GL_PACK_LSB_FIRST", SWIG_From_int(static_cast< int >(0x0D01)));
  rb_define_const(mGlew, "GL_PACK_ROW_LENGTH", SWIG_From_int(static_cast< int >(0x0D02)));
  rb_define_const(mGlew, "GL_PACK_SKIP_ROWS", SWIG_From_int(static_cast< int >(0x0D03)));
  rb_define_const(mGlew, "GL_PACK_SKIP_PIXELS", SWIG_From_int(static_cast< int >(0x0D04)));
  rb_define_const(mGlew, "GL_PACK_ALIGNMENT", SWIG_From_int(static_cast< int >(0x0D05)));
  rb_define_const(mGlew, "GL_MAP_COLOR", SWIG_From_int(static_cast< int >(0x0D10)));
  rb_define_const(mGlew, "GL_MAP_STENCIL", SWIG_From_int(static_cast< int >(0x0D11)));
  rb_define_const(mGlew, "GL_INDEX_SHIFT", SWIG_From_int(static_cast< int >(0x0D12)));
  rb_define_const(mGlew, "GL_INDEX_OFFSET", SWIG_From_int(static_cast< int >(0x0D13)));
  rb_define_const(mGlew, "GL_RED_SCALE", SWIG_From_int(static_cast< int >(0x0D14)));
  rb_define_const(mGlew, "GL_RED_BIAS", SWIG_From_int(static_cast< int >(0x0D15)));
  rb_define_const(mGlew, "GL_ZOOM_X", SWIG_From_int(static_cast< int >(0x0D16)));
  rb_define_const(mGlew, "GL_ZOOM_Y", SWIG_From_int(static_cast< int >(0x0D17)));
  rb_define_const(mGlew, "GL_GREEN_SCALE", SWIG_From_int(static_cast< int >(0x0D18)));
  rb_define_const(mGlew, "GL_GREEN_BIAS", SWIG_From_int(static_cast< int >(0x0D19)));
  rb_define_const(mGlew, "GL_BLUE_SCALE", SWIG_From_int(static_cast< int >(0x0D1A)));
  rb_define_const(mGlew, "GL_BLUE_BIAS", SWIG_From_int(static_cast< int >(0x0D1B)));
  rb_define_const(mGlew, "GL_ALPHA_SCALE", SWIG_From_int(static_cast< int >(0x0D1C)));
  rb_define_const(mGlew, "GL_ALPHA_BIAS", SWIG_From_int(static_cast< int >(0x0D1D)));
  rb_define_const(mGlew, "GL_DEPTH_SCALE", SWIG_From_int(static_cast< int >(0x0D1E)));
  rb_define_const(mGlew, "GL_DEPTH_BIAS", SWIG_From_int(static_cast< int >(0x0D1F)));
  rb_define_const(mGlew, "GL_MAX_EVAL_ORDER", SWIG_From_int(static_cast< int >(0x0D30)));
  rb_define_const(mGlew, "GL_MAX_LIGHTS", SWIG_From_int(static_cast< int >(0x0D31)));
  rb_define_const(mGlew, "GL_MAX_CLIP_PLANES", SWIG_From_int(static_cast< int >(0x0D32)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_SIZE", SWIG_From_int(static_cast< int >(0x0D33)));
  rb_define_const(mGlew, "GL_MAX_PIXEL_MAP_TABLE", SWIG_From_int(static_cast< int >(0x0D34)));
  rb_define_const(mGlew, "GL_MAX_ATTRIB_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D35)));
  rb_define_const(mGlew, "GL_MAX_MODELVIEW_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D36)));
  rb_define_const(mGlew, "GL_MAX_NAME_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D37)));
  rb_define_const(mGlew, "GL_MAX_PROJECTION_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D38)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D39)));
  rb_define_const(mGlew, "GL_MAX_VIEWPORT_DIMS", SWIG_From_int(static_cast< int >(0x0D3A)));
  rb_define_const(mGlew, "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D3B)));
  rb_define_const(mGlew, "GL_SUBPIXEL_BITS", SWIG_From_int(static_cast< int >(0x0D50)));
  rb_define_const(mGlew, "GL_INDEX_BITS", SWIG_From_int(static_cast< int >(0x0D51)));
  rb_define_const(mGlew, "GL_RED_BITS", SWIG_From_int(static_cast< int >(0x0D52)));
  rb_define_const(mGlew, "GL_GREEN_BITS", SWIG_From_int(static_cast< int >(0x0D53)));
  rb_define_const(mGlew, "GL_BLUE_BITS", SWIG_From_int(static_cast< int >(0x0D54)));
  rb_define_const(mGlew, "GL_ALPHA_BITS", SWIG_From_int(static_cast< int >(0x0D55)));
  rb_define_const(mGlew, "GL_DEPTH_BITS", SWIG_From_int(static_cast< int >(0x0D56)));
  rb_define_const(mGlew, "GL_STENCIL_BITS", SWIG_From_int(static_cast< int >(0x0D57)));
  rb_define_const(mGlew, "GL_ACCUM_RED_BITS", SWIG_From_int(static_cast< int >(0x0D58)));
  rb_define_const(mGlew, "GL_ACCUM_GREEN_BITS", SWIG_From_int(static_cast< int >(0x0D59)));
  rb_define_const(mGlew, "GL_ACCUM_BLUE_BITS", SWIG_From_int(static_cast< int >(0x0D5A)));
  rb_define_const(mGlew, "GL_ACCUM_ALPHA_BITS", SWIG_From_int(static_cast< int >(0x0D5B)));
  rb_define_const(mGlew, "GL_NAME_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D70)));
  rb_define_const(mGlew, "GL_AUTO_NORMAL", SWIG_From_int(static_cast< int >(0x0D80)));
  rb_define_const(mGlew, "GL_MAP1_COLOR_4", SWIG_From_int(static_cast< int >(0x0D90)));
  rb_define_const(mGlew, "GL_MAP1_INDEX", SWIG_From_int(static_cast< int >(0x0D91)));
  rb_define_const(mGlew, "GL_MAP1_NORMAL", SWIG_From_int(static_cast< int >(0x0D92)));
  rb_define_const(mGlew, "GL_MAP1_TEXTURE_COORD_1", SWIG_From_int(static_cast< int >(0x0D93)));
  rb_define_const(mGlew, "GL_MAP1_TEXTURE_COORD_2", SWIG_From_int(static_cast< int >(0x0D94)));
  rb_define_const(mGlew, "GL_MAP1_TEXTURE_COORD_3", SWIG_From_int(static_cast< int >(0x0D95)));
  rb_define_const(mGlew, "GL_MAP1_TEXTURE_COORD_4", SWIG_From_int(static_cast< int >(0x0D96)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_3", SWIG_From_int(static_cast< int >(0x0D97)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_4", SWIG_From_int(static_cast< int >(0x0D98)));
  rb_define_const(mGlew, "GL_MAP2_COLOR_4", SWIG_From_int(static_cast< int >(0x0DB0)));
  rb_define_const(mGlew, "GL_MAP2_INDEX", SWIG_From_int(static_cast< int >(0x0DB1)));
  rb_define_const(mGlew, "GL_MAP2_NORMAL", SWIG_From_int(static_cast< int >(0x0DB2)));
  rb_define_const(mGlew, "GL_MAP2_TEXTURE_COORD_1", SWIG_From_int(static_cast< int >(0x0DB3)));
  rb_define_const(mGlew, "GL_MAP2_TEXTURE_COORD_2", SWIG_From_int(static_cast< int >(0x0DB4)));
  rb_define_const(mGlew, "GL_MAP2_TEXTURE_COORD_3", SWIG_From_int(static_cast< int >(0x0DB5)));
  rb_define_const(mGlew, "GL_MAP2_TEXTURE_COORD_4", SWIG_From_int(static_cast< int >(0x0DB6)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_3", SWIG_From_int(static_cast< int >(0x0DB7)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_4", SWIG_From_int(static_cast< int >(0x0DB8)));
  rb_define_const(mGlew, "GL_MAP1_GRID_DOMAIN", SWIG_From_int(static_cast< int >(0x0DD0)));
  rb_define_const(mGlew, "GL_MAP1_GRID_SEGMENTS", SWIG_From_int(static_cast< int >(0x0DD1)));
  rb_define_const(mGlew, "GL_MAP2_GRID_DOMAIN", SWIG_From_int(static_cast< int >(0x0DD2)));
  rb_define_const(mGlew, "GL_MAP2_GRID_SEGMENTS", SWIG_From_int(static_cast< int >(0x0DD3)));
  rb_define_const(mGlew, "GL_TEXTURE_1D", SWIG_From_int(static_cast< int >(0x0DE0)));
  rb_define_const(mGlew, "GL_TEXTURE_2D", SWIG_From_int(static_cast< int >(0x0DE1)));
  rb_define_const(mGlew, "GL_FEEDBACK_BUFFER_POINTER", SWIG_From_int(static_cast< int >(0x0DF0)));
  rb_define_const(mGlew, "GL_FEEDBACK_BUFFER_SIZE", SWIG_From_int(static_cast< int >(0x0DF1)));
  rb_define_const(mGlew, "GL_FEEDBACK_BUFFER_TYPE", SWIG_From_int(static_cast< int >(0x0DF2)));
  rb_define_const(mGlew, "GL_SELECTION_BUFFER_POINTER", SWIG_From_int(static_cast< int >(0x0DF3)));
  rb_define_const(mGlew, "GL_SELECTION_BUFFER_SIZE", SWIG_From_int(static_cast< int >(0x0DF4)));
  rb_define_const(mGlew, "GL_TEXTURE_WIDTH", SWIG_From_int(static_cast< int >(0x1000)));
  rb_define_const(mGlew, "GL_TEXTURE_HEIGHT", SWIG_From_int(static_cast< int >(0x1001)));
  rb_define_const(mGlew, "GL_TEXTURE_INTERNAL_FORMAT", SWIG_From_int(static_cast< int >(0x1003)));
  rb_define_const(mGlew, "GL_TEXTURE_BORDER_COLOR", SWIG_From_int(static_cast< int >(0x1004)));
  rb_define_const(mGlew, "GL_TEXTURE_BORDER", SWIG_From_int(static_cast< int >(0x1005)));
  rb_define_const(mGlew, "GL_DONT_CARE", SWIG_From_int(static_cast< int >(0x1100)));
  rb_define_const(mGlew, "GL_FASTEST", SWIG_From_int(static_cast< int >(0x1101)));
  rb_define_const(mGlew, "GL_NICEST", SWIG_From_int(static_cast< int >(0x1102)));
  rb_define_const(mGlew, "GL_LIGHT0", SWIG_From_int(static_cast< int >(0x4000)));
  rb_define_const(mGlew, "GL_LIGHT1", SWIG_From_int(static_cast< int >(0x4001)));
  rb_define_const(mGlew, "GL_LIGHT2", SWIG_From_int(static_cast< int >(0x4002)));
  rb_define_const(mGlew, "GL_LIGHT3", SWIG_From_int(static_cast< int >(0x4003)));
  rb_define_const(mGlew, "GL_LIGHT4", SWIG_From_int(static_cast< int >(0x4004)));
  rb_define_const(mGlew, "GL_LIGHT5", SWIG_From_int(static_cast< int >(0x4005)));
  rb_define_const(mGlew, "GL_LIGHT6", SWIG_From_int(static_cast< int >(0x4006)));
  rb_define_const(mGlew, "GL_LIGHT7", SWIG_From_int(static_cast< int >(0x4007)));
  rb_define_const(mGlew, "GL_AMBIENT", SWIG_From_int(static_cast< int >(0x1200)));
  rb_define_const(mGlew, "GL_DIFFUSE", SWIG_From_int(static_cast< int >(0x1201)));
  rb_define_const(mGlew, "GL_SPECULAR", SWIG_From_int(static_cast< int >(0x1202)));
  rb_define_const(mGlew, "GL_POSITION", SWIG_From_int(static_cast< int >(0x1203)));
  rb_define_const(mGlew, "GL_SPOT_DIRECTION", SWIG_From_int(static_cast< int >(0x1204)));
  rb_define_const(mGlew, "GL_SPOT_EXPONENT", SWIG_From_int(static_cast< int >(0x1205)));
  rb_define_const(mGlew, "GL_SPOT_CUTOFF", SWIG_From_int(static_cast< int >(0x1206)));
  rb_define_const(mGlew, "GL_CONSTANT_ATTENUATION", SWIG_From_int(static_cast< int >(0x1207)));
  rb_define_const(mGlew, "GL_LINEAR_ATTENUATION", SWIG_From_int(static_cast< int >(0x1208)));
  rb_define_const(mGlew, "GL_QUADRATIC_ATTENUATION", SWIG_From_int(static_cast< int >(0x1209)));
  rb_define_const(mGlew, "GL_COMPILE", SWIG_From_int(static_cast< int >(0x1300)));
  rb_define_const(mGlew, "GL_COMPILE_AND_EXECUTE", SWIG_From_int(static_cast< int >(0x1301)));
  rb_define_const(mGlew, "GL_CLEAR", SWIG_From_int(static_cast< int >(0x1500)));
  rb_define_const(mGlew, "GL_AND", SWIG_From_int(static_cast< int >(0x1501)));
  rb_define_const(mGlew, "GL_AND_REVERSE", SWIG_From_int(static_cast< int >(0x1502)));
  rb_define_const(mGlew, "GL_COPY", SWIG_From_int(static_cast< int >(0x1503)));
  rb_define_const(mGlew, "GL_AND_INVERTED", SWIG_From_int(static_cast< int >(0x1504)));
  rb_define_const(mGlew, "GL_NOOP", SWIG_From_int(static_cast< int >(0x1505)));
  rb_define_const(mGlew, "GL_XOR", SWIG_From_int(static_cast< int >(0x1506)));
  rb_define_const(mGlew, "GL_OR", SWIG_From_int(static_cast< int >(0x1507)));
  rb_define_const(mGlew, "GL_NOR", SWIG_From_int(static_cast< int >(0x1508)));
  rb_define_const(mGlew, "GL_EQUIV", SWIG_From_int(static_cast< int >(0x1509)));
  rb_define_const(mGlew, "GL_INVERT", SWIG_From_int(static_cast< int >(0x150A)));
  rb_define_const(mGlew, "GL_OR_REVERSE", SWIG_From_int(static_cast< int >(0x150B)));
  rb_define_const(mGlew, "GL_COPY_INVERTED", SWIG_From_int(static_cast< int >(0x150C)));
  rb_define_const(mGlew, "GL_OR_INVERTED", SWIG_From_int(static_cast< int >(0x150D)));
  rb_define_const(mGlew, "GL_NAND", SWIG_From_int(static_cast< int >(0x150E)));
  rb_define_const(mGlew, "GL_SET", SWIG_From_int(static_cast< int >(0x150F)));
  rb_define_const(mGlew, "GL_EMISSION", SWIG_From_int(static_cast< int >(0x1600)));
  rb_define_const(mGlew, "GL_SHININESS", SWIG_From_int(static_cast< int >(0x1601)));
  rb_define_const(mGlew, "GL_AMBIENT_AND_DIFFUSE", SWIG_From_int(static_cast< int >(0x1602)));
  rb_define_const(mGlew, "GL_COLOR_INDEXES", SWIG_From_int(static_cast< int >(0x1603)));
  rb_define_const(mGlew, "GL_MODELVIEW", SWIG_From_int(static_cast< int >(0x1700)));
  rb_define_const(mGlew, "GL_PROJECTION", SWIG_From_int(static_cast< int >(0x1701)));
  rb_define_const(mGlew, "GL_TEXTURE", SWIG_From_int(static_cast< int >(0x1702)));
  rb_define_const(mGlew, "GL_COLOR", SWIG_From_int(static_cast< int >(0x1800)));
  rb_define_const(mGlew, "GL_DEPTH", SWIG_From_int(static_cast< int >(0x1801)));
  rb_define_const(mGlew, "GL_STENCIL", SWIG_From_int(static_cast< int >(0x1802)));
  rb_define_const(mGlew, "GL_COLOR_INDEX", SWIG_From_int(static_cast< int >(0x1900)));
  rb_define_const(mGlew, "GL_STENCIL_INDEX", SWIG_From_int(static_cast< int >(0x1901)));
  rb_define_const(mGlew, "GL_DEPTH_COMPONENT", SWIG_From_int(static_cast< int >(0x1902)));
  rb_define_const(mGlew, "GL_RED", SWIG_From_int(static_cast< int >(0x1903)));
  rb_define_const(mGlew, "GL_GREEN", SWIG_From_int(static_cast< int >(0x1904)));
  rb_define_const(mGlew, "GL_BLUE", SWIG_From_int(static_cast< int >(0x1905)));
  rb_define_const(mGlew, "GL_ALPHA", SWIG_From_int(static_cast< int >(0x1906)));
  rb_define_const(mGlew, "GL_RGB", SWIG_From_int(static_cast< int >(0x1907)));
  rb_define_const(mGlew, "GL_RGBA", SWIG_From_int(static_cast< int >(0x1908)));
  rb_define_const(mGlew, "GL_LUMINANCE", SWIG_From_int(static_cast< int >(0x1909)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA", SWIG_From_int(static_cast< int >(0x190A)));
  rb_define_const(mGlew, "GL_BITMAP", SWIG_From_int(static_cast< int >(0x1A00)));
  rb_define_const(mGlew, "GL_POINT", SWIG_From_int(static_cast< int >(0x1B00)));
  rb_define_const(mGlew, "GL_LINE", SWIG_From_int(static_cast< int >(0x1B01)));
  rb_define_const(mGlew, "GL_FILL", SWIG_From_int(static_cast< int >(0x1B02)));
  rb_define_const(mGlew, "GL_RENDER", SWIG_From_int(static_cast< int >(0x1C00)));
  rb_define_const(mGlew, "GL_FEEDBACK", SWIG_From_int(static_cast< int >(0x1C01)));
  rb_define_const(mGlew, "GL_SELECT", SWIG_From_int(static_cast< int >(0x1C02)));
  rb_define_const(mGlew, "GL_FLAT", SWIG_From_int(static_cast< int >(0x1D00)));
  rb_define_const(mGlew, "GL_SMOOTH", SWIG_From_int(static_cast< int >(0x1D01)));
  rb_define_const(mGlew, "GL_KEEP", SWIG_From_int(static_cast< int >(0x1E00)));
  rb_define_const(mGlew, "GL_REPLACE", SWIG_From_int(static_cast< int >(0x1E01)));
  rb_define_const(mGlew, "GL_INCR", SWIG_From_int(static_cast< int >(0x1E02)));
  rb_define_const(mGlew, "GL_DECR", SWIG_From_int(static_cast< int >(0x1E03)));
  rb_define_const(mGlew, "GL_VENDOR", SWIG_From_int(static_cast< int >(0x1F00)));
  rb_define_const(mGlew, "GL_RENDERER", SWIG_From_int(static_cast< int >(0x1F01)));
  rb_define_const(mGlew, "GL_VERSION", SWIG_From_int(static_cast< int >(0x1F02)));
  rb_define_const(mGlew, "GL_EXTENSIONS", SWIG_From_int(static_cast< int >(0x1F03)));
  rb_define_const(mGlew, "GL_S", SWIG_From_int(static_cast< int >(0x2000)));
  rb_define_const(mGlew, "GL_T", SWIG_From_int(static_cast< int >(0x2001)));
  rb_define_const(mGlew, "GL_R", SWIG_From_int(static_cast< int >(0x2002)));
  rb_define_const(mGlew, "GL_Q", SWIG_From_int(static_cast< int >(0x2003)));
  rb_define_const(mGlew, "GL_MODULATE", SWIG_From_int(static_cast< int >(0x2100)));
  rb_define_const(mGlew, "GL_DECAL", SWIG_From_int(static_cast< int >(0x2101)));
  rb_define_const(mGlew, "GL_TEXTURE_ENV_MODE", SWIG_From_int(static_cast< int >(0x2200)));
  rb_define_const(mGlew, "GL_TEXTURE_ENV_COLOR", SWIG_From_int(static_cast< int >(0x2201)));
  rb_define_const(mGlew, "GL_TEXTURE_ENV", SWIG_From_int(static_cast< int >(0x2300)));
  rb_define_const(mGlew, "GL_EYE_LINEAR", SWIG_From_int(static_cast< int >(0x2400)));
  rb_define_const(mGlew, "GL_OBJECT_LINEAR", SWIG_From_int(static_cast< int >(0x2401)));
  rb_define_const(mGlew, "GL_SPHERE_MAP", SWIG_From_int(static_cast< int >(0x2402)));
  rb_define_const(mGlew, "GL_TEXTURE_GEN_MODE", SWIG_From_int(static_cast< int >(0x2500)));
  rb_define_const(mGlew, "GL_OBJECT_PLANE", SWIG_From_int(static_cast< int >(0x2501)));
  rb_define_const(mGlew, "GL_EYE_PLANE", SWIG_From_int(static_cast< int >(0x2502)));
  rb_define_const(mGlew, "GL_NEAREST", SWIG_From_int(static_cast< int >(0x2600)));
  rb_define_const(mGlew, "GL_LINEAR", SWIG_From_int(static_cast< int >(0x2601)));
  rb_define_const(mGlew, "GL_NEAREST_MIPMAP_NEAREST", SWIG_From_int(static_cast< int >(0x2700)));
  rb_define_const(mGlew, "GL_LINEAR_MIPMAP_NEAREST", SWIG_From_int(static_cast< int >(0x2701)));
  rb_define_const(mGlew, "GL_NEAREST_MIPMAP_LINEAR", SWIG_From_int(static_cast< int >(0x2702)));
  rb_define_const(mGlew, "GL_LINEAR_MIPMAP_LINEAR", SWIG_From_int(static_cast< int >(0x2703)));
  rb_define_const(mGlew, "GL_TEXTURE_MAG_FILTER", SWIG_From_int(static_cast< int >(0x2800)));
  rb_define_const(mGlew, "GL_TEXTURE_MIN_FILTER", SWIG_From_int(static_cast< int >(0x2801)));
  rb_define_const(mGlew, "GL_TEXTURE_WRAP_S", SWIG_From_int(static_cast< int >(0x2802)));
  rb_define_const(mGlew, "GL_TEXTURE_WRAP_T", SWIG_From_int(static_cast< int >(0x2803)));
  rb_define_const(mGlew, "GL_CLAMP", SWIG_From_int(static_cast< int >(0x2900)));
  rb_define_const(mGlew, "GL_REPEAT", SWIG_From_int(static_cast< int >(0x2901)));
  rb_define_const(mGlew, "GL_CLIENT_PIXEL_STORE_BIT", SWIG_From_int(static_cast< int >(0x00000001)));
  rb_define_const(mGlew, "GL_CLIENT_VERTEX_ARRAY_BIT", SWIG_From_int(static_cast< int >(0x00000002)));
  rb_define_const(mGlew, "GL_CLIENT_ALL_ATTRIB_BITS", SWIG_From_int(static_cast< int >(0xffffffff)));
  rb_define_const(mGlew, "GL_POLYGON_OFFSET_FACTOR", SWIG_From_int(static_cast< int >(0x8038)));
  rb_define_const(mGlew, "GL_POLYGON_OFFSET_UNITS", SWIG_From_int(static_cast< int >(0x2A00)));
  rb_define_const(mGlew, "GL_POLYGON_OFFSET_POINT", SWIG_From_int(static_cast< int >(0x2A01)));
  rb_define_const(mGlew, "GL_POLYGON_OFFSET_LINE", SWIG_From_int(static_cast< int >(0x2A02)));
  rb_define_const(mGlew, "GL_POLYGON_OFFSET_FILL", SWIG_From_int(static_cast< int >(0x8037)));
  rb_define_const(mGlew, "GL_ALPHA4", SWIG_From_int(static_cast< int >(0x803B)));
  rb_define_const(mGlew, "GL_ALPHA8", SWIG_From_int(static_cast< int >(0x803C)));
  rb_define_const(mGlew, "GL_ALPHA12", SWIG_From_int(static_cast< int >(0x803D)));
  rb_define_const(mGlew, "GL_ALPHA16", SWIG_From_int(static_cast< int >(0x803E)));
  rb_define_const(mGlew, "GL_LUMINANCE4", SWIG_From_int(static_cast< int >(0x803F)));
  rb_define_const(mGlew, "GL_LUMINANCE8", SWIG_From_int(static_cast< int >(0x8040)));
  rb_define_const(mGlew, "GL_LUMINANCE12", SWIG_From_int(static_cast< int >(0x8041)));
  rb_define_const(mGlew, "GL_LUMINANCE16", SWIG_From_int(static_cast< int >(0x8042)));
  rb_define_const(mGlew, "GL_LUMINANCE4_ALPHA4", SWIG_From_int(static_cast< int >(0x8043)));
  rb_define_const(mGlew, "GL_LUMINANCE6_ALPHA2", SWIG_From_int(static_cast< int >(0x8044)));
  rb_define_const(mGlew, "GL_LUMINANCE8_ALPHA8", SWIG_From_int(static_cast< int >(0x8045)));
  rb_define_const(mGlew, "GL_LUMINANCE12_ALPHA4", SWIG_From_int(static_cast< int >(0x8046)));
  rb_define_const(mGlew, "GL_LUMINANCE12_ALPHA12", SWIG_From_int(static_cast< int >(0x8047)));
  rb_define_const(mGlew, "GL_LUMINANCE16_ALPHA16", SWIG_From_int(static_cast< int >(0x8048)));
  rb_define_const(mGlew, "GL_INTENSITY", SWIG_From_int(static_cast< int >(0x8049)));
  rb_define_const(mGlew, "GL_INTENSITY4", SWIG_From_int(static_cast< int >(0x804A)));
  rb_define_const(mGlew, "GL_INTENSITY8", SWIG_From_int(static_cast< int >(0x804B)));
  rb_define_const(mGlew, "GL_INTENSITY12", SWIG_From_int(static_cast< int >(0x804C)));
  rb_define_const(mGlew, "GL_INTENSITY16", SWIG_From_int(static_cast< int >(0x804D)));
  rb_define_const(mGlew, "GL_R3_G3_B2", SWIG_From_int(static_cast< int >(0x2A10)));
  rb_define_const(mGlew, "GL_RGB4", SWIG_From_int(static_cast< int >(0x804F)));
  rb_define_const(mGlew, "GL_RGB5", SWIG_From_int(static_cast< int >(0x8050)));
  rb_define_const(mGlew, "GL_RGB8", SWIG_From_int(static_cast< int >(0x8051)));
  rb_define_const(mGlew, "GL_RGB10", SWIG_From_int(static_cast< int >(0x8052)));
  rb_define_const(mGlew, "GL_RGB12", SWIG_From_int(static_cast< int >(0x8053)));
  rb_define_const(mGlew, "GL_RGB16", SWIG_From_int(static_cast< int >(0x8054)));
  rb_define_const(mGlew, "GL_RGBA2", SWIG_From_int(static_cast< int >(0x8055)));
  rb_define_const(mGlew, "GL_RGBA4", SWIG_From_int(static_cast< int >(0x8056)));
  rb_define_const(mGlew, "GL_RGB5_A1", SWIG_From_int(static_cast< int >(0x8057)));
  rb_define_const(mGlew, "GL_RGBA8", SWIG_From_int(static_cast< int >(0x8058)));
  rb_define_const(mGlew, "GL_RGB10_A2", SWIG_From_int(static_cast< int >(0x8059)));
  rb_define_const(mGlew, "GL_RGBA12", SWIG_From_int(static_cast< int >(0x805A)));
  rb_define_const(mGlew, "GL_RGBA16", SWIG_From_int(static_cast< int >(0x805B)));
  rb_define_const(mGlew, "GL_TEXTURE_RED_SIZE", SWIG_From_int(static_cast< int >(0x805C)));
  rb_define_const(mGlew, "GL_TEXTURE_GREEN_SIZE", SWIG_From_int(static_cast< int >(0x805D)));
  rb_define_const(mGlew, "GL_TEXTURE_BLUE_SIZE", SWIG_From_int(static_cast< int >(0x805E)));
  rb_define_const(mGlew, "GL_TEXTURE_ALPHA_SIZE", SWIG_From_int(static_cast< int >(0x805F)));
  rb_define_const(mGlew, "GL_TEXTURE_LUMINANCE_SIZE", SWIG_From_int(static_cast< int >(0x8060)));
  rb_define_const(mGlew, "GL_TEXTURE_INTENSITY_SIZE", SWIG_From_int(static_cast< int >(0x8061)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_1D", SWIG_From_int(static_cast< int >(0x8063)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_2D", SWIG_From_int(static_cast< int >(0x8064)));
  rb_define_const(mGlew, "GL_TEXTURE_PRIORITY", SWIG_From_int(static_cast< int >(0x8066)));
  rb_define_const(mGlew, "GL_TEXTURE_RESIDENT", SWIG_From_int(static_cast< int >(0x8067)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_1D", SWIG_From_int(static_cast< int >(0x8068)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_2D", SWIG_From_int(static_cast< int >(0x8069)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY", SWIG_From_int(static_cast< int >(0x8074)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY", SWIG_From_int(static_cast< int >(0x8075)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY", SWIG_From_int(static_cast< int >(0x8076)));
  rb_define_const(mGlew, "GL_INDEX_ARRAY", SWIG_From_int(static_cast< int >(0x8077)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY", SWIG_From_int(static_cast< int >(0x8078)));
  rb_define_const(mGlew, "GL_EDGE_FLAG_ARRAY", SWIG_From_int(static_cast< int >(0x8079)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_SIZE", SWIG_From_int(static_cast< int >(0x807A)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x807B)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x807C)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x807E)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x807F)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_SIZE", SWIG_From_int(static_cast< int >(0x8081)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x8082)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x8083)));
  rb_define_const(mGlew, "GL_INDEX_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x8085)));
  rb_define_const(mGlew, "GL_INDEX_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x8086)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_SIZE", SWIG_From_int(static_cast< int >(0x8088)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x8089)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x808A)));
  rb_define_const(mGlew, "GL_EDGE_FLAG_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x808C)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x808E)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x808F)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8090)));
  rb_define_const(mGlew, "GL_INDEX_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8091)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8092)));
  rb_define_const(mGlew, "GL_EDGE_FLAG_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8093)));
  rb_define_const(mGlew, "GL_V2F", SWIG_From_int(static_cast< int >(0x2A20)));
  rb_define_const(mGlew, "GL_V3F", SWIG_From_int(static_cast< int >(0x2A21)));
  rb_define_const(mGlew, "GL_C4UB_V2F", SWIG_From_int(static_cast< int >(0x2A22)));
  rb_define_const(mGlew, "GL_C4UB_V3F", SWIG_From_int(static_cast< int >(0x2A23)));
  rb_define_const(mGlew, "GL_C3F_V3F", SWIG_From_int(static_cast< int >(0x2A24)));
  rb_define_const(mGlew, "GL_N3F_V3F", SWIG_From_int(static_cast< int >(0x2A25)));
  rb_define_const(mGlew, "GL_C4F_N3F_V3F", SWIG_From_int(static_cast< int >(0x2A26)));
  rb_define_const(mGlew, "GL_T2F_V3F", SWIG_From_int(static_cast< int >(0x2A27)));
  rb_define_const(mGlew, "GL_T4F_V4F", SWIG_From_int(static_cast< int >(0x2A28)));
  rb_define_const(mGlew, "GL_T2F_C4UB_V3F", SWIG_From_int(static_cast< int >(0x2A29)));
  rb_define_const(mGlew, "GL_T2F_C3F_V3F", SWIG_From_int(static_cast< int >(0x2A2A)));
  rb_define_const(mGlew, "GL_T2F_N3F_V3F", SWIG_From_int(static_cast< int >(0x2A2B)));
  rb_define_const(mGlew, "GL_T2F_C4F_N3F_V3F", SWIG_From_int(static_cast< int >(0x2A2C)));
  rb_define_const(mGlew, "GL_T4F_C4F_N3F_V4F", SWIG_From_int(static_cast< int >(0x2A2D)));
  rb_define_const(mGlew, "GL_LOGIC_OP", SWIG_From_int(static_cast< int >(0x0BF1)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPONENTS", SWIG_From_int(static_cast< int >(0x1003)));
  rb_define_const(mGlew, "GL_COLOR_INDEX1_EXT", SWIG_From_int(static_cast< int >(0x80E2)));
  rb_define_const(mGlew, "GL_COLOR_INDEX2_EXT", SWIG_From_int(static_cast< int >(0x80E3)));
  rb_define_const(mGlew, "GL_COLOR_INDEX4_EXT", SWIG_From_int(static_cast< int >(0x80E4)));
  rb_define_const(mGlew, "GL_COLOR_INDEX8_EXT", SWIG_From_int(static_cast< int >(0x80E5)));
  rb_define_const(mGlew, "GL_COLOR_INDEX12_EXT", SWIG_From_int(static_cast< int >(0x80E6)));
  rb_define_const(mGlew, "GL_COLOR_INDEX16_EXT", SWIG_From_int(static_cast< int >(0x80E7)));
  rb_define_module_function(mGlew, "glAccum", VALUEFUNC(_wrap_glAccum), -1);
  rb_define_module_function(mGlew, "glAlphaFunc", VALUEFUNC(_wrap_glAlphaFunc), -1);
  rb_define_module_function(mGlew, "glAreTexturesResident", VALUEFUNC(_wrap_glAreTexturesResident), -1);
  rb_define_module_function(mGlew, "glArrayElement", VALUEFUNC(_wrap_glArrayElement), -1);
  rb_define_module_function(mGlew, "glBegin", VALUEFUNC(_wrap_glBegin), -1);
  rb_define_module_function(mGlew, "glBindTexture", VALUEFUNC(_wrap_glBindTexture), -1);
  rb_define_module_function(mGlew, "glBitmap", VALUEFUNC(_wrap_glBitmap), -1);
  rb_define_module_function(mGlew, "glBlendFunc", VALUEFUNC(_wrap_glBlendFunc), -1);
  rb_define_module_function(mGlew, "glCallList", VALUEFUNC(_wrap_glCallList), -1);
  rb_define_module_function(mGlew, "glCallLists", VALUEFUNC(_wrap_glCallLists), -1);
  rb_define_module_function(mGlew, "glClear", VALUEFUNC(_wrap_glClear), -1);
  rb_define_module_function(mGlew, "glClearAccum", VALUEFUNC(_wrap_glClearAccum), -1);
  rb_define_module_function(mGlew, "glClearColor", VALUEFUNC(_wrap_glClearColor), -1);
  rb_define_module_function(mGlew, "glClearDepth", VALUEFUNC(_wrap_glClearDepth), -1);
  rb_define_module_function(mGlew, "glClearIndex", VALUEFUNC(_wrap_glClearIndex), -1);
  rb_define_module_function(mGlew, "glClearStencil", VALUEFUNC(_wrap_glClearStencil), -1);
  rb_define_module_function(mGlew, "glClipPlane", VALUEFUNC(_wrap_glClipPlane), -1);
  rb_define_module_function(mGlew, "glColor3b", VALUEFUNC(_wrap_glColor3b), -1);
  rb_define_module_function(mGlew, "glColor3bv", VALUEFUNC(_wrap_glColor3bv), -1);
  rb_define_module_function(mGlew, "glColor3d", VALUEFUNC(_wrap_glColor3d), -1);
  rb_define_module_function(mGlew, "glColor3dv", VALUEFUNC(_wrap_glColor3dv), -1);
  rb_define_module_function(mGlew, "glColor3f", VALUEFUNC(_wrap_glColor3f), -1);
  rb_define_module_function(mGlew, "glColor3fv", VALUEFUNC(_wrap_glColor3fv), -1);
  rb_define_module_function(mGlew, "glColor3i", VALUEFUNC(_wrap_glColor3i), -1);
  rb_define_module_function(mGlew, "glColor3iv", VALUEFUNC(_wrap_glColor3iv), -1);
  rb_define_module_function(mGlew, "glColor3s", VALUEFUNC(_wrap_glColor3s), -1);
  rb_define_module_function(mGlew, "glColor3sv", VALUEFUNC(_wrap_glColor3sv), -1);
  rb_define_module_function(mGlew, "glColor3ub", VALUEFUNC(_wrap_glColor3ub), -1);
  rb_define_module_function(mGlew, "glColor3ubv", VALUEFUNC(_wrap_glColor3ubv), -1);
  rb_define_module_function(mGlew, "glColor3ui", VALUEFUNC(_wrap_glColor3ui), -1);
  rb_define_module_function(mGlew, "glColor3uiv", VALUEFUNC(_wrap_glColor3uiv), -1);
  rb_define_module_function(mGlew, "glColor3us", VALUEFUNC(_wrap_glColor3us), -1);
  rb_define_module_function(mGlew, "glColor3usv", VALUEFUNC(_wrap_glColor3usv), -1);
  rb_define_module_function(mGlew, "glColor4b", VALUEFUNC(_wrap_glColor4b), -1);
  rb_define_module_function(mGlew, "glColor4bv", VALUEFUNC(_wrap_glColor4bv), -1);
  rb_define_module_function(mGlew, "glColor4d", VALUEFUNC(_wrap_glColor4d), -1);
  rb_define_module_function(mGlew, "glColor4dv", VALUEFUNC(_wrap_glColor4dv), -1);
  rb_define_module_function(mGlew, "glColor4f", VALUEFUNC(_wrap_glColor4f), -1);
  rb_define_module_function(mGlew, "glColor4fv", VALUEFUNC(_wrap_glColor4fv), -1);
  rb_define_module_function(mGlew, "glColor4i", VALUEFUNC(_wrap_glColor4i), -1);
  rb_define_module_function(mGlew, "glColor4iv", VALUEFUNC(_wrap_glColor4iv), -1);
  rb_define_module_function(mGlew, "glColor4s", VALUEFUNC(_wrap_glColor4s), -1);
  rb_define_module_function(mGlew, "glColor4sv", VALUEFUNC(_wrap_glColor4sv), -1);
  rb_define_module_function(mGlew, "glColor4ub", VALUEFUNC(_wrap_glColor4ub), -1);
  rb_define_module_function(mGlew, "glColor4ubv", VALUEFUNC(_wrap_glColor4ubv), -1);
  rb_define_module_function(mGlew, "glColor4ui", VALUEFUNC(_wrap_glColor4ui), -1);
  rb_define_module_function(mGlew, "glColor4uiv", VALUEFUNC(_wrap_glColor4uiv), -1);
  rb_define_module_function(mGlew, "glColor4us", VALUEFUNC(_wrap_glColor4us), -1);
  rb_define_module_function(mGlew, "glColor4usv", VALUEFUNC(_wrap_glColor4usv), -1);
  rb_define_module_function(mGlew, "glColorMask", VALUEFUNC(_wrap_glColorMask), -1);
  rb_define_module_function(mGlew, "glColorMaterial", VALUEFUNC(_wrap_glColorMaterial), -1);
  rb_define_module_function(mGlew, "glColorPointer", VALUEFUNC(_wrap_glColorPointer), -1);
  rb_define_module_function(mGlew, "glCopyPixels", VALUEFUNC(_wrap_glCopyPixels), -1);
  rb_define_module_function(mGlew, "glCopyTexImage1D", VALUEFUNC(_wrap_glCopyTexImage1D), -1);
  rb_define_module_function(mGlew, "glCopyTexImage2D", VALUEFUNC(_wrap_glCopyTexImage2D), -1);
  rb_define_module_function(mGlew, "glCopyTexSubImage1D", VALUEFUNC(_wrap_glCopyTexSubImage1D), -1);
  rb_define_module_function(mGlew, "glCopyTexSubImage2D", VALUEFUNC(_wrap_glCopyTexSubImage2D), -1);
  rb_define_module_function(mGlew, "glCullFace", VALUEFUNC(_wrap_glCullFace), -1);
  rb_define_module_function(mGlew, "glDeleteLists", VALUEFUNC(_wrap_glDeleteLists), -1);
  rb_define_module_function(mGlew, "glDeleteTextures", VALUEFUNC(_wrap_glDeleteTextures), -1);
  rb_define_module_function(mGlew, "glDepthFunc", VALUEFUNC(_wrap_glDepthFunc), -1);
  rb_define_module_function(mGlew, "glDepthMask", VALUEFUNC(_wrap_glDepthMask), -1);
  rb_define_module_function(mGlew, "glDepthRange", VALUEFUNC(_wrap_glDepthRange), -1);
  rb_define_module_function(mGlew, "glDisable", VALUEFUNC(_wrap_glDisable), -1);
  rb_define_module_function(mGlew, "glDisableClientState", VALUEFUNC(_wrap_glDisableClientState), -1);
  rb_define_module_function(mGlew, "glDrawArrays", VALUEFUNC(_wrap_glDrawArrays), -1);
  rb_define_module_function(mGlew, "glDrawBuffer", VALUEFUNC(_wrap_glDrawBuffer), -1);
  rb_define_module_function(mGlew, "glDrawElements", VALUEFUNC(_wrap_glDrawElements), -1);
  rb_define_module_function(mGlew, "glDrawPixels", VALUEFUNC(_wrap_glDrawPixels), -1);
  rb_define_module_function(mGlew, "glEdgeFlag", VALUEFUNC(_wrap_glEdgeFlag), -1);
  rb_define_module_function(mGlew, "glEdgeFlagPointer", VALUEFUNC(_wrap_glEdgeFlagPointer), -1);
  rb_define_module_function(mGlew, "glEdgeFlagv", VALUEFUNC(_wrap_glEdgeFlagv), -1);
  rb_define_module_function(mGlew, "glEnable", VALUEFUNC(_wrap_glEnable), -1);
  rb_define_module_function(mGlew, "glEnableClientState", VALUEFUNC(_wrap_glEnableClientState), -1);
  rb_define_module_function(mGlew, "glEnd", VALUEFUNC(_wrap_glEnd), -1);
  rb_define_module_function(mGlew, "glEndList", VALUEFUNC(_wrap_glEndList), -1);
  rb_define_module_function(mGlew, "glEvalCoord1d", VALUEFUNC(_wrap_glEvalCoord1d), -1);
  rb_define_module_function(mGlew, "glEvalCoord1dv", VALUEFUNC(_wrap_glEvalCoord1dv), -1);
  rb_define_module_function(mGlew, "glEvalCoord1f", VALUEFUNC(_wrap_glEvalCoord1f), -1);
  rb_define_module_function(mGlew, "glEvalCoord1fv", VALUEFUNC(_wrap_glEvalCoord1fv), -1);
  rb_define_module_function(mGlew, "glEvalCoord2d", VALUEFUNC(_wrap_glEvalCoord2d), -1);
  rb_define_module_function(mGlew, "glEvalCoord2dv", VALUEFUNC(_wrap_glEvalCoord2dv), -1);
  rb_define_module_function(mGlew, "glEvalCoord2f", VALUEFUNC(_wrap_glEvalCoord2f), -1);
  rb_define_module_function(mGlew, "glEvalCoord2fv", VALUEFUNC(_wrap_glEvalCoord2fv), -1);
  rb_define_module_function(mGlew, "glEvalMesh1", VALUEFUNC(_wrap_glEvalMesh1), -1);
  rb_define_module_function(mGlew, "glEvalMesh2", VALUEFUNC(_wrap_glEvalMesh2), -1);
  rb_define_module_function(mGlew, "glEvalPoint1", VALUEFUNC(_wrap_glEvalPoint1), -1);
  rb_define_module_function(mGlew, "glEvalPoint2", VALUEFUNC(_wrap_glEvalPoint2), -1);
  rb_define_module_function(mGlew, "glFeedbackBuffer", VALUEFUNC(_wrap_glFeedbackBuffer), -1);
  rb_define_module_function(mGlew, "glFinish", VALUEFUNC(_wrap_glFinish), -1);
  rb_define_module_function(mGlew, "glFlush", VALUEFUNC(_wrap_glFlush), -1);
  rb_define_module_function(mGlew, "glFogf", VALUEFUNC(_wrap_glFogf), -1);
  rb_define_module_function(mGlew, "glFogfv", VALUEFUNC(_wrap_glFogfv), -1);
  rb_define_module_function(mGlew, "glFogi", VALUEFUNC(_wrap_glFogi), -1);
  rb_define_module_function(mGlew, "glFogiv", VALUEFUNC(_wrap_glFogiv), -1);
  rb_define_module_function(mGlew, "glFrontFace", VALUEFUNC(_wrap_glFrontFace), -1);
  rb_define_module_function(mGlew, "glFrustum", VALUEFUNC(_wrap_glFrustum), -1);
  rb_define_module_function(mGlew, "glGenLists", VALUEFUNC(_wrap_glGenLists), -1);
  rb_define_module_function(mGlew, "glGenTextures", VALUEFUNC(_wrap_glGenTextures), -1);
  rb_define_module_function(mGlew, "glGetBooleanv", VALUEFUNC(_wrap_glGetBooleanv), -1);
  rb_define_module_function(mGlew, "glGetClipPlane", VALUEFUNC(_wrap_glGetClipPlane), -1);
  rb_define_module_function(mGlew, "glGetDoublev", VALUEFUNC(_wrap_glGetDoublev), -1);
  rb_define_module_function(mGlew, "glGetError", VALUEFUNC(_wrap_glGetError), -1);
  rb_define_module_function(mGlew, "glGetFloatv", VALUEFUNC(_wrap_glGetFloatv), -1);
  rb_define_module_function(mGlew, "glGetIntegerv", VALUEFUNC(_wrap_glGetIntegerv), -1);
  rb_define_module_function(mGlew, "glGetLightfv", VALUEFUNC(_wrap_glGetLightfv), -1);
  rb_define_module_function(mGlew, "glGetLightiv", VALUEFUNC(_wrap_glGetLightiv), -1);
  rb_define_module_function(mGlew, "glGetMapdv", VALUEFUNC(_wrap_glGetMapdv), -1);
  rb_define_module_function(mGlew, "glGetMapfv", VALUEFUNC(_wrap_glGetMapfv), -1);
  rb_define_module_function(mGlew, "glGetMapiv", VALUEFUNC(_wrap_glGetMapiv), -1);
  rb_define_module_function(mGlew, "glGetMaterialfv", VALUEFUNC(_wrap_glGetMaterialfv), -1);
  rb_define_module_function(mGlew, "glGetMaterialiv", VALUEFUNC(_wrap_glGetMaterialiv), -1);
  rb_define_module_function(mGlew, "glGetPixelMapfv", VALUEFUNC(_wrap_glGetPixelMapfv), -1);
  rb_define_module_function(mGlew, "glGetPixelMapuiv", VALUEFUNC(_wrap_glGetPixelMapuiv), -1);
  rb_define_module_function(mGlew, "glGetPixelMapusv", VALUEFUNC(_wrap_glGetPixelMapusv), -1);
  rb_define_module_function(mGlew, "glGetPointerv", VALUEFUNC(_wrap_glGetPointerv), -1);
  rb_define_module_function(mGlew, "glGetPolygonStipple", VALUEFUNC(_wrap_glGetPolygonStipple), -1);
  rb_define_module_function(mGlew, "glGetString", VALUEFUNC(_wrap_glGetString), -1);
  rb_define_module_function(mGlew, "glGetTexEnvfv", VALUEFUNC(_wrap_glGetTexEnvfv), -1);
  rb_define_module_function(mGlew, "glGetTexEnviv", VALUEFUNC(_wrap_glGetTexEnviv), -1);
  rb_define_module_function(mGlew, "glGetTexGendv", VALUEFUNC(_wrap_glGetTexGendv), -1);
  rb_define_module_function(mGlew, "glGetTexGenfv", VALUEFUNC(_wrap_glGetTexGenfv), -1);
  rb_define_module_function(mGlew, "glGetTexGeniv", VALUEFUNC(_wrap_glGetTexGeniv), -1);
  rb_define_module_function(mGlew, "glGetTexImage", VALUEFUNC(_wrap_glGetTexImage), -1);
  rb_define_module_function(mGlew, "glGetTexLevelParameterfv", VALUEFUNC(_wrap_glGetTexLevelParameterfv), -1);
  rb_define_module_function(mGlew, "glGetTexLevelParameteriv", VALUEFUNC(_wrap_glGetTexLevelParameteriv), -1);
  rb_define_module_function(mGlew, "glGetTexParameterfv", VALUEFUNC(_wrap_glGetTexParameterfv), -1);
  rb_define_module_function(mGlew, "glGetTexParameteriv", VALUEFUNC(_wrap_glGetTexParameteriv), -1);
  rb_define_module_function(mGlew, "glHint", VALUEFUNC(_wrap_glHint), -1);
  rb_define_module_function(mGlew, "glIndexMask", VALUEFUNC(_wrap_glIndexMask), -1);
  rb_define_module_function(mGlew, "glIndexPointer", VALUEFUNC(_wrap_glIndexPointer), -1);
  rb_define_module_function(mGlew, "glIndexd", VALUEFUNC(_wrap_glIndexd), -1);
  rb_define_module_function(mGlew, "glIndexdv", VALUEFUNC(_wrap_glIndexdv), -1);
  rb_define_module_function(mGlew, "glIndexf", VALUEFUNC(_wrap_glIndexf), -1);
  rb_define_module_function(mGlew, "glIndexfv", VALUEFUNC(_wrap_glIndexfv), -1);
  rb_define_module_function(mGlew, "glIndexi", VALUEFUNC(_wrap_glIndexi), -1);
  rb_define_module_function(mGlew, "glIndexiv", VALUEFUNC(_wrap_glIndexiv), -1);
  rb_define_module_function(mGlew, "glIndexs", VALUEFUNC(_wrap_glIndexs), -1);
  rb_define_module_function(mGlew, "glIndexsv", VALUEFUNC(_wrap_glIndexsv), -1);
  rb_define_module_function(mGlew, "glIndexub", VALUEFUNC(_wrap_glIndexub), -1);
  rb_define_module_function(mGlew, "glIndexubv", VALUEFUNC(_wrap_glIndexubv), -1);
  rb_define_module_function(mGlew, "glInitNames", VALUEFUNC(_wrap_glInitNames), -1);
  rb_define_module_function(mGlew, "glInterleavedArrays", VALUEFUNC(_wrap_glInterleavedArrays), -1);
  rb_define_module_function(mGlew, "glIsEnabled", VALUEFUNC(_wrap_glIsEnabled), -1);
  rb_define_module_function(mGlew, "glIsList", VALUEFUNC(_wrap_glIsList), -1);
  rb_define_module_function(mGlew, "glIsTexture", VALUEFUNC(_wrap_glIsTexture), -1);
  rb_define_module_function(mGlew, "glLightModelf", VALUEFUNC(_wrap_glLightModelf), -1);
  rb_define_module_function(mGlew, "glLightModelfv", VALUEFUNC(_wrap_glLightModelfv), -1);
  rb_define_module_function(mGlew, "glLightModeli", VALUEFUNC(_wrap_glLightModeli), -1);
  rb_define_module_function(mGlew, "glLightModeliv", VALUEFUNC(_wrap_glLightModeliv), -1);
  rb_define_module_function(mGlew, "glLightf", VALUEFUNC(_wrap_glLightf), -1);
  rb_define_module_function(mGlew, "glLightfv", VALUEFUNC(_wrap_glLightfv), -1);
  rb_define_module_function(mGlew, "glLighti", VALUEFUNC(_wrap_glLighti), -1);
  rb_define_module_function(mGlew, "glLightiv", VALUEFUNC(_wrap_glLightiv), -1);
  rb_define_module_function(mGlew, "glLineStipple", VALUEFUNC(_wrap_glLineStipple), -1);
  rb_define_module_function(mGlew, "glLineWidth", VALUEFUNC(_wrap_glLineWidth), -1);
  rb_define_module_function(mGlew, "glListBase", VALUEFUNC(_wrap_glListBase), -1);
  rb_define_module_function(mGlew, "glLoadIdentity", VALUEFUNC(_wrap_glLoadIdentity), -1);
  rb_define_module_function(mGlew, "glLoadMatrixd", VALUEFUNC(_wrap_glLoadMatrixd), -1);
  rb_define_module_function(mGlew, "glLoadMatrixf", VALUEFUNC(_wrap_glLoadMatrixf), -1);
  rb_define_module_function(mGlew, "glLoadName", VALUEFUNC(_wrap_glLoadName), -1);
  rb_define_module_function(mGlew, "glLogicOp", VALUEFUNC(_wrap_glLogicOp), -1);
  rb_define_module_function(mGlew, "glMap1d", VALUEFUNC(_wrap_glMap1d), -1);
  rb_define_module_function(mGlew, "glMap1f", VALUEFUNC(_wrap_glMap1f), -1);
  rb_define_module_function(mGlew, "glMap2d", VALUEFUNC(_wrap_glMap2d), -1);
  rb_define_module_function(mGlew, "glMap2f", VALUEFUNC(_wrap_glMap2f), -1);
  rb_define_module_function(mGlew, "glMapGrid1d", VALUEFUNC(_wrap_glMapGrid1d), -1);
  rb_define_module_function(mGlew, "glMapGrid1f", VALUEFUNC(_wrap_glMapGrid1f), -1);
  rb_define_module_function(mGlew, "glMapGrid2d", VALUEFUNC(_wrap_glMapGrid2d), -1);
  rb_define_module_function(mGlew, "glMapGrid2f", VALUEFUNC(_wrap_glMapGrid2f), -1);
  rb_define_module_function(mGlew, "glMaterialf", VALUEFUNC(_wrap_glMaterialf), -1);
  rb_define_module_function(mGlew, "glMaterialfv", VALUEFUNC(_wrap_glMaterialfv), -1);
  rb_define_module_function(mGlew, "glMateriali", VALUEFUNC(_wrap_glMateriali), -1);
  rb_define_module_function(mGlew, "glMaterialiv", VALUEFUNC(_wrap_glMaterialiv), -1);
  rb_define_module_function(mGlew, "glMatrixMode", VALUEFUNC(_wrap_glMatrixMode), -1);
  rb_define_module_function(mGlew, "glMultMatrixd", VALUEFUNC(_wrap_glMultMatrixd), -1);
  rb_define_module_function(mGlew, "glMultMatrixf", VALUEFUNC(_wrap_glMultMatrixf), -1);
  rb_define_module_function(mGlew, "glNewList", VALUEFUNC(_wrap_glNewList), -1);
  rb_define_module_function(mGlew, "glNormal3b", VALUEFUNC(_wrap_glNormal3b), -1);
  rb_define_module_function(mGlew, "glNormal3bv", VALUEFUNC(_wrap_glNormal3bv), -1);
  rb_define_module_function(mGlew, "glNormal3d", VALUEFUNC(_wrap_glNormal3d), -1);
  rb_define_module_function(mGlew, "glNormal3dv", VALUEFUNC(_wrap_glNormal3dv), -1);
  rb_define_module_function(mGlew, "glNormal3f", VALUEFUNC(_wrap_glNormal3f), -1);
  rb_define_module_function(mGlew, "glNormal3fv", VALUEFUNC(_wrap_glNormal3fv), -1);
  rb_define_module_function(mGlew, "glNormal3i", VALUEFUNC(_wrap_glNormal3i), -1);
  rb_define_module_function(mGlew, "glNormal3iv", VALUEFUNC(_wrap_glNormal3iv), -1);
  rb_define_module_function(mGlew, "glNormal3s", VALUEFUNC(_wrap_glNormal3s), -1);
  rb_define_module_function(mGlew, "glNormal3sv", VALUEFUNC(_wrap_glNormal3sv), -1);
  rb_define_module_function(mGlew, "glNormalPointer", VALUEFUNC(_wrap_glNormalPointer), -1);
  rb_define_module_function(mGlew, "glOrtho", VALUEFUNC(_wrap_glOrtho), -1);
  rb_define_module_function(mGlew, "glPassThrough", VALUEFUNC(_wrap_glPassThrough), -1);
  rb_define_module_function(mGlew, "glPixelMapfv", VALUEFUNC(_wrap_glPixelMapfv), -1);
  rb_define_module_function(mGlew, "glPixelMapuiv", VALUEFUNC(_wrap_glPixelMapuiv), -1);
  rb_define_module_function(mGlew, "glPixelMapusv", VALUEFUNC(_wrap_glPixelMapusv), -1);
  rb_define_module_function(mGlew, "glPixelStoref", VALUEFUNC(_wrap_glPixelStoref), -1);
  rb_define_module_function(mGlew, "glPixelStorei", VALUEFUNC(_wrap_glPixelStorei), -1);
  rb_define_module_function(mGlew, "glPixelTransferf", VALUEFUNC(_wrap_glPixelTransferf), -1);
  rb_define_module_function(mGlew, "glPixelTransferi", VALUEFUNC(_wrap_glPixelTransferi), -1);
  rb_define_module_function(mGlew, "glPixelZoom", VALUEFUNC(_wrap_glPixelZoom), -1);
  rb_define_module_function(mGlew, "glPointSize", VALUEFUNC(_wrap_glPointSize), -1);
  rb_define_module_function(mGlew, "glPolygonMode", VALUEFUNC(_wrap_glPolygonMode), -1);
  rb_define_module_function(mGlew, "glPolygonOffset", VALUEFUNC(_wrap_glPolygonOffset), -1);
  rb_define_module_function(mGlew, "glPolygonStipple", VALUEFUNC(_wrap_glPolygonStipple), -1);
  rb_define_module_function(mGlew, "glPopAttrib", VALUEFUNC(_wrap_glPopAttrib), -1);
  rb_define_module_function(mGlew, "glPopClientAttrib", VALUEFUNC(_wrap_glPopClientAttrib), -1);
  rb_define_module_function(mGlew, "glPopMatrix", VALUEFUNC(_wrap_glPopMatrix), -1);
  rb_define_module_function(mGlew, "glPopName", VALUEFUNC(_wrap_glPopName), -1);
  rb_define_module_function(mGlew, "glPrioritizeTextures", VALUEFUNC(_wrap_glPrioritizeTextures), -1);
  rb_define_module_function(mGlew, "glPushAttrib", VALUEFUNC(_wrap_glPushAttrib), -1);
  rb_define_module_function(mGlew, "glPushClientAttrib", VALUEFUNC(_wrap_glPushClientAttrib), -1);
  rb_define_module_function(mGlew, "glPushMatrix", VALUEFUNC(_wrap_glPushMatrix), -1);
  rb_define_module_function(mGlew, "glPushName", VALUEFUNC(_wrap_glPushName), -1);
  rb_define_module_function(mGlew, "glRasterPos2d", VALUEFUNC(_wrap_glRasterPos2d), -1);
  rb_define_module_function(mGlew, "glRasterPos2dv", VALUEFUNC(_wrap_glRasterPos2dv), -1);
  rb_define_module_function(mGlew, "glRasterPos2f", VALUEFUNC(_wrap_glRasterPos2f), -1);
  rb_define_module_function(mGlew, "glRasterPos2fv", VALUEFUNC(_wrap_glRasterPos2fv), -1);
  rb_define_module_function(mGlew, "glRasterPos2i", VALUEFUNC(_wrap_glRasterPos2i), -1);
  rb_define_module_function(mGlew, "glRasterPos2iv", VALUEFUNC(_wrap_glRasterPos2iv), -1);
  rb_define_module_function(mGlew, "glRasterPos2s", VALUEFUNC(_wrap_glRasterPos2s), -1);
  rb_define_module_function(mGlew, "glRasterPos2sv", VALUEFUNC(_wrap_glRasterPos2sv), -1);
  rb_define_module_function(mGlew, "glRasterPos3d", VALUEFUNC(_wrap_glRasterPos3d), -1);
  rb_define_module_function(mGlew, "glRasterPos3dv", VALUEFUNC(_wrap_glRasterPos3dv), -1);
  rb_define_module_function(mGlew, "glRasterPos3f", VALUEFUNC(_wrap_glRasterPos3f), -1);
  rb_define_module_function(mGlew, "glRasterPos3fv", VALUEFUNC(_wrap_glRasterPos3fv), -1);
  rb_define_module_function(mGlew, "glRasterPos3i", VALUEFUNC(_wrap_glRasterPos3i), -1);
  rb_define_module_function(mGlew, "glRasterPos3iv", VALUEFUNC(_wrap_glRasterPos3iv), -1);
  rb_define_module_function(mGlew, "glRasterPos3s", VALUEFUNC(_wrap_glRasterPos3s), -1);
  rb_define_module_function(mGlew, "glRasterPos3sv", VALUEFUNC(_wrap_glRasterPos3sv), -1);
  rb_define_module_function(mGlew, "glRasterPos4d", VALUEFUNC(_wrap_glRasterPos4d), -1);
  rb_define_module_function(mGlew, "glRasterPos4dv", VALUEFUNC(_wrap_glRasterPos4dv), -1);
  rb_define_module_function(mGlew, "glRasterPos4f", VALUEFUNC(_wrap_glRasterPos4f), -1);
  rb_define_module_function(mGlew, "glRasterPos4fv", VALUEFUNC(_wrap_glRasterPos4fv), -1);
  rb_define_module_function(mGlew, "glRasterPos4i", VALUEFUNC(_wrap_glRasterPos4i), -1);
  rb_define_module_function(mGlew, "glRasterPos4iv", VALUEFUNC(_wrap_glRasterPos4iv), -1);
  rb_define_module_function(mGlew, "glRasterPos4s", VALUEFUNC(_wrap_glRasterPos4s), -1);
  rb_define_module_function(mGlew, "glRasterPos4sv", VALUEFUNC(_wrap_glRasterPos4sv), -1);
  rb_define_module_function(mGlew, "glReadBuffer", VALUEFUNC(_wrap_glReadBuffer), -1);
  rb_define_module_function(mGlew, "glReadPixels", VALUEFUNC(_wrap_glReadPixels), -1);
  rb_define_module_function(mGlew, "glRectd", VALUEFUNC(_wrap_glRectd), -1);
  rb_define_module_function(mGlew, "glRectdv", VALUEFUNC(_wrap_glRectdv), -1);
  rb_define_module_function(mGlew, "glRectf", VALUEFUNC(_wrap_glRectf), -1);
  rb_define_module_function(mGlew, "glRectfv", VALUEFUNC(_wrap_glRectfv), -1);
  rb_define_module_function(mGlew, "glRecti", VALUEFUNC(_wrap_glRecti), -1);
  rb_define_module_function(mGlew, "glRectiv", VALUEFUNC(_wrap_glRectiv), -1);
  rb_define_module_function(mGlew, "glRects", VALUEFUNC(_wrap_glRects), -1);
  rb_define_module_function(mGlew, "glRectsv", VALUEFUNC(_wrap_glRectsv), -1);
  rb_define_module_function(mGlew, "glRenderMode", VALUEFUNC(_wrap_glRenderMode), -1);
  rb_define_module_function(mGlew, "glRotated", VALUEFUNC(_wrap_glRotated), -1);
  rb_define_module_function(mGlew, "glRotatef", VALUEFUNC(_wrap_glRotatef), -1);
  rb_define_module_function(mGlew, "glScaled", VALUEFUNC(_wrap_glScaled), -1);
  rb_define_module_function(mGlew, "glScalef", VALUEFUNC(_wrap_glScalef), -1);
  rb_define_module_function(mGlew, "glScissor", VALUEFUNC(_wrap_glScissor), -1);
  rb_define_module_function(mGlew, "glSelectBuffer", VALUEFUNC(_wrap_glSelectBuffer), -1);
  rb_define_module_function(mGlew, "glShadeModel", VALUEFUNC(_wrap_glShadeModel), -1);
  rb_define_module_function(mGlew, "glStencilFunc", VALUEFUNC(_wrap_glStencilFunc), -1);
  rb_define_module_function(mGlew, "glStencilMask", VALUEFUNC(_wrap_glStencilMask), -1);
  rb_define_module_function(mGlew, "glStencilOp", VALUEFUNC(_wrap_glStencilOp), -1);
  rb_define_module_function(mGlew, "glTexCoord1d", VALUEFUNC(_wrap_glTexCoord1d), -1);
  rb_define_module_function(mGlew, "glTexCoord1dv", VALUEFUNC(_wrap_glTexCoord1dv), -1);
  rb_define_module_function(mGlew, "glTexCoord1f", VALUEFUNC(_wrap_glTexCoord1f), -1);
  rb_define_module_function(mGlew, "glTexCoord1fv", VALUEFUNC(_wrap_glTexCoord1fv), -1);
  rb_define_module_function(mGlew, "glTexCoord1i", VALUEFUNC(_wrap_glTexCoord1i), -1);
  rb_define_module_function(mGlew, "glTexCoord1iv", VALUEFUNC(_wrap_glTexCoord1iv), -1);
  rb_define_module_function(mGlew, "glTexCoord1s", VALUEFUNC(_wrap_glTexCoord1s), -1);
  rb_define_module_function(mGlew, "glTexCoord1sv", VALUEFUNC(_wrap_glTexCoord1sv), -1);
  rb_define_module_function(mGlew, "glTexCoord2d", VALUEFUNC(_wrap_glTexCoord2d), -1);
  rb_define_module_function(mGlew, "glTexCoord2dv", VALUEFUNC(_wrap_glTexCoord2dv), -1);
  rb_define_module_function(mGlew, "glTexCoord2f", VALUEFUNC(_wrap_glTexCoord2f), -1);
  rb_define_module_function(mGlew, "glTexCoord2fv", VALUEFUNC(_wrap_glTexCoord2fv), -1);
  rb_define_module_function(mGlew, "glTexCoord2i", VALUEFUNC(_wrap_glTexCoord2i), -1);
  rb_define_module_function(mGlew, "glTexCoord2iv", VALUEFUNC(_wrap_glTexCoord2iv), -1);
  rb_define_module_function(mGlew, "glTexCoord2s", VALUEFUNC(_wrap_glTexCoord2s), -1);
  rb_define_module_function(mGlew, "glTexCoord2sv", VALUEFUNC(_wrap_glTexCoord2sv), -1);
  rb_define_module_function(mGlew, "glTexCoord3d", VALUEFUNC(_wrap_glTexCoord3d), -1);
  rb_define_module_function(mGlew, "glTexCoord3dv", VALUEFUNC(_wrap_glTexCoord3dv), -1);
  rb_define_module_function(mGlew, "glTexCoord3f", VALUEFUNC(_wrap_glTexCoord3f), -1);
  rb_define_module_function(mGlew, "glTexCoord3fv", VALUEFUNC(_wrap_glTexCoord3fv), -1);
  rb_define_module_function(mGlew, "glTexCoord3i", VALUEFUNC(_wrap_glTexCoord3i), -1);
  rb_define_module_function(mGlew, "glTexCoord3iv", VALUEFUNC(_wrap_glTexCoord3iv), -1);
  rb_define_module_function(mGlew, "glTexCoord3s", VALUEFUNC(_wrap_glTexCoord3s), -1);
  rb_define_module_function(mGlew, "glTexCoord3sv", VALUEFUNC(_wrap_glTexCoord3sv), -1);
  rb_define_module_function(mGlew, "glTexCoord4d", VALUEFUNC(_wrap_glTexCoord4d), -1);
  rb_define_module_function(mGlew, "glTexCoord4dv", VALUEFUNC(_wrap_glTexCoord4dv), -1);
  rb_define_module_function(mGlew, "glTexCoord4f", VALUEFUNC(_wrap_glTexCoord4f), -1);
  rb_define_module_function(mGlew, "glTexCoord4fv", VALUEFUNC(_wrap_glTexCoord4fv), -1);
  rb_define_module_function(mGlew, "glTexCoord4i", VALUEFUNC(_wrap_glTexCoord4i), -1);
  rb_define_module_function(mGlew, "glTexCoord4iv", VALUEFUNC(_wrap_glTexCoord4iv), -1);
  rb_define_module_function(mGlew, "glTexCoord4s", VALUEFUNC(_wrap_glTexCoord4s), -1);
  rb_define_module_function(mGlew, "glTexCoord4sv", VALUEFUNC(_wrap_glTexCoord4sv), -1);
  rb_define_module_function(mGlew, "glTexCoordPointer", VALUEFUNC(_wrap_glTexCoordPointer), -1);
  rb_define_module_function(mGlew, "glTexEnvf", VALUEFUNC(_wrap_glTexEnvf), -1);
  rb_define_module_function(mGlew, "glTexEnvfv", VALUEFUNC(_wrap_glTexEnvfv), -1);
  rb_define_module_function(mGlew, "glTexEnvi", VALUEFUNC(_wrap_glTexEnvi), -1);
  rb_define_module_function(mGlew, "glTexEnviv", VALUEFUNC(_wrap_glTexEnviv), -1);
  rb_define_module_function(mGlew, "glTexGend", VALUEFUNC(_wrap_glTexGend), -1);
  rb_define_module_function(mGlew, "glTexGendv", VALUEFUNC(_wrap_glTexGendv), -1);
  rb_define_module_function(mGlew, "glTexGenf", VALUEFUNC(_wrap_glTexGenf), -1);
  rb_define_module_function(mGlew, "glTexGenfv", VALUEFUNC(_wrap_glTexGenfv), -1);
  rb_define_module_function(mGlew, "glTexGeni", VALUEFUNC(_wrap_glTexGeni), -1);
  rb_define_module_function(mGlew, "glTexGeniv", VALUEFUNC(_wrap_glTexGeniv), -1);
  rb_define_module_function(mGlew, "glTexImage1D", VALUEFUNC(_wrap_glTexImage1D), -1);
  rb_define_module_function(mGlew, "glTexImage2D", VALUEFUNC(_wrap_glTexImage2D), -1);
  rb_define_module_function(mGlew, "glTexParameterf", VALUEFUNC(_wrap_glTexParameterf), -1);
  rb_define_module_function(mGlew, "glTexParameterfv", VALUEFUNC(_wrap_glTexParameterfv), -1);
  rb_define_module_function(mGlew, "glTexParameteri", VALUEFUNC(_wrap_glTexParameteri), -1);
  rb_define_module_function(mGlew, "glTexParameteriv", VALUEFUNC(_wrap_glTexParameteriv), -1);
  rb_define_module_function(mGlew, "glTexSubImage1D", VALUEFUNC(_wrap_glTexSubImage1D), -1);
  rb_define_module_function(mGlew, "glTexSubImage2D", VALUEFUNC(_wrap_glTexSubImage2D), -1);
  rb_define_module_function(mGlew, "glTranslated", VALUEFUNC(_wrap_glTranslated), -1);
  rb_define_module_function(mGlew, "glTranslatef", VALUEFUNC(_wrap_glTranslatef), -1);
  rb_define_module_function(mGlew, "glVertex2d", VALUEFUNC(_wrap_glVertex2d), -1);
  rb_define_module_function(mGlew, "glVertex2dv", VALUEFUNC(_wrap_glVertex2dv), -1);
  rb_define_module_function(mGlew, "glVertex2f", VALUEFUNC(_wrap_glVertex2f), -1);
  rb_define_module_function(mGlew, "glVertex2fv", VALUEFUNC(_wrap_glVertex2fv), -1);
  rb_define_module_function(mGlew, "glVertex2i", VALUEFUNC(_wrap_glVertex2i), -1);
  rb_define_module_function(mGlew, "glVertex2iv", VALUEFUNC(_wrap_glVertex2iv), -1);
  rb_define_module_function(mGlew, "glVertex2s", VALUEFUNC(_wrap_glVertex2s), -1);
  rb_define_module_function(mGlew, "glVertex2sv", VALUEFUNC(_wrap_glVertex2sv), -1);
  rb_define_module_function(mGlew, "glVertex3d", VALUEFUNC(_wrap_glVertex3d), -1);
  rb_define_module_function(mGlew, "glVertex3dv", VALUEFUNC(_wrap_glVertex3dv), -1);
  rb_define_module_function(mGlew, "glVertex3f", VALUEFUNC(_wrap_glVertex3f), -1);
  rb_define_module_function(mGlew, "glVertex3fv", VALUEFUNC(_wrap_glVertex3fv), -1);
  rb_define_module_function(mGlew, "glVertex3i", VALUEFUNC(_wrap_glVertex3i), -1);
  rb_define_module_function(mGlew, "glVertex3iv", VALUEFUNC(_wrap_glVertex3iv), -1);
  rb_define_module_function(mGlew, "glVertex3s", VALUEFUNC(_wrap_glVertex3s), -1);
  rb_define_module_function(mGlew, "glVertex3sv", VALUEFUNC(_wrap_glVertex3sv), -1);
  rb_define_module_function(mGlew, "glVertex4d", VALUEFUNC(_wrap_glVertex4d), -1);
  rb_define_module_function(mGlew, "glVertex4dv", VALUEFUNC(_wrap_glVertex4dv), -1);
  rb_define_module_function(mGlew, "glVertex4f", VALUEFUNC(_wrap_glVertex4f), -1);
  rb_define_module_function(mGlew, "glVertex4fv", VALUEFUNC(_wrap_glVertex4fv), -1);
  rb_define_module_function(mGlew, "glVertex4i", VALUEFUNC(_wrap_glVertex4i), -1);
  rb_define_module_function(mGlew, "glVertex4iv", VALUEFUNC(_wrap_glVertex4iv), -1);
  rb_define_module_function(mGlew, "glVertex4s", VALUEFUNC(_wrap_glVertex4s), -1);
  rb_define_module_function(mGlew, "glVertex4sv", VALUEFUNC(_wrap_glVertex4sv), -1);
  rb_define_module_function(mGlew, "glVertexPointer", VALUEFUNC(_wrap_glVertexPointer), -1);
  rb_define_module_function(mGlew, "glViewport", VALUEFUNC(_wrap_glViewport), -1);
  rb_define_const(mGlew, "GL_VERSION_1_2", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SMOOTH_POINT_SIZE_RANGE", SWIG_From_int(static_cast< int >(0x0B12)));
  rb_define_const(mGlew, "GL_SMOOTH_POINT_SIZE_GRANULARITY", SWIG_From_int(static_cast< int >(0x0B13)));
  rb_define_const(mGlew, "GL_SMOOTH_LINE_WIDTH_RANGE", SWIG_From_int(static_cast< int >(0x0B22)));
  rb_define_const(mGlew, "GL_SMOOTH_LINE_WIDTH_GRANULARITY", SWIG_From_int(static_cast< int >(0x0B23)));
  rb_define_const(mGlew, "GL_UNSIGNED_BYTE_3_3_2", SWIG_From_int(static_cast< int >(0x8032)));
  rb_define_const(mGlew, "GL_UNSIGNED_SHORT_4_4_4_4", SWIG_From_int(static_cast< int >(0x8033)));
  rb_define_const(mGlew, "GL_UNSIGNED_SHORT_5_5_5_1", SWIG_From_int(static_cast< int >(0x8034)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_8_8_8_8", SWIG_From_int(static_cast< int >(0x8035)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_10_10_10_2", SWIG_From_int(static_cast< int >(0x8036)));
  rb_define_const(mGlew, "GL_RESCALE_NORMAL", SWIG_From_int(static_cast< int >(0x803A)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_3D", SWIG_From_int(static_cast< int >(0x806A)));
  rb_define_const(mGlew, "GL_PACK_SKIP_IMAGES", SWIG_From_int(static_cast< int >(0x806B)));
  rb_define_const(mGlew, "GL_PACK_IMAGE_HEIGHT", SWIG_From_int(static_cast< int >(0x806C)));
  rb_define_const(mGlew, "GL_UNPACK_SKIP_IMAGES", SWIG_From_int(static_cast< int >(0x806D)));
  rb_define_const(mGlew, "GL_UNPACK_IMAGE_HEIGHT", SWIG_From_int(static_cast< int >(0x806E)));
  rb_define_const(mGlew, "GL_TEXTURE_3D", SWIG_From_int(static_cast< int >(0x806F)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_3D", SWIG_From_int(static_cast< int >(0x8070)));
  rb_define_const(mGlew, "GL_TEXTURE_DEPTH", SWIG_From_int(static_cast< int >(0x8071)));
  rb_define_const(mGlew, "GL_TEXTURE_WRAP_R", SWIG_From_int(static_cast< int >(0x8072)));
  rb_define_const(mGlew, "GL_MAX_3D_TEXTURE_SIZE", SWIG_From_int(static_cast< int >(0x8073)));
  rb_define_const(mGlew, "GL_BGR", SWIG_From_int(static_cast< int >(0x80E0)));
  rb_define_const(mGlew, "GL_BGRA", SWIG_From_int(static_cast< int >(0x80E1)));
  rb_define_const(mGlew, "GL_MAX_ELEMENTS_VERTICES", SWIG_From_int(static_cast< int >(0x80E8)));
  rb_define_const(mGlew, "GL_MAX_ELEMENTS_INDICES", SWIG_From_int(static_cast< int >(0x80E9)));
  rb_define_const(mGlew, "GL_CLAMP_TO_EDGE", SWIG_From_int(static_cast< int >(0x812F)));
  rb_define_const(mGlew, "GL_TEXTURE_MIN_LOD", SWIG_From_int(static_cast< int >(0x813A)));
  rb_define_const(mGlew, "GL_TEXTURE_MAX_LOD", SWIG_From_int(static_cast< int >(0x813B)));
  rb_define_const(mGlew, "GL_TEXTURE_BASE_LEVEL", SWIG_From_int(static_cast< int >(0x813C)));
  rb_define_const(mGlew, "GL_TEXTURE_MAX_LEVEL", SWIG_From_int(static_cast< int >(0x813D)));
  rb_define_const(mGlew, "GL_LIGHT_MODEL_COLOR_CONTROL", SWIG_From_int(static_cast< int >(0x81F8)));
  rb_define_const(mGlew, "GL_SINGLE_COLOR", SWIG_From_int(static_cast< int >(0x81F9)));
  rb_define_const(mGlew, "GL_SEPARATE_SPECULAR_COLOR", SWIG_From_int(static_cast< int >(0x81FA)));
  rb_define_const(mGlew, "GL_UNSIGNED_BYTE_2_3_3_REV", SWIG_From_int(static_cast< int >(0x8362)));
  rb_define_const(mGlew, "GL_UNSIGNED_SHORT_5_6_5", SWIG_From_int(static_cast< int >(0x8363)));
  rb_define_const(mGlew, "GL_UNSIGNED_SHORT_5_6_5_REV", SWIG_From_int(static_cast< int >(0x8364)));
  rb_define_const(mGlew, "GL_UNSIGNED_SHORT_4_4_4_4_REV", SWIG_From_int(static_cast< int >(0x8365)));
  rb_define_const(mGlew, "GL_UNSIGNED_SHORT_1_5_5_5_REV", SWIG_From_int(static_cast< int >(0x8366)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_8_8_8_8_REV", SWIG_From_int(static_cast< int >(0x8367)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_2_10_10_10_REV", SWIG_From_int(static_cast< int >(0x8368)));
  rb_define_const(mGlew, "GL_ALIASED_POINT_SIZE_RANGE", SWIG_From_int(static_cast< int >(0x846D)));
  rb_define_const(mGlew, "GL_ALIASED_LINE_WIDTH_RANGE", SWIG_From_int(static_cast< int >(0x846E)));
  rb_define_const(mGlew, "GL_VERSION_1_3", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MULTISAMPLE", SWIG_From_int(static_cast< int >(0x809D)));
  rb_define_const(mGlew, "GL_SAMPLE_ALPHA_TO_COVERAGE", SWIG_From_int(static_cast< int >(0x809E)));
  rb_define_const(mGlew, "GL_SAMPLE_ALPHA_TO_ONE", SWIG_From_int(static_cast< int >(0x809F)));
  rb_define_const(mGlew, "GL_SAMPLE_COVERAGE", SWIG_From_int(static_cast< int >(0x80A0)));
  rb_define_const(mGlew, "GL_SAMPLE_BUFFERS", SWIG_From_int(static_cast< int >(0x80A8)));
  rb_define_const(mGlew, "GL_SAMPLES", SWIG_From_int(static_cast< int >(0x80A9)));
  rb_define_const(mGlew, "GL_SAMPLE_COVERAGE_VALUE", SWIG_From_int(static_cast< int >(0x80AA)));
  rb_define_const(mGlew, "GL_SAMPLE_COVERAGE_INVERT", SWIG_From_int(static_cast< int >(0x80AB)));
  rb_define_const(mGlew, "GL_CLAMP_TO_BORDER", SWIG_From_int(static_cast< int >(0x812D)));
  rb_define_const(mGlew, "GL_TEXTURE0", SWIG_From_int(static_cast< int >(0x84C0)));
  rb_define_const(mGlew, "GL_TEXTURE1", SWIG_From_int(static_cast< int >(0x84C1)));
  rb_define_const(mGlew, "GL_TEXTURE2", SWIG_From_int(static_cast< int >(0x84C2)));
  rb_define_const(mGlew, "GL_TEXTURE3", SWIG_From_int(static_cast< int >(0x84C3)));
  rb_define_const(mGlew, "GL_TEXTURE4", SWIG_From_int(static_cast< int >(0x84C4)));
  rb_define_const(mGlew, "GL_TEXTURE5", SWIG_From_int(static_cast< int >(0x84C5)));
  rb_define_const(mGlew, "GL_TEXTURE6", SWIG_From_int(static_cast< int >(0x84C6)));
  rb_define_const(mGlew, "GL_TEXTURE7", SWIG_From_int(static_cast< int >(0x84C7)));
  rb_define_const(mGlew, "GL_TEXTURE8", SWIG_From_int(static_cast< int >(0x84C8)));
  rb_define_const(mGlew, "GL_TEXTURE9", SWIG_From_int(static_cast< int >(0x84C9)));
  rb_define_const(mGlew, "GL_TEXTURE10", SWIG_From_int(static_cast< int >(0x84CA)));
  rb_define_const(mGlew, "GL_TEXTURE11", SWIG_From_int(static_cast< int >(0x84CB)));
  rb_define_const(mGlew, "GL_TEXTURE12", SWIG_From_int(static_cast< int >(0x84CC)));
  rb_define_const(mGlew, "GL_TEXTURE13", SWIG_From_int(static_cast< int >(0x84CD)));
  rb_define_const(mGlew, "GL_TEXTURE14", SWIG_From_int(static_cast< int >(0x84CE)));
  rb_define_const(mGlew, "GL_TEXTURE15", SWIG_From_int(static_cast< int >(0x84CF)));
  rb_define_const(mGlew, "GL_TEXTURE16", SWIG_From_int(static_cast< int >(0x84D0)));
  rb_define_const(mGlew, "GL_TEXTURE17", SWIG_From_int(static_cast< int >(0x84D1)));
  rb_define_const(mGlew, "GL_TEXTURE18", SWIG_From_int(static_cast< int >(0x84D2)));
  rb_define_const(mGlew, "GL_TEXTURE19", SWIG_From_int(static_cast< int >(0x84D3)));
  rb_define_const(mGlew, "GL_TEXTURE20", SWIG_From_int(static_cast< int >(0x84D4)));
  rb_define_const(mGlew, "GL_TEXTURE21", SWIG_From_int(static_cast< int >(0x84D5)));
  rb_define_const(mGlew, "GL_TEXTURE22", SWIG_From_int(static_cast< int >(0x84D6)));
  rb_define_const(mGlew, "GL_TEXTURE23", SWIG_From_int(static_cast< int >(0x84D7)));
  rb_define_const(mGlew, "GL_TEXTURE24", SWIG_From_int(static_cast< int >(0x84D8)));
  rb_define_const(mGlew, "GL_TEXTURE25", SWIG_From_int(static_cast< int >(0x84D9)));
  rb_define_const(mGlew, "GL_TEXTURE26", SWIG_From_int(static_cast< int >(0x84DA)));
  rb_define_const(mGlew, "GL_TEXTURE27", SWIG_From_int(static_cast< int >(0x84DB)));
  rb_define_const(mGlew, "GL_TEXTURE28", SWIG_From_int(static_cast< int >(0x84DC)));
  rb_define_const(mGlew, "GL_TEXTURE29", SWIG_From_int(static_cast< int >(0x84DD)));
  rb_define_const(mGlew, "GL_TEXTURE30", SWIG_From_int(static_cast< int >(0x84DE)));
  rb_define_const(mGlew, "GL_TEXTURE31", SWIG_From_int(static_cast< int >(0x84DF)));
  rb_define_const(mGlew, "GL_ACTIVE_TEXTURE", SWIG_From_int(static_cast< int >(0x84E0)));
  rb_define_const(mGlew, "GL_CLIENT_ACTIVE_TEXTURE", SWIG_From_int(static_cast< int >(0x84E1)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_UNITS", SWIG_From_int(static_cast< int >(0x84E2)));
  rb_define_const(mGlew, "GL_TRANSPOSE_MODELVIEW_MATRIX", SWIG_From_int(static_cast< int >(0x84E3)));
  rb_define_const(mGlew, "GL_TRANSPOSE_PROJECTION_MATRIX", SWIG_From_int(static_cast< int >(0x84E4)));
  rb_define_const(mGlew, "GL_TRANSPOSE_TEXTURE_MATRIX", SWIG_From_int(static_cast< int >(0x84E5)));
  rb_define_const(mGlew, "GL_TRANSPOSE_COLOR_MATRIX", SWIG_From_int(static_cast< int >(0x84E6)));
  rb_define_const(mGlew, "GL_SUBTRACT", SWIG_From_int(static_cast< int >(0x84E7)));
  rb_define_const(mGlew, "GL_COMPRESSED_ALPHA", SWIG_From_int(static_cast< int >(0x84E9)));
  rb_define_const(mGlew, "GL_COMPRESSED_LUMINANCE", SWIG_From_int(static_cast< int >(0x84EA)));
  rb_define_const(mGlew, "GL_COMPRESSED_LUMINANCE_ALPHA", SWIG_From_int(static_cast< int >(0x84EB)));
  rb_define_const(mGlew, "GL_COMPRESSED_INTENSITY", SWIG_From_int(static_cast< int >(0x84EC)));
  rb_define_const(mGlew, "GL_COMPRESSED_RGB", SWIG_From_int(static_cast< int >(0x84ED)));
  rb_define_const(mGlew, "GL_COMPRESSED_RGBA", SWIG_From_int(static_cast< int >(0x84EE)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPRESSION_HINT", SWIG_From_int(static_cast< int >(0x84EF)));
  rb_define_const(mGlew, "GL_NORMAL_MAP", SWIG_From_int(static_cast< int >(0x8511)));
  rb_define_const(mGlew, "GL_REFLECTION_MAP", SWIG_From_int(static_cast< int >(0x8512)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP", SWIG_From_int(static_cast< int >(0x8513)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_CUBE_MAP", SWIG_From_int(static_cast< int >(0x8514)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_POSITIVE_X", SWIG_From_int(static_cast< int >(0x8515)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X", SWIG_From_int(static_cast< int >(0x8516)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y", SWIG_From_int(static_cast< int >(0x8517)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y", SWIG_From_int(static_cast< int >(0x8518)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z", SWIG_From_int(static_cast< int >(0x8519)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z", SWIG_From_int(static_cast< int >(0x851A)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_CUBE_MAP", SWIG_From_int(static_cast< int >(0x851B)));
  rb_define_const(mGlew, "GL_MAX_CUBE_MAP_TEXTURE_SIZE", SWIG_From_int(static_cast< int >(0x851C)));
  rb_define_const(mGlew, "GL_COMBINE", SWIG_From_int(static_cast< int >(0x8570)));
  rb_define_const(mGlew, "GL_COMBINE_RGB", SWIG_From_int(static_cast< int >(0x8571)));
  rb_define_const(mGlew, "GL_COMBINE_ALPHA", SWIG_From_int(static_cast< int >(0x8572)));
  rb_define_const(mGlew, "GL_RGB_SCALE", SWIG_From_int(static_cast< int >(0x8573)));
  rb_define_const(mGlew, "GL_ADD_SIGNED", SWIG_From_int(static_cast< int >(0x8574)));
  rb_define_const(mGlew, "GL_INTERPOLATE", SWIG_From_int(static_cast< int >(0x8575)));
  rb_define_const(mGlew, "GL_CONSTANT", SWIG_From_int(static_cast< int >(0x8576)));
  rb_define_const(mGlew, "GL_PRIMARY_COLOR", SWIG_From_int(static_cast< int >(0x8577)));
  rb_define_const(mGlew, "GL_PREVIOUS", SWIG_From_int(static_cast< int >(0x8578)));
  rb_define_const(mGlew, "GL_SOURCE0_RGB", SWIG_From_int(static_cast< int >(0x8580)));
  rb_define_const(mGlew, "GL_SOURCE1_RGB", SWIG_From_int(static_cast< int >(0x8581)));
  rb_define_const(mGlew, "GL_SOURCE2_RGB", SWIG_From_int(static_cast< int >(0x8582)));
  rb_define_const(mGlew, "GL_SOURCE0_ALPHA", SWIG_From_int(static_cast< int >(0x8588)));
  rb_define_const(mGlew, "GL_SOURCE1_ALPHA", SWIG_From_int(static_cast< int >(0x8589)));
  rb_define_const(mGlew, "GL_SOURCE2_ALPHA", SWIG_From_int(static_cast< int >(0x858A)));
  rb_define_const(mGlew, "GL_OPERAND0_RGB", SWIG_From_int(static_cast< int >(0x8590)));
  rb_define_const(mGlew, "GL_OPERAND1_RGB", SWIG_From_int(static_cast< int >(0x8591)));
  rb_define_const(mGlew, "GL_OPERAND2_RGB", SWIG_From_int(static_cast< int >(0x8592)));
  rb_define_const(mGlew, "GL_OPERAND0_ALPHA", SWIG_From_int(static_cast< int >(0x8598)));
  rb_define_const(mGlew, "GL_OPERAND1_ALPHA", SWIG_From_int(static_cast< int >(0x8599)));
  rb_define_const(mGlew, "GL_OPERAND2_ALPHA", SWIG_From_int(static_cast< int >(0x859A)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPRESSED_IMAGE_SIZE", SWIG_From_int(static_cast< int >(0x86A0)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPRESSED", SWIG_From_int(static_cast< int >(0x86A1)));
  rb_define_const(mGlew, "GL_NUM_COMPRESSED_TEXTURE_FORMATS", SWIG_From_int(static_cast< int >(0x86A2)));
  rb_define_const(mGlew, "GL_COMPRESSED_TEXTURE_FORMATS", SWIG_From_int(static_cast< int >(0x86A3)));
  rb_define_const(mGlew, "GL_DOT3_RGB", SWIG_From_int(static_cast< int >(0x86AE)));
  rb_define_const(mGlew, "GL_DOT3_RGBA", SWIG_From_int(static_cast< int >(0x86AF)));
  rb_define_const(mGlew, "GL_MULTISAMPLE_BIT", SWIG_From_int(static_cast< int >(0x20000000)));
  rb_define_const(mGlew, "GL_VERSION_1_4", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_BLEND_DST_RGB", SWIG_From_int(static_cast< int >(0x80C8)));
  rb_define_const(mGlew, "GL_BLEND_SRC_RGB", SWIG_From_int(static_cast< int >(0x80C9)));
  rb_define_const(mGlew, "GL_BLEND_DST_ALPHA", SWIG_From_int(static_cast< int >(0x80CA)));
  rb_define_const(mGlew, "GL_BLEND_SRC_ALPHA", SWIG_From_int(static_cast< int >(0x80CB)));
  rb_define_const(mGlew, "GL_POINT_SIZE_MIN", SWIG_From_int(static_cast< int >(0x8126)));
  rb_define_const(mGlew, "GL_POINT_SIZE_MAX", SWIG_From_int(static_cast< int >(0x8127)));
  rb_define_const(mGlew, "GL_POINT_FADE_THRESHOLD_SIZE", SWIG_From_int(static_cast< int >(0x8128)));
  rb_define_const(mGlew, "GL_POINT_DISTANCE_ATTENUATION", SWIG_From_int(static_cast< int >(0x8129)));
  rb_define_const(mGlew, "GL_GENERATE_MIPMAP", SWIG_From_int(static_cast< int >(0x8191)));
  rb_define_const(mGlew, "GL_GENERATE_MIPMAP_HINT", SWIG_From_int(static_cast< int >(0x8192)));
  rb_define_const(mGlew, "GL_DEPTH_COMPONENT16", SWIG_From_int(static_cast< int >(0x81A5)));
  rb_define_const(mGlew, "GL_DEPTH_COMPONENT24", SWIG_From_int(static_cast< int >(0x81A6)));
  rb_define_const(mGlew, "GL_DEPTH_COMPONENT32", SWIG_From_int(static_cast< int >(0x81A7)));
  rb_define_const(mGlew, "GL_MIRRORED_REPEAT", SWIG_From_int(static_cast< int >(0x8370)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_SOURCE", SWIG_From_int(static_cast< int >(0x8450)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE", SWIG_From_int(static_cast< int >(0x8451)));
  rb_define_const(mGlew, "GL_FRAGMENT_DEPTH", SWIG_From_int(static_cast< int >(0x8452)));
  rb_define_const(mGlew, "GL_CURRENT_FOG_COORDINATE", SWIG_From_int(static_cast< int >(0x8453)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x8454)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x8455)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8456)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_ARRAY", SWIG_From_int(static_cast< int >(0x8457)));
  rb_define_const(mGlew, "GL_COLOR_SUM", SWIG_From_int(static_cast< int >(0x8458)));
  rb_define_const(mGlew, "GL_CURRENT_SECONDARY_COLOR", SWIG_From_int(static_cast< int >(0x8459)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY_SIZE", SWIG_From_int(static_cast< int >(0x845A)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x845B)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x845C)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x845D)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY", SWIG_From_int(static_cast< int >(0x845E)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_LOD_BIAS", SWIG_From_int(static_cast< int >(0x84FD)));
  rb_define_const(mGlew, "GL_TEXTURE_FILTER_CONTROL", SWIG_From_int(static_cast< int >(0x8500)));
  rb_define_const(mGlew, "GL_TEXTURE_LOD_BIAS", SWIG_From_int(static_cast< int >(0x8501)));
  rb_define_const(mGlew, "GL_INCR_WRAP", SWIG_From_int(static_cast< int >(0x8507)));
  rb_define_const(mGlew, "GL_DECR_WRAP", SWIG_From_int(static_cast< int >(0x8508)));
  rb_define_const(mGlew, "GL_TEXTURE_DEPTH_SIZE", SWIG_From_int(static_cast< int >(0x884A)));
  rb_define_const(mGlew, "GL_DEPTH_TEXTURE_MODE", SWIG_From_int(static_cast< int >(0x884B)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPARE_MODE", SWIG_From_int(static_cast< int >(0x884C)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPARE_FUNC", SWIG_From_int(static_cast< int >(0x884D)));
  rb_define_const(mGlew, "GL_COMPARE_R_TO_TEXTURE", SWIG_From_int(static_cast< int >(0x884E)));
  rb_define_const(mGlew, "GL_VERSION_1_5", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FOG_COORD_SRC", SWIG_From_int(static_cast< int >(0x8450)));
  rb_define_const(mGlew, "GL_FOG_COORD", SWIG_From_int(static_cast< int >(0x8451)));
  rb_define_const(mGlew, "GL_FOG_COORD_ARRAY", SWIG_From_int(static_cast< int >(0x8457)));
  rb_define_const(mGlew, "GL_SRC0_RGB", SWIG_From_int(static_cast< int >(0x8580)));
  rb_define_const(mGlew, "GL_FOG_COORD_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8456)));
  rb_define_const(mGlew, "GL_FOG_COORD_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x8454)));
  rb_define_const(mGlew, "GL_SRC1_ALPHA", SWIG_From_int(static_cast< int >(0x8589)));
  rb_define_const(mGlew, "GL_CURRENT_FOG_COORD", SWIG_From_int(static_cast< int >(0x8453)));
  rb_define_const(mGlew, "GL_FOG_COORD_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x8455)));
  rb_define_const(mGlew, "GL_SRC0_ALPHA", SWIG_From_int(static_cast< int >(0x8588)));
  rb_define_const(mGlew, "GL_SRC1_RGB", SWIG_From_int(static_cast< int >(0x8581)));
  rb_define_const(mGlew, "GL_SRC2_ALPHA", SWIG_From_int(static_cast< int >(0x858A)));
  rb_define_const(mGlew, "GL_SRC2_RGB", SWIG_From_int(static_cast< int >(0x8582)));
  rb_define_const(mGlew, "GL_BUFFER_SIZE", SWIG_From_int(static_cast< int >(0x8764)));
  rb_define_const(mGlew, "GL_BUFFER_USAGE", SWIG_From_int(static_cast< int >(0x8765)));
  rb_define_const(mGlew, "GL_QUERY_COUNTER_BITS", SWIG_From_int(static_cast< int >(0x8864)));
  rb_define_const(mGlew, "GL_CURRENT_QUERY", SWIG_From_int(static_cast< int >(0x8865)));
  rb_define_const(mGlew, "GL_QUERY_RESULT", SWIG_From_int(static_cast< int >(0x8866)));
  rb_define_const(mGlew, "GL_QUERY_RESULT_AVAILABLE", SWIG_From_int(static_cast< int >(0x8867)));
  rb_define_const(mGlew, "GL_ARRAY_BUFFER", SWIG_From_int(static_cast< int >(0x8892)));
  rb_define_const(mGlew, "GL_ELEMENT_ARRAY_BUFFER", SWIG_From_int(static_cast< int >(0x8893)));
  rb_define_const(mGlew, "GL_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8894)));
  rb_define_const(mGlew, "GL_ELEMENT_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8895)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8896)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8897)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8898)));
  rb_define_const(mGlew, "GL_INDEX_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8899)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x889A)));
  rb_define_const(mGlew, "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x889B)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x889C)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x889D)));
  rb_define_const(mGlew, "GL_WEIGHT_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x889E)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x889F)));
  rb_define_const(mGlew, "GL_READ_ONLY", SWIG_From_int(static_cast< int >(0x88B8)));
  rb_define_const(mGlew, "GL_WRITE_ONLY", SWIG_From_int(static_cast< int >(0x88B9)));
  rb_define_const(mGlew, "GL_READ_WRITE", SWIG_From_int(static_cast< int >(0x88BA)));
  rb_define_const(mGlew, "GL_BUFFER_ACCESS", SWIG_From_int(static_cast< int >(0x88BB)));
  rb_define_const(mGlew, "GL_BUFFER_MAPPED", SWIG_From_int(static_cast< int >(0x88BC)));
  rb_define_const(mGlew, "GL_BUFFER_MAP_POINTER", SWIG_From_int(static_cast< int >(0x88BD)));
  rb_define_const(mGlew, "GL_STREAM_DRAW", SWIG_From_int(static_cast< int >(0x88E0)));
  rb_define_const(mGlew, "GL_STREAM_READ", SWIG_From_int(static_cast< int >(0x88E1)));
  rb_define_const(mGlew, "GL_STREAM_COPY", SWIG_From_int(static_cast< int >(0x88E2)));
  rb_define_const(mGlew, "GL_STATIC_DRAW", SWIG_From_int(static_cast< int >(0x88E4)));
  rb_define_const(mGlew, "GL_STATIC_READ", SWIG_From_int(static_cast< int >(0x88E5)));
  rb_define_const(mGlew, "GL_STATIC_COPY", SWIG_From_int(static_cast< int >(0x88E6)));
  rb_define_const(mGlew, "GL_DYNAMIC_DRAW", SWIG_From_int(static_cast< int >(0x88E8)));
  rb_define_const(mGlew, "GL_DYNAMIC_READ", SWIG_From_int(static_cast< int >(0x88E9)));
  rb_define_const(mGlew, "GL_DYNAMIC_COPY", SWIG_From_int(static_cast< int >(0x88EA)));
  rb_define_const(mGlew, "GL_SAMPLES_PASSED", SWIG_From_int(static_cast< int >(0x8914)));
  rb_define_const(mGlew, "GL_VERSION_2_0", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_ENABLED", SWIG_From_int(static_cast< int >(0x8622)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_SIZE", SWIG_From_int(static_cast< int >(0x8623)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x8624)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x8625)));
  rb_define_const(mGlew, "GL_CURRENT_VERTEX_ATTRIB", SWIG_From_int(static_cast< int >(0x8626)));
  rb_define_const(mGlew, "GL_VERTEX_PROGRAM_POINT_SIZE", SWIG_From_int(static_cast< int >(0x8642)));
  rb_define_const(mGlew, "GL_VERTEX_PROGRAM_TWO_SIDE", SWIG_From_int(static_cast< int >(0x8643)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8645)));
  rb_define_const(mGlew, "GL_STENCIL_BACK_FUNC", SWIG_From_int(static_cast< int >(0x8800)));
  rb_define_const(mGlew, "GL_STENCIL_BACK_FAIL", SWIG_From_int(static_cast< int >(0x8801)));
  rb_define_const(mGlew, "GL_STENCIL_BACK_PASS_DEPTH_FAIL", SWIG_From_int(static_cast< int >(0x8802)));
  rb_define_const(mGlew, "GL_STENCIL_BACK_PASS_DEPTH_PASS", SWIG_From_int(static_cast< int >(0x8803)));
  rb_define_const(mGlew, "GL_MAX_DRAW_BUFFERS", SWIG_From_int(static_cast< int >(0x8824)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER0", SWIG_From_int(static_cast< int >(0x8825)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER1", SWIG_From_int(static_cast< int >(0x8826)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER2", SWIG_From_int(static_cast< int >(0x8827)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER3", SWIG_From_int(static_cast< int >(0x8828)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER4", SWIG_From_int(static_cast< int >(0x8829)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER5", SWIG_From_int(static_cast< int >(0x882A)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER6", SWIG_From_int(static_cast< int >(0x882B)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER7", SWIG_From_int(static_cast< int >(0x882C)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER8", SWIG_From_int(static_cast< int >(0x882D)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER9", SWIG_From_int(static_cast< int >(0x882E)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER10", SWIG_From_int(static_cast< int >(0x882F)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER11", SWIG_From_int(static_cast< int >(0x8830)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER12", SWIG_From_int(static_cast< int >(0x8831)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER13", SWIG_From_int(static_cast< int >(0x8832)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER14", SWIG_From_int(static_cast< int >(0x8833)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER15", SWIG_From_int(static_cast< int >(0x8834)));
  rb_define_const(mGlew, "GL_BLEND_EQUATION_ALPHA", SWIG_From_int(static_cast< int >(0x883D)));
  rb_define_const(mGlew, "GL_POINT_SPRITE", SWIG_From_int(static_cast< int >(0x8861)));
  rb_define_const(mGlew, "GL_COORD_REPLACE", SWIG_From_int(static_cast< int >(0x8862)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_ATTRIBS", SWIG_From_int(static_cast< int >(0x8869)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED", SWIG_From_int(static_cast< int >(0x886A)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_COORDS", SWIG_From_int(static_cast< int >(0x8871)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_IMAGE_UNITS", SWIG_From_int(static_cast< int >(0x8872)));
  rb_define_const(mGlew, "GL_FRAGMENT_SHADER", SWIG_From_int(static_cast< int >(0x8B30)));
  rb_define_const(mGlew, "GL_VERTEX_SHADER", SWIG_From_int(static_cast< int >(0x8B31)));
  rb_define_const(mGlew, "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS", SWIG_From_int(static_cast< int >(0x8B49)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_UNIFORM_COMPONENTS", SWIG_From_int(static_cast< int >(0x8B4A)));
  rb_define_const(mGlew, "GL_MAX_VARYING_FLOATS", SWIG_From_int(static_cast< int >(0x8B4B)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS", SWIG_From_int(static_cast< int >(0x8B4C)));
  rb_define_const(mGlew, "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS", SWIG_From_int(static_cast< int >(0x8B4D)));
  rb_define_const(mGlew, "GL_SHADER_TYPE", SWIG_From_int(static_cast< int >(0x8B4F)));
  rb_define_const(mGlew, "GL_FLOAT_VEC2", SWIG_From_int(static_cast< int >(0x8B50)));
  rb_define_const(mGlew, "GL_FLOAT_VEC3", SWIG_From_int(static_cast< int >(0x8B51)));
  rb_define_const(mGlew, "GL_FLOAT_VEC4", SWIG_From_int(static_cast< int >(0x8B52)));
  rb_define_const(mGlew, "GL_INT_VEC2", SWIG_From_int(static_cast< int >(0x8B53)));
  rb_define_const(mGlew, "GL_INT_VEC3", SWIG_From_int(static_cast< int >(0x8B54)));
  rb_define_const(mGlew, "GL_INT_VEC4", SWIG_From_int(static_cast< int >(0x8B55)));
  rb_define_const(mGlew, "GL_BOOL", SWIG_From_int(static_cast< int >(0x8B56)));
  rb_define_const(mGlew, "GL_BOOL_VEC2", SWIG_From_int(static_cast< int >(0x8B57)));
  rb_define_const(mGlew, "GL_BOOL_VEC3", SWIG_From_int(static_cast< int >(0x8B58)));
  rb_define_const(mGlew, "GL_BOOL_VEC4", SWIG_From_int(static_cast< int >(0x8B59)));
  rb_define_const(mGlew, "GL_FLOAT_MAT2", SWIG_From_int(static_cast< int >(0x8B5A)));
  rb_define_const(mGlew, "GL_FLOAT_MAT3", SWIG_From_int(static_cast< int >(0x8B5B)));
  rb_define_const(mGlew, "GL_FLOAT_MAT4", SWIG_From_int(static_cast< int >(0x8B5C)));
  rb_define_const(mGlew, "GL_SAMPLER_1D", SWIG_From_int(static_cast< int >(0x8B5D)));
  rb_define_const(mGlew, "GL_SAMPLER_2D", SWIG_From_int(static_cast< int >(0x8B5E)));
  rb_define_const(mGlew, "GL_SAMPLER_3D", SWIG_From_int(static_cast< int >(0x8B5F)));
  rb_define_const(mGlew, "GL_SAMPLER_CUBE", SWIG_From_int(static_cast< int >(0x8B60)));
  rb_define_const(mGlew, "GL_SAMPLER_1D_SHADOW", SWIG_From_int(static_cast< int >(0x8B61)));
  rb_define_const(mGlew, "GL_SAMPLER_2D_SHADOW", SWIG_From_int(static_cast< int >(0x8B62)));
  rb_define_const(mGlew, "GL_DELETE_STATUS", SWIG_From_int(static_cast< int >(0x8B80)));
  rb_define_const(mGlew, "GL_COMPILE_STATUS", SWIG_From_int(static_cast< int >(0x8B81)));
  rb_define_const(mGlew, "GL_LINK_STATUS", SWIG_From_int(static_cast< int >(0x8B82)));
  rb_define_const(mGlew, "GL_VALIDATE_STATUS", SWIG_From_int(static_cast< int >(0x8B83)));
  rb_define_const(mGlew, "GL_INFO_LOG_LENGTH", SWIG_From_int(static_cast< int >(0x8B84)));
  rb_define_const(mGlew, "GL_ATTACHED_SHADERS", SWIG_From_int(static_cast< int >(0x8B85)));
  rb_define_const(mGlew, "GL_ACTIVE_UNIFORMS", SWIG_From_int(static_cast< int >(0x8B86)));
  rb_define_const(mGlew, "GL_ACTIVE_UNIFORM_MAX_LENGTH", SWIG_From_int(static_cast< int >(0x8B87)));
  rb_define_const(mGlew, "GL_SHADER_SOURCE_LENGTH", SWIG_From_int(static_cast< int >(0x8B88)));
  rb_define_const(mGlew, "GL_ACTIVE_ATTRIBUTES", SWIG_From_int(static_cast< int >(0x8B89)));
  rb_define_const(mGlew, "GL_ACTIVE_ATTRIBUTE_MAX_LENGTH", SWIG_From_int(static_cast< int >(0x8B8A)));
  rb_define_const(mGlew, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT", SWIG_From_int(static_cast< int >(0x8B8B)));
  rb_define_const(mGlew, "GL_SHADING_LANGUAGE_VERSION", SWIG_From_int(static_cast< int >(0x8B8C)));
  rb_define_const(mGlew, "GL_CURRENT_PROGRAM", SWIG_From_int(static_cast< int >(0x8B8D)));
  rb_define_const(mGlew, "GL_POINT_SPRITE_COORD_ORIGIN", SWIG_From_int(static_cast< int >(0x8CA0)));
  rb_define_const(mGlew, "GL_LOWER_LEFT", SWIG_From_int(static_cast< int >(0x8CA1)));
  rb_define_const(mGlew, "GL_UPPER_LEFT", SWIG_From_int(static_cast< int >(0x8CA2)));
  rb_define_const(mGlew, "GL_STENCIL_BACK_REF", SWIG_From_int(static_cast< int >(0x8CA3)));
  rb_define_const(mGlew, "GL_STENCIL_BACK_VALUE_MASK", SWIG_From_int(static_cast< int >(0x8CA4)));
  rb_define_const(mGlew, "GL_STENCIL_BACK_WRITEMASK", SWIG_From_int(static_cast< int >(0x8CA5)));
  rb_define_const(mGlew, "GL_VERSION_2_1", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_CURRENT_RASTER_SECONDARY_COLOR", SWIG_From_int(static_cast< int >(0x845F)));
  rb_define_const(mGlew, "GL_PIXEL_PACK_BUFFER", SWIG_From_int(static_cast< int >(0x88EB)));
  rb_define_const(mGlew, "GL_PIXEL_UNPACK_BUFFER", SWIG_From_int(static_cast< int >(0x88EC)));
  rb_define_const(mGlew, "GL_PIXEL_PACK_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x88ED)));
  rb_define_const(mGlew, "GL_PIXEL_UNPACK_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x88EF)));
  rb_define_const(mGlew, "GL_FLOAT_MAT2x3", SWIG_From_int(static_cast< int >(0x8B65)));
  rb_define_const(mGlew, "GL_FLOAT_MAT2x4", SWIG_From_int(static_cast< int >(0x8B66)));
  rb_define_const(mGlew, "GL_FLOAT_MAT3x2", SWIG_From_int(static_cast< int >(0x8B67)));
  rb_define_const(mGlew, "GL_FLOAT_MAT3x4", SWIG_From_int(static_cast< int >(0x8B68)));
  rb_define_const(mGlew, "GL_FLOAT_MAT4x2", SWIG_From_int(static_cast< int >(0x8B69)));
  rb_define_const(mGlew, "GL_FLOAT_MAT4x3", SWIG_From_int(static_cast< int >(0x8B6A)));
  rb_define_const(mGlew, "GL_SRGB", SWIG_From_int(static_cast< int >(0x8C40)));
  rb_define_const(mGlew, "GL_SRGB8", SWIG_From_int(static_cast< int >(0x8C41)));
  rb_define_const(mGlew, "GL_SRGB_ALPHA", SWIG_From_int(static_cast< int >(0x8C42)));
  rb_define_const(mGlew, "GL_SRGB8_ALPHA8", SWIG_From_int(static_cast< int >(0x8C43)));
  rb_define_const(mGlew, "GL_SLUMINANCE_ALPHA", SWIG_From_int(static_cast< int >(0x8C44)));
  rb_define_const(mGlew, "GL_SLUMINANCE8_ALPHA8", SWIG_From_int(static_cast< int >(0x8C45)));
  rb_define_const(mGlew, "GL_SLUMINANCE", SWIG_From_int(static_cast< int >(0x8C46)));
  rb_define_const(mGlew, "GL_SLUMINANCE8", SWIG_From_int(static_cast< int >(0x8C47)));
  rb_define_const(mGlew, "GL_COMPRESSED_SRGB", SWIG_From_int(static_cast< int >(0x8C48)));
  rb_define_const(mGlew, "GL_COMPRESSED_SRGB_ALPHA", SWIG_From_int(static_cast< int >(0x8C49)));
  rb_define_const(mGlew, "GL_COMPRESSED_SLUMINANCE", SWIG_From_int(static_cast< int >(0x8C4A)));
  rb_define_const(mGlew, "GL_COMPRESSED_SLUMINANCE_ALPHA", SWIG_From_int(static_cast< int >(0x8C4B)));
  rb_define_const(mGlew, "GL_VERSION_3_0", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MAX_CLIP_DISTANCES", SWIG_From_int(static_cast< int >(0x0D32)));
  rb_define_const(mGlew, "GL_CLIP_DISTANCE5", SWIG_From_int(static_cast< int >(0x3005)));
  rb_define_const(mGlew, "GL_CLIP_DISTANCE1", SWIG_From_int(static_cast< int >(0x3001)));
  rb_define_const(mGlew, "GL_CLIP_DISTANCE3", SWIG_From_int(static_cast< int >(0x3003)));
  rb_define_const(mGlew, "GL_CLIP_DISTANCE0", SWIG_From_int(static_cast< int >(0x3000)));
  rb_define_const(mGlew, "GL_CLIP_DISTANCE4", SWIG_From_int(static_cast< int >(0x3004)));
  rb_define_const(mGlew, "GL_CLIP_DISTANCE2", SWIG_From_int(static_cast< int >(0x3002)));
  rb_define_const(mGlew, "GL_MAX_VARYING_COMPONENTS", SWIG_From_int(static_cast< int >(0x8B4B)));
  rb_define_const(mGlew, "GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT", SWIG_From_int(static_cast< int >(0x0001)));
  rb_define_const(mGlew, "GL_MAJOR_VERSION", SWIG_From_int(static_cast< int >(0x821B)));
  rb_define_const(mGlew, "GL_MINOR_VERSION", SWIG_From_int(static_cast< int >(0x821C)));
  rb_define_const(mGlew, "GL_NUM_EXTENSIONS", SWIG_From_int(static_cast< int >(0x821D)));
  rb_define_const(mGlew, "GL_CONTEXT_FLAGS", SWIG_From_int(static_cast< int >(0x821E)));
  rb_define_const(mGlew, "GL_DEPTH_BUFFER", SWIG_From_int(static_cast< int >(0x8223)));
  rb_define_const(mGlew, "GL_STENCIL_BUFFER", SWIG_From_int(static_cast< int >(0x8224)));
  rb_define_const(mGlew, "GL_COMPRESSED_RED", SWIG_From_int(static_cast< int >(0x8225)));
  rb_define_const(mGlew, "GL_COMPRESSED_RG", SWIG_From_int(static_cast< int >(0x8226)));
  rb_define_const(mGlew, "GL_RGBA32F", SWIG_From_int(static_cast< int >(0x8814)));
  rb_define_const(mGlew, "GL_RGB32F", SWIG_From_int(static_cast< int >(0x8815)));
  rb_define_const(mGlew, "GL_RGBA16F", SWIG_From_int(static_cast< int >(0x881A)));
  rb_define_const(mGlew, "GL_RGB16F", SWIG_From_int(static_cast< int >(0x881B)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_INTEGER", SWIG_From_int(static_cast< int >(0x88FD)));
  rb_define_const(mGlew, "GL_MAX_ARRAY_TEXTURE_LAYERS", SWIG_From_int(static_cast< int >(0x88FF)));
  rb_define_const(mGlew, "GL_MIN_PROGRAM_TEXEL_OFFSET", SWIG_From_int(static_cast< int >(0x8904)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_TEXEL_OFFSET", SWIG_From_int(static_cast< int >(0x8905)));
  rb_define_const(mGlew, "GL_CLAMP_VERTEX_COLOR", SWIG_From_int(static_cast< int >(0x891A)));
  rb_define_const(mGlew, "GL_CLAMP_FRAGMENT_COLOR", SWIG_From_int(static_cast< int >(0x891B)));
  rb_define_const(mGlew, "GL_CLAMP_READ_COLOR", SWIG_From_int(static_cast< int >(0x891C)));
  rb_define_const(mGlew, "GL_FIXED_ONLY", SWIG_From_int(static_cast< int >(0x891D)));
  rb_define_const(mGlew, "GL_TEXTURE_RED_TYPE", SWIG_From_int(static_cast< int >(0x8C10)));
  rb_define_const(mGlew, "GL_TEXTURE_GREEN_TYPE", SWIG_From_int(static_cast< int >(0x8C11)));
  rb_define_const(mGlew, "GL_TEXTURE_BLUE_TYPE", SWIG_From_int(static_cast< int >(0x8C12)));
  rb_define_const(mGlew, "GL_TEXTURE_ALPHA_TYPE", SWIG_From_int(static_cast< int >(0x8C13)));
  rb_define_const(mGlew, "GL_TEXTURE_LUMINANCE_TYPE", SWIG_From_int(static_cast< int >(0x8C14)));
  rb_define_const(mGlew, "GL_TEXTURE_INTENSITY_TYPE", SWIG_From_int(static_cast< int >(0x8C15)));
  rb_define_const(mGlew, "GL_TEXTURE_DEPTH_TYPE", SWIG_From_int(static_cast< int >(0x8C16)));
  rb_define_const(mGlew, "GL_UNSIGNED_NORMALIZED", SWIG_From_int(static_cast< int >(0x8C17)));
  rb_define_const(mGlew, "GL_TEXTURE_1D_ARRAY", SWIG_From_int(static_cast< int >(0x8C18)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_1D_ARRAY", SWIG_From_int(static_cast< int >(0x8C19)));
  rb_define_const(mGlew, "GL_TEXTURE_2D_ARRAY", SWIG_From_int(static_cast< int >(0x8C1A)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_2D_ARRAY", SWIG_From_int(static_cast< int >(0x8C1B)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_1D_ARRAY", SWIG_From_int(static_cast< int >(0x8C1C)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_2D_ARRAY", SWIG_From_int(static_cast< int >(0x8C1D)));
  rb_define_const(mGlew, "GL_R11F_G11F_B10F", SWIG_From_int(static_cast< int >(0x8C3A)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_10F_11F_11F_REV", SWIG_From_int(static_cast< int >(0x8C3B)));
  rb_define_const(mGlew, "GL_RGB9_E5", SWIG_From_int(static_cast< int >(0x8C3D)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_5_9_9_9_REV", SWIG_From_int(static_cast< int >(0x8C3E)));
  rb_define_const(mGlew, "GL_TEXTURE_SHARED_SIZE", SWIG_From_int(static_cast< int >(0x8C3F)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH", SWIG_From_int(static_cast< int >(0x8C76)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_MODE", SWIG_From_int(static_cast< int >(0x8C7F)));
  rb_define_const(mGlew, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS", SWIG_From_int(static_cast< int >(0x8C80)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_VARYINGS", SWIG_From_int(static_cast< int >(0x8C83)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_START", SWIG_From_int(static_cast< int >(0x8C84)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE", SWIG_From_int(static_cast< int >(0x8C85)));
  rb_define_const(mGlew, "GL_PRIMITIVES_GENERATED", SWIG_From_int(static_cast< int >(0x8C87)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN", SWIG_From_int(static_cast< int >(0x8C88)));
  rb_define_const(mGlew, "GL_RASTERIZER_DISCARD", SWIG_From_int(static_cast< int >(0x8C89)));
  rb_define_const(mGlew, "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS", SWIG_From_int(static_cast< int >(0x8C8A)));
  rb_define_const(mGlew, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS", SWIG_From_int(static_cast< int >(0x8C8B)));
  rb_define_const(mGlew, "GL_INTERLEAVED_ATTRIBS", SWIG_From_int(static_cast< int >(0x8C8C)));
  rb_define_const(mGlew, "GL_SEPARATE_ATTRIBS", SWIG_From_int(static_cast< int >(0x8C8D)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER", SWIG_From_int(static_cast< int >(0x8C8E)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8C8F)));
  rb_define_const(mGlew, "GL_RGBA32UI", SWIG_From_int(static_cast< int >(0x8D70)));
  rb_define_const(mGlew, "GL_RGB32UI", SWIG_From_int(static_cast< int >(0x8D71)));
  rb_define_const(mGlew, "GL_RGBA16UI", SWIG_From_int(static_cast< int >(0x8D76)));
  rb_define_const(mGlew, "GL_RGB16UI", SWIG_From_int(static_cast< int >(0x8D77)));
  rb_define_const(mGlew, "GL_RGBA8UI", SWIG_From_int(static_cast< int >(0x8D7C)));
  rb_define_const(mGlew, "GL_RGB8UI", SWIG_From_int(static_cast< int >(0x8D7D)));
  rb_define_const(mGlew, "GL_RGBA32I", SWIG_From_int(static_cast< int >(0x8D82)));
  rb_define_const(mGlew, "GL_RGB32I", SWIG_From_int(static_cast< int >(0x8D83)));
  rb_define_const(mGlew, "GL_RGBA16I", SWIG_From_int(static_cast< int >(0x8D88)));
  rb_define_const(mGlew, "GL_RGB16I", SWIG_From_int(static_cast< int >(0x8D89)));
  rb_define_const(mGlew, "GL_RGBA8I", SWIG_From_int(static_cast< int >(0x8D8E)));
  rb_define_const(mGlew, "GL_RGB8I", SWIG_From_int(static_cast< int >(0x8D8F)));
  rb_define_const(mGlew, "GL_RED_INTEGER", SWIG_From_int(static_cast< int >(0x8D94)));
  rb_define_const(mGlew, "GL_GREEN_INTEGER", SWIG_From_int(static_cast< int >(0x8D95)));
  rb_define_const(mGlew, "GL_BLUE_INTEGER", SWIG_From_int(static_cast< int >(0x8D96)));
  rb_define_const(mGlew, "GL_ALPHA_INTEGER", SWIG_From_int(static_cast< int >(0x8D97)));
  rb_define_const(mGlew, "GL_RGB_INTEGER", SWIG_From_int(static_cast< int >(0x8D98)));
  rb_define_const(mGlew, "GL_RGBA_INTEGER", SWIG_From_int(static_cast< int >(0x8D99)));
  rb_define_const(mGlew, "GL_BGR_INTEGER", SWIG_From_int(static_cast< int >(0x8D9A)));
  rb_define_const(mGlew, "GL_BGRA_INTEGER", SWIG_From_int(static_cast< int >(0x8D9B)));
  rb_define_const(mGlew, "GL_SAMPLER_1D_ARRAY", SWIG_From_int(static_cast< int >(0x8DC0)));
  rb_define_const(mGlew, "GL_SAMPLER_2D_ARRAY", SWIG_From_int(static_cast< int >(0x8DC1)));
  rb_define_const(mGlew, "GL_SAMPLER_1D_ARRAY_SHADOW", SWIG_From_int(static_cast< int >(0x8DC3)));
  rb_define_const(mGlew, "GL_SAMPLER_2D_ARRAY_SHADOW", SWIG_From_int(static_cast< int >(0x8DC4)));
  rb_define_const(mGlew, "GL_SAMPLER_CUBE_SHADOW", SWIG_From_int(static_cast< int >(0x8DC5)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_VEC2", SWIG_From_int(static_cast< int >(0x8DC6)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_VEC3", SWIG_From_int(static_cast< int >(0x8DC7)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_VEC4", SWIG_From_int(static_cast< int >(0x8DC8)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_1D", SWIG_From_int(static_cast< int >(0x8DC9)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_2D", SWIG_From_int(static_cast< int >(0x8DCA)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_3D", SWIG_From_int(static_cast< int >(0x8DCB)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_CUBE", SWIG_From_int(static_cast< int >(0x8DCC)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_1D_ARRAY", SWIG_From_int(static_cast< int >(0x8DCE)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_2D_ARRAY", SWIG_From_int(static_cast< int >(0x8DCF)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_1D", SWIG_From_int(static_cast< int >(0x8DD1)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_2D", SWIG_From_int(static_cast< int >(0x8DD2)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_3D", SWIG_From_int(static_cast< int >(0x8DD3)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_CUBE", SWIG_From_int(static_cast< int >(0x8DD4)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY", SWIG_From_int(static_cast< int >(0x8DD6)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY", SWIG_From_int(static_cast< int >(0x8DD7)));
  rb_define_const(mGlew, "GL_QUERY_WAIT", SWIG_From_int(static_cast< int >(0x8E13)));
  rb_define_const(mGlew, "GL_QUERY_NO_WAIT", SWIG_From_int(static_cast< int >(0x8E14)));
  rb_define_const(mGlew, "GL_QUERY_BY_REGION_WAIT", SWIG_From_int(static_cast< int >(0x8E15)));
  rb_define_const(mGlew, "GL_QUERY_BY_REGION_NO_WAIT", SWIG_From_int(static_cast< int >(0x8E16)));
  rb_define_const(mGlew, "GL_3DFX_multisample", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MULTISAMPLE_3DFX", SWIG_From_int(static_cast< int >(0x86B2)));
  rb_define_const(mGlew, "GL_SAMPLE_BUFFERS_3DFX", SWIG_From_int(static_cast< int >(0x86B3)));
  rb_define_const(mGlew, "GL_SAMPLES_3DFX", SWIG_From_int(static_cast< int >(0x86B4)));
  rb_define_const(mGlew, "GL_MULTISAMPLE_BIT_3DFX", SWIG_From_int(static_cast< int >(0x20000000)));
  rb_define_const(mGlew, "GL_3DFX_tbuffer", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_3DFX_texture_compression_FXT1", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COMPRESSED_RGB_FXT1_3DFX", SWIG_From_int(static_cast< int >(0x86B0)));
  rb_define_const(mGlew, "GL_COMPRESSED_RGBA_FXT1_3DFX", SWIG_From_int(static_cast< int >(0x86B1)));
  rb_define_const(mGlew, "GL_APPLE_client_storage", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_UNPACK_CLIENT_STORAGE_APPLE", SWIG_From_int(static_cast< int >(0x85B2)));
  rb_define_const(mGlew, "GL_APPLE_element_array", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ELEMENT_ARRAY_APPLE", SWIG_From_int(static_cast< int >(0x8768)));
  rb_define_const(mGlew, "GL_ELEMENT_ARRAY_TYPE_APPLE", SWIG_From_int(static_cast< int >(0x8769)));
  rb_define_const(mGlew, "GL_ELEMENT_ARRAY_POINTER_APPLE", SWIG_From_int(static_cast< int >(0x876A)));
  rb_define_const(mGlew, "GL_APPLE_fence", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DRAW_PIXELS_APPLE", SWIG_From_int(static_cast< int >(0x8A0A)));
  rb_define_const(mGlew, "GL_FENCE_APPLE", SWIG_From_int(static_cast< int >(0x8A0B)));
  rb_define_const(mGlew, "GL_APPLE_float_pixels", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_HALF_APPLE", SWIG_From_int(static_cast< int >(0x140B)));
  rb_define_const(mGlew, "GL_RGBA_FLOAT32_APPLE", SWIG_From_int(static_cast< int >(0x8814)));
  rb_define_const(mGlew, "GL_RGB_FLOAT32_APPLE", SWIG_From_int(static_cast< int >(0x8815)));
  rb_define_const(mGlew, "GL_ALPHA_FLOAT32_APPLE", SWIG_From_int(static_cast< int >(0x8816)));
  rb_define_const(mGlew, "GL_INTENSITY_FLOAT32_APPLE", SWIG_From_int(static_cast< int >(0x8817)));
  rb_define_const(mGlew, "GL_LUMINANCE_FLOAT32_APPLE", SWIG_From_int(static_cast< int >(0x8818)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA_FLOAT32_APPLE", SWIG_From_int(static_cast< int >(0x8819)));
  rb_define_const(mGlew, "GL_RGBA_FLOAT16_APPLE", SWIG_From_int(static_cast< int >(0x881A)));
  rb_define_const(mGlew, "GL_RGB_FLOAT16_APPLE", SWIG_From_int(static_cast< int >(0x881B)));
  rb_define_const(mGlew, "GL_ALPHA_FLOAT16_APPLE", SWIG_From_int(static_cast< int >(0x881C)));
  rb_define_const(mGlew, "GL_INTENSITY_FLOAT16_APPLE", SWIG_From_int(static_cast< int >(0x881D)));
  rb_define_const(mGlew, "GL_LUMINANCE_FLOAT16_APPLE", SWIG_From_int(static_cast< int >(0x881E)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA_FLOAT16_APPLE", SWIG_From_int(static_cast< int >(0x881F)));
  rb_define_const(mGlew, "GL_COLOR_FLOAT_APPLE", SWIG_From_int(static_cast< int >(0x8A0F)));
  rb_define_const(mGlew, "GL_APPLE_flush_buffer_range", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_BUFFER_SERIALIZED_MODIFY_APPLE", SWIG_From_int(static_cast< int >(0x8A12)));
  rb_define_const(mGlew, "GL_BUFFER_FLUSHING_UNMAP_APPLE", SWIG_From_int(static_cast< int >(0x8A13)));
  rb_define_const(mGlew, "GL_APPLE_pixel_buffer", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE", SWIG_From_int(static_cast< int >(0x8A10)));
  rb_define_const(mGlew, "GL_APPLE_specular_vector", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE", SWIG_From_int(static_cast< int >(0x85B0)));
  rb_define_const(mGlew, "GL_APPLE_texture_range", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_RANGE_LENGTH_APPLE", SWIG_From_int(static_cast< int >(0x85B7)));
  rb_define_const(mGlew, "GL_TEXTURE_RANGE_POINTER_APPLE", SWIG_From_int(static_cast< int >(0x85B8)));
  rb_define_const(mGlew, "GL_TEXTURE_STORAGE_HINT_APPLE", SWIG_From_int(static_cast< int >(0x85BC)));
  rb_define_const(mGlew, "GL_STORAGE_PRIVATE_APPLE", SWIG_From_int(static_cast< int >(0x85BD)));
  rb_define_const(mGlew, "GL_STORAGE_CACHED_APPLE", SWIG_From_int(static_cast< int >(0x85BE)));
  rb_define_const(mGlew, "GL_STORAGE_SHARED_APPLE", SWIG_From_int(static_cast< int >(0x85BF)));
  rb_define_const(mGlew, "GL_APPLE_transform_hint", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TRANSFORM_HINT_APPLE", SWIG_From_int(static_cast< int >(0x85B1)));
  rb_define_const(mGlew, "GL_APPLE_vertex_array_object", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_BINDING_APPLE", SWIG_From_int(static_cast< int >(0x85B5)));
  rb_define_const(mGlew, "GL_APPLE_vertex_array_range", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_RANGE_APPLE", SWIG_From_int(static_cast< int >(0x851D)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE", SWIG_From_int(static_cast< int >(0x851E)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_STORAGE_HINT_APPLE", SWIG_From_int(static_cast< int >(0x851F)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_APPLE", SWIG_From_int(static_cast< int >(0x8520)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_RANGE_POINTER_APPLE", SWIG_From_int(static_cast< int >(0x8521)));
  rb_define_const(mGlew, "GL_APPLE_ycbcr_422", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_YCBCR_422_APPLE", SWIG_From_int(static_cast< int >(0x85B9)));
  rb_define_const(mGlew, "GL_UNSIGNED_SHORT_8_8_APPLE", SWIG_From_int(static_cast< int >(0x85BA)));
  rb_define_const(mGlew, "GL_UNSIGNED_SHORT_8_8_REV_APPLE", SWIG_From_int(static_cast< int >(0x85BB)));
  rb_define_const(mGlew, "GL_ARB_color_buffer_float", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RGBA_FLOAT_MODE_ARB", SWIG_From_int(static_cast< int >(0x8820)));
  rb_define_const(mGlew, "GL_CLAMP_VERTEX_COLOR_ARB", SWIG_From_int(static_cast< int >(0x891A)));
  rb_define_const(mGlew, "GL_CLAMP_FRAGMENT_COLOR_ARB", SWIG_From_int(static_cast< int >(0x891B)));
  rb_define_const(mGlew, "GL_CLAMP_READ_COLOR_ARB", SWIG_From_int(static_cast< int >(0x891C)));
  rb_define_const(mGlew, "GL_FIXED_ONLY_ARB", SWIG_From_int(static_cast< int >(0x891D)));
  rb_define_const(mGlew, "GL_ARB_depth_buffer_float", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DEPTH_COMPONENT32F", SWIG_From_int(static_cast< int >(0x8CAC)));
  rb_define_const(mGlew, "GL_DEPTH32F_STENCIL8", SWIG_From_int(static_cast< int >(0x8CAD)));
  rb_define_const(mGlew, "GL_FLOAT_32_UNSIGNED_INT_24_8_REV", SWIG_From_int(static_cast< int >(0x8DAD)));
  rb_define_const(mGlew, "GL_ARB_depth_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DEPTH_COMPONENT16_ARB", SWIG_From_int(static_cast< int >(0x81A5)));
  rb_define_const(mGlew, "GL_DEPTH_COMPONENT24_ARB", SWIG_From_int(static_cast< int >(0x81A6)));
  rb_define_const(mGlew, "GL_DEPTH_COMPONENT32_ARB", SWIG_From_int(static_cast< int >(0x81A7)));
  rb_define_const(mGlew, "GL_TEXTURE_DEPTH_SIZE_ARB", SWIG_From_int(static_cast< int >(0x884A)));
  rb_define_const(mGlew, "GL_DEPTH_TEXTURE_MODE_ARB", SWIG_From_int(static_cast< int >(0x884B)));
  rb_define_const(mGlew, "GL_ARB_draw_buffers", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MAX_DRAW_BUFFERS_ARB", SWIG_From_int(static_cast< int >(0x8824)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER0_ARB", SWIG_From_int(static_cast< int >(0x8825)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER1_ARB", SWIG_From_int(static_cast< int >(0x8826)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER2_ARB", SWIG_From_int(static_cast< int >(0x8827)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER3_ARB", SWIG_From_int(static_cast< int >(0x8828)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER4_ARB", SWIG_From_int(static_cast< int >(0x8829)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER5_ARB", SWIG_From_int(static_cast< int >(0x882A)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER6_ARB", SWIG_From_int(static_cast< int >(0x882B)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER7_ARB", SWIG_From_int(static_cast< int >(0x882C)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER8_ARB", SWIG_From_int(static_cast< int >(0x882D)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER9_ARB", SWIG_From_int(static_cast< int >(0x882E)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER10_ARB", SWIG_From_int(static_cast< int >(0x882F)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER11_ARB", SWIG_From_int(static_cast< int >(0x8830)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER12_ARB", SWIG_From_int(static_cast< int >(0x8831)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER13_ARB", SWIG_From_int(static_cast< int >(0x8832)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER14_ARB", SWIG_From_int(static_cast< int >(0x8833)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER15_ARB", SWIG_From_int(static_cast< int >(0x8834)));
  rb_define_const(mGlew, "GL_ARB_draw_instanced", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ARB_fragment_program", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FRAGMENT_PROGRAM_ARB", SWIG_From_int(static_cast< int >(0x8804)));
  rb_define_const(mGlew, "GL_PROGRAM_ALU_INSTRUCTIONS_ARB", SWIG_From_int(static_cast< int >(0x8805)));
  rb_define_const(mGlew, "GL_PROGRAM_TEX_INSTRUCTIONS_ARB", SWIG_From_int(static_cast< int >(0x8806)));
  rb_define_const(mGlew, "GL_PROGRAM_TEX_INDIRECTIONS_ARB", SWIG_From_int(static_cast< int >(0x8807)));
  rb_define_const(mGlew, "GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB", SWIG_From_int(static_cast< int >(0x8808)));
  rb_define_const(mGlew, "GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB", SWIG_From_int(static_cast< int >(0x8809)));
  rb_define_const(mGlew, "GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB", SWIG_From_int(static_cast< int >(0x880A)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB", SWIG_From_int(static_cast< int >(0x880B)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB", SWIG_From_int(static_cast< int >(0x880C)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB", SWIG_From_int(static_cast< int >(0x880D)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB", SWIG_From_int(static_cast< int >(0x880E)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB", SWIG_From_int(static_cast< int >(0x880F)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB", SWIG_From_int(static_cast< int >(0x8810)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_COORDS_ARB", SWIG_From_int(static_cast< int >(0x8871)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_IMAGE_UNITS_ARB", SWIG_From_int(static_cast< int >(0x8872)));
  rb_define_const(mGlew, "GL_ARB_fragment_program_shadow", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ARB_fragment_shader", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FRAGMENT_SHADER_ARB", SWIG_From_int(static_cast< int >(0x8B30)));
  rb_define_const(mGlew, "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB", SWIG_From_int(static_cast< int >(0x8B49)));
  rb_define_const(mGlew, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB", SWIG_From_int(static_cast< int >(0x8B8B)));
  rb_define_const(mGlew, "GL_ARB_framebuffer_object", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_INVALID_FRAMEBUFFER_OPERATION", SWIG_From_int(static_cast< int >(0x0506)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING", SWIG_From_int(static_cast< int >(0x8210)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE", SWIG_From_int(static_cast< int >(0x8211)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE", SWIG_From_int(static_cast< int >(0x8212)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE", SWIG_From_int(static_cast< int >(0x8213)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE", SWIG_From_int(static_cast< int >(0x8214)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE", SWIG_From_int(static_cast< int >(0x8215)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE", SWIG_From_int(static_cast< int >(0x8216)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE", SWIG_From_int(static_cast< int >(0x8217)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_DEFAULT", SWIG_From_int(static_cast< int >(0x8218)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_UNDEFINED", SWIG_From_int(static_cast< int >(0x8219)));
  rb_define_const(mGlew, "GL_DEPTH_STENCIL_ATTACHMENT", SWIG_From_int(static_cast< int >(0x821A)));
  rb_define_const(mGlew, "GL_INDEX", SWIG_From_int(static_cast< int >(0x8222)));
  rb_define_const(mGlew, "GL_MAX_RENDERBUFFER_SIZE", SWIG_From_int(static_cast< int >(0x84E8)));
  rb_define_const(mGlew, "GL_DEPTH_STENCIL", SWIG_From_int(static_cast< int >(0x84F9)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_24_8", SWIG_From_int(static_cast< int >(0x84FA)));
  rb_define_const(mGlew, "GL_DEPTH24_STENCIL8", SWIG_From_int(static_cast< int >(0x88F0)));
  rb_define_const(mGlew, "GL_TEXTURE_STENCIL_SIZE", SWIG_From_int(static_cast< int >(0x88F1)));
  rb_define_const(mGlew, "GL_DRAW_FRAMEBUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8CA6)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8CA6)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8CA7)));
  rb_define_const(mGlew, "GL_READ_FRAMEBUFFER", SWIG_From_int(static_cast< int >(0x8CA8)));
  rb_define_const(mGlew, "GL_DRAW_FRAMEBUFFER", SWIG_From_int(static_cast< int >(0x8CA9)));
  rb_define_const(mGlew, "GL_READ_FRAMEBUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8CAA)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_SAMPLES", SWIG_From_int(static_cast< int >(0x8CAB)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE", SWIG_From_int(static_cast< int >(0x8CD0)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME", SWIG_From_int(static_cast< int >(0x8CD1)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL", SWIG_From_int(static_cast< int >(0x8CD2)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE", SWIG_From_int(static_cast< int >(0x8CD3)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER", SWIG_From_int(static_cast< int >(0x8CD4)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_COMPLETE", SWIG_From_int(static_cast< int >(0x8CD5)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT", SWIG_From_int(static_cast< int >(0x8CD6)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT", SWIG_From_int(static_cast< int >(0x8CD7)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER", SWIG_From_int(static_cast< int >(0x8CDB)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER", SWIG_From_int(static_cast< int >(0x8CDC)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_UNSUPPORTED", SWIG_From_int(static_cast< int >(0x8CDD)));
  rb_define_const(mGlew, "GL_MAX_COLOR_ATTACHMENTS", SWIG_From_int(static_cast< int >(0x8CDF)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT0", SWIG_From_int(static_cast< int >(0x8CE0)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT1", SWIG_From_int(static_cast< int >(0x8CE1)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT2", SWIG_From_int(static_cast< int >(0x8CE2)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT3", SWIG_From_int(static_cast< int >(0x8CE3)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT4", SWIG_From_int(static_cast< int >(0x8CE4)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT5", SWIG_From_int(static_cast< int >(0x8CE5)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT6", SWIG_From_int(static_cast< int >(0x8CE6)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT7", SWIG_From_int(static_cast< int >(0x8CE7)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT8", SWIG_From_int(static_cast< int >(0x8CE8)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT9", SWIG_From_int(static_cast< int >(0x8CE9)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT10", SWIG_From_int(static_cast< int >(0x8CEA)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT11", SWIG_From_int(static_cast< int >(0x8CEB)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT12", SWIG_From_int(static_cast< int >(0x8CEC)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT13", SWIG_From_int(static_cast< int >(0x8CED)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT14", SWIG_From_int(static_cast< int >(0x8CEE)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT15", SWIG_From_int(static_cast< int >(0x8CEF)));
  rb_define_const(mGlew, "GL_DEPTH_ATTACHMENT", SWIG_From_int(static_cast< int >(0x8D00)));
  rb_define_const(mGlew, "GL_STENCIL_ATTACHMENT", SWIG_From_int(static_cast< int >(0x8D20)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER", SWIG_From_int(static_cast< int >(0x8D40)));
  rb_define_const(mGlew, "GL_RENDERBUFFER", SWIG_From_int(static_cast< int >(0x8D41)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_WIDTH", SWIG_From_int(static_cast< int >(0x8D42)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_HEIGHT", SWIG_From_int(static_cast< int >(0x8D43)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_INTERNAL_FORMAT", SWIG_From_int(static_cast< int >(0x8D44)));
  rb_define_const(mGlew, "GL_STENCIL_INDEX1", SWIG_From_int(static_cast< int >(0x8D46)));
  rb_define_const(mGlew, "GL_STENCIL_INDEX4", SWIG_From_int(static_cast< int >(0x8D47)));
  rb_define_const(mGlew, "GL_STENCIL_INDEX8", SWIG_From_int(static_cast< int >(0x8D48)));
  rb_define_const(mGlew, "GL_STENCIL_INDEX16", SWIG_From_int(static_cast< int >(0x8D49)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_RED_SIZE", SWIG_From_int(static_cast< int >(0x8D50)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_GREEN_SIZE", SWIG_From_int(static_cast< int >(0x8D51)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_BLUE_SIZE", SWIG_From_int(static_cast< int >(0x8D52)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_ALPHA_SIZE", SWIG_From_int(static_cast< int >(0x8D53)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_DEPTH_SIZE", SWIG_From_int(static_cast< int >(0x8D54)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_STENCIL_SIZE", SWIG_From_int(static_cast< int >(0x8D55)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE", SWIG_From_int(static_cast< int >(0x8D56)));
  rb_define_const(mGlew, "GL_MAX_SAMPLES", SWIG_From_int(static_cast< int >(0x8D57)));
  rb_define_const(mGlew, "GL_ARB_framebuffer_sRGB", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_SRGB", SWIG_From_int(static_cast< int >(0x8DB9)));
  rb_define_const(mGlew, "GL_ARB_geometry_shader4", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_LINES_ADJACENCY_ARB", SWIG_From_int(static_cast< int >(0xA)));
  rb_define_const(mGlew, "GL_LINE_STRIP_ADJACENCY_ARB", SWIG_From_int(static_cast< int >(0xB)));
  rb_define_const(mGlew, "GL_TRIANGLES_ADJACENCY_ARB", SWIG_From_int(static_cast< int >(0xC)));
  rb_define_const(mGlew, "GL_TRIANGLE_STRIP_ADJACENCY_ARB", SWIG_From_int(static_cast< int >(0xD)));
  rb_define_const(mGlew, "GL_PROGRAM_POINT_SIZE_ARB", SWIG_From_int(static_cast< int >(0x8642)));
  rb_define_const(mGlew, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB", SWIG_From_int(static_cast< int >(0x8C29)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB", SWIG_From_int(static_cast< int >(0x8DA7)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB", SWIG_From_int(static_cast< int >(0x8DA8)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB", SWIG_From_int(static_cast< int >(0x8DA9)));
  rb_define_const(mGlew, "GL_GEOMETRY_SHADER_ARB", SWIG_From_int(static_cast< int >(0x8DD9)));
  rb_define_const(mGlew, "GL_GEOMETRY_VERTICES_OUT_ARB", SWIG_From_int(static_cast< int >(0x8DDA)));
  rb_define_const(mGlew, "GL_GEOMETRY_INPUT_TYPE_ARB", SWIG_From_int(static_cast< int >(0x8DDB)));
  rb_define_const(mGlew, "GL_GEOMETRY_OUTPUT_TYPE_ARB", SWIG_From_int(static_cast< int >(0x8DDC)));
  rb_define_const(mGlew, "GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB", SWIG_From_int(static_cast< int >(0x8DDD)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_VARYING_COMPONENTS_ARB", SWIG_From_int(static_cast< int >(0x8DDE)));
  rb_define_const(mGlew, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB", SWIG_From_int(static_cast< int >(0x8DDF)));
  rb_define_const(mGlew, "GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB", SWIG_From_int(static_cast< int >(0x8DE0)));
  rb_define_const(mGlew, "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB", SWIG_From_int(static_cast< int >(0x8DE1)));
  rb_define_const(mGlew, "GL_ARB_half_float_pixel", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_HALF_FLOAT_ARB", SWIG_From_int(static_cast< int >(0x140B)));
  rb_define_const(mGlew, "GL_ARB_half_float_vertex", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_HALF_FLOAT", SWIG_From_int(static_cast< int >(0x140B)));
  rb_define_const(mGlew, "GL_ARB_imaging", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_CONSTANT_COLOR", SWIG_From_int(static_cast< int >(0x8001)));
  rb_define_const(mGlew, "GL_ONE_MINUS_CONSTANT_COLOR", SWIG_From_int(static_cast< int >(0x8002)));
  rb_define_const(mGlew, "GL_CONSTANT_ALPHA", SWIG_From_int(static_cast< int >(0x8003)));
  rb_define_const(mGlew, "GL_ONE_MINUS_CONSTANT_ALPHA", SWIG_From_int(static_cast< int >(0x8004)));
  rb_define_const(mGlew, "GL_BLEND_COLOR", SWIG_From_int(static_cast< int >(0x8005)));
  rb_define_const(mGlew, "GL_FUNC_ADD", SWIG_From_int(static_cast< int >(0x8006)));
  rb_define_const(mGlew, "GL_MIN", SWIG_From_int(static_cast< int >(0x8007)));
  rb_define_const(mGlew, "GL_MAX", SWIG_From_int(static_cast< int >(0x8008)));
  rb_define_const(mGlew, "GL_BLEND_EQUATION", SWIG_From_int(static_cast< int >(0x8009)));
  rb_define_const(mGlew, "GL_FUNC_SUBTRACT", SWIG_From_int(static_cast< int >(0x800A)));
  rb_define_const(mGlew, "GL_FUNC_REVERSE_SUBTRACT", SWIG_From_int(static_cast< int >(0x800B)));
  rb_define_const(mGlew, "GL_CONVOLUTION_1D", SWIG_From_int(static_cast< int >(0x8010)));
  rb_define_const(mGlew, "GL_CONVOLUTION_2D", SWIG_From_int(static_cast< int >(0x8011)));
  rb_define_const(mGlew, "GL_SEPARABLE_2D", SWIG_From_int(static_cast< int >(0x8012)));
  rb_define_const(mGlew, "GL_CONVOLUTION_BORDER_MODE", SWIG_From_int(static_cast< int >(0x8013)));
  rb_define_const(mGlew, "GL_CONVOLUTION_FILTER_SCALE", SWIG_From_int(static_cast< int >(0x8014)));
  rb_define_const(mGlew, "GL_CONVOLUTION_FILTER_BIAS", SWIG_From_int(static_cast< int >(0x8015)));
  rb_define_const(mGlew, "GL_REDUCE", SWIG_From_int(static_cast< int >(0x8016)));
  rb_define_const(mGlew, "GL_CONVOLUTION_FORMAT", SWIG_From_int(static_cast< int >(0x8017)));
  rb_define_const(mGlew, "GL_CONVOLUTION_WIDTH", SWIG_From_int(static_cast< int >(0x8018)));
  rb_define_const(mGlew, "GL_CONVOLUTION_HEIGHT", SWIG_From_int(static_cast< int >(0x8019)));
  rb_define_const(mGlew, "GL_MAX_CONVOLUTION_WIDTH", SWIG_From_int(static_cast< int >(0x801A)));
  rb_define_const(mGlew, "GL_MAX_CONVOLUTION_HEIGHT", SWIG_From_int(static_cast< int >(0x801B)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_RED_SCALE", SWIG_From_int(static_cast< int >(0x801C)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_GREEN_SCALE", SWIG_From_int(static_cast< int >(0x801D)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_BLUE_SCALE", SWIG_From_int(static_cast< int >(0x801E)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_ALPHA_SCALE", SWIG_From_int(static_cast< int >(0x801F)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_RED_BIAS", SWIG_From_int(static_cast< int >(0x8020)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_GREEN_BIAS", SWIG_From_int(static_cast< int >(0x8021)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_BLUE_BIAS", SWIG_From_int(static_cast< int >(0x8022)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_ALPHA_BIAS", SWIG_From_int(static_cast< int >(0x8023)));
  rb_define_const(mGlew, "GL_HISTOGRAM", SWIG_From_int(static_cast< int >(0x8024)));
  rb_define_const(mGlew, "GL_PROXY_HISTOGRAM", SWIG_From_int(static_cast< int >(0x8025)));
  rb_define_const(mGlew, "GL_HISTOGRAM_WIDTH", SWIG_From_int(static_cast< int >(0x8026)));
  rb_define_const(mGlew, "GL_HISTOGRAM_FORMAT", SWIG_From_int(static_cast< int >(0x8027)));
  rb_define_const(mGlew, "GL_HISTOGRAM_RED_SIZE", SWIG_From_int(static_cast< int >(0x8028)));
  rb_define_const(mGlew, "GL_HISTOGRAM_GREEN_SIZE", SWIG_From_int(static_cast< int >(0x8029)));
  rb_define_const(mGlew, "GL_HISTOGRAM_BLUE_SIZE", SWIG_From_int(static_cast< int >(0x802A)));
  rb_define_const(mGlew, "GL_HISTOGRAM_ALPHA_SIZE", SWIG_From_int(static_cast< int >(0x802B)));
  rb_define_const(mGlew, "GL_HISTOGRAM_LUMINANCE_SIZE", SWIG_From_int(static_cast< int >(0x802C)));
  rb_define_const(mGlew, "GL_HISTOGRAM_SINK", SWIG_From_int(static_cast< int >(0x802D)));
  rb_define_const(mGlew, "GL_MINMAX", SWIG_From_int(static_cast< int >(0x802E)));
  rb_define_const(mGlew, "GL_MINMAX_FORMAT", SWIG_From_int(static_cast< int >(0x802F)));
  rb_define_const(mGlew, "GL_MINMAX_SINK", SWIG_From_int(static_cast< int >(0x8030)));
  rb_define_const(mGlew, "GL_TABLE_TOO_LARGE", SWIG_From_int(static_cast< int >(0x8031)));
  rb_define_const(mGlew, "GL_COLOR_MATRIX", SWIG_From_int(static_cast< int >(0x80B1)));
  rb_define_const(mGlew, "GL_COLOR_MATRIX_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x80B2)));
  rb_define_const(mGlew, "GL_MAX_COLOR_MATRIX_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x80B3)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_RED_SCALE", SWIG_From_int(static_cast< int >(0x80B4)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_GREEN_SCALE", SWIG_From_int(static_cast< int >(0x80B5)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_BLUE_SCALE", SWIG_From_int(static_cast< int >(0x80B6)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_ALPHA_SCALE", SWIG_From_int(static_cast< int >(0x80B7)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_RED_BIAS", SWIG_From_int(static_cast< int >(0x80B8)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_GREEN_BIAS", SWIG_From_int(static_cast< int >(0x80B9)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_BLUE_BIAS", SWIG_From_int(static_cast< int >(0x80BA)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_ALPHA_BIAS", SWIG_From_int(static_cast< int >(0x80BB)));
  rb_define_const(mGlew, "GL_COLOR_TABLE", SWIG_From_int(static_cast< int >(0x80D0)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_COLOR_TABLE", SWIG_From_int(static_cast< int >(0x80D1)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_COLOR_TABLE", SWIG_From_int(static_cast< int >(0x80D2)));
  rb_define_const(mGlew, "GL_PROXY_COLOR_TABLE", SWIG_From_int(static_cast< int >(0x80D3)));
  rb_define_const(mGlew, "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE", SWIG_From_int(static_cast< int >(0x80D4)));
  rb_define_const(mGlew, "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE", SWIG_From_int(static_cast< int >(0x80D5)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_SCALE", SWIG_From_int(static_cast< int >(0x80D6)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_BIAS", SWIG_From_int(static_cast< int >(0x80D7)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_FORMAT", SWIG_From_int(static_cast< int >(0x80D8)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_WIDTH", SWIG_From_int(static_cast< int >(0x80D9)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_RED_SIZE", SWIG_From_int(static_cast< int >(0x80DA)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_GREEN_SIZE", SWIG_From_int(static_cast< int >(0x80DB)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_BLUE_SIZE", SWIG_From_int(static_cast< int >(0x80DC)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_ALPHA_SIZE", SWIG_From_int(static_cast< int >(0x80DD)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_LUMINANCE_SIZE", SWIG_From_int(static_cast< int >(0x80DE)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_INTENSITY_SIZE", SWIG_From_int(static_cast< int >(0x80DF)));
  rb_define_const(mGlew, "GL_IGNORE_BORDER", SWIG_From_int(static_cast< int >(0x8150)));
  rb_define_const(mGlew, "GL_CONSTANT_BORDER", SWIG_From_int(static_cast< int >(0x8151)));
  rb_define_const(mGlew, "GL_WRAP_BORDER", SWIG_From_int(static_cast< int >(0x8152)));
  rb_define_const(mGlew, "GL_REPLICATE_BORDER", SWIG_From_int(static_cast< int >(0x8153)));
  rb_define_const(mGlew, "GL_CONVOLUTION_BORDER_COLOR", SWIG_From_int(static_cast< int >(0x8154)));
  rb_define_const(mGlew, "GL_ARB_instanced_arrays", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB", SWIG_From_int(static_cast< int >(0x88FE)));
  rb_define_const(mGlew, "GL_ARB_map_buffer_range", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MAP_READ_BIT", SWIG_From_int(static_cast< int >(0x0001)));
  rb_define_const(mGlew, "GL_MAP_WRITE_BIT", SWIG_From_int(static_cast< int >(0x0002)));
  rb_define_const(mGlew, "GL_MAP_INVALIDATE_RANGE_BIT", SWIG_From_int(static_cast< int >(0x0004)));
  rb_define_const(mGlew, "GL_MAP_INVALIDATE_BUFFER_BIT", SWIG_From_int(static_cast< int >(0x0008)));
  rb_define_const(mGlew, "GL_MAP_FLUSH_EXPLICIT_BIT", SWIG_From_int(static_cast< int >(0x0010)));
  rb_define_const(mGlew, "GL_MAP_UNSYNCHRONIZED_BIT", SWIG_From_int(static_cast< int >(0x0020)));
  rb_define_const(mGlew, "GL_ARB_matrix_palette", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MATRIX_PALETTE_ARB", SWIG_From_int(static_cast< int >(0x8840)));
  rb_define_const(mGlew, "GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB", SWIG_From_int(static_cast< int >(0x8841)));
  rb_define_const(mGlew, "GL_MAX_PALETTE_MATRICES_ARB", SWIG_From_int(static_cast< int >(0x8842)));
  rb_define_const(mGlew, "GL_CURRENT_PALETTE_MATRIX_ARB", SWIG_From_int(static_cast< int >(0x8843)));
  rb_define_const(mGlew, "GL_MATRIX_INDEX_ARRAY_ARB", SWIG_From_int(static_cast< int >(0x8844)));
  rb_define_const(mGlew, "GL_CURRENT_MATRIX_INDEX_ARB", SWIG_From_int(static_cast< int >(0x8845)));
  rb_define_const(mGlew, "GL_MATRIX_INDEX_ARRAY_SIZE_ARB", SWIG_From_int(static_cast< int >(0x8846)));
  rb_define_const(mGlew, "GL_MATRIX_INDEX_ARRAY_TYPE_ARB", SWIG_From_int(static_cast< int >(0x8847)));
  rb_define_const(mGlew, "GL_MATRIX_INDEX_ARRAY_STRIDE_ARB", SWIG_From_int(static_cast< int >(0x8848)));
  rb_define_const(mGlew, "GL_MATRIX_INDEX_ARRAY_POINTER_ARB", SWIG_From_int(static_cast< int >(0x8849)));
  rb_define_const(mGlew, "GL_ARB_multisample", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MULTISAMPLE_ARB", SWIG_From_int(static_cast< int >(0x809D)));
  rb_define_const(mGlew, "GL_SAMPLE_ALPHA_TO_COVERAGE_ARB", SWIG_From_int(static_cast< int >(0x809E)));
  rb_define_const(mGlew, "GL_SAMPLE_ALPHA_TO_ONE_ARB", SWIG_From_int(static_cast< int >(0x809F)));
  rb_define_const(mGlew, "GL_SAMPLE_COVERAGE_ARB", SWIG_From_int(static_cast< int >(0x80A0)));
  rb_define_const(mGlew, "GL_SAMPLE_BUFFERS_ARB", SWIG_From_int(static_cast< int >(0x80A8)));
  rb_define_const(mGlew, "GL_SAMPLES_ARB", SWIG_From_int(static_cast< int >(0x80A9)));
  rb_define_const(mGlew, "GL_SAMPLE_COVERAGE_VALUE_ARB", SWIG_From_int(static_cast< int >(0x80AA)));
  rb_define_const(mGlew, "GL_SAMPLE_COVERAGE_INVERT_ARB", SWIG_From_int(static_cast< int >(0x80AB)));
  rb_define_const(mGlew, "GL_MULTISAMPLE_BIT_ARB", SWIG_From_int(static_cast< int >(0x20000000)));
  rb_define_const(mGlew, "GL_ARB_multitexture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE0_ARB", SWIG_From_int(static_cast< int >(0x84C0)));
  rb_define_const(mGlew, "GL_TEXTURE1_ARB", SWIG_From_int(static_cast< int >(0x84C1)));
  rb_define_const(mGlew, "GL_TEXTURE2_ARB", SWIG_From_int(static_cast< int >(0x84C2)));
  rb_define_const(mGlew, "GL_TEXTURE3_ARB", SWIG_From_int(static_cast< int >(0x84C3)));
  rb_define_const(mGlew, "GL_TEXTURE4_ARB", SWIG_From_int(static_cast< int >(0x84C4)));
  rb_define_const(mGlew, "GL_TEXTURE5_ARB", SWIG_From_int(static_cast< int >(0x84C5)));
  rb_define_const(mGlew, "GL_TEXTURE6_ARB", SWIG_From_int(static_cast< int >(0x84C6)));
  rb_define_const(mGlew, "GL_TEXTURE7_ARB", SWIG_From_int(static_cast< int >(0x84C7)));
  rb_define_const(mGlew, "GL_TEXTURE8_ARB", SWIG_From_int(static_cast< int >(0x84C8)));
  rb_define_const(mGlew, "GL_TEXTURE9_ARB", SWIG_From_int(static_cast< int >(0x84C9)));
  rb_define_const(mGlew, "GL_TEXTURE10_ARB", SWIG_From_int(static_cast< int >(0x84CA)));
  rb_define_const(mGlew, "GL_TEXTURE11_ARB", SWIG_From_int(static_cast< int >(0x84CB)));
  rb_define_const(mGlew, "GL_TEXTURE12_ARB", SWIG_From_int(static_cast< int >(0x84CC)));
  rb_define_const(mGlew, "GL_TEXTURE13_ARB", SWIG_From_int(static_cast< int >(0x84CD)));
  rb_define_const(mGlew, "GL_TEXTURE14_ARB", SWIG_From_int(static_cast< int >(0x84CE)));
  rb_define_const(mGlew, "GL_TEXTURE15_ARB", SWIG_From_int(static_cast< int >(0x84CF)));
  rb_define_const(mGlew, "GL_TEXTURE16_ARB", SWIG_From_int(static_cast< int >(0x84D0)));
  rb_define_const(mGlew, "GL_TEXTURE17_ARB", SWIG_From_int(static_cast< int >(0x84D1)));
  rb_define_const(mGlew, "GL_TEXTURE18_ARB", SWIG_From_int(static_cast< int >(0x84D2)));
  rb_define_const(mGlew, "GL_TEXTURE19_ARB", SWIG_From_int(static_cast< int >(0x84D3)));
  rb_define_const(mGlew, "GL_TEXTURE20_ARB", SWIG_From_int(static_cast< int >(0x84D4)));
  rb_define_const(mGlew, "GL_TEXTURE21_ARB", SWIG_From_int(static_cast< int >(0x84D5)));
  rb_define_const(mGlew, "GL_TEXTURE22_ARB", SWIG_From_int(static_cast< int >(0x84D6)));
  rb_define_const(mGlew, "GL_TEXTURE23_ARB", SWIG_From_int(static_cast< int >(0x84D7)));
  rb_define_const(mGlew, "GL_TEXTURE24_ARB", SWIG_From_int(static_cast< int >(0x84D8)));
  rb_define_const(mGlew, "GL_TEXTURE25_ARB", SWIG_From_int(static_cast< int >(0x84D9)));
  rb_define_const(mGlew, "GL_TEXTURE26_ARB", SWIG_From_int(static_cast< int >(0x84DA)));
  rb_define_const(mGlew, "GL_TEXTURE27_ARB", SWIG_From_int(static_cast< int >(0x84DB)));
  rb_define_const(mGlew, "GL_TEXTURE28_ARB", SWIG_From_int(static_cast< int >(0x84DC)));
  rb_define_const(mGlew, "GL_TEXTURE29_ARB", SWIG_From_int(static_cast< int >(0x84DD)));
  rb_define_const(mGlew, "GL_TEXTURE30_ARB", SWIG_From_int(static_cast< int >(0x84DE)));
  rb_define_const(mGlew, "GL_TEXTURE31_ARB", SWIG_From_int(static_cast< int >(0x84DF)));
  rb_define_const(mGlew, "GL_ACTIVE_TEXTURE_ARB", SWIG_From_int(static_cast< int >(0x84E0)));
  rb_define_const(mGlew, "GL_CLIENT_ACTIVE_TEXTURE_ARB", SWIG_From_int(static_cast< int >(0x84E1)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_UNITS_ARB", SWIG_From_int(static_cast< int >(0x84E2)));
  rb_define_const(mGlew, "GL_ARB_occlusion_query", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_QUERY_COUNTER_BITS_ARB", SWIG_From_int(static_cast< int >(0x8864)));
  rb_define_const(mGlew, "GL_CURRENT_QUERY_ARB", SWIG_From_int(static_cast< int >(0x8865)));
  rb_define_const(mGlew, "GL_QUERY_RESULT_ARB", SWIG_From_int(static_cast< int >(0x8866)));
  rb_define_const(mGlew, "GL_QUERY_RESULT_AVAILABLE_ARB", SWIG_From_int(static_cast< int >(0x8867)));
  rb_define_const(mGlew, "GL_SAMPLES_PASSED_ARB", SWIG_From_int(static_cast< int >(0x8914)));
  rb_define_const(mGlew, "GL_ARB_pixel_buffer_object", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PIXEL_PACK_BUFFER_ARB", SWIG_From_int(static_cast< int >(0x88EB)));
  rb_define_const(mGlew, "GL_PIXEL_UNPACK_BUFFER_ARB", SWIG_From_int(static_cast< int >(0x88EC)));
  rb_define_const(mGlew, "GL_PIXEL_PACK_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x88ED)));
  rb_define_const(mGlew, "GL_PIXEL_UNPACK_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x88EF)));
  rb_define_const(mGlew, "GL_ARB_point_parameters", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_POINT_SIZE_MIN_ARB", SWIG_From_int(static_cast< int >(0x8126)));
  rb_define_const(mGlew, "GL_POINT_SIZE_MAX_ARB", SWIG_From_int(static_cast< int >(0x8127)));
  rb_define_const(mGlew, "GL_POINT_FADE_THRESHOLD_SIZE_ARB", SWIG_From_int(static_cast< int >(0x8128)));
  rb_define_const(mGlew, "GL_POINT_DISTANCE_ATTENUATION_ARB", SWIG_From_int(static_cast< int >(0x8129)));
  rb_define_const(mGlew, "GL_ARB_point_sprite", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_POINT_SPRITE_ARB", SWIG_From_int(static_cast< int >(0x8861)));
  rb_define_const(mGlew, "GL_COORD_REPLACE_ARB", SWIG_From_int(static_cast< int >(0x8862)));
  rb_define_const(mGlew, "GL_ARB_shader_objects", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PROGRAM_OBJECT_ARB", SWIG_From_int(static_cast< int >(0x8B40)));
  rb_define_const(mGlew, "GL_SHADER_OBJECT_ARB", SWIG_From_int(static_cast< int >(0x8B48)));
  rb_define_const(mGlew, "GL_OBJECT_TYPE_ARB", SWIG_From_int(static_cast< int >(0x8B4E)));
  rb_define_const(mGlew, "GL_OBJECT_SUBTYPE_ARB", SWIG_From_int(static_cast< int >(0x8B4F)));
  rb_define_const(mGlew, "GL_FLOAT_VEC2_ARB", SWIG_From_int(static_cast< int >(0x8B50)));
  rb_define_const(mGlew, "GL_FLOAT_VEC3_ARB", SWIG_From_int(static_cast< int >(0x8B51)));
  rb_define_const(mGlew, "GL_FLOAT_VEC4_ARB", SWIG_From_int(static_cast< int >(0x8B52)));
  rb_define_const(mGlew, "GL_INT_VEC2_ARB", SWIG_From_int(static_cast< int >(0x8B53)));
  rb_define_const(mGlew, "GL_INT_VEC3_ARB", SWIG_From_int(static_cast< int >(0x8B54)));
  rb_define_const(mGlew, "GL_INT_VEC4_ARB", SWIG_From_int(static_cast< int >(0x8B55)));
  rb_define_const(mGlew, "GL_BOOL_ARB", SWIG_From_int(static_cast< int >(0x8B56)));
  rb_define_const(mGlew, "GL_BOOL_VEC2_ARB", SWIG_From_int(static_cast< int >(0x8B57)));
  rb_define_const(mGlew, "GL_BOOL_VEC3_ARB", SWIG_From_int(static_cast< int >(0x8B58)));
  rb_define_const(mGlew, "GL_BOOL_VEC4_ARB", SWIG_From_int(static_cast< int >(0x8B59)));
  rb_define_const(mGlew, "GL_FLOAT_MAT2_ARB", SWIG_From_int(static_cast< int >(0x8B5A)));
  rb_define_const(mGlew, "GL_FLOAT_MAT3_ARB", SWIG_From_int(static_cast< int >(0x8B5B)));
  rb_define_const(mGlew, "GL_FLOAT_MAT4_ARB", SWIG_From_int(static_cast< int >(0x8B5C)));
  rb_define_const(mGlew, "GL_SAMPLER_1D_ARB", SWIG_From_int(static_cast< int >(0x8B5D)));
  rb_define_const(mGlew, "GL_SAMPLER_2D_ARB", SWIG_From_int(static_cast< int >(0x8B5E)));
  rb_define_const(mGlew, "GL_SAMPLER_3D_ARB", SWIG_From_int(static_cast< int >(0x8B5F)));
  rb_define_const(mGlew, "GL_SAMPLER_CUBE_ARB", SWIG_From_int(static_cast< int >(0x8B60)));
  rb_define_const(mGlew, "GL_SAMPLER_1D_SHADOW_ARB", SWIG_From_int(static_cast< int >(0x8B61)));
  rb_define_const(mGlew, "GL_SAMPLER_2D_SHADOW_ARB", SWIG_From_int(static_cast< int >(0x8B62)));
  rb_define_const(mGlew, "GL_SAMPLER_2D_RECT_ARB", SWIG_From_int(static_cast< int >(0x8B63)));
  rb_define_const(mGlew, "GL_SAMPLER_2D_RECT_SHADOW_ARB", SWIG_From_int(static_cast< int >(0x8B64)));
  rb_define_const(mGlew, "GL_OBJECT_DELETE_STATUS_ARB", SWIG_From_int(static_cast< int >(0x8B80)));
  rb_define_const(mGlew, "GL_OBJECT_COMPILE_STATUS_ARB", SWIG_From_int(static_cast< int >(0x8B81)));
  rb_define_const(mGlew, "GL_OBJECT_LINK_STATUS_ARB", SWIG_From_int(static_cast< int >(0x8B82)));
  rb_define_const(mGlew, "GL_OBJECT_VALIDATE_STATUS_ARB", SWIG_From_int(static_cast< int >(0x8B83)));
  rb_define_const(mGlew, "GL_OBJECT_INFO_LOG_LENGTH_ARB", SWIG_From_int(static_cast< int >(0x8B84)));
  rb_define_const(mGlew, "GL_OBJECT_ATTACHED_OBJECTS_ARB", SWIG_From_int(static_cast< int >(0x8B85)));
  rb_define_const(mGlew, "GL_OBJECT_ACTIVE_UNIFORMS_ARB", SWIG_From_int(static_cast< int >(0x8B86)));
  rb_define_const(mGlew, "GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB", SWIG_From_int(static_cast< int >(0x8B87)));
  rb_define_const(mGlew, "GL_OBJECT_SHADER_SOURCE_LENGTH_ARB", SWIG_From_int(static_cast< int >(0x8B88)));
  rb_define_const(mGlew, "GL_ARB_shading_language_100", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SHADING_LANGUAGE_VERSION_ARB", SWIG_From_int(static_cast< int >(0x8B8C)));
  rb_define_const(mGlew, "GL_ARB_shadow", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPARE_MODE_ARB", SWIG_From_int(static_cast< int >(0x884C)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPARE_FUNC_ARB", SWIG_From_int(static_cast< int >(0x884D)));
  rb_define_const(mGlew, "GL_COMPARE_R_TO_TEXTURE_ARB", SWIG_From_int(static_cast< int >(0x884E)));
  rb_define_const(mGlew, "GL_ARB_shadow_ambient", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPARE_FAIL_VALUE_ARB", SWIG_From_int(static_cast< int >(0x80BF)));
  rb_define_const(mGlew, "GL_ARB_texture_border_clamp", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_CLAMP_TO_BORDER_ARB", SWIG_From_int(static_cast< int >(0x812D)));
  rb_define_const(mGlew, "GL_ARB_texture_buffer_object", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_BUFFER_ARB", SWIG_From_int(static_cast< int >(0x8C2A)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_BUFFER_SIZE_ARB", SWIG_From_int(static_cast< int >(0x8C2B)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_BUFFER_ARB", SWIG_From_int(static_cast< int >(0x8C2C)));
  rb_define_const(mGlew, "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB", SWIG_From_int(static_cast< int >(0x8C2D)));
  rb_define_const(mGlew, "GL_TEXTURE_BUFFER_FORMAT_ARB", SWIG_From_int(static_cast< int >(0x8C2E)));
  rb_define_const(mGlew, "GL_ARB_texture_compression", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COMPRESSED_ALPHA_ARB", SWIG_From_int(static_cast< int >(0x84E9)));
  rb_define_const(mGlew, "GL_COMPRESSED_LUMINANCE_ARB", SWIG_From_int(static_cast< int >(0x84EA)));
  rb_define_const(mGlew, "GL_COMPRESSED_LUMINANCE_ALPHA_ARB", SWIG_From_int(static_cast< int >(0x84EB)));
  rb_define_const(mGlew, "GL_COMPRESSED_INTENSITY_ARB", SWIG_From_int(static_cast< int >(0x84EC)));
  rb_define_const(mGlew, "GL_COMPRESSED_RGB_ARB", SWIG_From_int(static_cast< int >(0x84ED)));
  rb_define_const(mGlew, "GL_COMPRESSED_RGBA_ARB", SWIG_From_int(static_cast< int >(0x84EE)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPRESSION_HINT_ARB", SWIG_From_int(static_cast< int >(0x84EF)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB", SWIG_From_int(static_cast< int >(0x86A0)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPRESSED_ARB", SWIG_From_int(static_cast< int >(0x86A1)));
  rb_define_const(mGlew, "GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB", SWIG_From_int(static_cast< int >(0x86A2)));
  rb_define_const(mGlew, "GL_COMPRESSED_TEXTURE_FORMATS_ARB", SWIG_From_int(static_cast< int >(0x86A3)));
  rb_define_const(mGlew, "GL_ARB_texture_compression_rgtc", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COMPRESSED_RED_RGTC1", SWIG_From_int(static_cast< int >(0x8DBB)));
  rb_define_const(mGlew, "GL_COMPRESSED_SIGNED_RED_RGTC1", SWIG_From_int(static_cast< int >(0x8DBC)));
  rb_define_const(mGlew, "GL_COMPRESSED_RG_RGTC2", SWIG_From_int(static_cast< int >(0x8DBD)));
  rb_define_const(mGlew, "GL_COMPRESSED_SIGNED_RG_RGTC2", SWIG_From_int(static_cast< int >(0x8DBE)));
  rb_define_const(mGlew, "GL_ARB_texture_cube_map", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_NORMAL_MAP_ARB", SWIG_From_int(static_cast< int >(0x8511)));
  rb_define_const(mGlew, "GL_REFLECTION_MAP_ARB", SWIG_From_int(static_cast< int >(0x8512)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_ARB", SWIG_From_int(static_cast< int >(0x8513)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_CUBE_MAP_ARB", SWIG_From_int(static_cast< int >(0x8514)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB", SWIG_From_int(static_cast< int >(0x8515)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB", SWIG_From_int(static_cast< int >(0x8516)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB", SWIG_From_int(static_cast< int >(0x8517)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB", SWIG_From_int(static_cast< int >(0x8518)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB", SWIG_From_int(static_cast< int >(0x8519)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB", SWIG_From_int(static_cast< int >(0x851A)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_CUBE_MAP_ARB", SWIG_From_int(static_cast< int >(0x851B)));
  rb_define_const(mGlew, "GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB", SWIG_From_int(static_cast< int >(0x851C)));
  rb_define_const(mGlew, "GL_ARB_texture_env_add", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ARB_texture_env_combine", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SUBTRACT_ARB", SWIG_From_int(static_cast< int >(0x84E7)));
  rb_define_const(mGlew, "GL_COMBINE_ARB", SWIG_From_int(static_cast< int >(0x8570)));
  rb_define_const(mGlew, "GL_COMBINE_RGB_ARB", SWIG_From_int(static_cast< int >(0x8571)));
  rb_define_const(mGlew, "GL_COMBINE_ALPHA_ARB", SWIG_From_int(static_cast< int >(0x8572)));
  rb_define_const(mGlew, "GL_RGB_SCALE_ARB", SWIG_From_int(static_cast< int >(0x8573)));
  rb_define_const(mGlew, "GL_ADD_SIGNED_ARB", SWIG_From_int(static_cast< int >(0x8574)));
  rb_define_const(mGlew, "GL_INTERPOLATE_ARB", SWIG_From_int(static_cast< int >(0x8575)));
  rb_define_const(mGlew, "GL_CONSTANT_ARB", SWIG_From_int(static_cast< int >(0x8576)));
  rb_define_const(mGlew, "GL_PRIMARY_COLOR_ARB", SWIG_From_int(static_cast< int >(0x8577)));
  rb_define_const(mGlew, "GL_PREVIOUS_ARB", SWIG_From_int(static_cast< int >(0x8578)));
  rb_define_const(mGlew, "GL_SOURCE0_RGB_ARB", SWIG_From_int(static_cast< int >(0x8580)));
  rb_define_const(mGlew, "GL_SOURCE1_RGB_ARB", SWIG_From_int(static_cast< int >(0x8581)));
  rb_define_const(mGlew, "GL_SOURCE2_RGB_ARB", SWIG_From_int(static_cast< int >(0x8582)));
  rb_define_const(mGlew, "GL_SOURCE0_ALPHA_ARB", SWIG_From_int(static_cast< int >(0x8588)));
  rb_define_const(mGlew, "GL_SOURCE1_ALPHA_ARB", SWIG_From_int(static_cast< int >(0x8589)));
  rb_define_const(mGlew, "GL_SOURCE2_ALPHA_ARB", SWIG_From_int(static_cast< int >(0x858A)));
  rb_define_const(mGlew, "GL_OPERAND0_RGB_ARB", SWIG_From_int(static_cast< int >(0x8590)));
  rb_define_const(mGlew, "GL_OPERAND1_RGB_ARB", SWIG_From_int(static_cast< int >(0x8591)));
  rb_define_const(mGlew, "GL_OPERAND2_RGB_ARB", SWIG_From_int(static_cast< int >(0x8592)));
  rb_define_const(mGlew, "GL_OPERAND0_ALPHA_ARB", SWIG_From_int(static_cast< int >(0x8598)));
  rb_define_const(mGlew, "GL_OPERAND1_ALPHA_ARB", SWIG_From_int(static_cast< int >(0x8599)));
  rb_define_const(mGlew, "GL_OPERAND2_ALPHA_ARB", SWIG_From_int(static_cast< int >(0x859A)));
  rb_define_const(mGlew, "GL_ARB_texture_env_crossbar", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ARB_texture_env_dot3", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DOT3_RGB_ARB", SWIG_From_int(static_cast< int >(0x86AE)));
  rb_define_const(mGlew, "GL_DOT3_RGBA_ARB", SWIG_From_int(static_cast< int >(0x86AF)));
  rb_define_const(mGlew, "GL_ARB_texture_float", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RGBA32F_ARB", SWIG_From_int(static_cast< int >(0x8814)));
  rb_define_const(mGlew, "GL_RGB32F_ARB", SWIG_From_int(static_cast< int >(0x8815)));
  rb_define_const(mGlew, "GL_ALPHA32F_ARB", SWIG_From_int(static_cast< int >(0x8816)));
  rb_define_const(mGlew, "GL_INTENSITY32F_ARB", SWIG_From_int(static_cast< int >(0x8817)));
  rb_define_const(mGlew, "GL_LUMINANCE32F_ARB", SWIG_From_int(static_cast< int >(0x8818)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA32F_ARB", SWIG_From_int(static_cast< int >(0x8819)));
  rb_define_const(mGlew, "GL_RGBA16F_ARB", SWIG_From_int(static_cast< int >(0x881A)));
  rb_define_const(mGlew, "GL_RGB16F_ARB", SWIG_From_int(static_cast< int >(0x881B)));
  rb_define_const(mGlew, "GL_ALPHA16F_ARB", SWIG_From_int(static_cast< int >(0x881C)));
  rb_define_const(mGlew, "GL_INTENSITY16F_ARB", SWIG_From_int(static_cast< int >(0x881D)));
  rb_define_const(mGlew, "GL_LUMINANCE16F_ARB", SWIG_From_int(static_cast< int >(0x881E)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA16F_ARB", SWIG_From_int(static_cast< int >(0x881F)));
  rb_define_const(mGlew, "GL_TEXTURE_RED_TYPE_ARB", SWIG_From_int(static_cast< int >(0x8C10)));
  rb_define_const(mGlew, "GL_TEXTURE_GREEN_TYPE_ARB", SWIG_From_int(static_cast< int >(0x8C11)));
  rb_define_const(mGlew, "GL_TEXTURE_BLUE_TYPE_ARB", SWIG_From_int(static_cast< int >(0x8C12)));
  rb_define_const(mGlew, "GL_TEXTURE_ALPHA_TYPE_ARB", SWIG_From_int(static_cast< int >(0x8C13)));
  rb_define_const(mGlew, "GL_TEXTURE_LUMINANCE_TYPE_ARB", SWIG_From_int(static_cast< int >(0x8C14)));
  rb_define_const(mGlew, "GL_TEXTURE_INTENSITY_TYPE_ARB", SWIG_From_int(static_cast< int >(0x8C15)));
  rb_define_const(mGlew, "GL_TEXTURE_DEPTH_TYPE_ARB", SWIG_From_int(static_cast< int >(0x8C16)));
  rb_define_const(mGlew, "GL_UNSIGNED_NORMALIZED_ARB", SWIG_From_int(static_cast< int >(0x8C17)));
  rb_define_const(mGlew, "GL_ARB_texture_mirrored_repeat", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MIRRORED_REPEAT_ARB", SWIG_From_int(static_cast< int >(0x8370)));
  rb_define_const(mGlew, "GL_ARB_texture_non_power_of_two", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ARB_texture_rectangle", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_RECTANGLE_ARB", SWIG_From_int(static_cast< int >(0x84F5)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_RECTANGLE_ARB", SWIG_From_int(static_cast< int >(0x84F6)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_RECTANGLE_ARB", SWIG_From_int(static_cast< int >(0x84F7)));
  rb_define_const(mGlew, "GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB", SWIG_From_int(static_cast< int >(0x84F8)));
  rb_define_const(mGlew, "GL_ARB_texture_rg", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RG", SWIG_From_int(static_cast< int >(0x8227)));
  rb_define_const(mGlew, "GL_RG_INTEGER", SWIG_From_int(static_cast< int >(0x8228)));
  rb_define_const(mGlew, "GL_R8", SWIG_From_int(static_cast< int >(0x8229)));
  rb_define_const(mGlew, "GL_R16", SWIG_From_int(static_cast< int >(0x822A)));
  rb_define_const(mGlew, "GL_RG8", SWIG_From_int(static_cast< int >(0x822B)));
  rb_define_const(mGlew, "GL_RG16", SWIG_From_int(static_cast< int >(0x822C)));
  rb_define_const(mGlew, "GL_R16F", SWIG_From_int(static_cast< int >(0x822D)));
  rb_define_const(mGlew, "GL_R32F", SWIG_From_int(static_cast< int >(0x822E)));
  rb_define_const(mGlew, "GL_RG16F", SWIG_From_int(static_cast< int >(0x822F)));
  rb_define_const(mGlew, "GL_RG32F", SWIG_From_int(static_cast< int >(0x8230)));
  rb_define_const(mGlew, "GL_R8I", SWIG_From_int(static_cast< int >(0x8231)));
  rb_define_const(mGlew, "GL_R8UI", SWIG_From_int(static_cast< int >(0x8232)));
  rb_define_const(mGlew, "GL_R16I", SWIG_From_int(static_cast< int >(0x8233)));
  rb_define_const(mGlew, "GL_R16UI", SWIG_From_int(static_cast< int >(0x8234)));
  rb_define_const(mGlew, "GL_R32I", SWIG_From_int(static_cast< int >(0x8235)));
  rb_define_const(mGlew, "GL_R32UI", SWIG_From_int(static_cast< int >(0x8236)));
  rb_define_const(mGlew, "GL_RG8I", SWIG_From_int(static_cast< int >(0x8237)));
  rb_define_const(mGlew, "GL_RG8UI", SWIG_From_int(static_cast< int >(0x8238)));
  rb_define_const(mGlew, "GL_RG16I", SWIG_From_int(static_cast< int >(0x8239)));
  rb_define_const(mGlew, "GL_RG16UI", SWIG_From_int(static_cast< int >(0x823A)));
  rb_define_const(mGlew, "GL_RG32I", SWIG_From_int(static_cast< int >(0x823B)));
  rb_define_const(mGlew, "GL_RG32UI", SWIG_From_int(static_cast< int >(0x823C)));
  rb_define_const(mGlew, "GL_ARB_transpose_matrix", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TRANSPOSE_MODELVIEW_MATRIX_ARB", SWIG_From_int(static_cast< int >(0x84E3)));
  rb_define_const(mGlew, "GL_TRANSPOSE_PROJECTION_MATRIX_ARB", SWIG_From_int(static_cast< int >(0x84E4)));
  rb_define_const(mGlew, "GL_TRANSPOSE_TEXTURE_MATRIX_ARB", SWIG_From_int(static_cast< int >(0x84E5)));
  rb_define_const(mGlew, "GL_TRANSPOSE_COLOR_MATRIX_ARB", SWIG_From_int(static_cast< int >(0x84E6)));
  rb_define_const(mGlew, "GL_ARB_vertex_array_object", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_BINDING", SWIG_From_int(static_cast< int >(0x85B5)));
  rb_define_const(mGlew, "GL_ARB_vertex_blend", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MODELVIEW0_ARB", SWIG_From_int(static_cast< int >(0x1700)));
  rb_define_const(mGlew, "GL_MODELVIEW1_ARB", SWIG_From_int(static_cast< int >(0x850A)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_UNITS_ARB", SWIG_From_int(static_cast< int >(0x86A4)));
  rb_define_const(mGlew, "GL_ACTIVE_VERTEX_UNITS_ARB", SWIG_From_int(static_cast< int >(0x86A5)));
  rb_define_const(mGlew, "GL_WEIGHT_SUM_UNITY_ARB", SWIG_From_int(static_cast< int >(0x86A6)));
  rb_define_const(mGlew, "GL_VERTEX_BLEND_ARB", SWIG_From_int(static_cast< int >(0x86A7)));
  rb_define_const(mGlew, "GL_CURRENT_WEIGHT_ARB", SWIG_From_int(static_cast< int >(0x86A8)));
  rb_define_const(mGlew, "GL_WEIGHT_ARRAY_TYPE_ARB", SWIG_From_int(static_cast< int >(0x86A9)));
  rb_define_const(mGlew, "GL_WEIGHT_ARRAY_STRIDE_ARB", SWIG_From_int(static_cast< int >(0x86AA)));
  rb_define_const(mGlew, "GL_WEIGHT_ARRAY_SIZE_ARB", SWIG_From_int(static_cast< int >(0x86AB)));
  rb_define_const(mGlew, "GL_WEIGHT_ARRAY_POINTER_ARB", SWIG_From_int(static_cast< int >(0x86AC)));
  rb_define_const(mGlew, "GL_WEIGHT_ARRAY_ARB", SWIG_From_int(static_cast< int >(0x86AD)));
  rb_define_const(mGlew, "GL_MODELVIEW2_ARB", SWIG_From_int(static_cast< int >(0x8722)));
  rb_define_const(mGlew, "GL_MODELVIEW3_ARB", SWIG_From_int(static_cast< int >(0x8723)));
  rb_define_const(mGlew, "GL_MODELVIEW4_ARB", SWIG_From_int(static_cast< int >(0x8724)));
  rb_define_const(mGlew, "GL_MODELVIEW5_ARB", SWIG_From_int(static_cast< int >(0x8725)));
  rb_define_const(mGlew, "GL_MODELVIEW6_ARB", SWIG_From_int(static_cast< int >(0x8726)));
  rb_define_const(mGlew, "GL_MODELVIEW7_ARB", SWIG_From_int(static_cast< int >(0x8727)));
  rb_define_const(mGlew, "GL_MODELVIEW8_ARB", SWIG_From_int(static_cast< int >(0x8728)));
  rb_define_const(mGlew, "GL_MODELVIEW9_ARB", SWIG_From_int(static_cast< int >(0x8729)));
  rb_define_const(mGlew, "GL_MODELVIEW10_ARB", SWIG_From_int(static_cast< int >(0x872A)));
  rb_define_const(mGlew, "GL_MODELVIEW11_ARB", SWIG_From_int(static_cast< int >(0x872B)));
  rb_define_const(mGlew, "GL_MODELVIEW12_ARB", SWIG_From_int(static_cast< int >(0x872C)));
  rb_define_const(mGlew, "GL_MODELVIEW13_ARB", SWIG_From_int(static_cast< int >(0x872D)));
  rb_define_const(mGlew, "GL_MODELVIEW14_ARB", SWIG_From_int(static_cast< int >(0x872E)));
  rb_define_const(mGlew, "GL_MODELVIEW15_ARB", SWIG_From_int(static_cast< int >(0x872F)));
  rb_define_const(mGlew, "GL_MODELVIEW16_ARB", SWIG_From_int(static_cast< int >(0x8730)));
  rb_define_const(mGlew, "GL_MODELVIEW17_ARB", SWIG_From_int(static_cast< int >(0x8731)));
  rb_define_const(mGlew, "GL_MODELVIEW18_ARB", SWIG_From_int(static_cast< int >(0x8732)));
  rb_define_const(mGlew, "GL_MODELVIEW19_ARB", SWIG_From_int(static_cast< int >(0x8733)));
  rb_define_const(mGlew, "GL_MODELVIEW20_ARB", SWIG_From_int(static_cast< int >(0x8734)));
  rb_define_const(mGlew, "GL_MODELVIEW21_ARB", SWIG_From_int(static_cast< int >(0x8735)));
  rb_define_const(mGlew, "GL_MODELVIEW22_ARB", SWIG_From_int(static_cast< int >(0x8736)));
  rb_define_const(mGlew, "GL_MODELVIEW23_ARB", SWIG_From_int(static_cast< int >(0x8737)));
  rb_define_const(mGlew, "GL_MODELVIEW24_ARB", SWIG_From_int(static_cast< int >(0x8738)));
  rb_define_const(mGlew, "GL_MODELVIEW25_ARB", SWIG_From_int(static_cast< int >(0x8739)));
  rb_define_const(mGlew, "GL_MODELVIEW26_ARB", SWIG_From_int(static_cast< int >(0x873A)));
  rb_define_const(mGlew, "GL_MODELVIEW27_ARB", SWIG_From_int(static_cast< int >(0x873B)));
  rb_define_const(mGlew, "GL_MODELVIEW28_ARB", SWIG_From_int(static_cast< int >(0x873C)));
  rb_define_const(mGlew, "GL_MODELVIEW29_ARB", SWIG_From_int(static_cast< int >(0x873D)));
  rb_define_const(mGlew, "GL_MODELVIEW30_ARB", SWIG_From_int(static_cast< int >(0x873E)));
  rb_define_const(mGlew, "GL_MODELVIEW31_ARB", SWIG_From_int(static_cast< int >(0x873F)));
  rb_define_const(mGlew, "GL_ARB_vertex_buffer_object", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_BUFFER_SIZE_ARB", SWIG_From_int(static_cast< int >(0x8764)));
  rb_define_const(mGlew, "GL_BUFFER_USAGE_ARB", SWIG_From_int(static_cast< int >(0x8765)));
  rb_define_const(mGlew, "GL_ARRAY_BUFFER_ARB", SWIG_From_int(static_cast< int >(0x8892)));
  rb_define_const(mGlew, "GL_ELEMENT_ARRAY_BUFFER_ARB", SWIG_From_int(static_cast< int >(0x8893)));
  rb_define_const(mGlew, "GL_ARRAY_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x8894)));
  rb_define_const(mGlew, "GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x8895)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x8896)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x8897)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x8898)));
  rb_define_const(mGlew, "GL_INDEX_ARRAY_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x8899)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x889A)));
  rb_define_const(mGlew, "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x889B)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x889C)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x889D)));
  rb_define_const(mGlew, "GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x889E)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB", SWIG_From_int(static_cast< int >(0x889F)));
  rb_define_const(mGlew, "GL_READ_ONLY_ARB", SWIG_From_int(static_cast< int >(0x88B8)));
  rb_define_const(mGlew, "GL_WRITE_ONLY_ARB", SWIG_From_int(static_cast< int >(0x88B9)));
  rb_define_const(mGlew, "GL_READ_WRITE_ARB", SWIG_From_int(static_cast< int >(0x88BA)));
  rb_define_const(mGlew, "GL_BUFFER_ACCESS_ARB", SWIG_From_int(static_cast< int >(0x88BB)));
  rb_define_const(mGlew, "GL_BUFFER_MAPPED_ARB", SWIG_From_int(static_cast< int >(0x88BC)));
  rb_define_const(mGlew, "GL_BUFFER_MAP_POINTER_ARB", SWIG_From_int(static_cast< int >(0x88BD)));
  rb_define_const(mGlew, "GL_STREAM_DRAW_ARB", SWIG_From_int(static_cast< int >(0x88E0)));
  rb_define_const(mGlew, "GL_STREAM_READ_ARB", SWIG_From_int(static_cast< int >(0x88E1)));
  rb_define_const(mGlew, "GL_STREAM_COPY_ARB", SWIG_From_int(static_cast< int >(0x88E2)));
  rb_define_const(mGlew, "GL_STATIC_DRAW_ARB", SWIG_From_int(static_cast< int >(0x88E4)));
  rb_define_const(mGlew, "GL_STATIC_READ_ARB", SWIG_From_int(static_cast< int >(0x88E5)));
  rb_define_const(mGlew, "GL_STATIC_COPY_ARB", SWIG_From_int(static_cast< int >(0x88E6)));
  rb_define_const(mGlew, "GL_DYNAMIC_DRAW_ARB", SWIG_From_int(static_cast< int >(0x88E8)));
  rb_define_const(mGlew, "GL_DYNAMIC_READ_ARB", SWIG_From_int(static_cast< int >(0x88E9)));
  rb_define_const(mGlew, "GL_DYNAMIC_COPY_ARB", SWIG_From_int(static_cast< int >(0x88EA)));
  rb_define_const(mGlew, "GL_ARB_vertex_program", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COLOR_SUM_ARB", SWIG_From_int(static_cast< int >(0x8458)));
  rb_define_const(mGlew, "GL_VERTEX_PROGRAM_ARB", SWIG_From_int(static_cast< int >(0x8620)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB", SWIG_From_int(static_cast< int >(0x8622)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB", SWIG_From_int(static_cast< int >(0x8623)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB", SWIG_From_int(static_cast< int >(0x8624)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB", SWIG_From_int(static_cast< int >(0x8625)));
  rb_define_const(mGlew, "GL_CURRENT_VERTEX_ATTRIB_ARB", SWIG_From_int(static_cast< int >(0x8626)));
  rb_define_const(mGlew, "GL_PROGRAM_LENGTH_ARB", SWIG_From_int(static_cast< int >(0x8627)));
  rb_define_const(mGlew, "GL_PROGRAM_STRING_ARB", SWIG_From_int(static_cast< int >(0x8628)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB", SWIG_From_int(static_cast< int >(0x862E)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_MATRICES_ARB", SWIG_From_int(static_cast< int >(0x862F)));
  rb_define_const(mGlew, "GL_CURRENT_MATRIX_STACK_DEPTH_ARB", SWIG_From_int(static_cast< int >(0x8640)));
  rb_define_const(mGlew, "GL_CURRENT_MATRIX_ARB", SWIG_From_int(static_cast< int >(0x8641)));
  rb_define_const(mGlew, "GL_VERTEX_PROGRAM_POINT_SIZE_ARB", SWIG_From_int(static_cast< int >(0x8642)));
  rb_define_const(mGlew, "GL_VERTEX_PROGRAM_TWO_SIDE_ARB", SWIG_From_int(static_cast< int >(0x8643)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB", SWIG_From_int(static_cast< int >(0x8645)));
  rb_define_const(mGlew, "GL_PROGRAM_ERROR_POSITION_ARB", SWIG_From_int(static_cast< int >(0x864B)));
  rb_define_const(mGlew, "GL_PROGRAM_BINDING_ARB", SWIG_From_int(static_cast< int >(0x8677)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_ATTRIBS_ARB", SWIG_From_int(static_cast< int >(0x8869)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB", SWIG_From_int(static_cast< int >(0x886A)));
  rb_define_const(mGlew, "GL_PROGRAM_ERROR_STRING_ARB", SWIG_From_int(static_cast< int >(0x8874)));
  rb_define_const(mGlew, "GL_PROGRAM_FORMAT_ASCII_ARB", SWIG_From_int(static_cast< int >(0x8875)));
  rb_define_const(mGlew, "GL_PROGRAM_FORMAT_ARB", SWIG_From_int(static_cast< int >(0x8876)));
  rb_define_const(mGlew, "GL_PROGRAM_INSTRUCTIONS_ARB", SWIG_From_int(static_cast< int >(0x88A0)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_INSTRUCTIONS_ARB", SWIG_From_int(static_cast< int >(0x88A1)));
  rb_define_const(mGlew, "GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB", SWIG_From_int(static_cast< int >(0x88A2)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB", SWIG_From_int(static_cast< int >(0x88A3)));
  rb_define_const(mGlew, "GL_PROGRAM_TEMPORARIES_ARB", SWIG_From_int(static_cast< int >(0x88A4)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_TEMPORARIES_ARB", SWIG_From_int(static_cast< int >(0x88A5)));
  rb_define_const(mGlew, "GL_PROGRAM_NATIVE_TEMPORARIES_ARB", SWIG_From_int(static_cast< int >(0x88A6)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB", SWIG_From_int(static_cast< int >(0x88A7)));
  rb_define_const(mGlew, "GL_PROGRAM_PARAMETERS_ARB", SWIG_From_int(static_cast< int >(0x88A8)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_PARAMETERS_ARB", SWIG_From_int(static_cast< int >(0x88A9)));
  rb_define_const(mGlew, "GL_PROGRAM_NATIVE_PARAMETERS_ARB", SWIG_From_int(static_cast< int >(0x88AA)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB", SWIG_From_int(static_cast< int >(0x88AB)));
  rb_define_const(mGlew, "GL_PROGRAM_ATTRIBS_ARB", SWIG_From_int(static_cast< int >(0x88AC)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_ATTRIBS_ARB", SWIG_From_int(static_cast< int >(0x88AD)));
  rb_define_const(mGlew, "GL_PROGRAM_NATIVE_ATTRIBS_ARB", SWIG_From_int(static_cast< int >(0x88AE)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB", SWIG_From_int(static_cast< int >(0x88AF)));
  rb_define_const(mGlew, "GL_PROGRAM_ADDRESS_REGISTERS_ARB", SWIG_From_int(static_cast< int >(0x88B0)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB", SWIG_From_int(static_cast< int >(0x88B1)));
  rb_define_const(mGlew, "GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB", SWIG_From_int(static_cast< int >(0x88B2)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB", SWIG_From_int(static_cast< int >(0x88B3)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB", SWIG_From_int(static_cast< int >(0x88B4)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_ENV_PARAMETERS_ARB", SWIG_From_int(static_cast< int >(0x88B5)));
  rb_define_const(mGlew, "GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB", SWIG_From_int(static_cast< int >(0x88B6)));
  rb_define_const(mGlew, "GL_TRANSPOSE_CURRENT_MATRIX_ARB", SWIG_From_int(static_cast< int >(0x88B7)));
  rb_define_const(mGlew, "GL_MATRIX0_ARB", SWIG_From_int(static_cast< int >(0x88C0)));
  rb_define_const(mGlew, "GL_MATRIX1_ARB", SWIG_From_int(static_cast< int >(0x88C1)));
  rb_define_const(mGlew, "GL_MATRIX2_ARB", SWIG_From_int(static_cast< int >(0x88C2)));
  rb_define_const(mGlew, "GL_MATRIX3_ARB", SWIG_From_int(static_cast< int >(0x88C3)));
  rb_define_const(mGlew, "GL_MATRIX4_ARB", SWIG_From_int(static_cast< int >(0x88C4)));
  rb_define_const(mGlew, "GL_MATRIX5_ARB", SWIG_From_int(static_cast< int >(0x88C5)));
  rb_define_const(mGlew, "GL_MATRIX6_ARB", SWIG_From_int(static_cast< int >(0x88C6)));
  rb_define_const(mGlew, "GL_MATRIX7_ARB", SWIG_From_int(static_cast< int >(0x88C7)));
  rb_define_const(mGlew, "GL_MATRIX8_ARB", SWIG_From_int(static_cast< int >(0x88C8)));
  rb_define_const(mGlew, "GL_MATRIX9_ARB", SWIG_From_int(static_cast< int >(0x88C9)));
  rb_define_const(mGlew, "GL_MATRIX10_ARB", SWIG_From_int(static_cast< int >(0x88CA)));
  rb_define_const(mGlew, "GL_MATRIX11_ARB", SWIG_From_int(static_cast< int >(0x88CB)));
  rb_define_const(mGlew, "GL_MATRIX12_ARB", SWIG_From_int(static_cast< int >(0x88CC)));
  rb_define_const(mGlew, "GL_MATRIX13_ARB", SWIG_From_int(static_cast< int >(0x88CD)));
  rb_define_const(mGlew, "GL_MATRIX14_ARB", SWIG_From_int(static_cast< int >(0x88CE)));
  rb_define_const(mGlew, "GL_MATRIX15_ARB", SWIG_From_int(static_cast< int >(0x88CF)));
  rb_define_const(mGlew, "GL_MATRIX16_ARB", SWIG_From_int(static_cast< int >(0x88D0)));
  rb_define_const(mGlew, "GL_MATRIX17_ARB", SWIG_From_int(static_cast< int >(0x88D1)));
  rb_define_const(mGlew, "GL_MATRIX18_ARB", SWIG_From_int(static_cast< int >(0x88D2)));
  rb_define_const(mGlew, "GL_MATRIX19_ARB", SWIG_From_int(static_cast< int >(0x88D3)));
  rb_define_const(mGlew, "GL_MATRIX20_ARB", SWIG_From_int(static_cast< int >(0x88D4)));
  rb_define_const(mGlew, "GL_MATRIX21_ARB", SWIG_From_int(static_cast< int >(0x88D5)));
  rb_define_const(mGlew, "GL_MATRIX22_ARB", SWIG_From_int(static_cast< int >(0x88D6)));
  rb_define_const(mGlew, "GL_MATRIX23_ARB", SWIG_From_int(static_cast< int >(0x88D7)));
  rb_define_const(mGlew, "GL_MATRIX24_ARB", SWIG_From_int(static_cast< int >(0x88D8)));
  rb_define_const(mGlew, "GL_MATRIX25_ARB", SWIG_From_int(static_cast< int >(0x88D9)));
  rb_define_const(mGlew, "GL_MATRIX26_ARB", SWIG_From_int(static_cast< int >(0x88DA)));
  rb_define_const(mGlew, "GL_MATRIX27_ARB", SWIG_From_int(static_cast< int >(0x88DB)));
  rb_define_const(mGlew, "GL_MATRIX28_ARB", SWIG_From_int(static_cast< int >(0x88DC)));
  rb_define_const(mGlew, "GL_MATRIX29_ARB", SWIG_From_int(static_cast< int >(0x88DD)));
  rb_define_const(mGlew, "GL_MATRIX30_ARB", SWIG_From_int(static_cast< int >(0x88DE)));
  rb_define_const(mGlew, "GL_MATRIX31_ARB", SWIG_From_int(static_cast< int >(0x88DF)));
  rb_define_const(mGlew, "GL_ARB_vertex_shader", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX_SHADER_ARB", SWIG_From_int(static_cast< int >(0x8B31)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB", SWIG_From_int(static_cast< int >(0x8B4A)));
  rb_define_const(mGlew, "GL_MAX_VARYING_FLOATS_ARB", SWIG_From_int(static_cast< int >(0x8B4B)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB", SWIG_From_int(static_cast< int >(0x8B4C)));
  rb_define_const(mGlew, "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB", SWIG_From_int(static_cast< int >(0x8B4D)));
  rb_define_const(mGlew, "GL_OBJECT_ACTIVE_ATTRIBUTES_ARB", SWIG_From_int(static_cast< int >(0x8B89)));
  rb_define_const(mGlew, "GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB", SWIG_From_int(static_cast< int >(0x8B8A)));
  rb_define_const(mGlew, "GL_ARB_window_pos", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ATIX_point_sprites", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_POINT_MODE_ATIX", SWIG_From_int(static_cast< int >(0x60B0)));
  rb_define_const(mGlew, "GL_TEXTURE_POINT_ONE_COORD_ATIX", SWIG_From_int(static_cast< int >(0x60B1)));
  rb_define_const(mGlew, "GL_TEXTURE_POINT_SPRITE_ATIX", SWIG_From_int(static_cast< int >(0x60B2)));
  rb_define_const(mGlew, "GL_POINT_SPRITE_CULL_MODE_ATIX", SWIG_From_int(static_cast< int >(0x60B3)));
  rb_define_const(mGlew, "GL_POINT_SPRITE_CULL_CENTER_ATIX", SWIG_From_int(static_cast< int >(0x60B4)));
  rb_define_const(mGlew, "GL_POINT_SPRITE_CULL_CLIP_ATIX", SWIG_From_int(static_cast< int >(0x60B5)));
  rb_define_const(mGlew, "GL_ATIX_texture_env_combine3", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MODULATE_ADD_ATIX", SWIG_From_int(static_cast< int >(0x8744)));
  rb_define_const(mGlew, "GL_MODULATE_SIGNED_ADD_ATIX", SWIG_From_int(static_cast< int >(0x8745)));
  rb_define_const(mGlew, "GL_MODULATE_SUBTRACT_ATIX", SWIG_From_int(static_cast< int >(0x8746)));
  rb_define_const(mGlew, "GL_ATIX_texture_env_route", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ATIX", SWIG_From_int(static_cast< int >(0x8747)));
  rb_define_const(mGlew, "GL_TEXTURE_OUTPUT_RGB_ATIX", SWIG_From_int(static_cast< int >(0x8748)));
  rb_define_const(mGlew, "GL_TEXTURE_OUTPUT_ALPHA_ATIX", SWIG_From_int(static_cast< int >(0x8749)));
  rb_define_const(mGlew, "GL_ATIX_vertex_shader_output_point_size", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_OUTPUT_POINT_SIZE_ATIX", SWIG_From_int(static_cast< int >(0x610E)));
  rb_define_const(mGlew, "GL_ATI_draw_buffers", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MAX_DRAW_BUFFERS_ATI", SWIG_From_int(static_cast< int >(0x8824)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER0_ATI", SWIG_From_int(static_cast< int >(0x8825)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER1_ATI", SWIG_From_int(static_cast< int >(0x8826)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER2_ATI", SWIG_From_int(static_cast< int >(0x8827)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER3_ATI", SWIG_From_int(static_cast< int >(0x8828)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER4_ATI", SWIG_From_int(static_cast< int >(0x8829)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER5_ATI", SWIG_From_int(static_cast< int >(0x882A)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER6_ATI", SWIG_From_int(static_cast< int >(0x882B)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER7_ATI", SWIG_From_int(static_cast< int >(0x882C)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER8_ATI", SWIG_From_int(static_cast< int >(0x882D)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER9_ATI", SWIG_From_int(static_cast< int >(0x882E)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER10_ATI", SWIG_From_int(static_cast< int >(0x882F)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER11_ATI", SWIG_From_int(static_cast< int >(0x8830)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER12_ATI", SWIG_From_int(static_cast< int >(0x8831)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER13_ATI", SWIG_From_int(static_cast< int >(0x8832)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER14_ATI", SWIG_From_int(static_cast< int >(0x8833)));
  rb_define_const(mGlew, "GL_DRAW_BUFFER15_ATI", SWIG_From_int(static_cast< int >(0x8834)));
  rb_define_const(mGlew, "GL_ATI_element_array", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ELEMENT_ARRAY_ATI", SWIG_From_int(static_cast< int >(0x8768)));
  rb_define_const(mGlew, "GL_ELEMENT_ARRAY_TYPE_ATI", SWIG_From_int(static_cast< int >(0x8769)));
  rb_define_const(mGlew, "GL_ELEMENT_ARRAY_POINTER_ATI", SWIG_From_int(static_cast< int >(0x876A)));
  rb_define_const(mGlew, "GL_ATI_envmap_bumpmap", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_BUMP_ROT_MATRIX_ATI", SWIG_From_int(static_cast< int >(0x8775)));
  rb_define_const(mGlew, "GL_BUMP_ROT_MATRIX_SIZE_ATI", SWIG_From_int(static_cast< int >(0x8776)));
  rb_define_const(mGlew, "GL_BUMP_NUM_TEX_UNITS_ATI", SWIG_From_int(static_cast< int >(0x8777)));
  rb_define_const(mGlew, "GL_BUMP_TEX_UNITS_ATI", SWIG_From_int(static_cast< int >(0x8778)));
  rb_define_const(mGlew, "GL_DUDV_ATI", SWIG_From_int(static_cast< int >(0x8779)));
  rb_define_const(mGlew, "GL_DU8DV8_ATI", SWIG_From_int(static_cast< int >(0x877A)));
  rb_define_const(mGlew, "GL_BUMP_ENVMAP_ATI", SWIG_From_int(static_cast< int >(0x877B)));
  rb_define_const(mGlew, "GL_BUMP_TARGET_ATI", SWIG_From_int(static_cast< int >(0x877C)));
  rb_define_const(mGlew, "GL_ATI_fragment_shader", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RED_BIT_ATI", SWIG_From_int(static_cast< int >(0x00000001)));
  rb_define_const(mGlew, "GL_2X_BIT_ATI", SWIG_From_int(static_cast< int >(0x00000001)));
  rb_define_const(mGlew, "GL_4X_BIT_ATI", SWIG_From_int(static_cast< int >(0x00000002)));
  rb_define_const(mGlew, "GL_GREEN_BIT_ATI", SWIG_From_int(static_cast< int >(0x00000002)));
  rb_define_const(mGlew, "GL_COMP_BIT_ATI", SWIG_From_int(static_cast< int >(0x00000002)));
  rb_define_const(mGlew, "GL_BLUE_BIT_ATI", SWIG_From_int(static_cast< int >(0x00000004)));
  rb_define_const(mGlew, "GL_8X_BIT_ATI", SWIG_From_int(static_cast< int >(0x00000004)));
  rb_define_const(mGlew, "GL_NEGATE_BIT_ATI", SWIG_From_int(static_cast< int >(0x00000004)));
  rb_define_const(mGlew, "GL_BIAS_BIT_ATI", SWIG_From_int(static_cast< int >(0x00000008)));
  rb_define_const(mGlew, "GL_HALF_BIT_ATI", SWIG_From_int(static_cast< int >(0x00000008)));
  rb_define_const(mGlew, "GL_QUARTER_BIT_ATI", SWIG_From_int(static_cast< int >(0x00000010)));
  rb_define_const(mGlew, "GL_EIGHTH_BIT_ATI", SWIG_From_int(static_cast< int >(0x00000020)));
  rb_define_const(mGlew, "GL_SATURATE_BIT_ATI", SWIG_From_int(static_cast< int >(0x00000040)));
  rb_define_const(mGlew, "GL_FRAGMENT_SHADER_ATI", SWIG_From_int(static_cast< int >(0x8920)));
  rb_define_const(mGlew, "GL_REG_0_ATI", SWIG_From_int(static_cast< int >(0x8921)));
  rb_define_const(mGlew, "GL_REG_1_ATI", SWIG_From_int(static_cast< int >(0x8922)));
  rb_define_const(mGlew, "GL_REG_2_ATI", SWIG_From_int(static_cast< int >(0x8923)));
  rb_define_const(mGlew, "GL_REG_3_ATI", SWIG_From_int(static_cast< int >(0x8924)));
  rb_define_const(mGlew, "GL_REG_4_ATI", SWIG_From_int(static_cast< int >(0x8925)));
  rb_define_const(mGlew, "GL_REG_5_ATI", SWIG_From_int(static_cast< int >(0x8926)));
  rb_define_const(mGlew, "GL_CON_0_ATI", SWIG_From_int(static_cast< int >(0x8941)));
  rb_define_const(mGlew, "GL_CON_1_ATI", SWIG_From_int(static_cast< int >(0x8942)));
  rb_define_const(mGlew, "GL_CON_2_ATI", SWIG_From_int(static_cast< int >(0x8943)));
  rb_define_const(mGlew, "GL_CON_3_ATI", SWIG_From_int(static_cast< int >(0x8944)));
  rb_define_const(mGlew, "GL_CON_4_ATI", SWIG_From_int(static_cast< int >(0x8945)));
  rb_define_const(mGlew, "GL_CON_5_ATI", SWIG_From_int(static_cast< int >(0x8946)));
  rb_define_const(mGlew, "GL_CON_6_ATI", SWIG_From_int(static_cast< int >(0x8947)));
  rb_define_const(mGlew, "GL_CON_7_ATI", SWIG_From_int(static_cast< int >(0x8948)));
  rb_define_const(mGlew, "GL_MOV_ATI", SWIG_From_int(static_cast< int >(0x8961)));
  rb_define_const(mGlew, "GL_ADD_ATI", SWIG_From_int(static_cast< int >(0x8963)));
  rb_define_const(mGlew, "GL_MUL_ATI", SWIG_From_int(static_cast< int >(0x8964)));
  rb_define_const(mGlew, "GL_SUB_ATI", SWIG_From_int(static_cast< int >(0x8965)));
  rb_define_const(mGlew, "GL_DOT3_ATI", SWIG_From_int(static_cast< int >(0x8966)));
  rb_define_const(mGlew, "GL_DOT4_ATI", SWIG_From_int(static_cast< int >(0x8967)));
  rb_define_const(mGlew, "GL_MAD_ATI", SWIG_From_int(static_cast< int >(0x8968)));
  rb_define_const(mGlew, "GL_LERP_ATI", SWIG_From_int(static_cast< int >(0x8969)));
  rb_define_const(mGlew, "GL_CND_ATI", SWIG_From_int(static_cast< int >(0x896A)));
  rb_define_const(mGlew, "GL_CND0_ATI", SWIG_From_int(static_cast< int >(0x896B)));
  rb_define_const(mGlew, "GL_DOT2_ADD_ATI", SWIG_From_int(static_cast< int >(0x896C)));
  rb_define_const(mGlew, "GL_SECONDARY_INTERPOLATOR_ATI", SWIG_From_int(static_cast< int >(0x896D)));
  rb_define_const(mGlew, "GL_NUM_FRAGMENT_REGISTERS_ATI", SWIG_From_int(static_cast< int >(0x896E)));
  rb_define_const(mGlew, "GL_NUM_FRAGMENT_CONSTANTS_ATI", SWIG_From_int(static_cast< int >(0x896F)));
  rb_define_const(mGlew, "GL_NUM_PASSES_ATI", SWIG_From_int(static_cast< int >(0x8970)));
  rb_define_const(mGlew, "GL_NUM_INSTRUCTIONS_PER_PASS_ATI", SWIG_From_int(static_cast< int >(0x8971)));
  rb_define_const(mGlew, "GL_NUM_INSTRUCTIONS_TOTAL_ATI", SWIG_From_int(static_cast< int >(0x8972)));
  rb_define_const(mGlew, "GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI", SWIG_From_int(static_cast< int >(0x8973)));
  rb_define_const(mGlew, "GL_NUM_LOOPBACK_COMPONENTS_ATI", SWIG_From_int(static_cast< int >(0x8974)));
  rb_define_const(mGlew, "GL_COLOR_ALPHA_PAIRING_ATI", SWIG_From_int(static_cast< int >(0x8975)));
  rb_define_const(mGlew, "GL_SWIZZLE_STR_ATI", SWIG_From_int(static_cast< int >(0x8976)));
  rb_define_const(mGlew, "GL_SWIZZLE_STQ_ATI", SWIG_From_int(static_cast< int >(0x8977)));
  rb_define_const(mGlew, "GL_SWIZZLE_STR_DR_ATI", SWIG_From_int(static_cast< int >(0x8978)));
  rb_define_const(mGlew, "GL_SWIZZLE_STQ_DQ_ATI", SWIG_From_int(static_cast< int >(0x8979)));
  rb_define_const(mGlew, "GL_SWIZZLE_STRQ_ATI", SWIG_From_int(static_cast< int >(0x897A)));
  rb_define_const(mGlew, "GL_SWIZZLE_STRQ_DQ_ATI", SWIG_From_int(static_cast< int >(0x897B)));
  rb_define_const(mGlew, "GL_ATI_map_object_buffer", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ATI_pn_triangles", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PN_TRIANGLES_ATI", SWIG_From_int(static_cast< int >(0x87F0)));
  rb_define_const(mGlew, "GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI", SWIG_From_int(static_cast< int >(0x87F1)));
  rb_define_const(mGlew, "GL_PN_TRIANGLES_POINT_MODE_ATI", SWIG_From_int(static_cast< int >(0x87F2)));
  rb_define_const(mGlew, "GL_PN_TRIANGLES_NORMAL_MODE_ATI", SWIG_From_int(static_cast< int >(0x87F3)));
  rb_define_const(mGlew, "GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI", SWIG_From_int(static_cast< int >(0x87F4)));
  rb_define_const(mGlew, "GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI", SWIG_From_int(static_cast< int >(0x87F5)));
  rb_define_const(mGlew, "GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI", SWIG_From_int(static_cast< int >(0x87F6)));
  rb_define_const(mGlew, "GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI", SWIG_From_int(static_cast< int >(0x87F7)));
  rb_define_const(mGlew, "GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI", SWIG_From_int(static_cast< int >(0x87F8)));
  rb_define_const(mGlew, "GL_ATI_separate_stencil", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_STENCIL_BACK_FUNC_ATI", SWIG_From_int(static_cast< int >(0x8800)));
  rb_define_const(mGlew, "GL_STENCIL_BACK_FAIL_ATI", SWIG_From_int(static_cast< int >(0x8801)));
  rb_define_const(mGlew, "GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI", SWIG_From_int(static_cast< int >(0x8802)));
  rb_define_const(mGlew, "GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI", SWIG_From_int(static_cast< int >(0x8803)));
  rb_define_const(mGlew, "GL_ATI_shader_texture_lod", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ATI_text_fragment_shader", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXT_FRAGMENT_SHADER_ATI", SWIG_From_int(static_cast< int >(0x8200)));
  rb_define_const(mGlew, "GL_ATI_texture_compression_3dc", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI", SWIG_From_int(static_cast< int >(0x8837)));
  rb_define_const(mGlew, "GL_ATI_texture_env_combine3", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MODULATE_ADD_ATI", SWIG_From_int(static_cast< int >(0x8744)));
  rb_define_const(mGlew, "GL_MODULATE_SIGNED_ADD_ATI", SWIG_From_int(static_cast< int >(0x8745)));
  rb_define_const(mGlew, "GL_MODULATE_SUBTRACT_ATI", SWIG_From_int(static_cast< int >(0x8746)));
  rb_define_const(mGlew, "GL_ATI_texture_float", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RGBA_FLOAT32_ATI", SWIG_From_int(static_cast< int >(0x8814)));
  rb_define_const(mGlew, "GL_RGB_FLOAT32_ATI", SWIG_From_int(static_cast< int >(0x8815)));
  rb_define_const(mGlew, "GL_ALPHA_FLOAT32_ATI", SWIG_From_int(static_cast< int >(0x8816)));
  rb_define_const(mGlew, "GL_INTENSITY_FLOAT32_ATI", SWIG_From_int(static_cast< int >(0x8817)));
  rb_define_const(mGlew, "GL_LUMINANCE_FLOAT32_ATI", SWIG_From_int(static_cast< int >(0x8818)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA_FLOAT32_ATI", SWIG_From_int(static_cast< int >(0x8819)));
  rb_define_const(mGlew, "GL_RGBA_FLOAT16_ATI", SWIG_From_int(static_cast< int >(0x881A)));
  rb_define_const(mGlew, "GL_RGB_FLOAT16_ATI", SWIG_From_int(static_cast< int >(0x881B)));
  rb_define_const(mGlew, "GL_ALPHA_FLOAT16_ATI", SWIG_From_int(static_cast< int >(0x881C)));
  rb_define_const(mGlew, "GL_INTENSITY_FLOAT16_ATI", SWIG_From_int(static_cast< int >(0x881D)));
  rb_define_const(mGlew, "GL_LUMINANCE_FLOAT16_ATI", SWIG_From_int(static_cast< int >(0x881E)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA_FLOAT16_ATI", SWIG_From_int(static_cast< int >(0x881F)));
  rb_define_const(mGlew, "GL_ATI_texture_mirror_once", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MIRROR_CLAMP_ATI", SWIG_From_int(static_cast< int >(0x8742)));
  rb_define_const(mGlew, "GL_MIRROR_CLAMP_TO_EDGE_ATI", SWIG_From_int(static_cast< int >(0x8743)));
  rb_define_const(mGlew, "GL_ATI_vertex_array_object", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_STATIC_ATI", SWIG_From_int(static_cast< int >(0x8760)));
  rb_define_const(mGlew, "GL_DYNAMIC_ATI", SWIG_From_int(static_cast< int >(0x8761)));
  rb_define_const(mGlew, "GL_PRESERVE_ATI", SWIG_From_int(static_cast< int >(0x8762)));
  rb_define_const(mGlew, "GL_DISCARD_ATI", SWIG_From_int(static_cast< int >(0x8763)));
  rb_define_const(mGlew, "GL_OBJECT_BUFFER_SIZE_ATI", SWIG_From_int(static_cast< int >(0x8764)));
  rb_define_const(mGlew, "GL_OBJECT_BUFFER_USAGE_ATI", SWIG_From_int(static_cast< int >(0x8765)));
  rb_define_const(mGlew, "GL_ARRAY_OBJECT_BUFFER_ATI", SWIG_From_int(static_cast< int >(0x8766)));
  rb_define_const(mGlew, "GL_ARRAY_OBJECT_OFFSET_ATI", SWIG_From_int(static_cast< int >(0x8767)));
  rb_define_const(mGlew, "GL_ATI_vertex_attrib_array_object", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ATI_vertex_streams", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_STREAMS_ATI", SWIG_From_int(static_cast< int >(0x876B)));
  rb_define_const(mGlew, "GL_VERTEX_SOURCE_ATI", SWIG_From_int(static_cast< int >(0x876C)));
  rb_define_const(mGlew, "GL_VERTEX_STREAM0_ATI", SWIG_From_int(static_cast< int >(0x876D)));
  rb_define_const(mGlew, "GL_VERTEX_STREAM1_ATI", SWIG_From_int(static_cast< int >(0x876E)));
  rb_define_const(mGlew, "GL_VERTEX_STREAM2_ATI", SWIG_From_int(static_cast< int >(0x876F)));
  rb_define_const(mGlew, "GL_VERTEX_STREAM3_ATI", SWIG_From_int(static_cast< int >(0x8770)));
  rb_define_const(mGlew, "GL_VERTEX_STREAM4_ATI", SWIG_From_int(static_cast< int >(0x8771)));
  rb_define_const(mGlew, "GL_VERTEX_STREAM5_ATI", SWIG_From_int(static_cast< int >(0x8772)));
  rb_define_const(mGlew, "GL_VERTEX_STREAM6_ATI", SWIG_From_int(static_cast< int >(0x8773)));
  rb_define_const(mGlew, "GL_VERTEX_STREAM7_ATI", SWIG_From_int(static_cast< int >(0x8774)));
  rb_define_const(mGlew, "GL_EXT_422_pixels", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_422_EXT", SWIG_From_int(static_cast< int >(0x80CC)));
  rb_define_const(mGlew, "GL_422_REV_EXT", SWIG_From_int(static_cast< int >(0x80CD)));
  rb_define_const(mGlew, "GL_422_AVERAGE_EXT", SWIG_From_int(static_cast< int >(0x80CE)));
  rb_define_const(mGlew, "GL_422_REV_AVERAGE_EXT", SWIG_From_int(static_cast< int >(0x80CF)));
  rb_define_const(mGlew, "GL_EXT_Cg_shader", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_CG_VERTEX_SHADER_EXT", SWIG_From_int(static_cast< int >(0x890E)));
  rb_define_const(mGlew, "GL_CG_FRAGMENT_SHADER_EXT", SWIG_From_int(static_cast< int >(0x890F)));
  rb_define_const(mGlew, "GL_EXT_abgr", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ABGR_EXT", SWIG_From_int(static_cast< int >(0x8000)));
  rb_define_const(mGlew, "GL_EXT_bgra", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_BGR_EXT", SWIG_From_int(static_cast< int >(0x80E0)));
  rb_define_const(mGlew, "GL_BGRA_EXT", SWIG_From_int(static_cast< int >(0x80E1)));
  rb_define_const(mGlew, "GL_EXT_bindable_uniform", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT", SWIG_From_int(static_cast< int >(0x8DE2)));
  rb_define_const(mGlew, "GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT", SWIG_From_int(static_cast< int >(0x8DE3)));
  rb_define_const(mGlew, "GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT", SWIG_From_int(static_cast< int >(0x8DE4)));
  rb_define_const(mGlew, "GL_MAX_BINDABLE_UNIFORM_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8DED)));
  rb_define_const(mGlew, "GL_UNIFORM_BUFFER_EXT", SWIG_From_int(static_cast< int >(0x8DEE)));
  rb_define_const(mGlew, "GL_UNIFORM_BUFFER_BINDING_EXT", SWIG_From_int(static_cast< int >(0x8DEF)));
  rb_define_const(mGlew, "GL_EXT_blend_color", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_CONSTANT_COLOR_EXT", SWIG_From_int(static_cast< int >(0x8001)));
  rb_define_const(mGlew, "GL_ONE_MINUS_CONSTANT_COLOR_EXT", SWIG_From_int(static_cast< int >(0x8002)));
  rb_define_const(mGlew, "GL_CONSTANT_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x8003)));
  rb_define_const(mGlew, "GL_ONE_MINUS_CONSTANT_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x8004)));
  rb_define_const(mGlew, "GL_BLEND_COLOR_EXT", SWIG_From_int(static_cast< int >(0x8005)));
  rb_define_const(mGlew, "GL_EXT_blend_equation_separate", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_BLEND_EQUATION_RGB_EXT", SWIG_From_int(static_cast< int >(0x8009)));
  rb_define_const(mGlew, "GL_BLEND_EQUATION_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x883D)));
  rb_define_const(mGlew, "GL_EXT_blend_func_separate", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_BLEND_DST_RGB_EXT", SWIG_From_int(static_cast< int >(0x80C8)));
  rb_define_const(mGlew, "GL_BLEND_SRC_RGB_EXT", SWIG_From_int(static_cast< int >(0x80C9)));
  rb_define_const(mGlew, "GL_BLEND_DST_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x80CA)));
  rb_define_const(mGlew, "GL_BLEND_SRC_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x80CB)));
  rb_define_const(mGlew, "GL_EXT_blend_logic_op", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_blend_minmax", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FUNC_ADD_EXT", SWIG_From_int(static_cast< int >(0x8006)));
  rb_define_const(mGlew, "GL_MIN_EXT", SWIG_From_int(static_cast< int >(0x8007)));
  rb_define_const(mGlew, "GL_MAX_EXT", SWIG_From_int(static_cast< int >(0x8008)));
  rb_define_const(mGlew, "GL_BLEND_EQUATION_EXT", SWIG_From_int(static_cast< int >(0x8009)));
  rb_define_const(mGlew, "GL_EXT_blend_subtract", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FUNC_SUBTRACT_EXT", SWIG_From_int(static_cast< int >(0x800A)));
  rb_define_const(mGlew, "GL_FUNC_REVERSE_SUBTRACT_EXT", SWIG_From_int(static_cast< int >(0x800B)));
  rb_define_const(mGlew, "GL_EXT_clip_volume_hint", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_CLIP_VOLUME_CLIPPING_HINT_EXT", SWIG_From_int(static_cast< int >(0x80F0)));
  rb_define_const(mGlew, "GL_EXT_cmyka", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_CMYK_EXT", SWIG_From_int(static_cast< int >(0x800C)));
  rb_define_const(mGlew, "GL_CMYKA_EXT", SWIG_From_int(static_cast< int >(0x800D)));
  rb_define_const(mGlew, "GL_PACK_CMYK_HINT_EXT", SWIG_From_int(static_cast< int >(0x800E)));
  rb_define_const(mGlew, "GL_UNPACK_CMYK_HINT_EXT", SWIG_From_int(static_cast< int >(0x800F)));
  rb_define_const(mGlew, "GL_EXT_color_subtable", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_compiled_vertex_array", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ARRAY_ELEMENT_LOCK_FIRST_EXT", SWIG_From_int(static_cast< int >(0x81A8)));
  rb_define_const(mGlew, "GL_ARRAY_ELEMENT_LOCK_COUNT_EXT", SWIG_From_int(static_cast< int >(0x81A9)));
  rb_define_const(mGlew, "GL_EXT_convolution", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_CONVOLUTION_1D_EXT", SWIG_From_int(static_cast< int >(0x8010)));
  rb_define_const(mGlew, "GL_CONVOLUTION_2D_EXT", SWIG_From_int(static_cast< int >(0x8011)));
  rb_define_const(mGlew, "GL_SEPARABLE_2D_EXT", SWIG_From_int(static_cast< int >(0x8012)));
  rb_define_const(mGlew, "GL_CONVOLUTION_BORDER_MODE_EXT", SWIG_From_int(static_cast< int >(0x8013)));
  rb_define_const(mGlew, "GL_CONVOLUTION_FILTER_SCALE_EXT", SWIG_From_int(static_cast< int >(0x8014)));
  rb_define_const(mGlew, "GL_CONVOLUTION_FILTER_BIAS_EXT", SWIG_From_int(static_cast< int >(0x8015)));
  rb_define_const(mGlew, "GL_REDUCE_EXT", SWIG_From_int(static_cast< int >(0x8016)));
  rb_define_const(mGlew, "GL_CONVOLUTION_FORMAT_EXT", SWIG_From_int(static_cast< int >(0x8017)));
  rb_define_const(mGlew, "GL_CONVOLUTION_WIDTH_EXT", SWIG_From_int(static_cast< int >(0x8018)));
  rb_define_const(mGlew, "GL_CONVOLUTION_HEIGHT_EXT", SWIG_From_int(static_cast< int >(0x8019)));
  rb_define_const(mGlew, "GL_MAX_CONVOLUTION_WIDTH_EXT", SWIG_From_int(static_cast< int >(0x801A)));
  rb_define_const(mGlew, "GL_MAX_CONVOLUTION_HEIGHT_EXT", SWIG_From_int(static_cast< int >(0x801B)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_RED_SCALE_EXT", SWIG_From_int(static_cast< int >(0x801C)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_GREEN_SCALE_EXT", SWIG_From_int(static_cast< int >(0x801D)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_BLUE_SCALE_EXT", SWIG_From_int(static_cast< int >(0x801E)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_ALPHA_SCALE_EXT", SWIG_From_int(static_cast< int >(0x801F)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_RED_BIAS_EXT", SWIG_From_int(static_cast< int >(0x8020)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_GREEN_BIAS_EXT", SWIG_From_int(static_cast< int >(0x8021)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_BLUE_BIAS_EXT", SWIG_From_int(static_cast< int >(0x8022)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_ALPHA_BIAS_EXT", SWIG_From_int(static_cast< int >(0x8023)));
  rb_define_const(mGlew, "GL_EXT_coordinate_frame", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TANGENT_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8439)));
  rb_define_const(mGlew, "GL_BINORMAL_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x843A)));
  rb_define_const(mGlew, "GL_CURRENT_TANGENT_EXT", SWIG_From_int(static_cast< int >(0x843B)));
  rb_define_const(mGlew, "GL_CURRENT_BINORMAL_EXT", SWIG_From_int(static_cast< int >(0x843C)));
  rb_define_const(mGlew, "GL_TANGENT_ARRAY_TYPE_EXT", SWIG_From_int(static_cast< int >(0x843E)));
  rb_define_const(mGlew, "GL_TANGENT_ARRAY_STRIDE_EXT", SWIG_From_int(static_cast< int >(0x843F)));
  rb_define_const(mGlew, "GL_BINORMAL_ARRAY_TYPE_EXT", SWIG_From_int(static_cast< int >(0x8440)));
  rb_define_const(mGlew, "GL_BINORMAL_ARRAY_STRIDE_EXT", SWIG_From_int(static_cast< int >(0x8441)));
  rb_define_const(mGlew, "GL_TANGENT_ARRAY_POINTER_EXT", SWIG_From_int(static_cast< int >(0x8442)));
  rb_define_const(mGlew, "GL_BINORMAL_ARRAY_POINTER_EXT", SWIG_From_int(static_cast< int >(0x8443)));
  rb_define_const(mGlew, "GL_MAP1_TANGENT_EXT", SWIG_From_int(static_cast< int >(0x8444)));
  rb_define_const(mGlew, "GL_MAP2_TANGENT_EXT", SWIG_From_int(static_cast< int >(0x8445)));
  rb_define_const(mGlew, "GL_MAP1_BINORMAL_EXT", SWIG_From_int(static_cast< int >(0x8446)));
  rb_define_const(mGlew, "GL_MAP2_BINORMAL_EXT", SWIG_From_int(static_cast< int >(0x8447)));
  rb_define_const(mGlew, "GL_EXT_copy_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_cull_vertex", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_depth_bounds_test", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DEPTH_BOUNDS_TEST_EXT", SWIG_From_int(static_cast< int >(0x8890)));
  rb_define_const(mGlew, "GL_DEPTH_BOUNDS_EXT", SWIG_From_int(static_cast< int >(0x8891)));
  rb_define_const(mGlew, "GL_EXT_direct_state_access", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PROGRAM_MATRIX_EXT", SWIG_From_int(static_cast< int >(0x8E2D)));
  rb_define_const(mGlew, "GL_TRANSPOSE_PROGRAM_MATRIX_EXT", SWIG_From_int(static_cast< int >(0x8E2E)));
  rb_define_const(mGlew, "GL_PROGRAM_MATRIX_STACK_DEPTH_EXT", SWIG_From_int(static_cast< int >(0x8E2F)));
  rb_define_const(mGlew, "GL_EXT_draw_buffers2", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_draw_instanced", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_draw_range_elements", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_fog_coord", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_SOURCE_EXT", SWIG_From_int(static_cast< int >(0x8450)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_EXT", SWIG_From_int(static_cast< int >(0x8451)));
  rb_define_const(mGlew, "GL_FRAGMENT_DEPTH_EXT", SWIG_From_int(static_cast< int >(0x8452)));
  rb_define_const(mGlew, "GL_CURRENT_FOG_COORDINATE_EXT", SWIG_From_int(static_cast< int >(0x8453)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_ARRAY_TYPE_EXT", SWIG_From_int(static_cast< int >(0x8454)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_ARRAY_STRIDE_EXT", SWIG_From_int(static_cast< int >(0x8455)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_ARRAY_POINTER_EXT", SWIG_From_int(static_cast< int >(0x8456)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8457)));
  rb_define_const(mGlew, "GL_EXT_fragment_lighting", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FRAGMENT_LIGHTING_EXT", SWIG_From_int(static_cast< int >(0x8400)));
  rb_define_const(mGlew, "GL_FRAGMENT_COLOR_MATERIAL_EXT", SWIG_From_int(static_cast< int >(0x8401)));
  rb_define_const(mGlew, "GL_FRAGMENT_COLOR_MATERIAL_FACE_EXT", SWIG_From_int(static_cast< int >(0x8402)));
  rb_define_const(mGlew, "GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_EXT", SWIG_From_int(static_cast< int >(0x8403)));
  rb_define_const(mGlew, "GL_MAX_FRAGMENT_LIGHTS_EXT", SWIG_From_int(static_cast< int >(0x8404)));
  rb_define_const(mGlew, "GL_MAX_ACTIVE_LIGHTS_EXT", SWIG_From_int(static_cast< int >(0x8405)));
  rb_define_const(mGlew, "GL_CURRENT_RASTER_NORMAL_EXT", SWIG_From_int(static_cast< int >(0x8406)));
  rb_define_const(mGlew, "GL_LIGHT_ENV_MODE_EXT", SWIG_From_int(static_cast< int >(0x8407)));
  rb_define_const(mGlew, "GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_EXT", SWIG_From_int(static_cast< int >(0x8408)));
  rb_define_const(mGlew, "GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_EXT", SWIG_From_int(static_cast< int >(0x8409)));
  rb_define_const(mGlew, "GL_FRAGMENT_LIGHT_MODEL_AMBIENT_EXT", SWIG_From_int(static_cast< int >(0x840A)));
  rb_define_const(mGlew, "GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_EXT", SWIG_From_int(static_cast< int >(0x840B)));
  rb_define_const(mGlew, "GL_FRAGMENT_LIGHT0_EXT", SWIG_From_int(static_cast< int >(0x840C)));
  rb_define_const(mGlew, "GL_FRAGMENT_LIGHT7_EXT", SWIG_From_int(static_cast< int >(0x8413)));
  rb_define_const(mGlew, "GL_EXT_framebuffer_blit", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DRAW_FRAMEBUFFER_BINDING_EXT", SWIG_From_int(static_cast< int >(0x8CA6)));
  rb_define_const(mGlew, "GL_READ_FRAMEBUFFER_EXT", SWIG_From_int(static_cast< int >(0x8CA8)));
  rb_define_const(mGlew, "GL_DRAW_FRAMEBUFFER_EXT", SWIG_From_int(static_cast< int >(0x8CA9)));
  rb_define_const(mGlew, "GL_READ_FRAMEBUFFER_BINDING_EXT", SWIG_From_int(static_cast< int >(0x8CAA)));
  rb_define_const(mGlew, "GL_EXT_framebuffer_multisample", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_SAMPLES_EXT", SWIG_From_int(static_cast< int >(0x8CAB)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT", SWIG_From_int(static_cast< int >(0x8D56)));
  rb_define_const(mGlew, "GL_MAX_SAMPLES_EXT", SWIG_From_int(static_cast< int >(0x8D57)));
  rb_define_const(mGlew, "GL_EXT_framebuffer_object", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_INVALID_FRAMEBUFFER_OPERATION_EXT", SWIG_From_int(static_cast< int >(0x0506)));
  rb_define_const(mGlew, "GL_MAX_RENDERBUFFER_SIZE_EXT", SWIG_From_int(static_cast< int >(0x84E8)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_BINDING_EXT", SWIG_From_int(static_cast< int >(0x8CA6)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_BINDING_EXT", SWIG_From_int(static_cast< int >(0x8CA7)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT", SWIG_From_int(static_cast< int >(0x8CD0)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT", SWIG_From_int(static_cast< int >(0x8CD1)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT", SWIG_From_int(static_cast< int >(0x8CD2)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT", SWIG_From_int(static_cast< int >(0x8CD3)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT", SWIG_From_int(static_cast< int >(0x8CD4)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_COMPLETE_EXT", SWIG_From_int(static_cast< int >(0x8CD5)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT", SWIG_From_int(static_cast< int >(0x8CD6)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT", SWIG_From_int(static_cast< int >(0x8CD7)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT", SWIG_From_int(static_cast< int >(0x8CD9)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT", SWIG_From_int(static_cast< int >(0x8CDA)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT", SWIG_From_int(static_cast< int >(0x8CDB)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT", SWIG_From_int(static_cast< int >(0x8CDC)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_UNSUPPORTED_EXT", SWIG_From_int(static_cast< int >(0x8CDD)));
  rb_define_const(mGlew, "GL_MAX_COLOR_ATTACHMENTS_EXT", SWIG_From_int(static_cast< int >(0x8CDF)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT0_EXT", SWIG_From_int(static_cast< int >(0x8CE0)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT1_EXT", SWIG_From_int(static_cast< int >(0x8CE1)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT2_EXT", SWIG_From_int(static_cast< int >(0x8CE2)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT3_EXT", SWIG_From_int(static_cast< int >(0x8CE3)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT4_EXT", SWIG_From_int(static_cast< int >(0x8CE4)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT5_EXT", SWIG_From_int(static_cast< int >(0x8CE5)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT6_EXT", SWIG_From_int(static_cast< int >(0x8CE6)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT7_EXT", SWIG_From_int(static_cast< int >(0x8CE7)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT8_EXT", SWIG_From_int(static_cast< int >(0x8CE8)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT9_EXT", SWIG_From_int(static_cast< int >(0x8CE9)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT10_EXT", SWIG_From_int(static_cast< int >(0x8CEA)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT11_EXT", SWIG_From_int(static_cast< int >(0x8CEB)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT12_EXT", SWIG_From_int(static_cast< int >(0x8CEC)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT13_EXT", SWIG_From_int(static_cast< int >(0x8CED)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT14_EXT", SWIG_From_int(static_cast< int >(0x8CEE)));
  rb_define_const(mGlew, "GL_COLOR_ATTACHMENT15_EXT", SWIG_From_int(static_cast< int >(0x8CEF)));
  rb_define_const(mGlew, "GL_DEPTH_ATTACHMENT_EXT", SWIG_From_int(static_cast< int >(0x8D00)));
  rb_define_const(mGlew, "GL_STENCIL_ATTACHMENT_EXT", SWIG_From_int(static_cast< int >(0x8D20)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_EXT", SWIG_From_int(static_cast< int >(0x8D40)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_EXT", SWIG_From_int(static_cast< int >(0x8D41)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_WIDTH_EXT", SWIG_From_int(static_cast< int >(0x8D42)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_HEIGHT_EXT", SWIG_From_int(static_cast< int >(0x8D43)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_INTERNAL_FORMAT_EXT", SWIG_From_int(static_cast< int >(0x8D44)));
  rb_define_const(mGlew, "GL_STENCIL_INDEX1_EXT", SWIG_From_int(static_cast< int >(0x8D46)));
  rb_define_const(mGlew, "GL_STENCIL_INDEX4_EXT", SWIG_From_int(static_cast< int >(0x8D47)));
  rb_define_const(mGlew, "GL_STENCIL_INDEX8_EXT", SWIG_From_int(static_cast< int >(0x8D48)));
  rb_define_const(mGlew, "GL_STENCIL_INDEX16_EXT", SWIG_From_int(static_cast< int >(0x8D49)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_RED_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8D50)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_GREEN_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8D51)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_BLUE_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8D52)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_ALPHA_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8D53)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_DEPTH_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8D54)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_STENCIL_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8D55)));
  rb_define_const(mGlew, "GL_EXT_framebuffer_sRGB", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_SRGB_EXT", SWIG_From_int(static_cast< int >(0x8DB9)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_SRGB_CAPABLE_EXT", SWIG_From_int(static_cast< int >(0x8DBA)));
  rb_define_const(mGlew, "GL_EXT_geometry_shader4", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_LINES_ADJACENCY_EXT", SWIG_From_int(static_cast< int >(0xA)));
  rb_define_const(mGlew, "GL_LINE_STRIP_ADJACENCY_EXT", SWIG_From_int(static_cast< int >(0xB)));
  rb_define_const(mGlew, "GL_TRIANGLES_ADJACENCY_EXT", SWIG_From_int(static_cast< int >(0xC)));
  rb_define_const(mGlew, "GL_TRIANGLE_STRIP_ADJACENCY_EXT", SWIG_From_int(static_cast< int >(0xD)));
  rb_define_const(mGlew, "GL_PROGRAM_POINT_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8642)));
  rb_define_const(mGlew, "GL_MAX_VARYING_COMPONENTS_EXT", SWIG_From_int(static_cast< int >(0x8B4B)));
  rb_define_const(mGlew, "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT", SWIG_From_int(static_cast< int >(0x8C29)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT", SWIG_From_int(static_cast< int >(0x8CD4)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT", SWIG_From_int(static_cast< int >(0x8DA7)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT", SWIG_From_int(static_cast< int >(0x8DA8)));
  rb_define_const(mGlew, "GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT", SWIG_From_int(static_cast< int >(0x8DA9)));
  rb_define_const(mGlew, "GL_GEOMETRY_SHADER_EXT", SWIG_From_int(static_cast< int >(0x8DD9)));
  rb_define_const(mGlew, "GL_GEOMETRY_VERTICES_OUT_EXT", SWIG_From_int(static_cast< int >(0x8DDA)));
  rb_define_const(mGlew, "GL_GEOMETRY_INPUT_TYPE_EXT", SWIG_From_int(static_cast< int >(0x8DDB)));
  rb_define_const(mGlew, "GL_GEOMETRY_OUTPUT_TYPE_EXT", SWIG_From_int(static_cast< int >(0x8DDC)));
  rb_define_const(mGlew, "GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT", SWIG_From_int(static_cast< int >(0x8DDD)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_VARYING_COMPONENTS_EXT", SWIG_From_int(static_cast< int >(0x8DDE)));
  rb_define_const(mGlew, "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT", SWIG_From_int(static_cast< int >(0x8DDF)));
  rb_define_const(mGlew, "GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT", SWIG_From_int(static_cast< int >(0x8DE0)));
  rb_define_const(mGlew, "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT", SWIG_From_int(static_cast< int >(0x8DE1)));
  rb_define_const(mGlew, "GL_EXT_gpu_program_parameters", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_gpu_shader4", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT", SWIG_From_int(static_cast< int >(0x88FD)));
  rb_define_const(mGlew, "GL_SAMPLER_1D_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8DC0)));
  rb_define_const(mGlew, "GL_SAMPLER_2D_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8DC1)));
  rb_define_const(mGlew, "GL_SAMPLER_BUFFER_EXT", SWIG_From_int(static_cast< int >(0x8DC2)));
  rb_define_const(mGlew, "GL_SAMPLER_1D_ARRAY_SHADOW_EXT", SWIG_From_int(static_cast< int >(0x8DC3)));
  rb_define_const(mGlew, "GL_SAMPLER_2D_ARRAY_SHADOW_EXT", SWIG_From_int(static_cast< int >(0x8DC4)));
  rb_define_const(mGlew, "GL_SAMPLER_CUBE_SHADOW_EXT", SWIG_From_int(static_cast< int >(0x8DC5)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_VEC2_EXT", SWIG_From_int(static_cast< int >(0x8DC6)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_VEC3_EXT", SWIG_From_int(static_cast< int >(0x8DC7)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_VEC4_EXT", SWIG_From_int(static_cast< int >(0x8DC8)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_1D_EXT", SWIG_From_int(static_cast< int >(0x8DC9)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_2D_EXT", SWIG_From_int(static_cast< int >(0x8DCA)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_3D_EXT", SWIG_From_int(static_cast< int >(0x8DCB)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_CUBE_EXT", SWIG_From_int(static_cast< int >(0x8DCC)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_2D_RECT_EXT", SWIG_From_int(static_cast< int >(0x8DCD)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_1D_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8DCE)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_2D_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8DCF)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_BUFFER_EXT", SWIG_From_int(static_cast< int >(0x8DD0)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_1D_EXT", SWIG_From_int(static_cast< int >(0x8DD1)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_2D_EXT", SWIG_From_int(static_cast< int >(0x8DD2)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_3D_EXT", SWIG_From_int(static_cast< int >(0x8DD3)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_CUBE_EXT", SWIG_From_int(static_cast< int >(0x8DD4)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT", SWIG_From_int(static_cast< int >(0x8DD5)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8DD6)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8DD7)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT", SWIG_From_int(static_cast< int >(0x8DD8)));
  rb_define_const(mGlew, "GL_EXT_histogram", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_HISTOGRAM_EXT", SWIG_From_int(static_cast< int >(0x8024)));
  rb_define_const(mGlew, "GL_PROXY_HISTOGRAM_EXT", SWIG_From_int(static_cast< int >(0x8025)));
  rb_define_const(mGlew, "GL_HISTOGRAM_WIDTH_EXT", SWIG_From_int(static_cast< int >(0x8026)));
  rb_define_const(mGlew, "GL_HISTOGRAM_FORMAT_EXT", SWIG_From_int(static_cast< int >(0x8027)));
  rb_define_const(mGlew, "GL_HISTOGRAM_RED_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8028)));
  rb_define_const(mGlew, "GL_HISTOGRAM_GREEN_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8029)));
  rb_define_const(mGlew, "GL_HISTOGRAM_BLUE_SIZE_EXT", SWIG_From_int(static_cast< int >(0x802A)));
  rb_define_const(mGlew, "GL_HISTOGRAM_ALPHA_SIZE_EXT", SWIG_From_int(static_cast< int >(0x802B)));
  rb_define_const(mGlew, "GL_HISTOGRAM_LUMINANCE_SIZE_EXT", SWIG_From_int(static_cast< int >(0x802C)));
  rb_define_const(mGlew, "GL_HISTOGRAM_SINK_EXT", SWIG_From_int(static_cast< int >(0x802D)));
  rb_define_const(mGlew, "GL_MINMAX_EXT", SWIG_From_int(static_cast< int >(0x802E)));
  rb_define_const(mGlew, "GL_MINMAX_FORMAT_EXT", SWIG_From_int(static_cast< int >(0x802F)));
  rb_define_const(mGlew, "GL_MINMAX_SINK_EXT", SWIG_From_int(static_cast< int >(0x8030)));
  rb_define_const(mGlew, "GL_EXT_index_array_formats", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_index_func", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_index_material", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_index_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_light_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FRAGMENT_MATERIAL_EXT", SWIG_From_int(static_cast< int >(0x8349)));
  rb_define_const(mGlew, "GL_FRAGMENT_NORMAL_EXT", SWIG_From_int(static_cast< int >(0x834A)));
  rb_define_const(mGlew, "GL_FRAGMENT_COLOR_EXT", SWIG_From_int(static_cast< int >(0x834C)));
  rb_define_const(mGlew, "GL_ATTENUATION_EXT", SWIG_From_int(static_cast< int >(0x834D)));
  rb_define_const(mGlew, "GL_SHADOW_ATTENUATION_EXT", SWIG_From_int(static_cast< int >(0x834E)));
  rb_define_const(mGlew, "GL_TEXTURE_APPLICATION_MODE_EXT", SWIG_From_int(static_cast< int >(0x834F)));
  rb_define_const(mGlew, "GL_TEXTURE_LIGHT_EXT", SWIG_From_int(static_cast< int >(0x8350)));
  rb_define_const(mGlew, "GL_TEXTURE_MATERIAL_FACE_EXT", SWIG_From_int(static_cast< int >(0x8351)));
  rb_define_const(mGlew, "GL_TEXTURE_MATERIAL_PARAMETER_EXT", SWIG_From_int(static_cast< int >(0x8352)));
  rb_define_const(mGlew, "GL_EXT_misc_attribute", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_multi_draw_arrays", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_multisample", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MULTISAMPLE_EXT", SWIG_From_int(static_cast< int >(0x809D)));
  rb_define_const(mGlew, "GL_SAMPLE_ALPHA_TO_MASK_EXT", SWIG_From_int(static_cast< int >(0x809E)));
  rb_define_const(mGlew, "GL_SAMPLE_ALPHA_TO_ONE_EXT", SWIG_From_int(static_cast< int >(0x809F)));
  rb_define_const(mGlew, "GL_SAMPLE_MASK_EXT", SWIG_From_int(static_cast< int >(0x80A0)));
  rb_define_const(mGlew, "GL_1PASS_EXT", SWIG_From_int(static_cast< int >(0x80A1)));
  rb_define_const(mGlew, "GL_2PASS_0_EXT", SWIG_From_int(static_cast< int >(0x80A2)));
  rb_define_const(mGlew, "GL_2PASS_1_EXT", SWIG_From_int(static_cast< int >(0x80A3)));
  rb_define_const(mGlew, "GL_4PASS_0_EXT", SWIG_From_int(static_cast< int >(0x80A4)));
  rb_define_const(mGlew, "GL_4PASS_1_EXT", SWIG_From_int(static_cast< int >(0x80A5)));
  rb_define_const(mGlew, "GL_4PASS_2_EXT", SWIG_From_int(static_cast< int >(0x80A6)));
  rb_define_const(mGlew, "GL_4PASS_3_EXT", SWIG_From_int(static_cast< int >(0x80A7)));
  rb_define_const(mGlew, "GL_SAMPLE_BUFFERS_EXT", SWIG_From_int(static_cast< int >(0x80A8)));
  rb_define_const(mGlew, "GL_SAMPLES_EXT", SWIG_From_int(static_cast< int >(0x80A9)));
  rb_define_const(mGlew, "GL_SAMPLE_MASK_VALUE_EXT", SWIG_From_int(static_cast< int >(0x80AA)));
  rb_define_const(mGlew, "GL_SAMPLE_MASK_INVERT_EXT", SWIG_From_int(static_cast< int >(0x80AB)));
  rb_define_const(mGlew, "GL_SAMPLE_PATTERN_EXT", SWIG_From_int(static_cast< int >(0x80AC)));
  rb_define_const(mGlew, "GL_MULTISAMPLE_BIT_EXT", SWIG_From_int(static_cast< int >(0x20000000)));
  rb_define_const(mGlew, "GL_EXT_packed_depth_stencil", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DEPTH_STENCIL_EXT", SWIG_From_int(static_cast< int >(0x84F9)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_24_8_EXT", SWIG_From_int(static_cast< int >(0x84FA)));
  rb_define_const(mGlew, "GL_DEPTH24_STENCIL8_EXT", SWIG_From_int(static_cast< int >(0x88F0)));
  rb_define_const(mGlew, "GL_TEXTURE_STENCIL_SIZE_EXT", SWIG_From_int(static_cast< int >(0x88F1)));
  rb_define_const(mGlew, "GL_EXT_packed_float", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_R11F_G11F_B10F_EXT", SWIG_From_int(static_cast< int >(0x8C3A)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_10F_11F_11F_REV_EXT", SWIG_From_int(static_cast< int >(0x8C3B)));
  rb_define_const(mGlew, "GL_RGBA_SIGNED_COMPONENTS_EXT", SWIG_From_int(static_cast< int >(0x8C3C)));
  rb_define_const(mGlew, "GL_EXT_packed_pixels", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_UNSIGNED_BYTE_3_3_2_EXT", SWIG_From_int(static_cast< int >(0x8032)));
  rb_define_const(mGlew, "GL_UNSIGNED_SHORT_4_4_4_4_EXT", SWIG_From_int(static_cast< int >(0x8033)));
  rb_define_const(mGlew, "GL_UNSIGNED_SHORT_5_5_5_1_EXT", SWIG_From_int(static_cast< int >(0x8034)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_8_8_8_8_EXT", SWIG_From_int(static_cast< int >(0x8035)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_10_10_10_2_EXT", SWIG_From_int(static_cast< int >(0x8036)));
  rb_define_const(mGlew, "GL_EXT_paletted_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_3D_EXT", SWIG_From_int(static_cast< int >(0x806F)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_3D_EXT", SWIG_From_int(static_cast< int >(0x8070)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_FORMAT_EXT", SWIG_From_int(static_cast< int >(0x80D8)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_WIDTH_EXT", SWIG_From_int(static_cast< int >(0x80D9)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_RED_SIZE_EXT", SWIG_From_int(static_cast< int >(0x80DA)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_GREEN_SIZE_EXT", SWIG_From_int(static_cast< int >(0x80DB)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_BLUE_SIZE_EXT", SWIG_From_int(static_cast< int >(0x80DC)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_ALPHA_SIZE_EXT", SWIG_From_int(static_cast< int >(0x80DD)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_LUMINANCE_SIZE_EXT", SWIG_From_int(static_cast< int >(0x80DE)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_INTENSITY_SIZE_EXT", SWIG_From_int(static_cast< int >(0x80DF)));
  rb_define_const(mGlew, "GL_TEXTURE_INDEX_SIZE_EXT", SWIG_From_int(static_cast< int >(0x80ED)));
  rb_define_const(mGlew, "GL_EXT_pixel_buffer_object", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PIXEL_PACK_BUFFER_EXT", SWIG_From_int(static_cast< int >(0x88EB)));
  rb_define_const(mGlew, "GL_PIXEL_UNPACK_BUFFER_EXT", SWIG_From_int(static_cast< int >(0x88EC)));
  rb_define_const(mGlew, "GL_PIXEL_PACK_BUFFER_BINDING_EXT", SWIG_From_int(static_cast< int >(0x88ED)));
  rb_define_const(mGlew, "GL_PIXEL_UNPACK_BUFFER_BINDING_EXT", SWIG_From_int(static_cast< int >(0x88EF)));
  rb_define_const(mGlew, "GL_EXT_pixel_transform", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PIXEL_TRANSFORM_2D_EXT", SWIG_From_int(static_cast< int >(0x8330)));
  rb_define_const(mGlew, "GL_PIXEL_MAG_FILTER_EXT", SWIG_From_int(static_cast< int >(0x8331)));
  rb_define_const(mGlew, "GL_PIXEL_MIN_FILTER_EXT", SWIG_From_int(static_cast< int >(0x8332)));
  rb_define_const(mGlew, "GL_PIXEL_CUBIC_WEIGHT_EXT", SWIG_From_int(static_cast< int >(0x8333)));
  rb_define_const(mGlew, "GL_CUBIC_EXT", SWIG_From_int(static_cast< int >(0x8334)));
  rb_define_const(mGlew, "GL_AVERAGE_EXT", SWIG_From_int(static_cast< int >(0x8335)));
  rb_define_const(mGlew, "GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT", SWIG_From_int(static_cast< int >(0x8336)));
  rb_define_const(mGlew, "GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT", SWIG_From_int(static_cast< int >(0x8337)));
  rb_define_const(mGlew, "GL_PIXEL_TRANSFORM_2D_MATRIX_EXT", SWIG_From_int(static_cast< int >(0x8338)));
  rb_define_const(mGlew, "GL_EXT_pixel_transform_color_table", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_point_parameters", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_POINT_SIZE_MIN_EXT", SWIG_From_int(static_cast< int >(0x8126)));
  rb_define_const(mGlew, "GL_POINT_SIZE_MAX_EXT", SWIG_From_int(static_cast< int >(0x8127)));
  rb_define_const(mGlew, "GL_POINT_FADE_THRESHOLD_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8128)));
  rb_define_const(mGlew, "GL_DISTANCE_ATTENUATION_EXT", SWIG_From_int(static_cast< int >(0x8129)));
  rb_define_const(mGlew, "GL_EXT_polygon_offset", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_POLYGON_OFFSET_EXT", SWIG_From_int(static_cast< int >(0x8037)));
  rb_define_const(mGlew, "GL_POLYGON_OFFSET_FACTOR_EXT", SWIG_From_int(static_cast< int >(0x8038)));
  rb_define_const(mGlew, "GL_POLYGON_OFFSET_BIAS_EXT", SWIG_From_int(static_cast< int >(0x8039)));
  rb_define_const(mGlew, "GL_EXT_rescale_normal", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RESCALE_NORMAL_EXT", SWIG_From_int(static_cast< int >(0x803A)));
  rb_define_const(mGlew, "GL_EXT_scene_marker", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_secondary_color", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COLOR_SUM_EXT", SWIG_From_int(static_cast< int >(0x8458)));
  rb_define_const(mGlew, "GL_CURRENT_SECONDARY_COLOR_EXT", SWIG_From_int(static_cast< int >(0x8459)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY_SIZE_EXT", SWIG_From_int(static_cast< int >(0x845A)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY_TYPE_EXT", SWIG_From_int(static_cast< int >(0x845B)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT", SWIG_From_int(static_cast< int >(0x845C)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY_POINTER_EXT", SWIG_From_int(static_cast< int >(0x845D)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x845E)));
  rb_define_const(mGlew, "GL_EXT_separate_specular_color", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_LIGHT_MODEL_COLOR_CONTROL_EXT", SWIG_From_int(static_cast< int >(0x81F8)));
  rb_define_const(mGlew, "GL_SINGLE_COLOR_EXT", SWIG_From_int(static_cast< int >(0x81F9)));
  rb_define_const(mGlew, "GL_SEPARATE_SPECULAR_COLOR_EXT", SWIG_From_int(static_cast< int >(0x81FA)));
  rb_define_const(mGlew, "GL_EXT_shadow_funcs", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_shared_texture_palette", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SHARED_TEXTURE_PALETTE_EXT", SWIG_From_int(static_cast< int >(0x81FB)));
  rb_define_const(mGlew, "GL_EXT_stencil_clear_tag", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_STENCIL_TAG_BITS_EXT", SWIG_From_int(static_cast< int >(0x88F2)));
  rb_define_const(mGlew, "GL_STENCIL_CLEAR_TAG_VALUE_EXT", SWIG_From_int(static_cast< int >(0x88F3)));
  rb_define_const(mGlew, "GL_EXT_stencil_two_side", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_STENCIL_TEST_TWO_SIDE_EXT", SWIG_From_int(static_cast< int >(0x8910)));
  rb_define_const(mGlew, "GL_ACTIVE_STENCIL_FACE_EXT", SWIG_From_int(static_cast< int >(0x8911)));
  rb_define_const(mGlew, "GL_EXT_stencil_wrap", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_INCR_WRAP_EXT", SWIG_From_int(static_cast< int >(0x8507)));
  rb_define_const(mGlew, "GL_DECR_WRAP_EXT", SWIG_From_int(static_cast< int >(0x8508)));
  rb_define_const(mGlew, "GL_EXT_subtexture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ALPHA4_EXT", SWIG_From_int(static_cast< int >(0x803B)));
  rb_define_const(mGlew, "GL_ALPHA8_EXT", SWIG_From_int(static_cast< int >(0x803C)));
  rb_define_const(mGlew, "GL_ALPHA12_EXT", SWIG_From_int(static_cast< int >(0x803D)));
  rb_define_const(mGlew, "GL_ALPHA16_EXT", SWIG_From_int(static_cast< int >(0x803E)));
  rb_define_const(mGlew, "GL_LUMINANCE4_EXT", SWIG_From_int(static_cast< int >(0x803F)));
  rb_define_const(mGlew, "GL_LUMINANCE8_EXT", SWIG_From_int(static_cast< int >(0x8040)));
  rb_define_const(mGlew, "GL_LUMINANCE12_EXT", SWIG_From_int(static_cast< int >(0x8041)));
  rb_define_const(mGlew, "GL_LUMINANCE16_EXT", SWIG_From_int(static_cast< int >(0x8042)));
  rb_define_const(mGlew, "GL_LUMINANCE4_ALPHA4_EXT", SWIG_From_int(static_cast< int >(0x8043)));
  rb_define_const(mGlew, "GL_LUMINANCE6_ALPHA2_EXT", SWIG_From_int(static_cast< int >(0x8044)));
  rb_define_const(mGlew, "GL_LUMINANCE8_ALPHA8_EXT", SWIG_From_int(static_cast< int >(0x8045)));
  rb_define_const(mGlew, "GL_LUMINANCE12_ALPHA4_EXT", SWIG_From_int(static_cast< int >(0x8046)));
  rb_define_const(mGlew, "GL_LUMINANCE12_ALPHA12_EXT", SWIG_From_int(static_cast< int >(0x8047)));
  rb_define_const(mGlew, "GL_LUMINANCE16_ALPHA16_EXT", SWIG_From_int(static_cast< int >(0x8048)));
  rb_define_const(mGlew, "GL_INTENSITY_EXT", SWIG_From_int(static_cast< int >(0x8049)));
  rb_define_const(mGlew, "GL_INTENSITY4_EXT", SWIG_From_int(static_cast< int >(0x804A)));
  rb_define_const(mGlew, "GL_INTENSITY8_EXT", SWIG_From_int(static_cast< int >(0x804B)));
  rb_define_const(mGlew, "GL_INTENSITY12_EXT", SWIG_From_int(static_cast< int >(0x804C)));
  rb_define_const(mGlew, "GL_INTENSITY16_EXT", SWIG_From_int(static_cast< int >(0x804D)));
  rb_define_const(mGlew, "GL_RGB2_EXT", SWIG_From_int(static_cast< int >(0x804E)));
  rb_define_const(mGlew, "GL_RGB4_EXT", SWIG_From_int(static_cast< int >(0x804F)));
  rb_define_const(mGlew, "GL_RGB5_EXT", SWIG_From_int(static_cast< int >(0x8050)));
  rb_define_const(mGlew, "GL_RGB8_EXT", SWIG_From_int(static_cast< int >(0x8051)));
  rb_define_const(mGlew, "GL_RGB10_EXT", SWIG_From_int(static_cast< int >(0x8052)));
  rb_define_const(mGlew, "GL_RGB12_EXT", SWIG_From_int(static_cast< int >(0x8053)));
  rb_define_const(mGlew, "GL_RGB16_EXT", SWIG_From_int(static_cast< int >(0x8054)));
  rb_define_const(mGlew, "GL_RGBA2_EXT", SWIG_From_int(static_cast< int >(0x8055)));
  rb_define_const(mGlew, "GL_RGBA4_EXT", SWIG_From_int(static_cast< int >(0x8056)));
  rb_define_const(mGlew, "GL_RGB5_A1_EXT", SWIG_From_int(static_cast< int >(0x8057)));
  rb_define_const(mGlew, "GL_RGBA8_EXT", SWIG_From_int(static_cast< int >(0x8058)));
  rb_define_const(mGlew, "GL_RGB10_A2_EXT", SWIG_From_int(static_cast< int >(0x8059)));
  rb_define_const(mGlew, "GL_RGBA12_EXT", SWIG_From_int(static_cast< int >(0x805A)));
  rb_define_const(mGlew, "GL_RGBA16_EXT", SWIG_From_int(static_cast< int >(0x805B)));
  rb_define_const(mGlew, "GL_TEXTURE_RED_SIZE_EXT", SWIG_From_int(static_cast< int >(0x805C)));
  rb_define_const(mGlew, "GL_TEXTURE_GREEN_SIZE_EXT", SWIG_From_int(static_cast< int >(0x805D)));
  rb_define_const(mGlew, "GL_TEXTURE_BLUE_SIZE_EXT", SWIG_From_int(static_cast< int >(0x805E)));
  rb_define_const(mGlew, "GL_TEXTURE_ALPHA_SIZE_EXT", SWIG_From_int(static_cast< int >(0x805F)));
  rb_define_const(mGlew, "GL_TEXTURE_LUMINANCE_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8060)));
  rb_define_const(mGlew, "GL_TEXTURE_INTENSITY_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8061)));
  rb_define_const(mGlew, "GL_REPLACE_EXT", SWIG_From_int(static_cast< int >(0x8062)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_1D_EXT", SWIG_From_int(static_cast< int >(0x8063)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_2D_EXT", SWIG_From_int(static_cast< int >(0x8064)));
  rb_define_const(mGlew, "GL_EXT_texture3D", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PACK_SKIP_IMAGES_EXT", SWIG_From_int(static_cast< int >(0x806B)));
  rb_define_const(mGlew, "GL_PACK_IMAGE_HEIGHT_EXT", SWIG_From_int(static_cast< int >(0x806C)));
  rb_define_const(mGlew, "GL_UNPACK_SKIP_IMAGES_EXT", SWIG_From_int(static_cast< int >(0x806D)));
  rb_define_const(mGlew, "GL_UNPACK_IMAGE_HEIGHT_EXT", SWIG_From_int(static_cast< int >(0x806E)));
  rb_define_const(mGlew, "GL_TEXTURE_DEPTH_EXT", SWIG_From_int(static_cast< int >(0x8071)));
  rb_define_const(mGlew, "GL_TEXTURE_WRAP_R_EXT", SWIG_From_int(static_cast< int >(0x8072)));
  rb_define_const(mGlew, "GL_MAX_3D_TEXTURE_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8073)));
  rb_define_const(mGlew, "GL_EXT_texture_array", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT", SWIG_From_int(static_cast< int >(0x884E)));
  rb_define_const(mGlew, "GL_MAX_ARRAY_TEXTURE_LAYERS_EXT", SWIG_From_int(static_cast< int >(0x88FF)));
  rb_define_const(mGlew, "GL_TEXTURE_1D_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8C18)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_1D_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8C19)));
  rb_define_const(mGlew, "GL_TEXTURE_2D_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8C1A)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_2D_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8C1B)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_1D_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8C1C)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_2D_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8C1D)));
  rb_define_const(mGlew, "GL_EXT_texture_buffer_object", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_BUFFER_EXT", SWIG_From_int(static_cast< int >(0x8C2A)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_BUFFER_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8C2B)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_BUFFER_EXT", SWIG_From_int(static_cast< int >(0x8C2C)));
  rb_define_const(mGlew, "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT", SWIG_From_int(static_cast< int >(0x8C2D)));
  rb_define_const(mGlew, "GL_TEXTURE_BUFFER_FORMAT_EXT", SWIG_From_int(static_cast< int >(0x8C2E)));
  rb_define_const(mGlew, "GL_EXT_texture_compression_dxt1", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COMPRESSED_RGB_S3TC_DXT1_EXT", SWIG_From_int(static_cast< int >(0x83F0)));
  rb_define_const(mGlew, "GL_COMPRESSED_RGBA_S3TC_DXT1_EXT", SWIG_From_int(static_cast< int >(0x83F1)));
  rb_define_const(mGlew, "GL_EXT_texture_compression_latc", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COMPRESSED_LUMINANCE_LATC1_EXT", SWIG_From_int(static_cast< int >(0x8C70)));
  rb_define_const(mGlew, "GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT", SWIG_From_int(static_cast< int >(0x8C71)));
  rb_define_const(mGlew, "GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT", SWIG_From_int(static_cast< int >(0x8C72)));
  rb_define_const(mGlew, "GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT", SWIG_From_int(static_cast< int >(0x8C73)));
  rb_define_const(mGlew, "GL_EXT_texture_compression_rgtc", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COMPRESSED_RED_RGTC1_EXT", SWIG_From_int(static_cast< int >(0x8DBB)));
  rb_define_const(mGlew, "GL_COMPRESSED_SIGNED_RED_RGTC1_EXT", SWIG_From_int(static_cast< int >(0x8DBC)));
  rb_define_const(mGlew, "GL_COMPRESSED_RED_GREEN_RGTC2_EXT", SWIG_From_int(static_cast< int >(0x8DBD)));
  rb_define_const(mGlew, "GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT", SWIG_From_int(static_cast< int >(0x8DBE)));
  rb_define_const(mGlew, "GL_EXT_texture_compression_s3tc", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COMPRESSED_RGBA_S3TC_DXT3_EXT", SWIG_From_int(static_cast< int >(0x83F2)));
  rb_define_const(mGlew, "GL_COMPRESSED_RGBA_S3TC_DXT5_EXT", SWIG_From_int(static_cast< int >(0x83F3)));
  rb_define_const(mGlew, "GL_EXT_texture_cube_map", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_NORMAL_MAP_EXT", SWIG_From_int(static_cast< int >(0x8511)));
  rb_define_const(mGlew, "GL_REFLECTION_MAP_EXT", SWIG_From_int(static_cast< int >(0x8512)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_EXT", SWIG_From_int(static_cast< int >(0x8513)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_CUBE_MAP_EXT", SWIG_From_int(static_cast< int >(0x8514)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT", SWIG_From_int(static_cast< int >(0x8515)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT", SWIG_From_int(static_cast< int >(0x8516)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT", SWIG_From_int(static_cast< int >(0x8517)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT", SWIG_From_int(static_cast< int >(0x8518)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT", SWIG_From_int(static_cast< int >(0x8519)));
  rb_define_const(mGlew, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT", SWIG_From_int(static_cast< int >(0x851A)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_CUBE_MAP_EXT", SWIG_From_int(static_cast< int >(0x851B)));
  rb_define_const(mGlew, "GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT", SWIG_From_int(static_cast< int >(0x851C)));
  rb_define_const(mGlew, "GL_EXT_texture_edge_clamp", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_CLAMP_TO_EDGE_EXT", SWIG_From_int(static_cast< int >(0x812F)));
  rb_define_const(mGlew, "GL_EXT_texture_env", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_ENV0_EXT", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_ENV_BLEND_EXT", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_TEXTURE_ENV_SHIFT_EXT", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_ENV_REPLACE_EXT", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_ENV_ADD_EXT", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_ENV_SUBTRACT_EXT", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_TEXTURE_ENV_MODE_ALPHA_EXT", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_ENV_REVERSE_SUBTRACT_EXT", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_ENV_REVERSE_BLEND_EXT", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_ENV_COPY_EXT", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_ENV_MODULATE_EXT", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_EXT_texture_env_add", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_texture_env_combine", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COMBINE_EXT", SWIG_From_int(static_cast< int >(0x8570)));
  rb_define_const(mGlew, "GL_COMBINE_RGB_EXT", SWIG_From_int(static_cast< int >(0x8571)));
  rb_define_const(mGlew, "GL_COMBINE_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x8572)));
  rb_define_const(mGlew, "GL_RGB_SCALE_EXT", SWIG_From_int(static_cast< int >(0x8573)));
  rb_define_const(mGlew, "GL_ADD_SIGNED_EXT", SWIG_From_int(static_cast< int >(0x8574)));
  rb_define_const(mGlew, "GL_INTERPOLATE_EXT", SWIG_From_int(static_cast< int >(0x8575)));
  rb_define_const(mGlew, "GL_CONSTANT_EXT", SWIG_From_int(static_cast< int >(0x8576)));
  rb_define_const(mGlew, "GL_PRIMARY_COLOR_EXT", SWIG_From_int(static_cast< int >(0x8577)));
  rb_define_const(mGlew, "GL_PREVIOUS_EXT", SWIG_From_int(static_cast< int >(0x8578)));
  rb_define_const(mGlew, "GL_SOURCE0_RGB_EXT", SWIG_From_int(static_cast< int >(0x8580)));
  rb_define_const(mGlew, "GL_SOURCE1_RGB_EXT", SWIG_From_int(static_cast< int >(0x8581)));
  rb_define_const(mGlew, "GL_SOURCE2_RGB_EXT", SWIG_From_int(static_cast< int >(0x8582)));
  rb_define_const(mGlew, "GL_SOURCE0_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x8588)));
  rb_define_const(mGlew, "GL_SOURCE1_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x8589)));
  rb_define_const(mGlew, "GL_SOURCE2_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x858A)));
  rb_define_const(mGlew, "GL_OPERAND0_RGB_EXT", SWIG_From_int(static_cast< int >(0x8590)));
  rb_define_const(mGlew, "GL_OPERAND1_RGB_EXT", SWIG_From_int(static_cast< int >(0x8591)));
  rb_define_const(mGlew, "GL_OPERAND2_RGB_EXT", SWIG_From_int(static_cast< int >(0x8592)));
  rb_define_const(mGlew, "GL_OPERAND0_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x8598)));
  rb_define_const(mGlew, "GL_OPERAND1_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x8599)));
  rb_define_const(mGlew, "GL_OPERAND2_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x859A)));
  rb_define_const(mGlew, "GL_EXT_texture_env_dot3", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DOT3_RGB_EXT", SWIG_From_int(static_cast< int >(0x8740)));
  rb_define_const(mGlew, "GL_DOT3_RGBA_EXT", SWIG_From_int(static_cast< int >(0x8741)));
  rb_define_const(mGlew, "GL_EXT_texture_filter_anisotropic", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_MAX_ANISOTROPY_EXT", SWIG_From_int(static_cast< int >(0x84FE)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT", SWIG_From_int(static_cast< int >(0x84FF)));
  rb_define_const(mGlew, "GL_EXT_texture_integer", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RGBA32UI_EXT", SWIG_From_int(static_cast< int >(0x8D70)));
  rb_define_const(mGlew, "GL_RGB32UI_EXT", SWIG_From_int(static_cast< int >(0x8D71)));
  rb_define_const(mGlew, "GL_ALPHA32UI_EXT", SWIG_From_int(static_cast< int >(0x8D72)));
  rb_define_const(mGlew, "GL_INTENSITY32UI_EXT", SWIG_From_int(static_cast< int >(0x8D73)));
  rb_define_const(mGlew, "GL_LUMINANCE32UI_EXT", SWIG_From_int(static_cast< int >(0x8D74)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA32UI_EXT", SWIG_From_int(static_cast< int >(0x8D75)));
  rb_define_const(mGlew, "GL_RGBA16UI_EXT", SWIG_From_int(static_cast< int >(0x8D76)));
  rb_define_const(mGlew, "GL_RGB16UI_EXT", SWIG_From_int(static_cast< int >(0x8D77)));
  rb_define_const(mGlew, "GL_ALPHA16UI_EXT", SWIG_From_int(static_cast< int >(0x8D78)));
  rb_define_const(mGlew, "GL_INTENSITY16UI_EXT", SWIG_From_int(static_cast< int >(0x8D79)));
  rb_define_const(mGlew, "GL_LUMINANCE16UI_EXT", SWIG_From_int(static_cast< int >(0x8D7A)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA16UI_EXT", SWIG_From_int(static_cast< int >(0x8D7B)));
  rb_define_const(mGlew, "GL_RGBA8UI_EXT", SWIG_From_int(static_cast< int >(0x8D7C)));
  rb_define_const(mGlew, "GL_RGB8UI_EXT", SWIG_From_int(static_cast< int >(0x8D7D)));
  rb_define_const(mGlew, "GL_ALPHA8UI_EXT", SWIG_From_int(static_cast< int >(0x8D7E)));
  rb_define_const(mGlew, "GL_INTENSITY8UI_EXT", SWIG_From_int(static_cast< int >(0x8D7F)));
  rb_define_const(mGlew, "GL_LUMINANCE8UI_EXT", SWIG_From_int(static_cast< int >(0x8D80)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA8UI_EXT", SWIG_From_int(static_cast< int >(0x8D81)));
  rb_define_const(mGlew, "GL_RGBA32I_EXT", SWIG_From_int(static_cast< int >(0x8D82)));
  rb_define_const(mGlew, "GL_RGB32I_EXT", SWIG_From_int(static_cast< int >(0x8D83)));
  rb_define_const(mGlew, "GL_ALPHA32I_EXT", SWIG_From_int(static_cast< int >(0x8D84)));
  rb_define_const(mGlew, "GL_INTENSITY32I_EXT", SWIG_From_int(static_cast< int >(0x8D85)));
  rb_define_const(mGlew, "GL_LUMINANCE32I_EXT", SWIG_From_int(static_cast< int >(0x8D86)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA32I_EXT", SWIG_From_int(static_cast< int >(0x8D87)));
  rb_define_const(mGlew, "GL_RGBA16I_EXT", SWIG_From_int(static_cast< int >(0x8D88)));
  rb_define_const(mGlew, "GL_RGB16I_EXT", SWIG_From_int(static_cast< int >(0x8D89)));
  rb_define_const(mGlew, "GL_ALPHA16I_EXT", SWIG_From_int(static_cast< int >(0x8D8A)));
  rb_define_const(mGlew, "GL_INTENSITY16I_EXT", SWIG_From_int(static_cast< int >(0x8D8B)));
  rb_define_const(mGlew, "GL_LUMINANCE16I_EXT", SWIG_From_int(static_cast< int >(0x8D8C)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA16I_EXT", SWIG_From_int(static_cast< int >(0x8D8D)));
  rb_define_const(mGlew, "GL_RGBA8I_EXT", SWIG_From_int(static_cast< int >(0x8D8E)));
  rb_define_const(mGlew, "GL_RGB8I_EXT", SWIG_From_int(static_cast< int >(0x8D8F)));
  rb_define_const(mGlew, "GL_ALPHA8I_EXT", SWIG_From_int(static_cast< int >(0x8D90)));
  rb_define_const(mGlew, "GL_INTENSITY8I_EXT", SWIG_From_int(static_cast< int >(0x8D91)));
  rb_define_const(mGlew, "GL_LUMINANCE8I_EXT", SWIG_From_int(static_cast< int >(0x8D92)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA8I_EXT", SWIG_From_int(static_cast< int >(0x8D93)));
  rb_define_const(mGlew, "GL_RED_INTEGER_EXT", SWIG_From_int(static_cast< int >(0x8D94)));
  rb_define_const(mGlew, "GL_GREEN_INTEGER_EXT", SWIG_From_int(static_cast< int >(0x8D95)));
  rb_define_const(mGlew, "GL_BLUE_INTEGER_EXT", SWIG_From_int(static_cast< int >(0x8D96)));
  rb_define_const(mGlew, "GL_ALPHA_INTEGER_EXT", SWIG_From_int(static_cast< int >(0x8D97)));
  rb_define_const(mGlew, "GL_RGB_INTEGER_EXT", SWIG_From_int(static_cast< int >(0x8D98)));
  rb_define_const(mGlew, "GL_RGBA_INTEGER_EXT", SWIG_From_int(static_cast< int >(0x8D99)));
  rb_define_const(mGlew, "GL_BGR_INTEGER_EXT", SWIG_From_int(static_cast< int >(0x8D9A)));
  rb_define_const(mGlew, "GL_BGRA_INTEGER_EXT", SWIG_From_int(static_cast< int >(0x8D9B)));
  rb_define_const(mGlew, "GL_LUMINANCE_INTEGER_EXT", SWIG_From_int(static_cast< int >(0x8D9C)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA_INTEGER_EXT", SWIG_From_int(static_cast< int >(0x8D9D)));
  rb_define_const(mGlew, "GL_RGBA_INTEGER_MODE_EXT", SWIG_From_int(static_cast< int >(0x8D9E)));
  rb_define_const(mGlew, "GL_EXT_texture_lod_bias", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_LOD_BIAS_EXT", SWIG_From_int(static_cast< int >(0x84FD)));
  rb_define_const(mGlew, "GL_TEXTURE_FILTER_CONTROL_EXT", SWIG_From_int(static_cast< int >(0x8500)));
  rb_define_const(mGlew, "GL_TEXTURE_LOD_BIAS_EXT", SWIG_From_int(static_cast< int >(0x8501)));
  rb_define_const(mGlew, "GL_EXT_texture_mirror_clamp", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MIRROR_CLAMP_EXT", SWIG_From_int(static_cast< int >(0x8742)));
  rb_define_const(mGlew, "GL_MIRROR_CLAMP_TO_EDGE_EXT", SWIG_From_int(static_cast< int >(0x8743)));
  rb_define_const(mGlew, "GL_MIRROR_CLAMP_TO_BORDER_EXT", SWIG_From_int(static_cast< int >(0x8912)));
  rb_define_const(mGlew, "GL_EXT_texture_object", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_PRIORITY_EXT", SWIG_From_int(static_cast< int >(0x8066)));
  rb_define_const(mGlew, "GL_TEXTURE_RESIDENT_EXT", SWIG_From_int(static_cast< int >(0x8067)));
  rb_define_const(mGlew, "GL_TEXTURE_1D_BINDING_EXT", SWIG_From_int(static_cast< int >(0x8068)));
  rb_define_const(mGlew, "GL_TEXTURE_2D_BINDING_EXT", SWIG_From_int(static_cast< int >(0x8069)));
  rb_define_const(mGlew, "GL_TEXTURE_3D_BINDING_EXT", SWIG_From_int(static_cast< int >(0x806A)));
  rb_define_const(mGlew, "GL_EXT_texture_perturb_normal", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PERTURB_EXT", SWIG_From_int(static_cast< int >(0x85AE)));
  rb_define_const(mGlew, "GL_TEXTURE_NORMAL_EXT", SWIG_From_int(static_cast< int >(0x85AF)));
  rb_define_const(mGlew, "GL_EXT_texture_rectangle", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_RECTANGLE_EXT", SWIG_From_int(static_cast< int >(0x84F5)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_RECTANGLE_EXT", SWIG_From_int(static_cast< int >(0x84F6)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_RECTANGLE_EXT", SWIG_From_int(static_cast< int >(0x84F7)));
  rb_define_const(mGlew, "GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT", SWIG_From_int(static_cast< int >(0x84F8)));
  rb_define_const(mGlew, "GL_EXT_texture_sRGB", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SRGB_EXT", SWIG_From_int(static_cast< int >(0x8C40)));
  rb_define_const(mGlew, "GL_SRGB8_EXT", SWIG_From_int(static_cast< int >(0x8C41)));
  rb_define_const(mGlew, "GL_SRGB_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x8C42)));
  rb_define_const(mGlew, "GL_SRGB8_ALPHA8_EXT", SWIG_From_int(static_cast< int >(0x8C43)));
  rb_define_const(mGlew, "GL_SLUMINANCE_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x8C44)));
  rb_define_const(mGlew, "GL_SLUMINANCE8_ALPHA8_EXT", SWIG_From_int(static_cast< int >(0x8C45)));
  rb_define_const(mGlew, "GL_SLUMINANCE_EXT", SWIG_From_int(static_cast< int >(0x8C46)));
  rb_define_const(mGlew, "GL_SLUMINANCE8_EXT", SWIG_From_int(static_cast< int >(0x8C47)));
  rb_define_const(mGlew, "GL_COMPRESSED_SRGB_EXT", SWIG_From_int(static_cast< int >(0x8C48)));
  rb_define_const(mGlew, "GL_COMPRESSED_SRGB_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x8C49)));
  rb_define_const(mGlew, "GL_COMPRESSED_SLUMINANCE_EXT", SWIG_From_int(static_cast< int >(0x8C4A)));
  rb_define_const(mGlew, "GL_COMPRESSED_SLUMINANCE_ALPHA_EXT", SWIG_From_int(static_cast< int >(0x8C4B)));
  rb_define_const(mGlew, "GL_COMPRESSED_SRGB_S3TC_DXT1_EXT", SWIG_From_int(static_cast< int >(0x8C4C)));
  rb_define_const(mGlew, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT", SWIG_From_int(static_cast< int >(0x8C4D)));
  rb_define_const(mGlew, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT", SWIG_From_int(static_cast< int >(0x8C4E)));
  rb_define_const(mGlew, "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT", SWIG_From_int(static_cast< int >(0x8C4F)));
  rb_define_const(mGlew, "GL_EXT_texture_shared_exponent", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RGB9_E5_EXT", SWIG_From_int(static_cast< int >(0x8C3D)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_5_9_9_9_REV_EXT", SWIG_From_int(static_cast< int >(0x8C3E)));
  rb_define_const(mGlew, "GL_TEXTURE_SHARED_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8C3F)));
  rb_define_const(mGlew, "GL_EXT_texture_swizzle", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_SWIZZLE_R_EXT", SWIG_From_int(static_cast< int >(0x8E42)));
  rb_define_const(mGlew, "GL_TEXTURE_SWIZZLE_G_EXT", SWIG_From_int(static_cast< int >(0x8E43)));
  rb_define_const(mGlew, "GL_TEXTURE_SWIZZLE_B_EXT", SWIG_From_int(static_cast< int >(0x8E44)));
  rb_define_const(mGlew, "GL_TEXTURE_SWIZZLE_A_EXT", SWIG_From_int(static_cast< int >(0x8E45)));
  rb_define_const(mGlew, "GL_TEXTURE_SWIZZLE_RGBA_EXT", SWIG_From_int(static_cast< int >(0x8E46)));
  rb_define_const(mGlew, "GL_EXT_timer_query", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TIME_ELAPSED_EXT", SWIG_From_int(static_cast< int >(0x88BF)));
  rb_define_const(mGlew, "GL_EXT_transform_feedback", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT", SWIG_From_int(static_cast< int >(0x8C76)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT", SWIG_From_int(static_cast< int >(0x8C7F)));
  rb_define_const(mGlew, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT", SWIG_From_int(static_cast< int >(0x8C80)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_VARYINGS_EXT", SWIG_From_int(static_cast< int >(0x8C83)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT", SWIG_From_int(static_cast< int >(0x8C84)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8C85)));
  rb_define_const(mGlew, "GL_PRIMITIVES_GENERATED_EXT", SWIG_From_int(static_cast< int >(0x8C87)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT", SWIG_From_int(static_cast< int >(0x8C88)));
  rb_define_const(mGlew, "GL_RASTERIZER_DISCARD_EXT", SWIG_From_int(static_cast< int >(0x8C89)));
  rb_define_const(mGlew, "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT", SWIG_From_int(static_cast< int >(0x8C8A)));
  rb_define_const(mGlew, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT", SWIG_From_int(static_cast< int >(0x8C8B)));
  rb_define_const(mGlew, "GL_INTERLEAVED_ATTRIBS_EXT", SWIG_From_int(static_cast< int >(0x8C8C)));
  rb_define_const(mGlew, "GL_SEPARATE_ATTRIBS_EXT", SWIG_From_int(static_cast< int >(0x8C8D)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_EXT", SWIG_From_int(static_cast< int >(0x8C8E)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT", SWIG_From_int(static_cast< int >(0x8C8F)));
  rb_define_const(mGlew, "GL_EXT_vertex_array", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DOUBLE_EXT", SWIG_From_int(static_cast< int >(0x140A)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8074)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8075)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8076)));
  rb_define_const(mGlew, "GL_INDEX_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8077)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8078)));
  rb_define_const(mGlew, "GL_EDGE_FLAG_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x8079)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_SIZE_EXT", SWIG_From_int(static_cast< int >(0x807A)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_TYPE_EXT", SWIG_From_int(static_cast< int >(0x807B)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_STRIDE_EXT", SWIG_From_int(static_cast< int >(0x807C)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_COUNT_EXT", SWIG_From_int(static_cast< int >(0x807D)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY_TYPE_EXT", SWIG_From_int(static_cast< int >(0x807E)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY_STRIDE_EXT", SWIG_From_int(static_cast< int >(0x807F)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY_COUNT_EXT", SWIG_From_int(static_cast< int >(0x8080)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8081)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_TYPE_EXT", SWIG_From_int(static_cast< int >(0x8082)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_STRIDE_EXT", SWIG_From_int(static_cast< int >(0x8083)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_COUNT_EXT", SWIG_From_int(static_cast< int >(0x8084)));
  rb_define_const(mGlew, "GL_INDEX_ARRAY_TYPE_EXT", SWIG_From_int(static_cast< int >(0x8085)));
  rb_define_const(mGlew, "GL_INDEX_ARRAY_STRIDE_EXT", SWIG_From_int(static_cast< int >(0x8086)));
  rb_define_const(mGlew, "GL_INDEX_ARRAY_COUNT_EXT", SWIG_From_int(static_cast< int >(0x8087)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_SIZE_EXT", SWIG_From_int(static_cast< int >(0x8088)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_TYPE_EXT", SWIG_From_int(static_cast< int >(0x8089)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_STRIDE_EXT", SWIG_From_int(static_cast< int >(0x808A)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_COUNT_EXT", SWIG_From_int(static_cast< int >(0x808B)));
  rb_define_const(mGlew, "GL_EDGE_FLAG_ARRAY_STRIDE_EXT", SWIG_From_int(static_cast< int >(0x808C)));
  rb_define_const(mGlew, "GL_EDGE_FLAG_ARRAY_COUNT_EXT", SWIG_From_int(static_cast< int >(0x808D)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_POINTER_EXT", SWIG_From_int(static_cast< int >(0x808E)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY_POINTER_EXT", SWIG_From_int(static_cast< int >(0x808F)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_POINTER_EXT", SWIG_From_int(static_cast< int >(0x8090)));
  rb_define_const(mGlew, "GL_INDEX_ARRAY_POINTER_EXT", SWIG_From_int(static_cast< int >(0x8091)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_POINTER_EXT", SWIG_From_int(static_cast< int >(0x8092)));
  rb_define_const(mGlew, "GL_EDGE_FLAG_ARRAY_POINTER_EXT", SWIG_From_int(static_cast< int >(0x8093)));
  rb_define_const(mGlew, "GL_EXT_vertex_array_bgra", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXT_vertex_shader", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX_SHADER_EXT", SWIG_From_int(static_cast< int >(0x8780)));
  rb_define_const(mGlew, "GL_VERTEX_SHADER_BINDING_EXT", SWIG_From_int(static_cast< int >(0x8781)));
  rb_define_const(mGlew, "GL_OP_INDEX_EXT", SWIG_From_int(static_cast< int >(0x8782)));
  rb_define_const(mGlew, "GL_OP_NEGATE_EXT", SWIG_From_int(static_cast< int >(0x8783)));
  rb_define_const(mGlew, "GL_OP_DOT3_EXT", SWIG_From_int(static_cast< int >(0x8784)));
  rb_define_const(mGlew, "GL_OP_DOT4_EXT", SWIG_From_int(static_cast< int >(0x8785)));
  rb_define_const(mGlew, "GL_OP_MUL_EXT", SWIG_From_int(static_cast< int >(0x8786)));
  rb_define_const(mGlew, "GL_OP_ADD_EXT", SWIG_From_int(static_cast< int >(0x8787)));
  rb_define_const(mGlew, "GL_OP_MADD_EXT", SWIG_From_int(static_cast< int >(0x8788)));
  rb_define_const(mGlew, "GL_OP_FRAC_EXT", SWIG_From_int(static_cast< int >(0x8789)));
  rb_define_const(mGlew, "GL_OP_MAX_EXT", SWIG_From_int(static_cast< int >(0x878A)));
  rb_define_const(mGlew, "GL_OP_MIN_EXT", SWIG_From_int(static_cast< int >(0x878B)));
  rb_define_const(mGlew, "GL_OP_SET_GE_EXT", SWIG_From_int(static_cast< int >(0x878C)));
  rb_define_const(mGlew, "GL_OP_SET_LT_EXT", SWIG_From_int(static_cast< int >(0x878D)));
  rb_define_const(mGlew, "GL_OP_CLAMP_EXT", SWIG_From_int(static_cast< int >(0x878E)));
  rb_define_const(mGlew, "GL_OP_FLOOR_EXT", SWIG_From_int(static_cast< int >(0x878F)));
  rb_define_const(mGlew, "GL_OP_ROUND_EXT", SWIG_From_int(static_cast< int >(0x8790)));
  rb_define_const(mGlew, "GL_OP_EXP_BASE_2_EXT", SWIG_From_int(static_cast< int >(0x8791)));
  rb_define_const(mGlew, "GL_OP_LOG_BASE_2_EXT", SWIG_From_int(static_cast< int >(0x8792)));
  rb_define_const(mGlew, "GL_OP_POWER_EXT", SWIG_From_int(static_cast< int >(0x8793)));
  rb_define_const(mGlew, "GL_OP_RECIP_EXT", SWIG_From_int(static_cast< int >(0x8794)));
  rb_define_const(mGlew, "GL_OP_RECIP_SQRT_EXT", SWIG_From_int(static_cast< int >(0x8795)));
  rb_define_const(mGlew, "GL_OP_SUB_EXT", SWIG_From_int(static_cast< int >(0x8796)));
  rb_define_const(mGlew, "GL_OP_CROSS_PRODUCT_EXT", SWIG_From_int(static_cast< int >(0x8797)));
  rb_define_const(mGlew, "GL_OP_MULTIPLY_MATRIX_EXT", SWIG_From_int(static_cast< int >(0x8798)));
  rb_define_const(mGlew, "GL_OP_MOV_EXT", SWIG_From_int(static_cast< int >(0x8799)));
  rb_define_const(mGlew, "GL_OUTPUT_VERTEX_EXT", SWIG_From_int(static_cast< int >(0x879A)));
  rb_define_const(mGlew, "GL_OUTPUT_COLOR0_EXT", SWIG_From_int(static_cast< int >(0x879B)));
  rb_define_const(mGlew, "GL_OUTPUT_COLOR1_EXT", SWIG_From_int(static_cast< int >(0x879C)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD0_EXT", SWIG_From_int(static_cast< int >(0x879D)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD1_EXT", SWIG_From_int(static_cast< int >(0x879E)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD2_EXT", SWIG_From_int(static_cast< int >(0x879F)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD3_EXT", SWIG_From_int(static_cast< int >(0x87A0)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD4_EXT", SWIG_From_int(static_cast< int >(0x87A1)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD5_EXT", SWIG_From_int(static_cast< int >(0x87A2)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD6_EXT", SWIG_From_int(static_cast< int >(0x87A3)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD7_EXT", SWIG_From_int(static_cast< int >(0x87A4)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD8_EXT", SWIG_From_int(static_cast< int >(0x87A5)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD9_EXT", SWIG_From_int(static_cast< int >(0x87A6)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD10_EXT", SWIG_From_int(static_cast< int >(0x87A7)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD11_EXT", SWIG_From_int(static_cast< int >(0x87A8)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD12_EXT", SWIG_From_int(static_cast< int >(0x87A9)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD13_EXT", SWIG_From_int(static_cast< int >(0x87AA)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD14_EXT", SWIG_From_int(static_cast< int >(0x87AB)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD15_EXT", SWIG_From_int(static_cast< int >(0x87AC)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD16_EXT", SWIG_From_int(static_cast< int >(0x87AD)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD17_EXT", SWIG_From_int(static_cast< int >(0x87AE)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD18_EXT", SWIG_From_int(static_cast< int >(0x87AF)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD19_EXT", SWIG_From_int(static_cast< int >(0x87B0)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD20_EXT", SWIG_From_int(static_cast< int >(0x87B1)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD21_EXT", SWIG_From_int(static_cast< int >(0x87B2)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD22_EXT", SWIG_From_int(static_cast< int >(0x87B3)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD23_EXT", SWIG_From_int(static_cast< int >(0x87B4)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD24_EXT", SWIG_From_int(static_cast< int >(0x87B5)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD25_EXT", SWIG_From_int(static_cast< int >(0x87B6)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD26_EXT", SWIG_From_int(static_cast< int >(0x87B7)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD27_EXT", SWIG_From_int(static_cast< int >(0x87B8)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD28_EXT", SWIG_From_int(static_cast< int >(0x87B9)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD29_EXT", SWIG_From_int(static_cast< int >(0x87BA)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD30_EXT", SWIG_From_int(static_cast< int >(0x87BB)));
  rb_define_const(mGlew, "GL_OUTPUT_TEXTURE_COORD31_EXT", SWIG_From_int(static_cast< int >(0x87BC)));
  rb_define_const(mGlew, "GL_OUTPUT_FOG_EXT", SWIG_From_int(static_cast< int >(0x87BD)));
  rb_define_const(mGlew, "GL_SCALAR_EXT", SWIG_From_int(static_cast< int >(0x87BE)));
  rb_define_const(mGlew, "GL_VECTOR_EXT", SWIG_From_int(static_cast< int >(0x87BF)));
  rb_define_const(mGlew, "GL_MATRIX_EXT", SWIG_From_int(static_cast< int >(0x87C0)));
  rb_define_const(mGlew, "GL_VARIANT_EXT", SWIG_From_int(static_cast< int >(0x87C1)));
  rb_define_const(mGlew, "GL_INVARIANT_EXT", SWIG_From_int(static_cast< int >(0x87C2)));
  rb_define_const(mGlew, "GL_LOCAL_CONSTANT_EXT", SWIG_From_int(static_cast< int >(0x87C3)));
  rb_define_const(mGlew, "GL_LOCAL_EXT", SWIG_From_int(static_cast< int >(0x87C4)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT", SWIG_From_int(static_cast< int >(0x87C5)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_SHADER_VARIANTS_EXT", SWIG_From_int(static_cast< int >(0x87C6)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_SHADER_INVARIANTS_EXT", SWIG_From_int(static_cast< int >(0x87C7)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT", SWIG_From_int(static_cast< int >(0x87C8)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_SHADER_LOCALS_EXT", SWIG_From_int(static_cast< int >(0x87C9)));
  rb_define_const(mGlew, "GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT", SWIG_From_int(static_cast< int >(0x87CA)));
  rb_define_const(mGlew, "GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT", SWIG_From_int(static_cast< int >(0x87CB)));
  rb_define_const(mGlew, "GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT", SWIG_From_int(static_cast< int >(0x87CC)));
  rb_define_const(mGlew, "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT", SWIG_From_int(static_cast< int >(0x87CD)));
  rb_define_const(mGlew, "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT", SWIG_From_int(static_cast< int >(0x87CE)));
  rb_define_const(mGlew, "GL_VERTEX_SHADER_INSTRUCTIONS_EXT", SWIG_From_int(static_cast< int >(0x87CF)));
  rb_define_const(mGlew, "GL_VERTEX_SHADER_VARIANTS_EXT", SWIG_From_int(static_cast< int >(0x87D0)));
  rb_define_const(mGlew, "GL_VERTEX_SHADER_INVARIANTS_EXT", SWIG_From_int(static_cast< int >(0x87D1)));
  rb_define_const(mGlew, "GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT", SWIG_From_int(static_cast< int >(0x87D2)));
  rb_define_const(mGlew, "GL_VERTEX_SHADER_LOCALS_EXT", SWIG_From_int(static_cast< int >(0x87D3)));
  rb_define_const(mGlew, "GL_VERTEX_SHADER_OPTIMIZED_EXT", SWIG_From_int(static_cast< int >(0x87D4)));
  rb_define_const(mGlew, "GL_X_EXT", SWIG_From_int(static_cast< int >(0x87D5)));
  rb_define_const(mGlew, "GL_Y_EXT", SWIG_From_int(static_cast< int >(0x87D6)));
  rb_define_const(mGlew, "GL_Z_EXT", SWIG_From_int(static_cast< int >(0x87D7)));
  rb_define_const(mGlew, "GL_W_EXT", SWIG_From_int(static_cast< int >(0x87D8)));
  rb_define_const(mGlew, "GL_NEGATIVE_X_EXT", SWIG_From_int(static_cast< int >(0x87D9)));
  rb_define_const(mGlew, "GL_NEGATIVE_Y_EXT", SWIG_From_int(static_cast< int >(0x87DA)));
  rb_define_const(mGlew, "GL_NEGATIVE_Z_EXT", SWIG_From_int(static_cast< int >(0x87DB)));
  rb_define_const(mGlew, "GL_NEGATIVE_W_EXT", SWIG_From_int(static_cast< int >(0x87DC)));
  rb_define_const(mGlew, "GL_ZERO_EXT", SWIG_From_int(static_cast< int >(0x87DD)));
  rb_define_const(mGlew, "GL_ONE_EXT", SWIG_From_int(static_cast< int >(0x87DE)));
  rb_define_const(mGlew, "GL_NEGATIVE_ONE_EXT", SWIG_From_int(static_cast< int >(0x87DF)));
  rb_define_const(mGlew, "GL_NORMALIZED_RANGE_EXT", SWIG_From_int(static_cast< int >(0x87E0)));
  rb_define_const(mGlew, "GL_FULL_RANGE_EXT", SWIG_From_int(static_cast< int >(0x87E1)));
  rb_define_const(mGlew, "GL_CURRENT_VERTEX_EXT", SWIG_From_int(static_cast< int >(0x87E2)));
  rb_define_const(mGlew, "GL_MVP_MATRIX_EXT", SWIG_From_int(static_cast< int >(0x87E3)));
  rb_define_const(mGlew, "GL_VARIANT_VALUE_EXT", SWIG_From_int(static_cast< int >(0x87E4)));
  rb_define_const(mGlew, "GL_VARIANT_DATATYPE_EXT", SWIG_From_int(static_cast< int >(0x87E5)));
  rb_define_const(mGlew, "GL_VARIANT_ARRAY_STRIDE_EXT", SWIG_From_int(static_cast< int >(0x87E6)));
  rb_define_const(mGlew, "GL_VARIANT_ARRAY_TYPE_EXT", SWIG_From_int(static_cast< int >(0x87E7)));
  rb_define_const(mGlew, "GL_VARIANT_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x87E8)));
  rb_define_const(mGlew, "GL_VARIANT_ARRAY_POINTER_EXT", SWIG_From_int(static_cast< int >(0x87E9)));
  rb_define_const(mGlew, "GL_INVARIANT_VALUE_EXT", SWIG_From_int(static_cast< int >(0x87EA)));
  rb_define_const(mGlew, "GL_INVARIANT_DATATYPE_EXT", SWIG_From_int(static_cast< int >(0x87EB)));
  rb_define_const(mGlew, "GL_LOCAL_CONSTANT_VALUE_EXT", SWIG_From_int(static_cast< int >(0x87EC)));
  rb_define_const(mGlew, "GL_LOCAL_CONSTANT_DATATYPE_EXT", SWIG_From_int(static_cast< int >(0x87ED)));
  rb_define_const(mGlew, "GL_EXT_vertex_weighting", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MODELVIEW0_STACK_DEPTH_EXT", SWIG_From_int(static_cast< int >(0x0BA3)));
  rb_define_const(mGlew, "GL_MODELVIEW0_MATRIX_EXT", SWIG_From_int(static_cast< int >(0x0BA6)));
  rb_define_const(mGlew, "GL_MODELVIEW0_EXT", SWIG_From_int(static_cast< int >(0x1700)));
  rb_define_const(mGlew, "GL_MODELVIEW1_STACK_DEPTH_EXT", SWIG_From_int(static_cast< int >(0x8502)));
  rb_define_const(mGlew, "GL_MODELVIEW1_MATRIX_EXT", SWIG_From_int(static_cast< int >(0x8506)));
  rb_define_const(mGlew, "GL_VERTEX_WEIGHTING_EXT", SWIG_From_int(static_cast< int >(0x8509)));
  rb_define_const(mGlew, "GL_MODELVIEW1_EXT", SWIG_From_int(static_cast< int >(0x850A)));
  rb_define_const(mGlew, "GL_CURRENT_VERTEX_WEIGHT_EXT", SWIG_From_int(static_cast< int >(0x850B)));
  rb_define_const(mGlew, "GL_VERTEX_WEIGHT_ARRAY_EXT", SWIG_From_int(static_cast< int >(0x850C)));
  rb_define_const(mGlew, "GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT", SWIG_From_int(static_cast< int >(0x850D)));
  rb_define_const(mGlew, "GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT", SWIG_From_int(static_cast< int >(0x850E)));
  rb_define_const(mGlew, "GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT", SWIG_From_int(static_cast< int >(0x850F)));
  rb_define_const(mGlew, "GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT", SWIG_From_int(static_cast< int >(0x8510)));
  rb_define_const(mGlew, "GL_GREMEDY_frame_terminator", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_GREMEDY_string_marker", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_HP_convolution_border_modes", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_HP_image_transform", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_HP_occlusion_test", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_OCCLUSION_TEST_HP", SWIG_From_int(static_cast< int >(0x8165)));
  rb_define_const(mGlew, "GL_OCCLUSION_TEST_RESULT_HP", SWIG_From_int(static_cast< int >(0x8166)));
  rb_define_const(mGlew, "GL_HP_texture_lighting", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_IBM_cull_vertex", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_CULL_VERTEX_IBM", SWIG_From_int(static_cast< int >(103050)));
  rb_define_const(mGlew, "GL_IBM_multimode_draw_arrays", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_IBM_rasterpos_clip", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RASTER_POSITION_UNCLIPPED_IBM", SWIG_From_int(static_cast< int >(103010)));
  rb_define_const(mGlew, "GL_IBM_static_data", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ALL_STATIC_DATA_IBM", SWIG_From_int(static_cast< int >(103060)));
  rb_define_const(mGlew, "GL_STATIC_VERTEX_ARRAY_IBM", SWIG_From_int(static_cast< int >(103061)));
  rb_define_const(mGlew, "GL_IBM_texture_mirrored_repeat", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MIRRORED_REPEAT_IBM", SWIG_From_int(static_cast< int >(0x8370)));
  rb_define_const(mGlew, "GL_IBM_vertex_array_lists", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_LIST_IBM", SWIG_From_int(static_cast< int >(103070)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY_LIST_IBM", SWIG_From_int(static_cast< int >(103071)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_LIST_IBM", SWIG_From_int(static_cast< int >(103072)));
  rb_define_const(mGlew, "GL_INDEX_ARRAY_LIST_IBM", SWIG_From_int(static_cast< int >(103073)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_LIST_IBM", SWIG_From_int(static_cast< int >(103074)));
  rb_define_const(mGlew, "GL_EDGE_FLAG_ARRAY_LIST_IBM", SWIG_From_int(static_cast< int >(103075)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_ARRAY_LIST_IBM", SWIG_From_int(static_cast< int >(103076)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY_LIST_IBM", SWIG_From_int(static_cast< int >(103077)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_LIST_STRIDE_IBM", SWIG_From_int(static_cast< int >(103080)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY_LIST_STRIDE_IBM", SWIG_From_int(static_cast< int >(103081)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_LIST_STRIDE_IBM", SWIG_From_int(static_cast< int >(103082)));
  rb_define_const(mGlew, "GL_INDEX_ARRAY_LIST_STRIDE_IBM", SWIG_From_int(static_cast< int >(103083)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM", SWIG_From_int(static_cast< int >(103084)));
  rb_define_const(mGlew, "GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM", SWIG_From_int(static_cast< int >(103085)));
  rb_define_const(mGlew, "GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM", SWIG_From_int(static_cast< int >(103086)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM", SWIG_From_int(static_cast< int >(103087)));
  rb_define_const(mGlew, "GL_INGR_color_clamp", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RED_MIN_CLAMP_INGR", SWIG_From_int(static_cast< int >(0x8560)));
  rb_define_const(mGlew, "GL_GREEN_MIN_CLAMP_INGR", SWIG_From_int(static_cast< int >(0x8561)));
  rb_define_const(mGlew, "GL_BLUE_MIN_CLAMP_INGR", SWIG_From_int(static_cast< int >(0x8562)));
  rb_define_const(mGlew, "GL_ALPHA_MIN_CLAMP_INGR", SWIG_From_int(static_cast< int >(0x8563)));
  rb_define_const(mGlew, "GL_RED_MAX_CLAMP_INGR", SWIG_From_int(static_cast< int >(0x8564)));
  rb_define_const(mGlew, "GL_GREEN_MAX_CLAMP_INGR", SWIG_From_int(static_cast< int >(0x8565)));
  rb_define_const(mGlew, "GL_BLUE_MAX_CLAMP_INGR", SWIG_From_int(static_cast< int >(0x8566)));
  rb_define_const(mGlew, "GL_ALPHA_MAX_CLAMP_INGR", SWIG_From_int(static_cast< int >(0x8567)));
  rb_define_const(mGlew, "GL_INGR_interlace_read", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_INTERLACE_READ_INGR", SWIG_From_int(static_cast< int >(0x8568)));
  rb_define_const(mGlew, "GL_INTEL_parallel_arrays", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PARALLEL_ARRAYS_INTEL", SWIG_From_int(static_cast< int >(0x83F4)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL", SWIG_From_int(static_cast< int >(0x83F5)));
  rb_define_const(mGlew, "GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL", SWIG_From_int(static_cast< int >(0x83F6)));
  rb_define_const(mGlew, "GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL", SWIG_From_int(static_cast< int >(0x83F7)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL", SWIG_From_int(static_cast< int >(0x83F8)));
  rb_define_const(mGlew, "GL_INTEL_texture_scissor", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_KTX_buffer_region", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_KTX_FRONT_REGION", SWIG_From_int(static_cast< int >(0x0)));
  rb_define_const(mGlew, "GL_KTX_BACK_REGION", SWIG_From_int(static_cast< int >(0x1)));
  rb_define_const(mGlew, "GL_KTX_Z_REGION", SWIG_From_int(static_cast< int >(0x2)));
  rb_define_const(mGlew, "GL_KTX_STENCIL_REGION", SWIG_From_int(static_cast< int >(0x3)));
  rb_define_const(mGlew, "GL_MESAX_texture_stack", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_1D_STACK_MESAX", SWIG_From_int(static_cast< int >(0x8759)));
  rb_define_const(mGlew, "GL_TEXTURE_2D_STACK_MESAX", SWIG_From_int(static_cast< int >(0x875A)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_1D_STACK_MESAX", SWIG_From_int(static_cast< int >(0x875B)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_2D_STACK_MESAX", SWIG_From_int(static_cast< int >(0x875C)));
  rb_define_const(mGlew, "GL_TEXTURE_1D_STACK_BINDING_MESAX", SWIG_From_int(static_cast< int >(0x875D)));
  rb_define_const(mGlew, "GL_TEXTURE_2D_STACK_BINDING_MESAX", SWIG_From_int(static_cast< int >(0x875E)));
  rb_define_const(mGlew, "GL_MESA_pack_invert", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PACK_INVERT_MESA", SWIG_From_int(static_cast< int >(0x8758)));
  rb_define_const(mGlew, "GL_MESA_resize_buffers", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MESA_window_pos", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MESA_ycbcr_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_UNSIGNED_SHORT_8_8_MESA", SWIG_From_int(static_cast< int >(0x85BA)));
  rb_define_const(mGlew, "GL_UNSIGNED_SHORT_8_8_REV_MESA", SWIG_From_int(static_cast< int >(0x85BB)));
  rb_define_const(mGlew, "GL_YCBCR_MESA", SWIG_From_int(static_cast< int >(0x8757)));
  rb_define_const(mGlew, "GL_NV_blend_square", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_NV_conditional_render", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_QUERY_WAIT_NV", SWIG_From_int(static_cast< int >(0x8E13)));
  rb_define_const(mGlew, "GL_QUERY_NO_WAIT_NV", SWIG_From_int(static_cast< int >(0x8E14)));
  rb_define_const(mGlew, "GL_QUERY_BY_REGION_WAIT_NV", SWIG_From_int(static_cast< int >(0x8E15)));
  rb_define_const(mGlew, "GL_QUERY_BY_REGION_NO_WAIT_NV", SWIG_From_int(static_cast< int >(0x8E16)));
  rb_define_const(mGlew, "GL_NV_copy_depth_to_color", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DEPTH_STENCIL_TO_RGBA_NV", SWIG_From_int(static_cast< int >(0x886E)));
  rb_define_const(mGlew, "GL_DEPTH_STENCIL_TO_BGRA_NV", SWIG_From_int(static_cast< int >(0x886F)));
  rb_define_const(mGlew, "GL_NV_depth_buffer_float", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DEPTH_COMPONENT32F_NV", SWIG_From_int(static_cast< int >(0x8DAB)));
  rb_define_const(mGlew, "GL_DEPTH32F_STENCIL8_NV", SWIG_From_int(static_cast< int >(0x8DAC)));
  rb_define_const(mGlew, "GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV", SWIG_From_int(static_cast< int >(0x8DAD)));
  rb_define_const(mGlew, "GL_DEPTH_BUFFER_FLOAT_MODE_NV", SWIG_From_int(static_cast< int >(0x8DAF)));
  rb_define_const(mGlew, "GL_NV_depth_clamp", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DEPTH_CLAMP_NV", SWIG_From_int(static_cast< int >(0x864F)));
  rb_define_const(mGlew, "GL_NV_depth_range_unclamped", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SAMPLE_COUNT_BITS_NV", SWIG_From_int(static_cast< int >(0x8864)));
  rb_define_const(mGlew, "GL_CURRENT_SAMPLE_COUNT_QUERY_NV", SWIG_From_int(static_cast< int >(0x8865)));
  rb_define_const(mGlew, "GL_QUERY_RESULT_NV", SWIG_From_int(static_cast< int >(0x8866)));
  rb_define_const(mGlew, "GL_QUERY_RESULT_AVAILABLE_NV", SWIG_From_int(static_cast< int >(0x8867)));
  rb_define_const(mGlew, "GL_SAMPLE_COUNT_NV", SWIG_From_int(static_cast< int >(0x8914)));
  rb_define_const(mGlew, "GL_NV_evaluators", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EVAL_2D_NV", SWIG_From_int(static_cast< int >(0x86C0)));
  rb_define_const(mGlew, "GL_EVAL_TRIANGULAR_2D_NV", SWIG_From_int(static_cast< int >(0x86C1)));
  rb_define_const(mGlew, "GL_MAP_TESSELLATION_NV", SWIG_From_int(static_cast< int >(0x86C2)));
  rb_define_const(mGlew, "GL_MAP_ATTRIB_U_ORDER_NV", SWIG_From_int(static_cast< int >(0x86C3)));
  rb_define_const(mGlew, "GL_MAP_ATTRIB_V_ORDER_NV", SWIG_From_int(static_cast< int >(0x86C4)));
  rb_define_const(mGlew, "GL_EVAL_FRACTIONAL_TESSELLATION_NV", SWIG_From_int(static_cast< int >(0x86C5)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB0_NV", SWIG_From_int(static_cast< int >(0x86C6)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB1_NV", SWIG_From_int(static_cast< int >(0x86C7)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB2_NV", SWIG_From_int(static_cast< int >(0x86C8)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB3_NV", SWIG_From_int(static_cast< int >(0x86C9)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB4_NV", SWIG_From_int(static_cast< int >(0x86CA)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB5_NV", SWIG_From_int(static_cast< int >(0x86CB)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB6_NV", SWIG_From_int(static_cast< int >(0x86CC)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB7_NV", SWIG_From_int(static_cast< int >(0x86CD)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB8_NV", SWIG_From_int(static_cast< int >(0x86CE)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB9_NV", SWIG_From_int(static_cast< int >(0x86CF)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB10_NV", SWIG_From_int(static_cast< int >(0x86D0)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB11_NV", SWIG_From_int(static_cast< int >(0x86D1)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB12_NV", SWIG_From_int(static_cast< int >(0x86D2)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB13_NV", SWIG_From_int(static_cast< int >(0x86D3)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB14_NV", SWIG_From_int(static_cast< int >(0x86D4)));
  rb_define_const(mGlew, "GL_EVAL_VERTEX_ATTRIB15_NV", SWIG_From_int(static_cast< int >(0x86D5)));
  rb_define_const(mGlew, "GL_MAX_MAP_TESSELLATION_NV", SWIG_From_int(static_cast< int >(0x86D6)));
  rb_define_const(mGlew, "GL_MAX_RATIONAL_EVAL_ORDER_NV", SWIG_From_int(static_cast< int >(0x86D7)));
  rb_define_const(mGlew, "GL_NV_explicit_multisample", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SAMPLE_POSITION_NV", SWIG_From_int(static_cast< int >(0x8E50)));
  rb_define_const(mGlew, "GL_SAMPLE_MASK_NV", SWIG_From_int(static_cast< int >(0x8E51)));
  rb_define_const(mGlew, "GL_SAMPLE_MASK_VALUE_NV", SWIG_From_int(static_cast< int >(0x8E52)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_RENDERBUFFER_NV", SWIG_From_int(static_cast< int >(0x8E53)));
  rb_define_const(mGlew, "GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV", SWIG_From_int(static_cast< int >(0x8E54)));
  rb_define_const(mGlew, "GL_TEXTURE_RENDERBUFFER_NV", SWIG_From_int(static_cast< int >(0x8E55)));
  rb_define_const(mGlew, "GL_SAMPLER_RENDERBUFFER_NV", SWIG_From_int(static_cast< int >(0x8E56)));
  rb_define_const(mGlew, "GL_INT_SAMPLER_RENDERBUFFER_NV", SWIG_From_int(static_cast< int >(0x8E57)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV", SWIG_From_int(static_cast< int >(0x8E58)));
  rb_define_const(mGlew, "GL_MAX_SAMPLE_MASK_WORDS_NV", SWIG_From_int(static_cast< int >(0x8E59)));
  rb_define_const(mGlew, "GL_NV_fence", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ALL_COMPLETED_NV", SWIG_From_int(static_cast< int >(0x84F2)));
  rb_define_const(mGlew, "GL_FENCE_STATUS_NV", SWIG_From_int(static_cast< int >(0x84F3)));
  rb_define_const(mGlew, "GL_FENCE_CONDITION_NV", SWIG_From_int(static_cast< int >(0x84F4)));
  rb_define_const(mGlew, "GL_NV_float_buffer", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FLOAT_R_NV", SWIG_From_int(static_cast< int >(0x8880)));
  rb_define_const(mGlew, "GL_FLOAT_RG_NV", SWIG_From_int(static_cast< int >(0x8881)));
  rb_define_const(mGlew, "GL_FLOAT_RGB_NV", SWIG_From_int(static_cast< int >(0x8882)));
  rb_define_const(mGlew, "GL_FLOAT_RGBA_NV", SWIG_From_int(static_cast< int >(0x8883)));
  rb_define_const(mGlew, "GL_FLOAT_R16_NV", SWIG_From_int(static_cast< int >(0x8884)));
  rb_define_const(mGlew, "GL_FLOAT_R32_NV", SWIG_From_int(static_cast< int >(0x8885)));
  rb_define_const(mGlew, "GL_FLOAT_RG16_NV", SWIG_From_int(static_cast< int >(0x8886)));
  rb_define_const(mGlew, "GL_FLOAT_RG32_NV", SWIG_From_int(static_cast< int >(0x8887)));
  rb_define_const(mGlew, "GL_FLOAT_RGB16_NV", SWIG_From_int(static_cast< int >(0x8888)));
  rb_define_const(mGlew, "GL_FLOAT_RGB32_NV", SWIG_From_int(static_cast< int >(0x8889)));
  rb_define_const(mGlew, "GL_FLOAT_RGBA16_NV", SWIG_From_int(static_cast< int >(0x888A)));
  rb_define_const(mGlew, "GL_FLOAT_RGBA32_NV", SWIG_From_int(static_cast< int >(0x888B)));
  rb_define_const(mGlew, "GL_TEXTURE_FLOAT_COMPONENTS_NV", SWIG_From_int(static_cast< int >(0x888C)));
  rb_define_const(mGlew, "GL_FLOAT_CLEAR_COLOR_VALUE_NV", SWIG_From_int(static_cast< int >(0x888D)));
  rb_define_const(mGlew, "GL_FLOAT_RGBA_MODE_NV", SWIG_From_int(static_cast< int >(0x888E)));
  rb_define_const(mGlew, "GL_NV_fog_distance", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FOG_DISTANCE_MODE_NV", SWIG_From_int(static_cast< int >(0x855A)));
  rb_define_const(mGlew, "GL_EYE_RADIAL_NV", SWIG_From_int(static_cast< int >(0x855B)));
  rb_define_const(mGlew, "GL_EYE_PLANE_ABSOLUTE_NV", SWIG_From_int(static_cast< int >(0x855C)));
  rb_define_const(mGlew, "GL_NV_fragment_program", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV", SWIG_From_int(static_cast< int >(0x8868)));
  rb_define_const(mGlew, "GL_FRAGMENT_PROGRAM_NV", SWIG_From_int(static_cast< int >(0x8870)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_COORDS_NV", SWIG_From_int(static_cast< int >(0x8871)));
  rb_define_const(mGlew, "GL_MAX_TEXTURE_IMAGE_UNITS_NV", SWIG_From_int(static_cast< int >(0x8872)));
  rb_define_const(mGlew, "GL_FRAGMENT_PROGRAM_BINDING_NV", SWIG_From_int(static_cast< int >(0x8873)));
  rb_define_const(mGlew, "GL_PROGRAM_ERROR_STRING_NV", SWIG_From_int(static_cast< int >(0x8874)));
  rb_define_const(mGlew, "GL_NV_fragment_program2", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV", SWIG_From_int(static_cast< int >(0x88F4)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_CALL_DEPTH_NV", SWIG_From_int(static_cast< int >(0x88F5)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_IF_DEPTH_NV", SWIG_From_int(static_cast< int >(0x88F6)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_LOOP_DEPTH_NV", SWIG_From_int(static_cast< int >(0x88F7)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_LOOP_COUNT_NV", SWIG_From_int(static_cast< int >(0x88F8)));
  rb_define_const(mGlew, "GL_NV_fragment_program4", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_NV_fragment_program_option", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_NV_framebuffer_multisample_coverage", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_COVERAGE_SAMPLES_NV", SWIG_From_int(static_cast< int >(0x8CAB)));
  rb_define_const(mGlew, "GL_RENDERBUFFER_COLOR_SAMPLES_NV", SWIG_From_int(static_cast< int >(0x8E10)));
  rb_define_const(mGlew, "GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV", SWIG_From_int(static_cast< int >(0x8E11)));
  rb_define_const(mGlew, "GL_MULTISAMPLE_COVERAGE_MODES_NV", SWIG_From_int(static_cast< int >(0x8E12)));
  rb_define_const(mGlew, "GL_NV_geometry_program4", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_GEOMETRY_PROGRAM_NV", SWIG_From_int(static_cast< int >(0x8C26)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_OUTPUT_VERTICES_NV", SWIG_From_int(static_cast< int >(0x8C27)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV", SWIG_From_int(static_cast< int >(0x8C28)));
  rb_define_const(mGlew, "GL_NV_geometry_shader4", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_NV_gpu_program4", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MIN_PROGRAM_TEXEL_OFFSET_NV", SWIG_From_int(static_cast< int >(0x8904)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_TEXEL_OFFSET_NV", SWIG_From_int(static_cast< int >(0x8905)));
  rb_define_const(mGlew, "GL_PROGRAM_ATTRIB_COMPONENTS_NV", SWIG_From_int(static_cast< int >(0x8906)));
  rb_define_const(mGlew, "GL_PROGRAM_RESULT_COMPONENTS_NV", SWIG_From_int(static_cast< int >(0x8907)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV", SWIG_From_int(static_cast< int >(0x8908)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_RESULT_COMPONENTS_NV", SWIG_From_int(static_cast< int >(0x8909)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV", SWIG_From_int(static_cast< int >(0x8DA5)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_GENERIC_RESULTS_NV", SWIG_From_int(static_cast< int >(0x8DA6)));
  rb_define_const(mGlew, "GL_NV_half_float", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_HALF_FLOAT_NV", SWIG_From_int(static_cast< int >(0x140B)));
  rb_define_const(mGlew, "GL_NV_light_max_exponent", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MAX_SHININESS_NV", SWIG_From_int(static_cast< int >(0x8504)));
  rb_define_const(mGlew, "GL_MAX_SPOT_EXPONENT_NV", SWIG_From_int(static_cast< int >(0x8505)));
  rb_define_const(mGlew, "GL_NV_multisample_filter_hint", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MULTISAMPLE_FILTER_HINT_NV", SWIG_From_int(static_cast< int >(0x8534)));
  rb_define_const(mGlew, "GL_NV_occlusion_query", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PIXEL_COUNTER_BITS_NV", SWIG_From_int(static_cast< int >(0x8864)));
  rb_define_const(mGlew, "GL_CURRENT_OCCLUSION_QUERY_ID_NV", SWIG_From_int(static_cast< int >(0x8865)));
  rb_define_const(mGlew, "GL_PIXEL_COUNT_NV", SWIG_From_int(static_cast< int >(0x8866)));
  rb_define_const(mGlew, "GL_PIXEL_COUNT_AVAILABLE_NV", SWIG_From_int(static_cast< int >(0x8867)));
  rb_define_const(mGlew, "GL_NV_packed_depth_stencil", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DEPTH_STENCIL_NV", SWIG_From_int(static_cast< int >(0x84F9)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_24_8_NV", SWIG_From_int(static_cast< int >(0x84FA)));
  rb_define_const(mGlew, "GL_NV_parameter_buffer_object", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV", SWIG_From_int(static_cast< int >(0x8DA0)));
  rb_define_const(mGlew, "GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV", SWIG_From_int(static_cast< int >(0x8DA1)));
  rb_define_const(mGlew, "GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV", SWIG_From_int(static_cast< int >(0x8DA2)));
  rb_define_const(mGlew, "GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV", SWIG_From_int(static_cast< int >(0x8DA3)));
  rb_define_const(mGlew, "GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV", SWIG_From_int(static_cast< int >(0x8DA4)));
  rb_define_const(mGlew, "GL_NV_pixel_data_range", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_WRITE_PIXEL_DATA_RANGE_NV", SWIG_From_int(static_cast< int >(0x8878)));
  rb_define_const(mGlew, "GL_READ_PIXEL_DATA_RANGE_NV", SWIG_From_int(static_cast< int >(0x8879)));
  rb_define_const(mGlew, "GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV", SWIG_From_int(static_cast< int >(0x887A)));
  rb_define_const(mGlew, "GL_READ_PIXEL_DATA_RANGE_LENGTH_NV", SWIG_From_int(static_cast< int >(0x887B)));
  rb_define_const(mGlew, "GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV", SWIG_From_int(static_cast< int >(0x887C)));
  rb_define_const(mGlew, "GL_READ_PIXEL_DATA_RANGE_POINTER_NV", SWIG_From_int(static_cast< int >(0x887D)));
  rb_define_const(mGlew, "GL_NV_point_sprite", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_POINT_SPRITE_NV", SWIG_From_int(static_cast< int >(0x8861)));
  rb_define_const(mGlew, "GL_COORD_REPLACE_NV", SWIG_From_int(static_cast< int >(0x8862)));
  rb_define_const(mGlew, "GL_POINT_SPRITE_R_MODE_NV", SWIG_From_int(static_cast< int >(0x8863)));
  rb_define_const(mGlew, "GL_NV_present_video", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FRAME_NV", SWIG_From_int(static_cast< int >(0x8E26)));
  rb_define_const(mGlew, "GL_FIELDS_NV", SWIG_From_int(static_cast< int >(0x8E27)));
  rb_define_const(mGlew, "GL_CURRENT_TIME_NV", SWIG_From_int(static_cast< int >(0x8E28)));
  rb_define_const(mGlew, "GL_NUM_FILL_STREAMS_NV", SWIG_From_int(static_cast< int >(0x8E29)));
  rb_define_const(mGlew, "GL_PRESENT_TIME_NV", SWIG_From_int(static_cast< int >(0x8E2A)));
  rb_define_const(mGlew, "GL_PRESENT_DURATION_NV", SWIG_From_int(static_cast< int >(0x8E2B)));
  rb_define_const(mGlew, "GL_NV_primitive_restart", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PRIMITIVE_RESTART_NV", SWIG_From_int(static_cast< int >(0x8558)));
  rb_define_const(mGlew, "GL_PRIMITIVE_RESTART_INDEX_NV", SWIG_From_int(static_cast< int >(0x8559)));
  rb_define_const(mGlew, "GL_NV_register_combiners", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_REGISTER_COMBINERS_NV", SWIG_From_int(static_cast< int >(0x8522)));
  rb_define_const(mGlew, "GL_VARIABLE_A_NV", SWIG_From_int(static_cast< int >(0x8523)));
  rb_define_const(mGlew, "GL_VARIABLE_B_NV", SWIG_From_int(static_cast< int >(0x8524)));
  rb_define_const(mGlew, "GL_VARIABLE_C_NV", SWIG_From_int(static_cast< int >(0x8525)));
  rb_define_const(mGlew, "GL_VARIABLE_D_NV", SWIG_From_int(static_cast< int >(0x8526)));
  rb_define_const(mGlew, "GL_VARIABLE_E_NV", SWIG_From_int(static_cast< int >(0x8527)));
  rb_define_const(mGlew, "GL_VARIABLE_F_NV", SWIG_From_int(static_cast< int >(0x8528)));
  rb_define_const(mGlew, "GL_VARIABLE_G_NV", SWIG_From_int(static_cast< int >(0x8529)));
  rb_define_const(mGlew, "GL_CONSTANT_COLOR0_NV", SWIG_From_int(static_cast< int >(0x852A)));
  rb_define_const(mGlew, "GL_CONSTANT_COLOR1_NV", SWIG_From_int(static_cast< int >(0x852B)));
  rb_define_const(mGlew, "GL_PRIMARY_COLOR_NV", SWIG_From_int(static_cast< int >(0x852C)));
  rb_define_const(mGlew, "GL_SECONDARY_COLOR_NV", SWIG_From_int(static_cast< int >(0x852D)));
  rb_define_const(mGlew, "GL_SPARE0_NV", SWIG_From_int(static_cast< int >(0x852E)));
  rb_define_const(mGlew, "GL_SPARE1_NV", SWIG_From_int(static_cast< int >(0x852F)));
  rb_define_const(mGlew, "GL_DISCARD_NV", SWIG_From_int(static_cast< int >(0x8530)));
  rb_define_const(mGlew, "GL_E_TIMES_F_NV", SWIG_From_int(static_cast< int >(0x8531)));
  rb_define_const(mGlew, "GL_SPARE0_PLUS_SECONDARY_COLOR_NV", SWIG_From_int(static_cast< int >(0x8532)));
  rb_define_const(mGlew, "GL_UNSIGNED_IDENTITY_NV", SWIG_From_int(static_cast< int >(0x8536)));
  rb_define_const(mGlew, "GL_UNSIGNED_INVERT_NV", SWIG_From_int(static_cast< int >(0x8537)));
  rb_define_const(mGlew, "GL_EXPAND_NORMAL_NV", SWIG_From_int(static_cast< int >(0x8538)));
  rb_define_const(mGlew, "GL_EXPAND_NEGATE_NV", SWIG_From_int(static_cast< int >(0x8539)));
  rb_define_const(mGlew, "GL_HALF_BIAS_NORMAL_NV", SWIG_From_int(static_cast< int >(0x853A)));
  rb_define_const(mGlew, "GL_HALF_BIAS_NEGATE_NV", SWIG_From_int(static_cast< int >(0x853B)));
  rb_define_const(mGlew, "GL_SIGNED_IDENTITY_NV", SWIG_From_int(static_cast< int >(0x853C)));
  rb_define_const(mGlew, "GL_SIGNED_NEGATE_NV", SWIG_From_int(static_cast< int >(0x853D)));
  rb_define_const(mGlew, "GL_SCALE_BY_TWO_NV", SWIG_From_int(static_cast< int >(0x853E)));
  rb_define_const(mGlew, "GL_SCALE_BY_FOUR_NV", SWIG_From_int(static_cast< int >(0x853F)));
  rb_define_const(mGlew, "GL_SCALE_BY_ONE_HALF_NV", SWIG_From_int(static_cast< int >(0x8540)));
  rb_define_const(mGlew, "GL_BIAS_BY_NEGATIVE_ONE_HALF_NV", SWIG_From_int(static_cast< int >(0x8541)));
  rb_define_const(mGlew, "GL_COMBINER_INPUT_NV", SWIG_From_int(static_cast< int >(0x8542)));
  rb_define_const(mGlew, "GL_COMBINER_MAPPING_NV", SWIG_From_int(static_cast< int >(0x8543)));
  rb_define_const(mGlew, "GL_COMBINER_COMPONENT_USAGE_NV", SWIG_From_int(static_cast< int >(0x8544)));
  rb_define_const(mGlew, "GL_COMBINER_AB_DOT_PRODUCT_NV", SWIG_From_int(static_cast< int >(0x8545)));
  rb_define_const(mGlew, "GL_COMBINER_CD_DOT_PRODUCT_NV", SWIG_From_int(static_cast< int >(0x8546)));
  rb_define_const(mGlew, "GL_COMBINER_MUX_SUM_NV", SWIG_From_int(static_cast< int >(0x8547)));
  rb_define_const(mGlew, "GL_COMBINER_SCALE_NV", SWIG_From_int(static_cast< int >(0x8548)));
  rb_define_const(mGlew, "GL_COMBINER_BIAS_NV", SWIG_From_int(static_cast< int >(0x8549)));
  rb_define_const(mGlew, "GL_COMBINER_AB_OUTPUT_NV", SWIG_From_int(static_cast< int >(0x854A)));
  rb_define_const(mGlew, "GL_COMBINER_CD_OUTPUT_NV", SWIG_From_int(static_cast< int >(0x854B)));
  rb_define_const(mGlew, "GL_COMBINER_SUM_OUTPUT_NV", SWIG_From_int(static_cast< int >(0x854C)));
  rb_define_const(mGlew, "GL_MAX_GENERAL_COMBINERS_NV", SWIG_From_int(static_cast< int >(0x854D)));
  rb_define_const(mGlew, "GL_NUM_GENERAL_COMBINERS_NV", SWIG_From_int(static_cast< int >(0x854E)));
  rb_define_const(mGlew, "GL_COLOR_SUM_CLAMP_NV", SWIG_From_int(static_cast< int >(0x854F)));
  rb_define_const(mGlew, "GL_COMBINER0_NV", SWIG_From_int(static_cast< int >(0x8550)));
  rb_define_const(mGlew, "GL_COMBINER1_NV", SWIG_From_int(static_cast< int >(0x8551)));
  rb_define_const(mGlew, "GL_COMBINER2_NV", SWIG_From_int(static_cast< int >(0x8552)));
  rb_define_const(mGlew, "GL_COMBINER3_NV", SWIG_From_int(static_cast< int >(0x8553)));
  rb_define_const(mGlew, "GL_COMBINER4_NV", SWIG_From_int(static_cast< int >(0x8554)));
  rb_define_const(mGlew, "GL_COMBINER5_NV", SWIG_From_int(static_cast< int >(0x8555)));
  rb_define_const(mGlew, "GL_COMBINER6_NV", SWIG_From_int(static_cast< int >(0x8556)));
  rb_define_const(mGlew, "GL_COMBINER7_NV", SWIG_From_int(static_cast< int >(0x8557)));
  rb_define_const(mGlew, "GL_NV_register_combiners2", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PER_STAGE_CONSTANTS_NV", SWIG_From_int(static_cast< int >(0x8535)));
  rb_define_const(mGlew, "GL_NV_texgen_emboss", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EMBOSS_LIGHT_NV", SWIG_From_int(static_cast< int >(0x855D)));
  rb_define_const(mGlew, "GL_EMBOSS_CONSTANT_NV", SWIG_From_int(static_cast< int >(0x855E)));
  rb_define_const(mGlew, "GL_EMBOSS_MAP_NV", SWIG_From_int(static_cast< int >(0x855F)));
  rb_define_const(mGlew, "GL_NV_texgen_reflection", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_NORMAL_MAP_NV", SWIG_From_int(static_cast< int >(0x8511)));
  rb_define_const(mGlew, "GL_REFLECTION_MAP_NV", SWIG_From_int(static_cast< int >(0x8512)));
  rb_define_const(mGlew, "GL_NV_texture_compression_vtc", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_NV_texture_env_combine4", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COMBINE4_NV", SWIG_From_int(static_cast< int >(0x8503)));
  rb_define_const(mGlew, "GL_SOURCE3_RGB_NV", SWIG_From_int(static_cast< int >(0x8583)));
  rb_define_const(mGlew, "GL_SOURCE3_ALPHA_NV", SWIG_From_int(static_cast< int >(0x858B)));
  rb_define_const(mGlew, "GL_OPERAND3_RGB_NV", SWIG_From_int(static_cast< int >(0x8593)));
  rb_define_const(mGlew, "GL_OPERAND3_ALPHA_NV", SWIG_From_int(static_cast< int >(0x859B)));
  rb_define_const(mGlew, "GL_NV_texture_expand_normal", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_UNSIGNED_REMAP_MODE_NV", SWIG_From_int(static_cast< int >(0x888F)));
  rb_define_const(mGlew, "GL_NV_texture_rectangle", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_RECTANGLE_NV", SWIG_From_int(static_cast< int >(0x84F5)));
  rb_define_const(mGlew, "GL_TEXTURE_BINDING_RECTANGLE_NV", SWIG_From_int(static_cast< int >(0x84F6)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_RECTANGLE_NV", SWIG_From_int(static_cast< int >(0x84F7)));
  rb_define_const(mGlew, "GL_MAX_RECTANGLE_TEXTURE_SIZE_NV", SWIG_From_int(static_cast< int >(0x84F8)));
  rb_define_const(mGlew, "GL_NV_texture_shader", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_OFFSET_TEXTURE_RECTANGLE_NV", SWIG_From_int(static_cast< int >(0x864C)));
  rb_define_const(mGlew, "GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV", SWIG_From_int(static_cast< int >(0x864D)));
  rb_define_const(mGlew, "GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV", SWIG_From_int(static_cast< int >(0x864E)));
  rb_define_const(mGlew, "GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV", SWIG_From_int(static_cast< int >(0x86D9)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_S8_S8_8_8_NV", SWIG_From_int(static_cast< int >(0x86DA)));
  rb_define_const(mGlew, "GL_UNSIGNED_INT_8_8_S8_S8_REV_NV", SWIG_From_int(static_cast< int >(0x86DB)));
  rb_define_const(mGlew, "GL_DSDT_MAG_INTENSITY_NV", SWIG_From_int(static_cast< int >(0x86DC)));
  rb_define_const(mGlew, "GL_SHADER_CONSISTENT_NV", SWIG_From_int(static_cast< int >(0x86DD)));
  rb_define_const(mGlew, "GL_TEXTURE_SHADER_NV", SWIG_From_int(static_cast< int >(0x86DE)));
  rb_define_const(mGlew, "GL_SHADER_OPERATION_NV", SWIG_From_int(static_cast< int >(0x86DF)));
  rb_define_const(mGlew, "GL_CULL_MODES_NV", SWIG_From_int(static_cast< int >(0x86E0)));
  rb_define_const(mGlew, "GL_OFFSET_TEXTURE_2D_MATRIX_NV", SWIG_From_int(static_cast< int >(0x86E1)));
  rb_define_const(mGlew, "GL_OFFSET_TEXTURE_MATRIX_NV", SWIG_From_int(static_cast< int >(0x86E1)));
  rb_define_const(mGlew, "GL_OFFSET_TEXTURE_2D_SCALE_NV", SWIG_From_int(static_cast< int >(0x86E2)));
  rb_define_const(mGlew, "GL_OFFSET_TEXTURE_SCALE_NV", SWIG_From_int(static_cast< int >(0x86E2)));
  rb_define_const(mGlew, "GL_OFFSET_TEXTURE_BIAS_NV", SWIG_From_int(static_cast< int >(0x86E3)));
  rb_define_const(mGlew, "GL_OFFSET_TEXTURE_2D_BIAS_NV", SWIG_From_int(static_cast< int >(0x86E3)));
  rb_define_const(mGlew, "GL_PREVIOUS_TEXTURE_INPUT_NV", SWIG_From_int(static_cast< int >(0x86E4)));
  rb_define_const(mGlew, "GL_CONST_EYE_NV", SWIG_From_int(static_cast< int >(0x86E5)));
  rb_define_const(mGlew, "GL_PASS_THROUGH_NV", SWIG_From_int(static_cast< int >(0x86E6)));
  rb_define_const(mGlew, "GL_CULL_FRAGMENT_NV", SWIG_From_int(static_cast< int >(0x86E7)));
  rb_define_const(mGlew, "GL_OFFSET_TEXTURE_2D_NV", SWIG_From_int(static_cast< int >(0x86E8)));
  rb_define_const(mGlew, "GL_DEPENDENT_AR_TEXTURE_2D_NV", SWIG_From_int(static_cast< int >(0x86E9)));
  rb_define_const(mGlew, "GL_DEPENDENT_GB_TEXTURE_2D_NV", SWIG_From_int(static_cast< int >(0x86EA)));
  rb_define_const(mGlew, "GL_DOT_PRODUCT_NV", SWIG_From_int(static_cast< int >(0x86EC)));
  rb_define_const(mGlew, "GL_DOT_PRODUCT_DEPTH_REPLACE_NV", SWIG_From_int(static_cast< int >(0x86ED)));
  rb_define_const(mGlew, "GL_DOT_PRODUCT_TEXTURE_2D_NV", SWIG_From_int(static_cast< int >(0x86EE)));
  rb_define_const(mGlew, "GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV", SWIG_From_int(static_cast< int >(0x86F0)));
  rb_define_const(mGlew, "GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV", SWIG_From_int(static_cast< int >(0x86F1)));
  rb_define_const(mGlew, "GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV", SWIG_From_int(static_cast< int >(0x86F2)));
  rb_define_const(mGlew, "GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV", SWIG_From_int(static_cast< int >(0x86F3)));
  rb_define_const(mGlew, "GL_HILO_NV", SWIG_From_int(static_cast< int >(0x86F4)));
  rb_define_const(mGlew, "GL_DSDT_NV", SWIG_From_int(static_cast< int >(0x86F5)));
  rb_define_const(mGlew, "GL_DSDT_MAG_NV", SWIG_From_int(static_cast< int >(0x86F6)));
  rb_define_const(mGlew, "GL_DSDT_MAG_VIB_NV", SWIG_From_int(static_cast< int >(0x86F7)));
  rb_define_const(mGlew, "GL_HILO16_NV", SWIG_From_int(static_cast< int >(0x86F8)));
  rb_define_const(mGlew, "GL_SIGNED_HILO_NV", SWIG_From_int(static_cast< int >(0x86F9)));
  rb_define_const(mGlew, "GL_SIGNED_HILO16_NV", SWIG_From_int(static_cast< int >(0x86FA)));
  rb_define_const(mGlew, "GL_SIGNED_RGBA_NV", SWIG_From_int(static_cast< int >(0x86FB)));
  rb_define_const(mGlew, "GL_SIGNED_RGBA8_NV", SWIG_From_int(static_cast< int >(0x86FC)));
  rb_define_const(mGlew, "GL_SIGNED_RGB_NV", SWIG_From_int(static_cast< int >(0x86FE)));
  rb_define_const(mGlew, "GL_SIGNED_RGB8_NV", SWIG_From_int(static_cast< int >(0x86FF)));
  rb_define_const(mGlew, "GL_SIGNED_LUMINANCE_NV", SWIG_From_int(static_cast< int >(0x8701)));
  rb_define_const(mGlew, "GL_SIGNED_LUMINANCE8_NV", SWIG_From_int(static_cast< int >(0x8702)));
  rb_define_const(mGlew, "GL_SIGNED_LUMINANCE_ALPHA_NV", SWIG_From_int(static_cast< int >(0x8703)));
  rb_define_const(mGlew, "GL_SIGNED_LUMINANCE8_ALPHA8_NV", SWIG_From_int(static_cast< int >(0x8704)));
  rb_define_const(mGlew, "GL_SIGNED_ALPHA_NV", SWIG_From_int(static_cast< int >(0x8705)));
  rb_define_const(mGlew, "GL_SIGNED_ALPHA8_NV", SWIG_From_int(static_cast< int >(0x8706)));
  rb_define_const(mGlew, "GL_SIGNED_INTENSITY_NV", SWIG_From_int(static_cast< int >(0x8707)));
  rb_define_const(mGlew, "GL_SIGNED_INTENSITY8_NV", SWIG_From_int(static_cast< int >(0x8708)));
  rb_define_const(mGlew, "GL_DSDT8_NV", SWIG_From_int(static_cast< int >(0x8709)));
  rb_define_const(mGlew, "GL_DSDT8_MAG8_NV", SWIG_From_int(static_cast< int >(0x870A)));
  rb_define_const(mGlew, "GL_DSDT8_MAG8_INTENSITY8_NV", SWIG_From_int(static_cast< int >(0x870B)));
  rb_define_const(mGlew, "GL_SIGNED_RGB_UNSIGNED_ALPHA_NV", SWIG_From_int(static_cast< int >(0x870C)));
  rb_define_const(mGlew, "GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV", SWIG_From_int(static_cast< int >(0x870D)));
  rb_define_const(mGlew, "GL_HI_SCALE_NV", SWIG_From_int(static_cast< int >(0x870E)));
  rb_define_const(mGlew, "GL_LO_SCALE_NV", SWIG_From_int(static_cast< int >(0x870F)));
  rb_define_const(mGlew, "GL_DS_SCALE_NV", SWIG_From_int(static_cast< int >(0x8710)));
  rb_define_const(mGlew, "GL_DT_SCALE_NV", SWIG_From_int(static_cast< int >(0x8711)));
  rb_define_const(mGlew, "GL_MAGNITUDE_SCALE_NV", SWIG_From_int(static_cast< int >(0x8712)));
  rb_define_const(mGlew, "GL_VIBRANCE_SCALE_NV", SWIG_From_int(static_cast< int >(0x8713)));
  rb_define_const(mGlew, "GL_HI_BIAS_NV", SWIG_From_int(static_cast< int >(0x8714)));
  rb_define_const(mGlew, "GL_LO_BIAS_NV", SWIG_From_int(static_cast< int >(0x8715)));
  rb_define_const(mGlew, "GL_DS_BIAS_NV", SWIG_From_int(static_cast< int >(0x8716)));
  rb_define_const(mGlew, "GL_DT_BIAS_NV", SWIG_From_int(static_cast< int >(0x8717)));
  rb_define_const(mGlew, "GL_MAGNITUDE_BIAS_NV", SWIG_From_int(static_cast< int >(0x8718)));
  rb_define_const(mGlew, "GL_VIBRANCE_BIAS_NV", SWIG_From_int(static_cast< int >(0x8719)));
  rb_define_const(mGlew, "GL_TEXTURE_BORDER_VALUES_NV", SWIG_From_int(static_cast< int >(0x871A)));
  rb_define_const(mGlew, "GL_TEXTURE_HI_SIZE_NV", SWIG_From_int(static_cast< int >(0x871B)));
  rb_define_const(mGlew, "GL_TEXTURE_LO_SIZE_NV", SWIG_From_int(static_cast< int >(0x871C)));
  rb_define_const(mGlew, "GL_TEXTURE_DS_SIZE_NV", SWIG_From_int(static_cast< int >(0x871D)));
  rb_define_const(mGlew, "GL_TEXTURE_DT_SIZE_NV", SWIG_From_int(static_cast< int >(0x871E)));
  rb_define_const(mGlew, "GL_TEXTURE_MAG_SIZE_NV", SWIG_From_int(static_cast< int >(0x871F)));
  rb_define_const(mGlew, "GL_NV_texture_shader2", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DOT_PRODUCT_TEXTURE_3D_NV", SWIG_From_int(static_cast< int >(0x86EF)));
  rb_define_const(mGlew, "GL_NV_texture_shader3", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV", SWIG_From_int(static_cast< int >(0x8850)));
  rb_define_const(mGlew, "GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV", SWIG_From_int(static_cast< int >(0x8851)));
  rb_define_const(mGlew, "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV", SWIG_From_int(static_cast< int >(0x8852)));
  rb_define_const(mGlew, "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV", SWIG_From_int(static_cast< int >(0x8853)));
  rb_define_const(mGlew, "GL_OFFSET_HILO_TEXTURE_2D_NV", SWIG_From_int(static_cast< int >(0x8854)));
  rb_define_const(mGlew, "GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV", SWIG_From_int(static_cast< int >(0x8855)));
  rb_define_const(mGlew, "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV", SWIG_From_int(static_cast< int >(0x8856)));
  rb_define_const(mGlew, "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV", SWIG_From_int(static_cast< int >(0x8857)));
  rb_define_const(mGlew, "GL_DEPENDENT_HILO_TEXTURE_2D_NV", SWIG_From_int(static_cast< int >(0x8858)));
  rb_define_const(mGlew, "GL_DEPENDENT_RGB_TEXTURE_3D_NV", SWIG_From_int(static_cast< int >(0x8859)));
  rb_define_const(mGlew, "GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV", SWIG_From_int(static_cast< int >(0x885A)));
  rb_define_const(mGlew, "GL_DOT_PRODUCT_PASS_THROUGH_NV", SWIG_From_int(static_cast< int >(0x885B)));
  rb_define_const(mGlew, "GL_DOT_PRODUCT_TEXTURE_1D_NV", SWIG_From_int(static_cast< int >(0x885C)));
  rb_define_const(mGlew, "GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV", SWIG_From_int(static_cast< int >(0x885D)));
  rb_define_const(mGlew, "GL_HILO8_NV", SWIG_From_int(static_cast< int >(0x885E)));
  rb_define_const(mGlew, "GL_SIGNED_HILO8_NV", SWIG_From_int(static_cast< int >(0x885F)));
  rb_define_const(mGlew, "GL_FORCE_BLUE_TO_ONE_NV", SWIG_From_int(static_cast< int >(0x8860)));
  rb_define_const(mGlew, "GL_NV_transform_feedback", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_BACK_PRIMARY_COLOR_NV", SWIG_From_int(static_cast< int >(0x8C77)));
  rb_define_const(mGlew, "GL_BACK_SECONDARY_COLOR_NV", SWIG_From_int(static_cast< int >(0x8C78)));
  rb_define_const(mGlew, "GL_TEXTURE_COORD_NV", SWIG_From_int(static_cast< int >(0x8C79)));
  rb_define_const(mGlew, "GL_CLIP_DISTANCE_NV", SWIG_From_int(static_cast< int >(0x8C7A)));
  rb_define_const(mGlew, "GL_VERTEX_ID_NV", SWIG_From_int(static_cast< int >(0x8C7B)));
  rb_define_const(mGlew, "GL_PRIMITIVE_ID_NV", SWIG_From_int(static_cast< int >(0x8C7C)));
  rb_define_const(mGlew, "GL_GENERIC_ATTRIB_NV", SWIG_From_int(static_cast< int >(0x8C7D)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_ATTRIBS_NV", SWIG_From_int(static_cast< int >(0x8C7E)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV", SWIG_From_int(static_cast< int >(0x8C7F)));
  rb_define_const(mGlew, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV", SWIG_From_int(static_cast< int >(0x8C80)));
  rb_define_const(mGlew, "GL_ACTIVE_VARYINGS_NV", SWIG_From_int(static_cast< int >(0x8C81)));
  rb_define_const(mGlew, "GL_ACTIVE_VARYING_MAX_LENGTH_NV", SWIG_From_int(static_cast< int >(0x8C82)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_VARYINGS_NV", SWIG_From_int(static_cast< int >(0x8C83)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_START_NV", SWIG_From_int(static_cast< int >(0x8C84)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV", SWIG_From_int(static_cast< int >(0x8C85)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_RECORD_NV", SWIG_From_int(static_cast< int >(0x8C86)));
  rb_define_const(mGlew, "GL_PRIMITIVES_GENERATED_NV", SWIG_From_int(static_cast< int >(0x8C87)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV", SWIG_From_int(static_cast< int >(0x8C88)));
  rb_define_const(mGlew, "GL_RASTERIZER_DISCARD_NV", SWIG_From_int(static_cast< int >(0x8C89)));
  rb_define_const(mGlew, "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV", SWIG_From_int(static_cast< int >(0x8C8A)));
  rb_define_const(mGlew, "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV", SWIG_From_int(static_cast< int >(0x8C8B)));
  rb_define_const(mGlew, "GL_INTERLEAVED_ATTRIBS_NV", SWIG_From_int(static_cast< int >(0x8C8C)));
  rb_define_const(mGlew, "GL_SEPARATE_ATTRIBS_NV", SWIG_From_int(static_cast< int >(0x8C8D)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_NV", SWIG_From_int(static_cast< int >(0x8C8E)));
  rb_define_const(mGlew, "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV", SWIG_From_int(static_cast< int >(0x8C8F)));
  rb_define_const(mGlew, "GL_NV_vertex_array_range", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_RANGE_NV", SWIG_From_int(static_cast< int >(0x851D)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_RANGE_LENGTH_NV", SWIG_From_int(static_cast< int >(0x851E)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_RANGE_VALID_NV", SWIG_From_int(static_cast< int >(0x851F)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV", SWIG_From_int(static_cast< int >(0x8520)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_RANGE_POINTER_NV", SWIG_From_int(static_cast< int >(0x8521)));
  rb_define_const(mGlew, "GL_NV_vertex_array_range2", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV", SWIG_From_int(static_cast< int >(0x8533)));
  rb_define_const(mGlew, "GL_NV_vertex_program", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX_PROGRAM_NV", SWIG_From_int(static_cast< int >(0x8620)));
  rb_define_const(mGlew, "GL_VERTEX_STATE_PROGRAM_NV", SWIG_From_int(static_cast< int >(0x8621)));
  rb_define_const(mGlew, "GL_ATTRIB_ARRAY_SIZE_NV", SWIG_From_int(static_cast< int >(0x8623)));
  rb_define_const(mGlew, "GL_ATTRIB_ARRAY_STRIDE_NV", SWIG_From_int(static_cast< int >(0x8624)));
  rb_define_const(mGlew, "GL_ATTRIB_ARRAY_TYPE_NV", SWIG_From_int(static_cast< int >(0x8625)));
  rb_define_const(mGlew, "GL_CURRENT_ATTRIB_NV", SWIG_From_int(static_cast< int >(0x8626)));
  rb_define_const(mGlew, "GL_PROGRAM_LENGTH_NV", SWIG_From_int(static_cast< int >(0x8627)));
  rb_define_const(mGlew, "GL_PROGRAM_STRING_NV", SWIG_From_int(static_cast< int >(0x8628)));
  rb_define_const(mGlew, "GL_MODELVIEW_PROJECTION_NV", SWIG_From_int(static_cast< int >(0x8629)));
  rb_define_const(mGlew, "GL_IDENTITY_NV", SWIG_From_int(static_cast< int >(0x862A)));
  rb_define_const(mGlew, "GL_INVERSE_NV", SWIG_From_int(static_cast< int >(0x862B)));
  rb_define_const(mGlew, "GL_TRANSPOSE_NV", SWIG_From_int(static_cast< int >(0x862C)));
  rb_define_const(mGlew, "GL_INVERSE_TRANSPOSE_NV", SWIG_From_int(static_cast< int >(0x862D)));
  rb_define_const(mGlew, "GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV", SWIG_From_int(static_cast< int >(0x862E)));
  rb_define_const(mGlew, "GL_MAX_TRACK_MATRICES_NV", SWIG_From_int(static_cast< int >(0x862F)));
  rb_define_const(mGlew, "GL_MATRIX0_NV", SWIG_From_int(static_cast< int >(0x8630)));
  rb_define_const(mGlew, "GL_MATRIX1_NV", SWIG_From_int(static_cast< int >(0x8631)));
  rb_define_const(mGlew, "GL_MATRIX2_NV", SWIG_From_int(static_cast< int >(0x8632)));
  rb_define_const(mGlew, "GL_MATRIX3_NV", SWIG_From_int(static_cast< int >(0x8633)));
  rb_define_const(mGlew, "GL_MATRIX4_NV", SWIG_From_int(static_cast< int >(0x8634)));
  rb_define_const(mGlew, "GL_MATRIX5_NV", SWIG_From_int(static_cast< int >(0x8635)));
  rb_define_const(mGlew, "GL_MATRIX6_NV", SWIG_From_int(static_cast< int >(0x8636)));
  rb_define_const(mGlew, "GL_MATRIX7_NV", SWIG_From_int(static_cast< int >(0x8637)));
  rb_define_const(mGlew, "GL_CURRENT_MATRIX_STACK_DEPTH_NV", SWIG_From_int(static_cast< int >(0x8640)));
  rb_define_const(mGlew, "GL_CURRENT_MATRIX_NV", SWIG_From_int(static_cast< int >(0x8641)));
  rb_define_const(mGlew, "GL_VERTEX_PROGRAM_POINT_SIZE_NV", SWIG_From_int(static_cast< int >(0x8642)));
  rb_define_const(mGlew, "GL_VERTEX_PROGRAM_TWO_SIDE_NV", SWIG_From_int(static_cast< int >(0x8643)));
  rb_define_const(mGlew, "GL_PROGRAM_PARAMETER_NV", SWIG_From_int(static_cast< int >(0x8644)));
  rb_define_const(mGlew, "GL_ATTRIB_ARRAY_POINTER_NV", SWIG_From_int(static_cast< int >(0x8645)));
  rb_define_const(mGlew, "GL_PROGRAM_TARGET_NV", SWIG_From_int(static_cast< int >(0x8646)));
  rb_define_const(mGlew, "GL_PROGRAM_RESIDENT_NV", SWIG_From_int(static_cast< int >(0x8647)));
  rb_define_const(mGlew, "GL_TRACK_MATRIX_NV", SWIG_From_int(static_cast< int >(0x8648)));
  rb_define_const(mGlew, "GL_TRACK_MATRIX_TRANSFORM_NV", SWIG_From_int(static_cast< int >(0x8649)));
  rb_define_const(mGlew, "GL_VERTEX_PROGRAM_BINDING_NV", SWIG_From_int(static_cast< int >(0x864A)));
  rb_define_const(mGlew, "GL_PROGRAM_ERROR_POSITION_NV", SWIG_From_int(static_cast< int >(0x864B)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY0_NV", SWIG_From_int(static_cast< int >(0x8650)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY1_NV", SWIG_From_int(static_cast< int >(0x8651)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY2_NV", SWIG_From_int(static_cast< int >(0x8652)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY3_NV", SWIG_From_int(static_cast< int >(0x8653)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY4_NV", SWIG_From_int(static_cast< int >(0x8654)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY5_NV", SWIG_From_int(static_cast< int >(0x8655)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY6_NV", SWIG_From_int(static_cast< int >(0x8656)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY7_NV", SWIG_From_int(static_cast< int >(0x8657)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY8_NV", SWIG_From_int(static_cast< int >(0x8658)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY9_NV", SWIG_From_int(static_cast< int >(0x8659)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY10_NV", SWIG_From_int(static_cast< int >(0x865A)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY11_NV", SWIG_From_int(static_cast< int >(0x865B)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY12_NV", SWIG_From_int(static_cast< int >(0x865C)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY13_NV", SWIG_From_int(static_cast< int >(0x865D)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY14_NV", SWIG_From_int(static_cast< int >(0x865E)));
  rb_define_const(mGlew, "GL_VERTEX_ATTRIB_ARRAY15_NV", SWIG_From_int(static_cast< int >(0x865F)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB0_4_NV", SWIG_From_int(static_cast< int >(0x8660)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB1_4_NV", SWIG_From_int(static_cast< int >(0x8661)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB2_4_NV", SWIG_From_int(static_cast< int >(0x8662)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB3_4_NV", SWIG_From_int(static_cast< int >(0x8663)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB4_4_NV", SWIG_From_int(static_cast< int >(0x8664)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB5_4_NV", SWIG_From_int(static_cast< int >(0x8665)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB6_4_NV", SWIG_From_int(static_cast< int >(0x8666)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB7_4_NV", SWIG_From_int(static_cast< int >(0x8667)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB8_4_NV", SWIG_From_int(static_cast< int >(0x8668)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB9_4_NV", SWIG_From_int(static_cast< int >(0x8669)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB10_4_NV", SWIG_From_int(static_cast< int >(0x866A)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB11_4_NV", SWIG_From_int(static_cast< int >(0x866B)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB12_4_NV", SWIG_From_int(static_cast< int >(0x866C)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB13_4_NV", SWIG_From_int(static_cast< int >(0x866D)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB14_4_NV", SWIG_From_int(static_cast< int >(0x866E)));
  rb_define_const(mGlew, "GL_MAP1_VERTEX_ATTRIB15_4_NV", SWIG_From_int(static_cast< int >(0x866F)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB0_4_NV", SWIG_From_int(static_cast< int >(0x8670)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB1_4_NV", SWIG_From_int(static_cast< int >(0x8671)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB2_4_NV", SWIG_From_int(static_cast< int >(0x8672)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB3_4_NV", SWIG_From_int(static_cast< int >(0x8673)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB4_4_NV", SWIG_From_int(static_cast< int >(0x8674)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB5_4_NV", SWIG_From_int(static_cast< int >(0x8675)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB6_4_NV", SWIG_From_int(static_cast< int >(0x8676)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB7_4_NV", SWIG_From_int(static_cast< int >(0x8677)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB8_4_NV", SWIG_From_int(static_cast< int >(0x8678)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB9_4_NV", SWIG_From_int(static_cast< int >(0x8679)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB10_4_NV", SWIG_From_int(static_cast< int >(0x867A)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB11_4_NV", SWIG_From_int(static_cast< int >(0x867B)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB12_4_NV", SWIG_From_int(static_cast< int >(0x867C)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB13_4_NV", SWIG_From_int(static_cast< int >(0x867D)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB14_4_NV", SWIG_From_int(static_cast< int >(0x867E)));
  rb_define_const(mGlew, "GL_MAP2_VERTEX_ATTRIB15_4_NV", SWIG_From_int(static_cast< int >(0x867F)));
  rb_define_const(mGlew, "GL_NV_vertex_program1_1", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_NV_vertex_program2", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_NV_vertex_program2_option", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_NV_vertex_program3", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB", SWIG_From_int(static_cast< int >(0x8B4C)));
  rb_define_const(mGlew, "GL_NV_vertex_program4", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_OES_byte_coordinates", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_OES_compressed_paletted_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PALETTE4_RGB8_OES", SWIG_From_int(static_cast< int >(0x8B90)));
  rb_define_const(mGlew, "GL_PALETTE4_RGBA8_OES", SWIG_From_int(static_cast< int >(0x8B91)));
  rb_define_const(mGlew, "GL_PALETTE4_R5_G6_B5_OES", SWIG_From_int(static_cast< int >(0x8B92)));
  rb_define_const(mGlew, "GL_PALETTE4_RGBA4_OES", SWIG_From_int(static_cast< int >(0x8B93)));
  rb_define_const(mGlew, "GL_PALETTE4_RGB5_A1_OES", SWIG_From_int(static_cast< int >(0x8B94)));
  rb_define_const(mGlew, "GL_PALETTE8_RGB8_OES", SWIG_From_int(static_cast< int >(0x8B95)));
  rb_define_const(mGlew, "GL_PALETTE8_RGBA8_OES", SWIG_From_int(static_cast< int >(0x8B96)));
  rb_define_const(mGlew, "GL_PALETTE8_R5_G6_B5_OES", SWIG_From_int(static_cast< int >(0x8B97)));
  rb_define_const(mGlew, "GL_PALETTE8_RGBA4_OES", SWIG_From_int(static_cast< int >(0x8B98)));
  rb_define_const(mGlew, "GL_PALETTE8_RGB5_A1_OES", SWIG_From_int(static_cast< int >(0x8B99)));
  rb_define_const(mGlew, "GL_OES_read_format", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_IMPLEMENTATION_COLOR_READ_TYPE_OES", SWIG_From_int(static_cast< int >(0x8B9A)));
  rb_define_const(mGlew, "GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES", SWIG_From_int(static_cast< int >(0x8B9B)));
  rb_define_const(mGlew, "GL_OES_single_precision", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_OML_interlace", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_INTERLACE_OML", SWIG_From_int(static_cast< int >(0x8980)));
  rb_define_const(mGlew, "GL_INTERLACE_READ_OML", SWIG_From_int(static_cast< int >(0x8981)));
  rb_define_const(mGlew, "GL_OML_resample", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PACK_RESAMPLE_OML", SWIG_From_int(static_cast< int >(0x8984)));
  rb_define_const(mGlew, "GL_UNPACK_RESAMPLE_OML", SWIG_From_int(static_cast< int >(0x8985)));
  rb_define_const(mGlew, "GL_RESAMPLE_REPLICATE_OML", SWIG_From_int(static_cast< int >(0x8986)));
  rb_define_const(mGlew, "GL_RESAMPLE_ZERO_FILL_OML", SWIG_From_int(static_cast< int >(0x8987)));
  rb_define_const(mGlew, "GL_RESAMPLE_AVERAGE_OML", SWIG_From_int(static_cast< int >(0x8988)));
  rb_define_const(mGlew, "GL_RESAMPLE_DECIMATE_OML", SWIG_From_int(static_cast< int >(0x8989)));
  rb_define_const(mGlew, "GL_OML_subsample", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FORMAT_SUBSAMPLE_24_24_OML", SWIG_From_int(static_cast< int >(0x8982)));
  rb_define_const(mGlew, "GL_FORMAT_SUBSAMPLE_244_244_OML", SWIG_From_int(static_cast< int >(0x8983)));
  rb_define_const(mGlew, "GL_PGI_misc_hints", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PREFER_DOUBLEBUFFER_HINT_PGI", SWIG_From_int(static_cast< int >(107000)));
  rb_define_const(mGlew, "GL_CONSERVE_MEMORY_HINT_PGI", SWIG_From_int(static_cast< int >(107005)));
  rb_define_const(mGlew, "GL_RECLAIM_MEMORY_HINT_PGI", SWIG_From_int(static_cast< int >(107006)));
  rb_define_const(mGlew, "GL_NATIVE_GRAPHICS_HANDLE_PGI", SWIG_From_int(static_cast< int >(107010)));
  rb_define_const(mGlew, "GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI", SWIG_From_int(static_cast< int >(107011)));
  rb_define_const(mGlew, "GL_NATIVE_GRAPHICS_END_HINT_PGI", SWIG_From_int(static_cast< int >(107012)));
  rb_define_const(mGlew, "GL_ALWAYS_FAST_HINT_PGI", SWIG_From_int(static_cast< int >(107020)));
  rb_define_const(mGlew, "GL_ALWAYS_SOFT_HINT_PGI", SWIG_From_int(static_cast< int >(107021)));
  rb_define_const(mGlew, "GL_ALLOW_DRAW_OBJ_HINT_PGI", SWIG_From_int(static_cast< int >(107022)));
  rb_define_const(mGlew, "GL_ALLOW_DRAW_WIN_HINT_PGI", SWIG_From_int(static_cast< int >(107023)));
  rb_define_const(mGlew, "GL_ALLOW_DRAW_FRG_HINT_PGI", SWIG_From_int(static_cast< int >(107024)));
  rb_define_const(mGlew, "GL_ALLOW_DRAW_MEM_HINT_PGI", SWIG_From_int(static_cast< int >(107025)));
  rb_define_const(mGlew, "GL_STRICT_DEPTHFUNC_HINT_PGI", SWIG_From_int(static_cast< int >(107030)));
  rb_define_const(mGlew, "GL_STRICT_LIGHTING_HINT_PGI", SWIG_From_int(static_cast< int >(107031)));
  rb_define_const(mGlew, "GL_STRICT_SCISSOR_HINT_PGI", SWIG_From_int(static_cast< int >(107032)));
  rb_define_const(mGlew, "GL_FULL_STIPPLE_HINT_PGI", SWIG_From_int(static_cast< int >(107033)));
  rb_define_const(mGlew, "GL_CLIP_NEAR_HINT_PGI", SWIG_From_int(static_cast< int >(107040)));
  rb_define_const(mGlew, "GL_CLIP_FAR_HINT_PGI", SWIG_From_int(static_cast< int >(107041)));
  rb_define_const(mGlew, "GL_WIDE_LINE_HINT_PGI", SWIG_From_int(static_cast< int >(107042)));
  rb_define_const(mGlew, "GL_BACK_NORMALS_HINT_PGI", SWIG_From_int(static_cast< int >(107043)));
  rb_define_const(mGlew, "GL_PGI_vertex_hints", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX23_BIT_PGI", SWIG_From_int(static_cast< int >(0x00000004)));
  rb_define_const(mGlew, "GL_VERTEX4_BIT_PGI", SWIG_From_int(static_cast< int >(0x00000008)));
  rb_define_const(mGlew, "GL_COLOR3_BIT_PGI", SWIG_From_int(static_cast< int >(0x00010000)));
  rb_define_const(mGlew, "GL_COLOR4_BIT_PGI", SWIG_From_int(static_cast< int >(0x00020000)));
  rb_define_const(mGlew, "GL_EDGEFLAG_BIT_PGI", SWIG_From_int(static_cast< int >(0x00040000)));
  rb_define_const(mGlew, "GL_INDEX_BIT_PGI", SWIG_From_int(static_cast< int >(0x00080000)));
  rb_define_const(mGlew, "GL_MAT_AMBIENT_BIT_PGI", SWIG_From_int(static_cast< int >(0x00100000)));
  rb_define_const(mGlew, "GL_VERTEX_DATA_HINT_PGI", SWIG_From_int(static_cast< int >(107050)));
  rb_define_const(mGlew, "GL_VERTEX_CONSISTENT_HINT_PGI", SWIG_From_int(static_cast< int >(107051)));
  rb_define_const(mGlew, "GL_MATERIAL_SIDE_HINT_PGI", SWIG_From_int(static_cast< int >(107052)));
  rb_define_const(mGlew, "GL_MAX_VERTEX_HINT_PGI", SWIG_From_int(static_cast< int >(107053)));
  rb_define_const(mGlew, "GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI", SWIG_From_int(static_cast< int >(0x00200000)));
  rb_define_const(mGlew, "GL_MAT_DIFFUSE_BIT_PGI", SWIG_From_int(static_cast< int >(0x00400000)));
  rb_define_const(mGlew, "GL_MAT_EMISSION_BIT_PGI", SWIG_From_int(static_cast< int >(0x00800000)));
  rb_define_const(mGlew, "GL_MAT_COLOR_INDEXES_BIT_PGI", SWIG_From_int(static_cast< int >(0x01000000)));
  rb_define_const(mGlew, "GL_MAT_SHININESS_BIT_PGI", SWIG_From_int(static_cast< int >(0x02000000)));
  rb_define_const(mGlew, "GL_MAT_SPECULAR_BIT_PGI", SWIG_From_int(static_cast< int >(0x04000000)));
  rb_define_const(mGlew, "GL_NORMAL_BIT_PGI", SWIG_From_int(static_cast< int >(0x08000000)));
  rb_define_const(mGlew, "GL_TEXCOORD1_BIT_PGI", SWIG_From_int(static_cast< int >(0x10000000)));
  rb_define_const(mGlew, "GL_TEXCOORD2_BIT_PGI", SWIG_From_int(static_cast< int >(0x20000000)));
  rb_define_const(mGlew, "GL_TEXCOORD3_BIT_PGI", SWIG_From_int(static_cast< int >(0x40000000)));
  rb_define_const(mGlew, "GL_TEXCOORD4_BIT_PGI", SWIG_From_int(static_cast< int >(0x80000000)));
  rb_define_const(mGlew, "GL_REND_screen_coordinates", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SCREEN_COORDINATES_REND", SWIG_From_int(static_cast< int >(0x8490)));
  rb_define_const(mGlew, "GL_INVERTED_SCREEN_W_REND", SWIG_From_int(static_cast< int >(0x8491)));
  rb_define_const(mGlew, "GL_S3_s3tc", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RGB_S3TC", SWIG_From_int(static_cast< int >(0x83A0)));
  rb_define_const(mGlew, "GL_RGB4_S3TC", SWIG_From_int(static_cast< int >(0x83A1)));
  rb_define_const(mGlew, "GL_RGBA_S3TC", SWIG_From_int(static_cast< int >(0x83A2)));
  rb_define_const(mGlew, "GL_RGBA4_S3TC", SWIG_From_int(static_cast< int >(0x83A3)));
  rb_define_const(mGlew, "GL_RGBA_DXT5_S3TC", SWIG_From_int(static_cast< int >(0x83A4)));
  rb_define_const(mGlew, "GL_RGBA4_DXT5_S3TC", SWIG_From_int(static_cast< int >(0x83A5)));
  rb_define_const(mGlew, "GL_SGIS_color_range", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EXTENDED_RANGE_SGIS", SWIG_From_int(static_cast< int >(0x85A5)));
  rb_define_const(mGlew, "GL_MIN_RED_SGIS", SWIG_From_int(static_cast< int >(0x85A6)));
  rb_define_const(mGlew, "GL_MAX_RED_SGIS", SWIG_From_int(static_cast< int >(0x85A7)));
  rb_define_const(mGlew, "GL_MIN_GREEN_SGIS", SWIG_From_int(static_cast< int >(0x85A8)));
  rb_define_const(mGlew, "GL_MAX_GREEN_SGIS", SWIG_From_int(static_cast< int >(0x85A9)));
  rb_define_const(mGlew, "GL_MIN_BLUE_SGIS", SWIG_From_int(static_cast< int >(0x85AA)));
  rb_define_const(mGlew, "GL_MAX_BLUE_SGIS", SWIG_From_int(static_cast< int >(0x85AB)));
  rb_define_const(mGlew, "GL_MIN_ALPHA_SGIS", SWIG_From_int(static_cast< int >(0x85AC)));
  rb_define_const(mGlew, "GL_MAX_ALPHA_SGIS", SWIG_From_int(static_cast< int >(0x85AD)));
  rb_define_const(mGlew, "GL_SGIS_detail_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIS_fog_function", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIS_generate_mipmap", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_GENERATE_MIPMAP_SGIS", SWIG_From_int(static_cast< int >(0x8191)));
  rb_define_const(mGlew, "GL_GENERATE_MIPMAP_HINT_SGIS", SWIG_From_int(static_cast< int >(0x8192)));
  rb_define_const(mGlew, "GL_SGIS_multisample", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_MULTISAMPLE_SGIS", SWIG_From_int(static_cast< int >(0x809D)));
  rb_define_const(mGlew, "GL_SAMPLE_ALPHA_TO_MASK_SGIS", SWIG_From_int(static_cast< int >(0x809E)));
  rb_define_const(mGlew, "GL_SAMPLE_ALPHA_TO_ONE_SGIS", SWIG_From_int(static_cast< int >(0x809F)));
  rb_define_const(mGlew, "GL_SAMPLE_MASK_SGIS", SWIG_From_int(static_cast< int >(0x80A0)));
  rb_define_const(mGlew, "GL_1PASS_SGIS", SWIG_From_int(static_cast< int >(0x80A1)));
  rb_define_const(mGlew, "GL_2PASS_0_SGIS", SWIG_From_int(static_cast< int >(0x80A2)));
  rb_define_const(mGlew, "GL_2PASS_1_SGIS", SWIG_From_int(static_cast< int >(0x80A3)));
  rb_define_const(mGlew, "GL_4PASS_0_SGIS", SWIG_From_int(static_cast< int >(0x80A4)));
  rb_define_const(mGlew, "GL_4PASS_1_SGIS", SWIG_From_int(static_cast< int >(0x80A5)));
  rb_define_const(mGlew, "GL_4PASS_2_SGIS", SWIG_From_int(static_cast< int >(0x80A6)));
  rb_define_const(mGlew, "GL_4PASS_3_SGIS", SWIG_From_int(static_cast< int >(0x80A7)));
  rb_define_const(mGlew, "GL_SAMPLE_BUFFERS_SGIS", SWIG_From_int(static_cast< int >(0x80A8)));
  rb_define_const(mGlew, "GL_SAMPLES_SGIS", SWIG_From_int(static_cast< int >(0x80A9)));
  rb_define_const(mGlew, "GL_SAMPLE_MASK_VALUE_SGIS", SWIG_From_int(static_cast< int >(0x80AA)));
  rb_define_const(mGlew, "GL_SAMPLE_MASK_INVERT_SGIS", SWIG_From_int(static_cast< int >(0x80AB)));
  rb_define_const(mGlew, "GL_SAMPLE_PATTERN_SGIS", SWIG_From_int(static_cast< int >(0x80AC)));
  rb_define_const(mGlew, "GL_SGIS_pixel_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIS_point_line_texgen", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_EYE_DISTANCE_TO_POINT_SGIS", SWIG_From_int(static_cast< int >(0x81F0)));
  rb_define_const(mGlew, "GL_OBJECT_DISTANCE_TO_POINT_SGIS", SWIG_From_int(static_cast< int >(0x81F1)));
  rb_define_const(mGlew, "GL_EYE_DISTANCE_TO_LINE_SGIS", SWIG_From_int(static_cast< int >(0x81F2)));
  rb_define_const(mGlew, "GL_OBJECT_DISTANCE_TO_LINE_SGIS", SWIG_From_int(static_cast< int >(0x81F3)));
  rb_define_const(mGlew, "GL_EYE_POINT_SGIS", SWIG_From_int(static_cast< int >(0x81F4)));
  rb_define_const(mGlew, "GL_OBJECT_POINT_SGIS", SWIG_From_int(static_cast< int >(0x81F5)));
  rb_define_const(mGlew, "GL_EYE_LINE_SGIS", SWIG_From_int(static_cast< int >(0x81F6)));
  rb_define_const(mGlew, "GL_OBJECT_LINE_SGIS", SWIG_From_int(static_cast< int >(0x81F7)));
  rb_define_const(mGlew, "GL_SGIS_sharpen_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIS_texture4D", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIS_texture_border_clamp", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_CLAMP_TO_BORDER_SGIS", SWIG_From_int(static_cast< int >(0x812D)));
  rb_define_const(mGlew, "GL_SGIS_texture_edge_clamp", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_CLAMP_TO_EDGE_SGIS", SWIG_From_int(static_cast< int >(0x812F)));
  rb_define_const(mGlew, "GL_SGIS_texture_filter4", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIS_texture_lod", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_MIN_LOD_SGIS", SWIG_From_int(static_cast< int >(0x813A)));
  rb_define_const(mGlew, "GL_TEXTURE_MAX_LOD_SGIS", SWIG_From_int(static_cast< int >(0x813B)));
  rb_define_const(mGlew, "GL_TEXTURE_BASE_LEVEL_SGIS", SWIG_From_int(static_cast< int >(0x813C)));
  rb_define_const(mGlew, "GL_TEXTURE_MAX_LEVEL_SGIS", SWIG_From_int(static_cast< int >(0x813D)));
  rb_define_const(mGlew, "GL_SGIS_texture_select", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_async", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ASYNC_MARKER_SGIX", SWIG_From_int(static_cast< int >(0x8329)));
  rb_define_const(mGlew, "GL_SGIX_async_histogram", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ASYNC_HISTOGRAM_SGIX", SWIG_From_int(static_cast< int >(0x832C)));
  rb_define_const(mGlew, "GL_MAX_ASYNC_HISTOGRAM_SGIX", SWIG_From_int(static_cast< int >(0x832D)));
  rb_define_const(mGlew, "GL_SGIX_async_pixel", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ASYNC_TEX_IMAGE_SGIX", SWIG_From_int(static_cast< int >(0x835C)));
  rb_define_const(mGlew, "GL_ASYNC_DRAW_PIXELS_SGIX", SWIG_From_int(static_cast< int >(0x835D)));
  rb_define_const(mGlew, "GL_ASYNC_READ_PIXELS_SGIX", SWIG_From_int(static_cast< int >(0x835E)));
  rb_define_const(mGlew, "GL_MAX_ASYNC_TEX_IMAGE_SGIX", SWIG_From_int(static_cast< int >(0x835F)));
  rb_define_const(mGlew, "GL_MAX_ASYNC_DRAW_PIXELS_SGIX", SWIG_From_int(static_cast< int >(0x8360)));
  rb_define_const(mGlew, "GL_MAX_ASYNC_READ_PIXELS_SGIX", SWIG_From_int(static_cast< int >(0x8361)));
  rb_define_const(mGlew, "GL_SGIX_blend_alpha_minmax", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_ALPHA_MIN_SGIX", SWIG_From_int(static_cast< int >(0x8320)));
  rb_define_const(mGlew, "GL_ALPHA_MAX_SGIX", SWIG_From_int(static_cast< int >(0x8321)));
  rb_define_const(mGlew, "GL_SGIX_clipmap", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_convolution_accuracy", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_CONVOLUTION_HINT_SGIX", SWIG_From_int(static_cast< int >(0x8316)));
  rb_define_const(mGlew, "GL_SGIX_depth_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_DEPTH_COMPONENT16_SGIX", SWIG_From_int(static_cast< int >(0x81A5)));
  rb_define_const(mGlew, "GL_DEPTH_COMPONENT24_SGIX", SWIG_From_int(static_cast< int >(0x81A6)));
  rb_define_const(mGlew, "GL_DEPTH_COMPONENT32_SGIX", SWIG_From_int(static_cast< int >(0x81A7)));
  rb_define_const(mGlew, "GL_SGIX_flush_raster", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_fog_offset", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FOG_OFFSET_SGIX", SWIG_From_int(static_cast< int >(0x8198)));
  rb_define_const(mGlew, "GL_FOG_OFFSET_VALUE_SGIX", SWIG_From_int(static_cast< int >(0x8199)));
  rb_define_const(mGlew, "GL_SGIX_fog_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_FOG_SGIX", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_FOG_PATCHY_FACTOR_SGIX", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_FRAGMENT_FOG_SGIX", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GL_SGIX_fragment_specular_lighting", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_framezoom", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_interlace", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_INTERLACE_SGIX", SWIG_From_int(static_cast< int >(0x8094)));
  rb_define_const(mGlew, "GL_SGIX_ir_instrument1", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_list_priority", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_pixel_texture", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_pixel_texture_bits", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_reference_plane", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_resample", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PACK_RESAMPLE_SGIX", SWIG_From_int(static_cast< int >(0x842E)));
  rb_define_const(mGlew, "GL_UNPACK_RESAMPLE_SGIX", SWIG_From_int(static_cast< int >(0x842F)));
  rb_define_const(mGlew, "GL_RESAMPLE_DECIMATE_SGIX", SWIG_From_int(static_cast< int >(0x8430)));
  rb_define_const(mGlew, "GL_RESAMPLE_REPLICATE_SGIX", SWIG_From_int(static_cast< int >(0x8433)));
  rb_define_const(mGlew, "GL_RESAMPLE_ZERO_FILL_SGIX", SWIG_From_int(static_cast< int >(0x8434)));
  rb_define_const(mGlew, "GL_SGIX_shadow", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPARE_SGIX", SWIG_From_int(static_cast< int >(0x819A)));
  rb_define_const(mGlew, "GL_TEXTURE_COMPARE_OPERATOR_SGIX", SWIG_From_int(static_cast< int >(0x819B)));
  rb_define_const(mGlew, "GL_TEXTURE_LEQUAL_R_SGIX", SWIG_From_int(static_cast< int >(0x819C)));
  rb_define_const(mGlew, "GL_TEXTURE_GEQUAL_R_SGIX", SWIG_From_int(static_cast< int >(0x819D)));
  rb_define_const(mGlew, "GL_SGIX_shadow_ambient", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SHADOW_AMBIENT_SGIX", SWIG_From_int(static_cast< int >(0x80BF)));
  rb_define_const(mGlew, "GL_SGIX_sprite", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_tag_sample_buffer", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_texture_add_env", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_texture_coordinate_clamp", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_MAX_CLAMP_S_SGIX", SWIG_From_int(static_cast< int >(0x8369)));
  rb_define_const(mGlew, "GL_TEXTURE_MAX_CLAMP_T_SGIX", SWIG_From_int(static_cast< int >(0x836A)));
  rb_define_const(mGlew, "GL_TEXTURE_MAX_CLAMP_R_SGIX", SWIG_From_int(static_cast< int >(0x836B)));
  rb_define_const(mGlew, "GL_SGIX_texture_lod_bias", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_texture_multi_buffer", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_MULTI_BUFFER_HINT_SGIX", SWIG_From_int(static_cast< int >(0x812E)));
  rb_define_const(mGlew, "GL_SGIX_texture_range", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RGB_SIGNED_SGIX", SWIG_From_int(static_cast< int >(0x85E0)));
  rb_define_const(mGlew, "GL_RGBA_SIGNED_SGIX", SWIG_From_int(static_cast< int >(0x85E1)));
  rb_define_const(mGlew, "GL_ALPHA_SIGNED_SGIX", SWIG_From_int(static_cast< int >(0x85E2)));
  rb_define_const(mGlew, "GL_LUMINANCE_SIGNED_SGIX", SWIG_From_int(static_cast< int >(0x85E3)));
  rb_define_const(mGlew, "GL_INTENSITY_SIGNED_SGIX", SWIG_From_int(static_cast< int >(0x85E4)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA_SIGNED_SGIX", SWIG_From_int(static_cast< int >(0x85E5)));
  rb_define_const(mGlew, "GL_RGB16_SIGNED_SGIX", SWIG_From_int(static_cast< int >(0x85E6)));
  rb_define_const(mGlew, "GL_RGBA16_SIGNED_SGIX", SWIG_From_int(static_cast< int >(0x85E7)));
  rb_define_const(mGlew, "GL_ALPHA16_SIGNED_SGIX", SWIG_From_int(static_cast< int >(0x85E8)));
  rb_define_const(mGlew, "GL_LUMINANCE16_SIGNED_SGIX", SWIG_From_int(static_cast< int >(0x85E9)));
  rb_define_const(mGlew, "GL_INTENSITY16_SIGNED_SGIX", SWIG_From_int(static_cast< int >(0x85EA)));
  rb_define_const(mGlew, "GL_LUMINANCE16_ALPHA16_SIGNED_SGIX", SWIG_From_int(static_cast< int >(0x85EB)));
  rb_define_const(mGlew, "GL_RGB_EXTENDED_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x85EC)));
  rb_define_const(mGlew, "GL_RGBA_EXTENDED_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x85ED)));
  rb_define_const(mGlew, "GL_ALPHA_EXTENDED_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x85EE)));
  rb_define_const(mGlew, "GL_LUMINANCE_EXTENDED_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x85EF)));
  rb_define_const(mGlew, "GL_INTENSITY_EXTENDED_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x85F0)));
  rb_define_const(mGlew, "GL_LUMINANCE_ALPHA_EXTENDED_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x85F1)));
  rb_define_const(mGlew, "GL_RGB16_EXTENDED_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x85F2)));
  rb_define_const(mGlew, "GL_RGBA16_EXTENDED_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x85F3)));
  rb_define_const(mGlew, "GL_ALPHA16_EXTENDED_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x85F4)));
  rb_define_const(mGlew, "GL_LUMINANCE16_EXTENDED_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x85F5)));
  rb_define_const(mGlew, "GL_INTENSITY16_EXTENDED_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x85F6)));
  rb_define_const(mGlew, "GL_LUMINANCE16_ALPHA16_EXTENDED_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x85F7)));
  rb_define_const(mGlew, "GL_MIN_LUMINANCE_SGIS", SWIG_From_int(static_cast< int >(0x85F8)));
  rb_define_const(mGlew, "GL_MAX_LUMINANCE_SGIS", SWIG_From_int(static_cast< int >(0x85F9)));
  rb_define_const(mGlew, "GL_MIN_INTENSITY_SGIS", SWIG_From_int(static_cast< int >(0x85FA)));
  rb_define_const(mGlew, "GL_MAX_INTENSITY_SGIS", SWIG_From_int(static_cast< int >(0x85FB)));
  rb_define_const(mGlew, "GL_SGIX_texture_scale_bias", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_POST_TEXTURE_FILTER_BIAS_SGIX", SWIG_From_int(static_cast< int >(0x8179)));
  rb_define_const(mGlew, "GL_POST_TEXTURE_FILTER_SCALE_SGIX", SWIG_From_int(static_cast< int >(0x817A)));
  rb_define_const(mGlew, "GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x817B)));
  rb_define_const(mGlew, "GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX", SWIG_From_int(static_cast< int >(0x817C)));
  rb_define_const(mGlew, "GL_SGIX_vertex_preclip", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_VERTEX_PRECLIP_SGIX", SWIG_From_int(static_cast< int >(0x83EE)));
  rb_define_const(mGlew, "GL_VERTEX_PRECLIP_HINT_SGIX", SWIG_From_int(static_cast< int >(0x83EF)));
  rb_define_const(mGlew, "GL_SGIX_vertex_preclip_hint", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGIX_ycrcb", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SGI_color_matrix", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COLOR_MATRIX_SGI", SWIG_From_int(static_cast< int >(0x80B1)));
  rb_define_const(mGlew, "GL_COLOR_MATRIX_STACK_DEPTH_SGI", SWIG_From_int(static_cast< int >(0x80B2)));
  rb_define_const(mGlew, "GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI", SWIG_From_int(static_cast< int >(0x80B3)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_RED_SCALE_SGI", SWIG_From_int(static_cast< int >(0x80B4)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI", SWIG_From_int(static_cast< int >(0x80B5)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI", SWIG_From_int(static_cast< int >(0x80B6)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI", SWIG_From_int(static_cast< int >(0x80B7)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_RED_BIAS_SGI", SWIG_From_int(static_cast< int >(0x80B8)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI", SWIG_From_int(static_cast< int >(0x80B9)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI", SWIG_From_int(static_cast< int >(0x80BA)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI", SWIG_From_int(static_cast< int >(0x80BB)));
  rb_define_const(mGlew, "GL_SGI_color_table", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_SGI", SWIG_From_int(static_cast< int >(0x80D0)));
  rb_define_const(mGlew, "GL_POST_CONVOLUTION_COLOR_TABLE_SGI", SWIG_From_int(static_cast< int >(0x80D1)));
  rb_define_const(mGlew, "GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI", SWIG_From_int(static_cast< int >(0x80D2)));
  rb_define_const(mGlew, "GL_PROXY_COLOR_TABLE_SGI", SWIG_From_int(static_cast< int >(0x80D3)));
  rb_define_const(mGlew, "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI", SWIG_From_int(static_cast< int >(0x80D4)));
  rb_define_const(mGlew, "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI", SWIG_From_int(static_cast< int >(0x80D5)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_SCALE_SGI", SWIG_From_int(static_cast< int >(0x80D6)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_BIAS_SGI", SWIG_From_int(static_cast< int >(0x80D7)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_FORMAT_SGI", SWIG_From_int(static_cast< int >(0x80D8)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_WIDTH_SGI", SWIG_From_int(static_cast< int >(0x80D9)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_RED_SIZE_SGI", SWIG_From_int(static_cast< int >(0x80DA)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_GREEN_SIZE_SGI", SWIG_From_int(static_cast< int >(0x80DB)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_BLUE_SIZE_SGI", SWIG_From_int(static_cast< int >(0x80DC)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_ALPHA_SIZE_SGI", SWIG_From_int(static_cast< int >(0x80DD)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_LUMINANCE_SIZE_SGI", SWIG_From_int(static_cast< int >(0x80DE)));
  rb_define_const(mGlew, "GL_COLOR_TABLE_INTENSITY_SIZE_SGI", SWIG_From_int(static_cast< int >(0x80DF)));
  rb_define_const(mGlew, "GL_SGI_texture_color_table", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_TEXTURE_COLOR_TABLE_SGI", SWIG_From_int(static_cast< int >(0x80BC)));
  rb_define_const(mGlew, "GL_PROXY_TEXTURE_COLOR_TABLE_SGI", SWIG_From_int(static_cast< int >(0x80BD)));
  rb_define_const(mGlew, "GL_SUNX_constant_data", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_UNPACK_CONSTANT_DATA_SUNX", SWIG_From_int(static_cast< int >(0x81D5)));
  rb_define_const(mGlew, "GL_TEXTURE_CONSTANT_DATA_SUNX", SWIG_From_int(static_cast< int >(0x81D6)));
  rb_define_const(mGlew, "GL_SUN_convolution_border_modes", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_WRAP_BORDER_SUN", SWIG_From_int(static_cast< int >(0x81D4)));
  rb_define_const(mGlew, "GL_SUN_global_alpha", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_GLOBAL_ALPHA_SUN", SWIG_From_int(static_cast< int >(0x81D9)));
  rb_define_const(mGlew, "GL_GLOBAL_ALPHA_FACTOR_SUN", SWIG_From_int(static_cast< int >(0x81DA)));
  rb_define_const(mGlew, "GL_SUN_mesh_array", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_QUAD_MESH_SUN", SWIG_From_int(static_cast< int >(0x8614)));
  rb_define_const(mGlew, "GL_TRIANGLE_MESH_SUN", SWIG_From_int(static_cast< int >(0x8615)));
  rb_define_const(mGlew, "GL_SUN_read_video_pixels", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SUN_slice_accum", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_SLICE_ACCUM_SUN", SWIG_From_int(static_cast< int >(0x85CC)));
  rb_define_const(mGlew, "GL_SUN_triangle_list", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_RESTART_SUN", SWIG_From_int(static_cast< int >(0x01)));
  rb_define_const(mGlew, "GL_REPLACE_MIDDLE_SUN", SWIG_From_int(static_cast< int >(0x02)));
  rb_define_const(mGlew, "GL_REPLACE_OLDEST_SUN", SWIG_From_int(static_cast< int >(0x03)));
  rb_define_const(mGlew, "GL_TRIANGLE_LIST_SUN", SWIG_From_int(static_cast< int >(0x81D7)));
  rb_define_const(mGlew, "GL_REPLACEMENT_CODE_SUN", SWIG_From_int(static_cast< int >(0x81D8)));
  rb_define_const(mGlew, "GL_REPLACEMENT_CODE_ARRAY_SUN", SWIG_From_int(static_cast< int >(0x85C0)));
  rb_define_const(mGlew, "GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN", SWIG_From_int(static_cast< int >(0x85C1)));
  rb_define_const(mGlew, "GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN", SWIG_From_int(static_cast< int >(0x85C2)));
  rb_define_const(mGlew, "GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN", SWIG_From_int(static_cast< int >(0x85C3)));
  rb_define_const(mGlew, "GL_R1UI_V3F_SUN", SWIG_From_int(static_cast< int >(0x85C4)));
  rb_define_const(mGlew, "GL_R1UI_C4UB_V3F_SUN", SWIG_From_int(static_cast< int >(0x85C5)));
  rb_define_const(mGlew, "GL_R1UI_C3F_V3F_SUN", SWIG_From_int(static_cast< int >(0x85C6)));
  rb_define_const(mGlew, "GL_R1UI_N3F_V3F_SUN", SWIG_From_int(static_cast< int >(0x85C7)));
  rb_define_const(mGlew, "GL_R1UI_C4F_N3F_V3F_SUN", SWIG_From_int(static_cast< int >(0x85C8)));
  rb_define_const(mGlew, "GL_R1UI_T2F_V3F_SUN", SWIG_From_int(static_cast< int >(0x85C9)));
  rb_define_const(mGlew, "GL_R1UI_T2F_N3F_V3F_SUN", SWIG_From_int(static_cast< int >(0x85CA)));
  rb_define_const(mGlew, "GL_R1UI_T2F_C4F_N3F_V3F_SUN", SWIG_From_int(static_cast< int >(0x85CB)));
  rb_define_const(mGlew, "GL_SUN_vertex", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_WIN_phong_shading", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_PHONG_WIN", SWIG_From_int(static_cast< int >(0x80EA)));
  rb_define_const(mGlew, "GL_PHONG_HINT_WIN", SWIG_From_int(static_cast< int >(0x80EB)));
  rb_define_const(mGlew, "GL_WIN_specular_fog", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GL_FOG_SPECULAR_TEXTURE_WIN", SWIG_From_int(static_cast< int >(0x80EC)));
  rb_define_const(mGlew, "GL_WIN_swap_hint", SWIG_From_int(static_cast< int >(1)));
  rb_define_singleton_method(mGlew, "__glewCopyTexSubImage3D", VALUEFUNC(_wrap___glewCopyTexSubImage3D_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyTexSubImage3D=", VALUEFUNC(_wrap___glewCopyTexSubImage3D_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawRangeElements", VALUEFUNC(_wrap___glewDrawRangeElements_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawRangeElements=", VALUEFUNC(_wrap___glewDrawRangeElements_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexImage3D", VALUEFUNC(_wrap___glewTexImage3D_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexImage3D=", VALUEFUNC(_wrap___glewTexImage3D_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexSubImage3D", VALUEFUNC(_wrap___glewTexSubImage3D_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexSubImage3D=", VALUEFUNC(_wrap___glewTexSubImage3D_set), 1);
  rb_define_singleton_method(mGlew, "__glewActiveTexture", VALUEFUNC(_wrap___glewActiveTexture_get), 0);
  rb_define_singleton_method(mGlew, "__glewActiveTexture=", VALUEFUNC(_wrap___glewActiveTexture_set), 1);
  rb_define_singleton_method(mGlew, "__glewClientActiveTexture", VALUEFUNC(_wrap___glewClientActiveTexture_get), 0);
  rb_define_singleton_method(mGlew, "__glewClientActiveTexture=", VALUEFUNC(_wrap___glewClientActiveTexture_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTexImage1D", VALUEFUNC(_wrap___glewCompressedTexImage1D_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTexImage1D=", VALUEFUNC(_wrap___glewCompressedTexImage1D_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTexImage2D", VALUEFUNC(_wrap___glewCompressedTexImage2D_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTexImage2D=", VALUEFUNC(_wrap___glewCompressedTexImage2D_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTexImage3D", VALUEFUNC(_wrap___glewCompressedTexImage3D_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTexImage3D=", VALUEFUNC(_wrap___glewCompressedTexImage3D_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTexSubImage1D", VALUEFUNC(_wrap___glewCompressedTexSubImage1D_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTexSubImage1D=", VALUEFUNC(_wrap___glewCompressedTexSubImage1D_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTexSubImage2D", VALUEFUNC(_wrap___glewCompressedTexSubImage2D_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTexSubImage2D=", VALUEFUNC(_wrap___glewCompressedTexSubImage2D_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTexSubImage3D", VALUEFUNC(_wrap___glewCompressedTexSubImage3D_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTexSubImage3D=", VALUEFUNC(_wrap___glewCompressedTexSubImage3D_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetCompressedTexImage", VALUEFUNC(_wrap___glewGetCompressedTexImage_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetCompressedTexImage=", VALUEFUNC(_wrap___glewGetCompressedTexImage_set), 1);
  rb_define_singleton_method(mGlew, "__glewLoadTransposeMatrixd", VALUEFUNC(_wrap___glewLoadTransposeMatrixd_get), 0);
  rb_define_singleton_method(mGlew, "__glewLoadTransposeMatrixd=", VALUEFUNC(_wrap___glewLoadTransposeMatrixd_set), 1);
  rb_define_singleton_method(mGlew, "__glewLoadTransposeMatrixf", VALUEFUNC(_wrap___glewLoadTransposeMatrixf_get), 0);
  rb_define_singleton_method(mGlew, "__glewLoadTransposeMatrixf=", VALUEFUNC(_wrap___glewLoadTransposeMatrixf_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultTransposeMatrixd", VALUEFUNC(_wrap___glewMultTransposeMatrixd_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultTransposeMatrixd=", VALUEFUNC(_wrap___glewMultTransposeMatrixd_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultTransposeMatrixf", VALUEFUNC(_wrap___glewMultTransposeMatrixf_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultTransposeMatrixf=", VALUEFUNC(_wrap___glewMultTransposeMatrixf_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1d", VALUEFUNC(_wrap___glewMultiTexCoord1d_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1d=", VALUEFUNC(_wrap___glewMultiTexCoord1d_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1dv", VALUEFUNC(_wrap___glewMultiTexCoord1dv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1dv=", VALUEFUNC(_wrap___glewMultiTexCoord1dv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1f", VALUEFUNC(_wrap___glewMultiTexCoord1f_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1f=", VALUEFUNC(_wrap___glewMultiTexCoord1f_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1fv", VALUEFUNC(_wrap___glewMultiTexCoord1fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1fv=", VALUEFUNC(_wrap___glewMultiTexCoord1fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1i", VALUEFUNC(_wrap___glewMultiTexCoord1i_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1i=", VALUEFUNC(_wrap___glewMultiTexCoord1i_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1iv", VALUEFUNC(_wrap___glewMultiTexCoord1iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1iv=", VALUEFUNC(_wrap___glewMultiTexCoord1iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1s", VALUEFUNC(_wrap___glewMultiTexCoord1s_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1s=", VALUEFUNC(_wrap___glewMultiTexCoord1s_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1sv", VALUEFUNC(_wrap___glewMultiTexCoord1sv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1sv=", VALUEFUNC(_wrap___glewMultiTexCoord1sv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2d", VALUEFUNC(_wrap___glewMultiTexCoord2d_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2d=", VALUEFUNC(_wrap___glewMultiTexCoord2d_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2dv", VALUEFUNC(_wrap___glewMultiTexCoord2dv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2dv=", VALUEFUNC(_wrap___glewMultiTexCoord2dv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2f", VALUEFUNC(_wrap___glewMultiTexCoord2f_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2f=", VALUEFUNC(_wrap___glewMultiTexCoord2f_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2fv", VALUEFUNC(_wrap___glewMultiTexCoord2fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2fv=", VALUEFUNC(_wrap___glewMultiTexCoord2fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2i", VALUEFUNC(_wrap___glewMultiTexCoord2i_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2i=", VALUEFUNC(_wrap___glewMultiTexCoord2i_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2iv", VALUEFUNC(_wrap___glewMultiTexCoord2iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2iv=", VALUEFUNC(_wrap___glewMultiTexCoord2iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2s", VALUEFUNC(_wrap___glewMultiTexCoord2s_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2s=", VALUEFUNC(_wrap___glewMultiTexCoord2s_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2sv", VALUEFUNC(_wrap___glewMultiTexCoord2sv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2sv=", VALUEFUNC(_wrap___glewMultiTexCoord2sv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3d", VALUEFUNC(_wrap___glewMultiTexCoord3d_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3d=", VALUEFUNC(_wrap___glewMultiTexCoord3d_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3dv", VALUEFUNC(_wrap___glewMultiTexCoord3dv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3dv=", VALUEFUNC(_wrap___glewMultiTexCoord3dv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3f", VALUEFUNC(_wrap___glewMultiTexCoord3f_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3f=", VALUEFUNC(_wrap___glewMultiTexCoord3f_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3fv", VALUEFUNC(_wrap___glewMultiTexCoord3fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3fv=", VALUEFUNC(_wrap___glewMultiTexCoord3fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3i", VALUEFUNC(_wrap___glewMultiTexCoord3i_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3i=", VALUEFUNC(_wrap___glewMultiTexCoord3i_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3iv", VALUEFUNC(_wrap___glewMultiTexCoord3iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3iv=", VALUEFUNC(_wrap___glewMultiTexCoord3iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3s", VALUEFUNC(_wrap___glewMultiTexCoord3s_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3s=", VALUEFUNC(_wrap___glewMultiTexCoord3s_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3sv", VALUEFUNC(_wrap___glewMultiTexCoord3sv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3sv=", VALUEFUNC(_wrap___glewMultiTexCoord3sv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4d", VALUEFUNC(_wrap___glewMultiTexCoord4d_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4d=", VALUEFUNC(_wrap___glewMultiTexCoord4d_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4dv", VALUEFUNC(_wrap___glewMultiTexCoord4dv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4dv=", VALUEFUNC(_wrap___glewMultiTexCoord4dv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4f", VALUEFUNC(_wrap___glewMultiTexCoord4f_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4f=", VALUEFUNC(_wrap___glewMultiTexCoord4f_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4fv", VALUEFUNC(_wrap___glewMultiTexCoord4fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4fv=", VALUEFUNC(_wrap___glewMultiTexCoord4fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4i", VALUEFUNC(_wrap___glewMultiTexCoord4i_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4i=", VALUEFUNC(_wrap___glewMultiTexCoord4i_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4iv", VALUEFUNC(_wrap___glewMultiTexCoord4iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4iv=", VALUEFUNC(_wrap___glewMultiTexCoord4iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4s", VALUEFUNC(_wrap___glewMultiTexCoord4s_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4s=", VALUEFUNC(_wrap___glewMultiTexCoord4s_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4sv", VALUEFUNC(_wrap___glewMultiTexCoord4sv_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4sv=", VALUEFUNC(_wrap___glewMultiTexCoord4sv_set), 1);
  rb_define_singleton_method(mGlew, "__glewSampleCoverage", VALUEFUNC(_wrap___glewSampleCoverage_get), 0);
  rb_define_singleton_method(mGlew, "__glewSampleCoverage=", VALUEFUNC(_wrap___glewSampleCoverage_set), 1);
  rb_define_singleton_method(mGlew, "__glewBlendColor", VALUEFUNC(_wrap___glewBlendColor_get), 0);
  rb_define_singleton_method(mGlew, "__glewBlendColor=", VALUEFUNC(_wrap___glewBlendColor_set), 1);
  rb_define_singleton_method(mGlew, "__glewBlendEquation", VALUEFUNC(_wrap___glewBlendEquation_get), 0);
  rb_define_singleton_method(mGlew, "__glewBlendEquation=", VALUEFUNC(_wrap___glewBlendEquation_set), 1);
  rb_define_singleton_method(mGlew, "__glewBlendFuncSeparate", VALUEFUNC(_wrap___glewBlendFuncSeparate_get), 0);
  rb_define_singleton_method(mGlew, "__glewBlendFuncSeparate=", VALUEFUNC(_wrap___glewBlendFuncSeparate_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogCoordPointer", VALUEFUNC(_wrap___glewFogCoordPointer_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogCoordPointer=", VALUEFUNC(_wrap___glewFogCoordPointer_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogCoordd", VALUEFUNC(_wrap___glewFogCoordd_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogCoordd=", VALUEFUNC(_wrap___glewFogCoordd_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogCoorddv", VALUEFUNC(_wrap___glewFogCoorddv_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogCoorddv=", VALUEFUNC(_wrap___glewFogCoorddv_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogCoordf", VALUEFUNC(_wrap___glewFogCoordf_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogCoordf=", VALUEFUNC(_wrap___glewFogCoordf_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogCoordfv", VALUEFUNC(_wrap___glewFogCoordfv_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogCoordfv=", VALUEFUNC(_wrap___glewFogCoordfv_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiDrawArrays", VALUEFUNC(_wrap___glewMultiDrawArrays_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiDrawArrays=", VALUEFUNC(_wrap___glewMultiDrawArrays_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiDrawElements", VALUEFUNC(_wrap___glewMultiDrawElements_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiDrawElements=", VALUEFUNC(_wrap___glewMultiDrawElements_set), 1);
  rb_define_singleton_method(mGlew, "__glewPointParameterf", VALUEFUNC(_wrap___glewPointParameterf_get), 0);
  rb_define_singleton_method(mGlew, "__glewPointParameterf=", VALUEFUNC(_wrap___glewPointParameterf_set), 1);
  rb_define_singleton_method(mGlew, "__glewPointParameterfv", VALUEFUNC(_wrap___glewPointParameterfv_get), 0);
  rb_define_singleton_method(mGlew, "__glewPointParameterfv=", VALUEFUNC(_wrap___glewPointParameterfv_set), 1);
  rb_define_singleton_method(mGlew, "__glewPointParameteri", VALUEFUNC(_wrap___glewPointParameteri_get), 0);
  rb_define_singleton_method(mGlew, "__glewPointParameteri=", VALUEFUNC(_wrap___glewPointParameteri_set), 1);
  rb_define_singleton_method(mGlew, "__glewPointParameteriv", VALUEFUNC(_wrap___glewPointParameteriv_get), 0);
  rb_define_singleton_method(mGlew, "__glewPointParameteriv=", VALUEFUNC(_wrap___glewPointParameteriv_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3b", VALUEFUNC(_wrap___glewSecondaryColor3b_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3b=", VALUEFUNC(_wrap___glewSecondaryColor3b_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3bv", VALUEFUNC(_wrap___glewSecondaryColor3bv_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3bv=", VALUEFUNC(_wrap___glewSecondaryColor3bv_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3d", VALUEFUNC(_wrap___glewSecondaryColor3d_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3d=", VALUEFUNC(_wrap___glewSecondaryColor3d_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3dv", VALUEFUNC(_wrap___glewSecondaryColor3dv_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3dv=", VALUEFUNC(_wrap___glewSecondaryColor3dv_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3f", VALUEFUNC(_wrap___glewSecondaryColor3f_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3f=", VALUEFUNC(_wrap___glewSecondaryColor3f_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3fv", VALUEFUNC(_wrap___glewSecondaryColor3fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3fv=", VALUEFUNC(_wrap___glewSecondaryColor3fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3i", VALUEFUNC(_wrap___glewSecondaryColor3i_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3i=", VALUEFUNC(_wrap___glewSecondaryColor3i_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3iv", VALUEFUNC(_wrap___glewSecondaryColor3iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3iv=", VALUEFUNC(_wrap___glewSecondaryColor3iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3s", VALUEFUNC(_wrap___glewSecondaryColor3s_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3s=", VALUEFUNC(_wrap___glewSecondaryColor3s_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3sv", VALUEFUNC(_wrap___glewSecondaryColor3sv_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3sv=", VALUEFUNC(_wrap___glewSecondaryColor3sv_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3ub", VALUEFUNC(_wrap___glewSecondaryColor3ub_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3ub=", VALUEFUNC(_wrap___glewSecondaryColor3ub_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3ubv", VALUEFUNC(_wrap___glewSecondaryColor3ubv_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3ubv=", VALUEFUNC(_wrap___glewSecondaryColor3ubv_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3ui", VALUEFUNC(_wrap___glewSecondaryColor3ui_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3ui=", VALUEFUNC(_wrap___glewSecondaryColor3ui_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3uiv", VALUEFUNC(_wrap___glewSecondaryColor3uiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3uiv=", VALUEFUNC(_wrap___glewSecondaryColor3uiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3us", VALUEFUNC(_wrap___glewSecondaryColor3us_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3us=", VALUEFUNC(_wrap___glewSecondaryColor3us_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3usv", VALUEFUNC(_wrap___glewSecondaryColor3usv_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3usv=", VALUEFUNC(_wrap___glewSecondaryColor3usv_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColorPointer", VALUEFUNC(_wrap___glewSecondaryColorPointer_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColorPointer=", VALUEFUNC(_wrap___glewSecondaryColorPointer_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2d", VALUEFUNC(_wrap___glewWindowPos2d_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2d=", VALUEFUNC(_wrap___glewWindowPos2d_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2dv", VALUEFUNC(_wrap___glewWindowPos2dv_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2dv=", VALUEFUNC(_wrap___glewWindowPos2dv_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2f", VALUEFUNC(_wrap___glewWindowPos2f_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2f=", VALUEFUNC(_wrap___glewWindowPos2f_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2fv", VALUEFUNC(_wrap___glewWindowPos2fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2fv=", VALUEFUNC(_wrap___glewWindowPos2fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2i", VALUEFUNC(_wrap___glewWindowPos2i_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2i=", VALUEFUNC(_wrap___glewWindowPos2i_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2iv", VALUEFUNC(_wrap___glewWindowPos2iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2iv=", VALUEFUNC(_wrap___glewWindowPos2iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2s", VALUEFUNC(_wrap___glewWindowPos2s_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2s=", VALUEFUNC(_wrap___glewWindowPos2s_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2sv", VALUEFUNC(_wrap___glewWindowPos2sv_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2sv=", VALUEFUNC(_wrap___glewWindowPos2sv_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3d", VALUEFUNC(_wrap___glewWindowPos3d_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3d=", VALUEFUNC(_wrap___glewWindowPos3d_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3dv", VALUEFUNC(_wrap___glewWindowPos3dv_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3dv=", VALUEFUNC(_wrap___glewWindowPos3dv_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3f", VALUEFUNC(_wrap___glewWindowPos3f_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3f=", VALUEFUNC(_wrap___glewWindowPos3f_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3fv", VALUEFUNC(_wrap___glewWindowPos3fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3fv=", VALUEFUNC(_wrap___glewWindowPos3fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3i", VALUEFUNC(_wrap___glewWindowPos3i_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3i=", VALUEFUNC(_wrap___glewWindowPos3i_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3iv", VALUEFUNC(_wrap___glewWindowPos3iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3iv=", VALUEFUNC(_wrap___glewWindowPos3iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3s", VALUEFUNC(_wrap___glewWindowPos3s_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3s=", VALUEFUNC(_wrap___glewWindowPos3s_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3sv", VALUEFUNC(_wrap___glewWindowPos3sv_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3sv=", VALUEFUNC(_wrap___glewWindowPos3sv_set), 1);
  rb_define_singleton_method(mGlew, "__glewBeginQuery", VALUEFUNC(_wrap___glewBeginQuery_get), 0);
  rb_define_singleton_method(mGlew, "__glewBeginQuery=", VALUEFUNC(_wrap___glewBeginQuery_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindBuffer", VALUEFUNC(_wrap___glewBindBuffer_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindBuffer=", VALUEFUNC(_wrap___glewBindBuffer_set), 1);
  rb_define_singleton_method(mGlew, "__glewBufferData", VALUEFUNC(_wrap___glewBufferData_get), 0);
  rb_define_singleton_method(mGlew, "__glewBufferData=", VALUEFUNC(_wrap___glewBufferData_set), 1);
  rb_define_singleton_method(mGlew, "__glewBufferSubData", VALUEFUNC(_wrap___glewBufferSubData_get), 0);
  rb_define_singleton_method(mGlew, "__glewBufferSubData=", VALUEFUNC(_wrap___glewBufferSubData_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteBuffers", VALUEFUNC(_wrap___glewDeleteBuffers_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteBuffers=", VALUEFUNC(_wrap___glewDeleteBuffers_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteQueries", VALUEFUNC(_wrap___glewDeleteQueries_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteQueries=", VALUEFUNC(_wrap___glewDeleteQueries_set), 1);
  rb_define_singleton_method(mGlew, "__glewEndQuery", VALUEFUNC(_wrap___glewEndQuery_get), 0);
  rb_define_singleton_method(mGlew, "__glewEndQuery=", VALUEFUNC(_wrap___glewEndQuery_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenBuffers", VALUEFUNC(_wrap___glewGenBuffers_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenBuffers=", VALUEFUNC(_wrap___glewGenBuffers_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenQueries", VALUEFUNC(_wrap___glewGenQueries_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenQueries=", VALUEFUNC(_wrap___glewGenQueries_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetBufferParameteriv", VALUEFUNC(_wrap___glewGetBufferParameteriv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetBufferParameteriv=", VALUEFUNC(_wrap___glewGetBufferParameteriv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetBufferPointerv", VALUEFUNC(_wrap___glewGetBufferPointerv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetBufferPointerv=", VALUEFUNC(_wrap___glewGetBufferPointerv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetBufferSubData", VALUEFUNC(_wrap___glewGetBufferSubData_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetBufferSubData=", VALUEFUNC(_wrap___glewGetBufferSubData_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetQueryObjectiv", VALUEFUNC(_wrap___glewGetQueryObjectiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetQueryObjectiv=", VALUEFUNC(_wrap___glewGetQueryObjectiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetQueryObjectuiv", VALUEFUNC(_wrap___glewGetQueryObjectuiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetQueryObjectuiv=", VALUEFUNC(_wrap___glewGetQueryObjectuiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetQueryiv", VALUEFUNC(_wrap___glewGetQueryiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetQueryiv=", VALUEFUNC(_wrap___glewGetQueryiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsBuffer", VALUEFUNC(_wrap___glewIsBuffer_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsBuffer=", VALUEFUNC(_wrap___glewIsBuffer_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsQuery", VALUEFUNC(_wrap___glewIsQuery_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsQuery=", VALUEFUNC(_wrap___glewIsQuery_set), 1);
  rb_define_singleton_method(mGlew, "__glewMapBuffer", VALUEFUNC(_wrap___glewMapBuffer_get), 0);
  rb_define_singleton_method(mGlew, "__glewMapBuffer=", VALUEFUNC(_wrap___glewMapBuffer_set), 1);
  rb_define_singleton_method(mGlew, "__glewUnmapBuffer", VALUEFUNC(_wrap___glewUnmapBuffer_get), 0);
  rb_define_singleton_method(mGlew, "__glewUnmapBuffer=", VALUEFUNC(_wrap___glewUnmapBuffer_set), 1);
  rb_define_singleton_method(mGlew, "__glewAttachShader", VALUEFUNC(_wrap___glewAttachShader_get), 0);
  rb_define_singleton_method(mGlew, "__glewAttachShader=", VALUEFUNC(_wrap___glewAttachShader_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindAttribLocation", VALUEFUNC(_wrap___glewBindAttribLocation_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindAttribLocation=", VALUEFUNC(_wrap___glewBindAttribLocation_set), 1);
  rb_define_singleton_method(mGlew, "__glewBlendEquationSeparate", VALUEFUNC(_wrap___glewBlendEquationSeparate_get), 0);
  rb_define_singleton_method(mGlew, "__glewBlendEquationSeparate=", VALUEFUNC(_wrap___glewBlendEquationSeparate_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompileShader", VALUEFUNC(_wrap___glewCompileShader_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompileShader=", VALUEFUNC(_wrap___glewCompileShader_set), 1);
  rb_define_singleton_method(mGlew, "__glewCreateProgram", VALUEFUNC(_wrap___glewCreateProgram_get), 0);
  rb_define_singleton_method(mGlew, "__glewCreateProgram=", VALUEFUNC(_wrap___glewCreateProgram_set), 1);
  rb_define_singleton_method(mGlew, "__glewCreateShader", VALUEFUNC(_wrap___glewCreateShader_get), 0);
  rb_define_singleton_method(mGlew, "__glewCreateShader=", VALUEFUNC(_wrap___glewCreateShader_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteProgram", VALUEFUNC(_wrap___glewDeleteProgram_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteProgram=", VALUEFUNC(_wrap___glewDeleteProgram_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteShader", VALUEFUNC(_wrap___glewDeleteShader_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteShader=", VALUEFUNC(_wrap___glewDeleteShader_set), 1);
  rb_define_singleton_method(mGlew, "__glewDetachShader", VALUEFUNC(_wrap___glewDetachShader_get), 0);
  rb_define_singleton_method(mGlew, "__glewDetachShader=", VALUEFUNC(_wrap___glewDetachShader_set), 1);
  rb_define_singleton_method(mGlew, "__glewDisableVertexAttribArray", VALUEFUNC(_wrap___glewDisableVertexAttribArray_get), 0);
  rb_define_singleton_method(mGlew, "__glewDisableVertexAttribArray=", VALUEFUNC(_wrap___glewDisableVertexAttribArray_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawBuffers", VALUEFUNC(_wrap___glewDrawBuffers_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawBuffers=", VALUEFUNC(_wrap___glewDrawBuffers_set), 1);
  rb_define_singleton_method(mGlew, "__glewEnableVertexAttribArray", VALUEFUNC(_wrap___glewEnableVertexAttribArray_get), 0);
  rb_define_singleton_method(mGlew, "__glewEnableVertexAttribArray=", VALUEFUNC(_wrap___glewEnableVertexAttribArray_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetActiveAttrib", VALUEFUNC(_wrap___glewGetActiveAttrib_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetActiveAttrib=", VALUEFUNC(_wrap___glewGetActiveAttrib_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetActiveUniform", VALUEFUNC(_wrap___glewGetActiveUniform_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetActiveUniform=", VALUEFUNC(_wrap___glewGetActiveUniform_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetAttachedShaders", VALUEFUNC(_wrap___glewGetAttachedShaders_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetAttachedShaders=", VALUEFUNC(_wrap___glewGetAttachedShaders_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetAttribLocation", VALUEFUNC(_wrap___glewGetAttribLocation_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetAttribLocation=", VALUEFUNC(_wrap___glewGetAttribLocation_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramInfoLog", VALUEFUNC(_wrap___glewGetProgramInfoLog_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramInfoLog=", VALUEFUNC(_wrap___glewGetProgramInfoLog_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramiv", VALUEFUNC(_wrap___glewGetProgramiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramiv=", VALUEFUNC(_wrap___glewGetProgramiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetShaderInfoLog", VALUEFUNC(_wrap___glewGetShaderInfoLog_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetShaderInfoLog=", VALUEFUNC(_wrap___glewGetShaderInfoLog_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetShaderSource", VALUEFUNC(_wrap___glewGetShaderSource_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetShaderSource=", VALUEFUNC(_wrap___glewGetShaderSource_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetShaderiv", VALUEFUNC(_wrap___glewGetShaderiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetShaderiv=", VALUEFUNC(_wrap___glewGetShaderiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetUniformLocation", VALUEFUNC(_wrap___glewGetUniformLocation_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetUniformLocation=", VALUEFUNC(_wrap___glewGetUniformLocation_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetUniformfv", VALUEFUNC(_wrap___glewGetUniformfv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetUniformfv=", VALUEFUNC(_wrap___glewGetUniformfv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetUniformiv", VALUEFUNC(_wrap___glewGetUniformiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetUniformiv=", VALUEFUNC(_wrap___glewGetUniformiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribPointerv", VALUEFUNC(_wrap___glewGetVertexAttribPointerv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribPointerv=", VALUEFUNC(_wrap___glewGetVertexAttribPointerv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribdv", VALUEFUNC(_wrap___glewGetVertexAttribdv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribdv=", VALUEFUNC(_wrap___glewGetVertexAttribdv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribfv", VALUEFUNC(_wrap___glewGetVertexAttribfv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribfv=", VALUEFUNC(_wrap___glewGetVertexAttribfv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribiv", VALUEFUNC(_wrap___glewGetVertexAttribiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribiv=", VALUEFUNC(_wrap___glewGetVertexAttribiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsProgram", VALUEFUNC(_wrap___glewIsProgram_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsProgram=", VALUEFUNC(_wrap___glewIsProgram_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsShader", VALUEFUNC(_wrap___glewIsShader_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsShader=", VALUEFUNC(_wrap___glewIsShader_set), 1);
  rb_define_singleton_method(mGlew, "__glewLinkProgram", VALUEFUNC(_wrap___glewLinkProgram_get), 0);
  rb_define_singleton_method(mGlew, "__glewLinkProgram=", VALUEFUNC(_wrap___glewLinkProgram_set), 1);
  rb_define_singleton_method(mGlew, "__glewShaderSource", VALUEFUNC(_wrap___glewShaderSource_get), 0);
  rb_define_singleton_method(mGlew, "__glewShaderSource=", VALUEFUNC(_wrap___glewShaderSource_set), 1);
  rb_define_singleton_method(mGlew, "__glewStencilFuncSeparate", VALUEFUNC(_wrap___glewStencilFuncSeparate_get), 0);
  rb_define_singleton_method(mGlew, "__glewStencilFuncSeparate=", VALUEFUNC(_wrap___glewStencilFuncSeparate_set), 1);
  rb_define_singleton_method(mGlew, "__glewStencilMaskSeparate", VALUEFUNC(_wrap___glewStencilMaskSeparate_get), 0);
  rb_define_singleton_method(mGlew, "__glewStencilMaskSeparate=", VALUEFUNC(_wrap___glewStencilMaskSeparate_set), 1);
  rb_define_singleton_method(mGlew, "__glewStencilOpSeparate", VALUEFUNC(_wrap___glewStencilOpSeparate_get), 0);
  rb_define_singleton_method(mGlew, "__glewStencilOpSeparate=", VALUEFUNC(_wrap___glewStencilOpSeparate_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform1f", VALUEFUNC(_wrap___glewUniform1f_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform1f=", VALUEFUNC(_wrap___glewUniform1f_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform1fv", VALUEFUNC(_wrap___glewUniform1fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform1fv=", VALUEFUNC(_wrap___glewUniform1fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform1i", VALUEFUNC(_wrap___glewUniform1i_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform1i=", VALUEFUNC(_wrap___glewUniform1i_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform1iv", VALUEFUNC(_wrap___glewUniform1iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform1iv=", VALUEFUNC(_wrap___glewUniform1iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform2f", VALUEFUNC(_wrap___glewUniform2f_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform2f=", VALUEFUNC(_wrap___glewUniform2f_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform2fv", VALUEFUNC(_wrap___glewUniform2fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform2fv=", VALUEFUNC(_wrap___glewUniform2fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform2i", VALUEFUNC(_wrap___glewUniform2i_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform2i=", VALUEFUNC(_wrap___glewUniform2i_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform2iv", VALUEFUNC(_wrap___glewUniform2iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform2iv=", VALUEFUNC(_wrap___glewUniform2iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform3f", VALUEFUNC(_wrap___glewUniform3f_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform3f=", VALUEFUNC(_wrap___glewUniform3f_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform3fv", VALUEFUNC(_wrap___glewUniform3fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform3fv=", VALUEFUNC(_wrap___glewUniform3fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform3i", VALUEFUNC(_wrap___glewUniform3i_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform3i=", VALUEFUNC(_wrap___glewUniform3i_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform3iv", VALUEFUNC(_wrap___glewUniform3iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform3iv=", VALUEFUNC(_wrap___glewUniform3iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform4f", VALUEFUNC(_wrap___glewUniform4f_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform4f=", VALUEFUNC(_wrap___glewUniform4f_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform4fv", VALUEFUNC(_wrap___glewUniform4fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform4fv=", VALUEFUNC(_wrap___glewUniform4fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform4i", VALUEFUNC(_wrap___glewUniform4i_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform4i=", VALUEFUNC(_wrap___glewUniform4i_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform4iv", VALUEFUNC(_wrap___glewUniform4iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform4iv=", VALUEFUNC(_wrap___glewUniform4iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix2fv", VALUEFUNC(_wrap___glewUniformMatrix2fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix2fv=", VALUEFUNC(_wrap___glewUniformMatrix2fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix3fv", VALUEFUNC(_wrap___glewUniformMatrix3fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix3fv=", VALUEFUNC(_wrap___glewUniformMatrix3fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix4fv", VALUEFUNC(_wrap___glewUniformMatrix4fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix4fv=", VALUEFUNC(_wrap___glewUniformMatrix4fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUseProgram", VALUEFUNC(_wrap___glewUseProgram_get), 0);
  rb_define_singleton_method(mGlew, "__glewUseProgram=", VALUEFUNC(_wrap___glewUseProgram_set), 1);
  rb_define_singleton_method(mGlew, "__glewValidateProgram", VALUEFUNC(_wrap___glewValidateProgram_get), 0);
  rb_define_singleton_method(mGlew, "__glewValidateProgram=", VALUEFUNC(_wrap___glewValidateProgram_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1d", VALUEFUNC(_wrap___glewVertexAttrib1d_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1d=", VALUEFUNC(_wrap___glewVertexAttrib1d_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1dv", VALUEFUNC(_wrap___glewVertexAttrib1dv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1dv=", VALUEFUNC(_wrap___glewVertexAttrib1dv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1f", VALUEFUNC(_wrap___glewVertexAttrib1f_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1f=", VALUEFUNC(_wrap___glewVertexAttrib1f_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1fv", VALUEFUNC(_wrap___glewVertexAttrib1fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1fv=", VALUEFUNC(_wrap___glewVertexAttrib1fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1s", VALUEFUNC(_wrap___glewVertexAttrib1s_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1s=", VALUEFUNC(_wrap___glewVertexAttrib1s_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1sv", VALUEFUNC(_wrap___glewVertexAttrib1sv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1sv=", VALUEFUNC(_wrap___glewVertexAttrib1sv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2d", VALUEFUNC(_wrap___glewVertexAttrib2d_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2d=", VALUEFUNC(_wrap___glewVertexAttrib2d_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2dv", VALUEFUNC(_wrap___glewVertexAttrib2dv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2dv=", VALUEFUNC(_wrap___glewVertexAttrib2dv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2f", VALUEFUNC(_wrap___glewVertexAttrib2f_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2f=", VALUEFUNC(_wrap___glewVertexAttrib2f_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2fv", VALUEFUNC(_wrap___glewVertexAttrib2fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2fv=", VALUEFUNC(_wrap___glewVertexAttrib2fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2s", VALUEFUNC(_wrap___glewVertexAttrib2s_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2s=", VALUEFUNC(_wrap___glewVertexAttrib2s_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2sv", VALUEFUNC(_wrap___glewVertexAttrib2sv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2sv=", VALUEFUNC(_wrap___glewVertexAttrib2sv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3d", VALUEFUNC(_wrap___glewVertexAttrib3d_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3d=", VALUEFUNC(_wrap___glewVertexAttrib3d_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3dv", VALUEFUNC(_wrap___glewVertexAttrib3dv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3dv=", VALUEFUNC(_wrap___glewVertexAttrib3dv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3f", VALUEFUNC(_wrap___glewVertexAttrib3f_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3f=", VALUEFUNC(_wrap___glewVertexAttrib3f_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3fv", VALUEFUNC(_wrap___glewVertexAttrib3fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3fv=", VALUEFUNC(_wrap___glewVertexAttrib3fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3s", VALUEFUNC(_wrap___glewVertexAttrib3s_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3s=", VALUEFUNC(_wrap___glewVertexAttrib3s_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3sv", VALUEFUNC(_wrap___glewVertexAttrib3sv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3sv=", VALUEFUNC(_wrap___glewVertexAttrib3sv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Nbv", VALUEFUNC(_wrap___glewVertexAttrib4Nbv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Nbv=", VALUEFUNC(_wrap___glewVertexAttrib4Nbv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Niv", VALUEFUNC(_wrap___glewVertexAttrib4Niv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Niv=", VALUEFUNC(_wrap___glewVertexAttrib4Niv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Nsv", VALUEFUNC(_wrap___glewVertexAttrib4Nsv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Nsv=", VALUEFUNC(_wrap___glewVertexAttrib4Nsv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Nub", VALUEFUNC(_wrap___glewVertexAttrib4Nub_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Nub=", VALUEFUNC(_wrap___glewVertexAttrib4Nub_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Nubv", VALUEFUNC(_wrap___glewVertexAttrib4Nubv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Nubv=", VALUEFUNC(_wrap___glewVertexAttrib4Nubv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Nuiv", VALUEFUNC(_wrap___glewVertexAttrib4Nuiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Nuiv=", VALUEFUNC(_wrap___glewVertexAttrib4Nuiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Nusv", VALUEFUNC(_wrap___glewVertexAttrib4Nusv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4Nusv=", VALUEFUNC(_wrap___glewVertexAttrib4Nusv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4bv", VALUEFUNC(_wrap___glewVertexAttrib4bv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4bv=", VALUEFUNC(_wrap___glewVertexAttrib4bv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4d", VALUEFUNC(_wrap___glewVertexAttrib4d_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4d=", VALUEFUNC(_wrap___glewVertexAttrib4d_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4dv", VALUEFUNC(_wrap___glewVertexAttrib4dv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4dv=", VALUEFUNC(_wrap___glewVertexAttrib4dv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4f", VALUEFUNC(_wrap___glewVertexAttrib4f_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4f=", VALUEFUNC(_wrap___glewVertexAttrib4f_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4fv", VALUEFUNC(_wrap___glewVertexAttrib4fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4fv=", VALUEFUNC(_wrap___glewVertexAttrib4fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4iv", VALUEFUNC(_wrap___glewVertexAttrib4iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4iv=", VALUEFUNC(_wrap___glewVertexAttrib4iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4s", VALUEFUNC(_wrap___glewVertexAttrib4s_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4s=", VALUEFUNC(_wrap___glewVertexAttrib4s_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4sv", VALUEFUNC(_wrap___glewVertexAttrib4sv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4sv=", VALUEFUNC(_wrap___glewVertexAttrib4sv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4ubv", VALUEFUNC(_wrap___glewVertexAttrib4ubv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4ubv=", VALUEFUNC(_wrap___glewVertexAttrib4ubv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4uiv", VALUEFUNC(_wrap___glewVertexAttrib4uiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4uiv=", VALUEFUNC(_wrap___glewVertexAttrib4uiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4usv", VALUEFUNC(_wrap___glewVertexAttrib4usv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4usv=", VALUEFUNC(_wrap___glewVertexAttrib4usv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribPointer", VALUEFUNC(_wrap___glewVertexAttribPointer_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribPointer=", VALUEFUNC(_wrap___glewVertexAttribPointer_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix2x3fv", VALUEFUNC(_wrap___glewUniformMatrix2x3fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix2x3fv=", VALUEFUNC(_wrap___glewUniformMatrix2x3fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix2x4fv", VALUEFUNC(_wrap___glewUniformMatrix2x4fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix2x4fv=", VALUEFUNC(_wrap___glewUniformMatrix2x4fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix3x2fv", VALUEFUNC(_wrap___glewUniformMatrix3x2fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix3x2fv=", VALUEFUNC(_wrap___glewUniformMatrix3x2fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix3x4fv", VALUEFUNC(_wrap___glewUniformMatrix3x4fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix3x4fv=", VALUEFUNC(_wrap___glewUniformMatrix3x4fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix4x2fv", VALUEFUNC(_wrap___glewUniformMatrix4x2fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix4x2fv=", VALUEFUNC(_wrap___glewUniformMatrix4x2fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix4x3fv", VALUEFUNC(_wrap___glewUniformMatrix4x3fv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix4x3fv=", VALUEFUNC(_wrap___glewUniformMatrix4x3fv_set), 1);
  rb_define_singleton_method(mGlew, "__glewBeginConditionalRender", VALUEFUNC(_wrap___glewBeginConditionalRender_get), 0);
  rb_define_singleton_method(mGlew, "__glewBeginConditionalRender=", VALUEFUNC(_wrap___glewBeginConditionalRender_set), 1);
  rb_define_singleton_method(mGlew, "__glewBeginTransformFeedback", VALUEFUNC(_wrap___glewBeginTransformFeedback_get), 0);
  rb_define_singleton_method(mGlew, "__glewBeginTransformFeedback=", VALUEFUNC(_wrap___glewBeginTransformFeedback_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindBufferBase", VALUEFUNC(_wrap___glewBindBufferBase_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindBufferBase=", VALUEFUNC(_wrap___glewBindBufferBase_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindBufferRange", VALUEFUNC(_wrap___glewBindBufferRange_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindBufferRange=", VALUEFUNC(_wrap___glewBindBufferRange_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindFragDataLocation", VALUEFUNC(_wrap___glewBindFragDataLocation_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindFragDataLocation=", VALUEFUNC(_wrap___glewBindFragDataLocation_set), 1);
  rb_define_singleton_method(mGlew, "__glewClampColor", VALUEFUNC(_wrap___glewClampColor_get), 0);
  rb_define_singleton_method(mGlew, "__glewClampColor=", VALUEFUNC(_wrap___glewClampColor_set), 1);
  rb_define_singleton_method(mGlew, "__glewClearBufferfi", VALUEFUNC(_wrap___glewClearBufferfi_get), 0);
  rb_define_singleton_method(mGlew, "__glewClearBufferfi=", VALUEFUNC(_wrap___glewClearBufferfi_set), 1);
  rb_define_singleton_method(mGlew, "__glewClearBufferfv", VALUEFUNC(_wrap___glewClearBufferfv_get), 0);
  rb_define_singleton_method(mGlew, "__glewClearBufferfv=", VALUEFUNC(_wrap___glewClearBufferfv_set), 1);
  rb_define_singleton_method(mGlew, "__glewClearBufferiv", VALUEFUNC(_wrap___glewClearBufferiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewClearBufferiv=", VALUEFUNC(_wrap___glewClearBufferiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewClearBufferuiv", VALUEFUNC(_wrap___glewClearBufferuiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewClearBufferuiv=", VALUEFUNC(_wrap___glewClearBufferuiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorMaski", VALUEFUNC(_wrap___glewColorMaski_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorMaski=", VALUEFUNC(_wrap___glewColorMaski_set), 1);
  rb_define_singleton_method(mGlew, "__glewDisablei", VALUEFUNC(_wrap___glewDisablei_get), 0);
  rb_define_singleton_method(mGlew, "__glewDisablei=", VALUEFUNC(_wrap___glewDisablei_set), 1);
  rb_define_singleton_method(mGlew, "__glewEnablei", VALUEFUNC(_wrap___glewEnablei_get), 0);
  rb_define_singleton_method(mGlew, "__glewEnablei=", VALUEFUNC(_wrap___glewEnablei_set), 1);
  rb_define_singleton_method(mGlew, "__glewEndConditionalRender", VALUEFUNC(_wrap___glewEndConditionalRender_get), 0);
  rb_define_singleton_method(mGlew, "__glewEndConditionalRender=", VALUEFUNC(_wrap___glewEndConditionalRender_set), 1);
  rb_define_singleton_method(mGlew, "__glewEndTransformFeedback", VALUEFUNC(_wrap___glewEndTransformFeedback_get), 0);
  rb_define_singleton_method(mGlew, "__glewEndTransformFeedback=", VALUEFUNC(_wrap___glewEndTransformFeedback_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetBooleani_v", VALUEFUNC(_wrap___glewGetBooleani_v_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetBooleani_v=", VALUEFUNC(_wrap___glewGetBooleani_v_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFragDataLocation", VALUEFUNC(_wrap___glewGetFragDataLocation_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFragDataLocation=", VALUEFUNC(_wrap___glewGetFragDataLocation_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetIntegeri_v", VALUEFUNC(_wrap___glewGetIntegeri_v_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetIntegeri_v=", VALUEFUNC(_wrap___glewGetIntegeri_v_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetStringi", VALUEFUNC(_wrap___glewGetStringi_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetStringi=", VALUEFUNC(_wrap___glewGetStringi_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTexParameterIiv", VALUEFUNC(_wrap___glewGetTexParameterIiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTexParameterIiv=", VALUEFUNC(_wrap___glewGetTexParameterIiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTexParameterIuiv", VALUEFUNC(_wrap___glewGetTexParameterIuiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTexParameterIuiv=", VALUEFUNC(_wrap___glewGetTexParameterIuiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTransformFeedbackVarying", VALUEFUNC(_wrap___glewGetTransformFeedbackVarying_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTransformFeedbackVarying=", VALUEFUNC(_wrap___glewGetTransformFeedbackVarying_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetUniformuiv", VALUEFUNC(_wrap___glewGetUniformuiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetUniformuiv=", VALUEFUNC(_wrap___glewGetUniformuiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribIiv", VALUEFUNC(_wrap___glewGetVertexAttribIiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribIiv=", VALUEFUNC(_wrap___glewGetVertexAttribIiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribIuiv", VALUEFUNC(_wrap___glewGetVertexAttribIuiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribIuiv=", VALUEFUNC(_wrap___glewGetVertexAttribIuiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsEnabledi", VALUEFUNC(_wrap___glewIsEnabledi_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsEnabledi=", VALUEFUNC(_wrap___glewIsEnabledi_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexParameterIiv", VALUEFUNC(_wrap___glewTexParameterIiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexParameterIiv=", VALUEFUNC(_wrap___glewTexParameterIiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexParameterIuiv", VALUEFUNC(_wrap___glewTexParameterIuiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexParameterIuiv=", VALUEFUNC(_wrap___glewTexParameterIuiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewTransformFeedbackVaryings", VALUEFUNC(_wrap___glewTransformFeedbackVaryings_get), 0);
  rb_define_singleton_method(mGlew, "__glewTransformFeedbackVaryings=", VALUEFUNC(_wrap___glewTransformFeedbackVaryings_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform1ui", VALUEFUNC(_wrap___glewUniform1ui_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform1ui=", VALUEFUNC(_wrap___glewUniform1ui_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform1uiv", VALUEFUNC(_wrap___glewUniform1uiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform1uiv=", VALUEFUNC(_wrap___glewUniform1uiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform2ui", VALUEFUNC(_wrap___glewUniform2ui_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform2ui=", VALUEFUNC(_wrap___glewUniform2ui_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform2uiv", VALUEFUNC(_wrap___glewUniform2uiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform2uiv=", VALUEFUNC(_wrap___glewUniform2uiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform3ui", VALUEFUNC(_wrap___glewUniform3ui_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform3ui=", VALUEFUNC(_wrap___glewUniform3ui_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform3uiv", VALUEFUNC(_wrap___glewUniform3uiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform3uiv=", VALUEFUNC(_wrap___glewUniform3uiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform4ui", VALUEFUNC(_wrap___glewUniform4ui_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform4ui=", VALUEFUNC(_wrap___glewUniform4ui_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform4uiv", VALUEFUNC(_wrap___glewUniform4uiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform4uiv=", VALUEFUNC(_wrap___glewUniform4uiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1i", VALUEFUNC(_wrap___glewVertexAttribI1i_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1i=", VALUEFUNC(_wrap___glewVertexAttribI1i_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1iv", VALUEFUNC(_wrap___glewVertexAttribI1iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1iv=", VALUEFUNC(_wrap___glewVertexAttribI1iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1ui", VALUEFUNC(_wrap___glewVertexAttribI1ui_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1ui=", VALUEFUNC(_wrap___glewVertexAttribI1ui_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1uiv", VALUEFUNC(_wrap___glewVertexAttribI1uiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1uiv=", VALUEFUNC(_wrap___glewVertexAttribI1uiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2i", VALUEFUNC(_wrap___glewVertexAttribI2i_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2i=", VALUEFUNC(_wrap___glewVertexAttribI2i_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2iv", VALUEFUNC(_wrap___glewVertexAttribI2iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2iv=", VALUEFUNC(_wrap___glewVertexAttribI2iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2ui", VALUEFUNC(_wrap___glewVertexAttribI2ui_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2ui=", VALUEFUNC(_wrap___glewVertexAttribI2ui_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2uiv", VALUEFUNC(_wrap___glewVertexAttribI2uiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2uiv=", VALUEFUNC(_wrap___glewVertexAttribI2uiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3i", VALUEFUNC(_wrap___glewVertexAttribI3i_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3i=", VALUEFUNC(_wrap___glewVertexAttribI3i_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3iv", VALUEFUNC(_wrap___glewVertexAttribI3iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3iv=", VALUEFUNC(_wrap___glewVertexAttribI3iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3ui", VALUEFUNC(_wrap___glewVertexAttribI3ui_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3ui=", VALUEFUNC(_wrap___glewVertexAttribI3ui_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3uiv", VALUEFUNC(_wrap___glewVertexAttribI3uiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3uiv=", VALUEFUNC(_wrap___glewVertexAttribI3uiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4bv", VALUEFUNC(_wrap___glewVertexAttribI4bv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4bv=", VALUEFUNC(_wrap___glewVertexAttribI4bv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4i", VALUEFUNC(_wrap___glewVertexAttribI4i_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4i=", VALUEFUNC(_wrap___glewVertexAttribI4i_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4iv", VALUEFUNC(_wrap___glewVertexAttribI4iv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4iv=", VALUEFUNC(_wrap___glewVertexAttribI4iv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4sv", VALUEFUNC(_wrap___glewVertexAttribI4sv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4sv=", VALUEFUNC(_wrap___glewVertexAttribI4sv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4ubv", VALUEFUNC(_wrap___glewVertexAttribI4ubv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4ubv=", VALUEFUNC(_wrap___glewVertexAttribI4ubv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4ui", VALUEFUNC(_wrap___glewVertexAttribI4ui_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4ui=", VALUEFUNC(_wrap___glewVertexAttribI4ui_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4uiv", VALUEFUNC(_wrap___glewVertexAttribI4uiv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4uiv=", VALUEFUNC(_wrap___glewVertexAttribI4uiv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4usv", VALUEFUNC(_wrap___glewVertexAttribI4usv_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4usv=", VALUEFUNC(_wrap___glewVertexAttribI4usv_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribIPointer", VALUEFUNC(_wrap___glewVertexAttribIPointer_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribIPointer=", VALUEFUNC(_wrap___glewVertexAttribIPointer_set), 1);
  rb_define_singleton_method(mGlew, "__glewTbufferMask3DFX", VALUEFUNC(_wrap___glewTbufferMask3DFX_get), 0);
  rb_define_singleton_method(mGlew, "__glewTbufferMask3DFX=", VALUEFUNC(_wrap___glewTbufferMask3DFX_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawElementArrayAPPLE", VALUEFUNC(_wrap___glewDrawElementArrayAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawElementArrayAPPLE=", VALUEFUNC(_wrap___glewDrawElementArrayAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawRangeElementArrayAPPLE", VALUEFUNC(_wrap___glewDrawRangeElementArrayAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawRangeElementArrayAPPLE=", VALUEFUNC(_wrap___glewDrawRangeElementArrayAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewElementPointerAPPLE", VALUEFUNC(_wrap___glewElementPointerAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewElementPointerAPPLE=", VALUEFUNC(_wrap___glewElementPointerAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiDrawElementArrayAPPLE", VALUEFUNC(_wrap___glewMultiDrawElementArrayAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiDrawElementArrayAPPLE=", VALUEFUNC(_wrap___glewMultiDrawElementArrayAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiDrawRangeElementArrayAPPLE", VALUEFUNC(_wrap___glewMultiDrawRangeElementArrayAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiDrawRangeElementArrayAPPLE=", VALUEFUNC(_wrap___glewMultiDrawRangeElementArrayAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteFencesAPPLE", VALUEFUNC(_wrap___glewDeleteFencesAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteFencesAPPLE=", VALUEFUNC(_wrap___glewDeleteFencesAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewFinishFenceAPPLE", VALUEFUNC(_wrap___glewFinishFenceAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewFinishFenceAPPLE=", VALUEFUNC(_wrap___glewFinishFenceAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewFinishObjectAPPLE", VALUEFUNC(_wrap___glewFinishObjectAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewFinishObjectAPPLE=", VALUEFUNC(_wrap___glewFinishObjectAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenFencesAPPLE", VALUEFUNC(_wrap___glewGenFencesAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenFencesAPPLE=", VALUEFUNC(_wrap___glewGenFencesAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsFenceAPPLE", VALUEFUNC(_wrap___glewIsFenceAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsFenceAPPLE=", VALUEFUNC(_wrap___glewIsFenceAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewSetFenceAPPLE", VALUEFUNC(_wrap___glewSetFenceAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewSetFenceAPPLE=", VALUEFUNC(_wrap___glewSetFenceAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewTestFenceAPPLE", VALUEFUNC(_wrap___glewTestFenceAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewTestFenceAPPLE=", VALUEFUNC(_wrap___glewTestFenceAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewTestObjectAPPLE", VALUEFUNC(_wrap___glewTestObjectAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewTestObjectAPPLE=", VALUEFUNC(_wrap___glewTestObjectAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewBufferParameteriAPPLE", VALUEFUNC(_wrap___glewBufferParameteriAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewBufferParameteriAPPLE=", VALUEFUNC(_wrap___glewBufferParameteriAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewFlushMappedBufferRangeAPPLE", VALUEFUNC(_wrap___glewFlushMappedBufferRangeAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewFlushMappedBufferRangeAPPLE=", VALUEFUNC(_wrap___glewFlushMappedBufferRangeAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTexParameterPointervAPPLE", VALUEFUNC(_wrap___glewGetTexParameterPointervAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTexParameterPointervAPPLE=", VALUEFUNC(_wrap___glewGetTexParameterPointervAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureRangeAPPLE", VALUEFUNC(_wrap___glewTextureRangeAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureRangeAPPLE=", VALUEFUNC(_wrap___glewTextureRangeAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindVertexArrayAPPLE", VALUEFUNC(_wrap___glewBindVertexArrayAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindVertexArrayAPPLE=", VALUEFUNC(_wrap___glewBindVertexArrayAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteVertexArraysAPPLE", VALUEFUNC(_wrap___glewDeleteVertexArraysAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteVertexArraysAPPLE=", VALUEFUNC(_wrap___glewDeleteVertexArraysAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenVertexArraysAPPLE", VALUEFUNC(_wrap___glewGenVertexArraysAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenVertexArraysAPPLE=", VALUEFUNC(_wrap___glewGenVertexArraysAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsVertexArrayAPPLE", VALUEFUNC(_wrap___glewIsVertexArrayAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsVertexArrayAPPLE=", VALUEFUNC(_wrap___glewIsVertexArrayAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewFlushVertexArrayRangeAPPLE", VALUEFUNC(_wrap___glewFlushVertexArrayRangeAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewFlushVertexArrayRangeAPPLE=", VALUEFUNC(_wrap___glewFlushVertexArrayRangeAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexArrayParameteriAPPLE", VALUEFUNC(_wrap___glewVertexArrayParameteriAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexArrayParameteriAPPLE=", VALUEFUNC(_wrap___glewVertexArrayParameteriAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexArrayRangeAPPLE", VALUEFUNC(_wrap___glewVertexArrayRangeAPPLE_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexArrayRangeAPPLE=", VALUEFUNC(_wrap___glewVertexArrayRangeAPPLE_set), 1);
  rb_define_singleton_method(mGlew, "__glewClampColorARB", VALUEFUNC(_wrap___glewClampColorARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewClampColorARB=", VALUEFUNC(_wrap___glewClampColorARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawBuffersARB", VALUEFUNC(_wrap___glewDrawBuffersARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawBuffersARB=", VALUEFUNC(_wrap___glewDrawBuffersARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawArraysInstancedARB", VALUEFUNC(_wrap___glewDrawArraysInstancedARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawArraysInstancedARB=", VALUEFUNC(_wrap___glewDrawArraysInstancedARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawElementsInstancedARB", VALUEFUNC(_wrap___glewDrawElementsInstancedARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawElementsInstancedARB=", VALUEFUNC(_wrap___glewDrawElementsInstancedARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindFramebuffer", VALUEFUNC(_wrap___glewBindFramebuffer_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindFramebuffer=", VALUEFUNC(_wrap___glewBindFramebuffer_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindRenderbuffer", VALUEFUNC(_wrap___glewBindRenderbuffer_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindRenderbuffer=", VALUEFUNC(_wrap___glewBindRenderbuffer_set), 1);
  rb_define_singleton_method(mGlew, "__glewBlitFramebuffer", VALUEFUNC(_wrap___glewBlitFramebuffer_get), 0);
  rb_define_singleton_method(mGlew, "__glewBlitFramebuffer=", VALUEFUNC(_wrap___glewBlitFramebuffer_set), 1);
  rb_define_singleton_method(mGlew, "__glewCheckFramebufferStatus", VALUEFUNC(_wrap___glewCheckFramebufferStatus_get), 0);
  rb_define_singleton_method(mGlew, "__glewCheckFramebufferStatus=", VALUEFUNC(_wrap___glewCheckFramebufferStatus_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteFramebuffers", VALUEFUNC(_wrap___glewDeleteFramebuffers_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteFramebuffers=", VALUEFUNC(_wrap___glewDeleteFramebuffers_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteRenderbuffers", VALUEFUNC(_wrap___glewDeleteRenderbuffers_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteRenderbuffers=", VALUEFUNC(_wrap___glewDeleteRenderbuffers_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferRenderbuffer", VALUEFUNC(_wrap___glewFramebufferRenderbuffer_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferRenderbuffer=", VALUEFUNC(_wrap___glewFramebufferRenderbuffer_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexturLayer", VALUEFUNC(_wrap___glewFramebufferTexturLayer_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexturLayer=", VALUEFUNC(_wrap___glewFramebufferTexturLayer_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexture1D", VALUEFUNC(_wrap___glewFramebufferTexture1D_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexture1D=", VALUEFUNC(_wrap___glewFramebufferTexture1D_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexture2D", VALUEFUNC(_wrap___glewFramebufferTexture2D_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexture2D=", VALUEFUNC(_wrap___glewFramebufferTexture2D_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexture3D", VALUEFUNC(_wrap___glewFramebufferTexture3D_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexture3D=", VALUEFUNC(_wrap___glewFramebufferTexture3D_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenFramebuffers", VALUEFUNC(_wrap___glewGenFramebuffers_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenFramebuffers=", VALUEFUNC(_wrap___glewGenFramebuffers_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenRenderbuffers", VALUEFUNC(_wrap___glewGenRenderbuffers_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenRenderbuffers=", VALUEFUNC(_wrap___glewGenRenderbuffers_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenerateMipmap", VALUEFUNC(_wrap___glewGenerateMipmap_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenerateMipmap=", VALUEFUNC(_wrap___glewGenerateMipmap_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFramebufferAttachmentParameteriv", VALUEFUNC(_wrap___glewGetFramebufferAttachmentParameteriv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFramebufferAttachmentParameteriv=", VALUEFUNC(_wrap___glewGetFramebufferAttachmentParameteriv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetRenderbufferParameteriv", VALUEFUNC(_wrap___glewGetRenderbufferParameteriv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetRenderbufferParameteriv=", VALUEFUNC(_wrap___glewGetRenderbufferParameteriv_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsFramebuffer", VALUEFUNC(_wrap___glewIsFramebuffer_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsFramebuffer=", VALUEFUNC(_wrap___glewIsFramebuffer_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsRenderbuffer", VALUEFUNC(_wrap___glewIsRenderbuffer_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsRenderbuffer=", VALUEFUNC(_wrap___glewIsRenderbuffer_set), 1);
  rb_define_singleton_method(mGlew, "__glewRenderbufferStorage", VALUEFUNC(_wrap___glewRenderbufferStorage_get), 0);
  rb_define_singleton_method(mGlew, "__glewRenderbufferStorage=", VALUEFUNC(_wrap___glewRenderbufferStorage_set), 1);
  rb_define_singleton_method(mGlew, "__glewRenderbufferStorageMultisample", VALUEFUNC(_wrap___glewRenderbufferStorageMultisample_get), 0);
  rb_define_singleton_method(mGlew, "__glewRenderbufferStorageMultisample=", VALUEFUNC(_wrap___glewRenderbufferStorageMultisample_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferTextureARB", VALUEFUNC(_wrap___glewFramebufferTextureARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferTextureARB=", VALUEFUNC(_wrap___glewFramebufferTextureARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferTextureFaceARB", VALUEFUNC(_wrap___glewFramebufferTextureFaceARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferTextureFaceARB=", VALUEFUNC(_wrap___glewFramebufferTextureFaceARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferTextureLayerARB", VALUEFUNC(_wrap___glewFramebufferTextureLayerARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferTextureLayerARB=", VALUEFUNC(_wrap___glewFramebufferTextureLayerARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramParameteriARB", VALUEFUNC(_wrap___glewProgramParameteriARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramParameteriARB=", VALUEFUNC(_wrap___glewProgramParameteriARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorSubTable", VALUEFUNC(_wrap___glewColorSubTable_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorSubTable=", VALUEFUNC(_wrap___glewColorSubTable_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorTable", VALUEFUNC(_wrap___glewColorTable_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorTable=", VALUEFUNC(_wrap___glewColorTable_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorTableParameterfv", VALUEFUNC(_wrap___glewColorTableParameterfv_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorTableParameterfv=", VALUEFUNC(_wrap___glewColorTableParameterfv_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorTableParameteriv", VALUEFUNC(_wrap___glewColorTableParameteriv_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorTableParameteriv=", VALUEFUNC(_wrap___glewColorTableParameteriv_set), 1);
  rb_define_singleton_method(mGlew, "__glewConvolutionFilter1D", VALUEFUNC(_wrap___glewConvolutionFilter1D_get), 0);
  rb_define_singleton_method(mGlew, "__glewConvolutionFilter1D=", VALUEFUNC(_wrap___glewConvolutionFilter1D_set), 1);
  rb_define_singleton_method(mGlew, "__glewConvolutionFilter2D", VALUEFUNC(_wrap___glewConvolutionFilter2D_get), 0);
  rb_define_singleton_method(mGlew, "__glewConvolutionFilter2D=", VALUEFUNC(_wrap___glewConvolutionFilter2D_set), 1);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameterf", VALUEFUNC(_wrap___glewConvolutionParameterf_get), 0);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameterf=", VALUEFUNC(_wrap___glewConvolutionParameterf_set), 1);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameterfv", VALUEFUNC(_wrap___glewConvolutionParameterfv_get), 0);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameterfv=", VALUEFUNC(_wrap___glewConvolutionParameterfv_set), 1);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameteri", VALUEFUNC(_wrap___glewConvolutionParameteri_get), 0);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameteri=", VALUEFUNC(_wrap___glewConvolutionParameteri_set), 1);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameteriv", VALUEFUNC(_wrap___glewConvolutionParameteriv_get), 0);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameteriv=", VALUEFUNC(_wrap___glewConvolutionParameteriv_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyColorSubTable", VALUEFUNC(_wrap___glewCopyColorSubTable_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyColorSubTable=", VALUEFUNC(_wrap___glewCopyColorSubTable_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyColorTable", VALUEFUNC(_wrap___glewCopyColorTable_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyColorTable=", VALUEFUNC(_wrap___glewCopyColorTable_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyConvolutionFilter1D", VALUEFUNC(_wrap___glewCopyConvolutionFilter1D_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyConvolutionFilter1D=", VALUEFUNC(_wrap___glewCopyConvolutionFilter1D_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyConvolutionFilter2D", VALUEFUNC(_wrap___glewCopyConvolutionFilter2D_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyConvolutionFilter2D=", VALUEFUNC(_wrap___glewCopyConvolutionFilter2D_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetColorTable", VALUEFUNC(_wrap___glewGetColorTable_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetColorTable=", VALUEFUNC(_wrap___glewGetColorTable_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetColorTableParameterfv", VALUEFUNC(_wrap___glewGetColorTableParameterfv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetColorTableParameterfv=", VALUEFUNC(_wrap___glewGetColorTableParameterfv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetColorTableParameteriv", VALUEFUNC(_wrap___glewGetColorTableParameteriv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetColorTableParameteriv=", VALUEFUNC(_wrap___glewGetColorTableParameteriv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetConvolutionFilter", VALUEFUNC(_wrap___glewGetConvolutionFilter_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetConvolutionFilter=", VALUEFUNC(_wrap___glewGetConvolutionFilter_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetConvolutionParameterfv", VALUEFUNC(_wrap___glewGetConvolutionParameterfv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetConvolutionParameterfv=", VALUEFUNC(_wrap___glewGetConvolutionParameterfv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetConvolutionParameteriv", VALUEFUNC(_wrap___glewGetConvolutionParameteriv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetConvolutionParameteriv=", VALUEFUNC(_wrap___glewGetConvolutionParameteriv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetHistogram", VALUEFUNC(_wrap___glewGetHistogram_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetHistogram=", VALUEFUNC(_wrap___glewGetHistogram_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetHistogramParameterfv", VALUEFUNC(_wrap___glewGetHistogramParameterfv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetHistogramParameterfv=", VALUEFUNC(_wrap___glewGetHistogramParameterfv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetHistogramParameteriv", VALUEFUNC(_wrap___glewGetHistogramParameteriv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetHistogramParameteriv=", VALUEFUNC(_wrap___glewGetHistogramParameteriv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMinmax", VALUEFUNC(_wrap___glewGetMinmax_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMinmax=", VALUEFUNC(_wrap___glewGetMinmax_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMinmaxParameterfv", VALUEFUNC(_wrap___glewGetMinmaxParameterfv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMinmaxParameterfv=", VALUEFUNC(_wrap___glewGetMinmaxParameterfv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMinmaxParameteriv", VALUEFUNC(_wrap___glewGetMinmaxParameteriv_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMinmaxParameteriv=", VALUEFUNC(_wrap___glewGetMinmaxParameteriv_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetSeparableFilter", VALUEFUNC(_wrap___glewGetSeparableFilter_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetSeparableFilter=", VALUEFUNC(_wrap___glewGetSeparableFilter_set), 1);
  rb_define_singleton_method(mGlew, "__glewHistogram", VALUEFUNC(_wrap___glewHistogram_get), 0);
  rb_define_singleton_method(mGlew, "__glewHistogram=", VALUEFUNC(_wrap___glewHistogram_set), 1);
  rb_define_singleton_method(mGlew, "__glewMinmax", VALUEFUNC(_wrap___glewMinmax_get), 0);
  rb_define_singleton_method(mGlew, "__glewMinmax=", VALUEFUNC(_wrap___glewMinmax_set), 1);
  rb_define_singleton_method(mGlew, "__glewResetHistogram", VALUEFUNC(_wrap___glewResetHistogram_get), 0);
  rb_define_singleton_method(mGlew, "__glewResetHistogram=", VALUEFUNC(_wrap___glewResetHistogram_set), 1);
  rb_define_singleton_method(mGlew, "__glewResetMinmax", VALUEFUNC(_wrap___glewResetMinmax_get), 0);
  rb_define_singleton_method(mGlew, "__glewResetMinmax=", VALUEFUNC(_wrap___glewResetMinmax_set), 1);
  rb_define_singleton_method(mGlew, "__glewSeparableFilter2D", VALUEFUNC(_wrap___glewSeparableFilter2D_get), 0);
  rb_define_singleton_method(mGlew, "__glewSeparableFilter2D=", VALUEFUNC(_wrap___glewSeparableFilter2D_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribDivisorARB", VALUEFUNC(_wrap___glewVertexAttribDivisorARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribDivisorARB=", VALUEFUNC(_wrap___glewVertexAttribDivisorARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewFlushMappedBufferRange", VALUEFUNC(_wrap___glewFlushMappedBufferRange_get), 0);
  rb_define_singleton_method(mGlew, "__glewFlushMappedBufferRange=", VALUEFUNC(_wrap___glewFlushMappedBufferRange_set), 1);
  rb_define_singleton_method(mGlew, "__glewMapBufferRange", VALUEFUNC(_wrap___glewMapBufferRange_get), 0);
  rb_define_singleton_method(mGlew, "__glewMapBufferRange=", VALUEFUNC(_wrap___glewMapBufferRange_set), 1);
  rb_define_singleton_method(mGlew, "__glewCurrentPaletteMatrixARB", VALUEFUNC(_wrap___glewCurrentPaletteMatrixARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewCurrentPaletteMatrixARB=", VALUEFUNC(_wrap___glewCurrentPaletteMatrixARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixIndexPointerARB", VALUEFUNC(_wrap___glewMatrixIndexPointerARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixIndexPointerARB=", VALUEFUNC(_wrap___glewMatrixIndexPointerARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixIndexubvARB", VALUEFUNC(_wrap___glewMatrixIndexubvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixIndexubvARB=", VALUEFUNC(_wrap___glewMatrixIndexubvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixIndexuivARB", VALUEFUNC(_wrap___glewMatrixIndexuivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixIndexuivARB=", VALUEFUNC(_wrap___glewMatrixIndexuivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixIndexusvARB", VALUEFUNC(_wrap___glewMatrixIndexusvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixIndexusvARB=", VALUEFUNC(_wrap___glewMatrixIndexusvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewSampleCoverageARB", VALUEFUNC(_wrap___glewSampleCoverageARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewSampleCoverageARB=", VALUEFUNC(_wrap___glewSampleCoverageARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewActiveTextureARB", VALUEFUNC(_wrap___glewActiveTextureARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewActiveTextureARB=", VALUEFUNC(_wrap___glewActiveTextureARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewClientActiveTextureARB", VALUEFUNC(_wrap___glewClientActiveTextureARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewClientActiveTextureARB=", VALUEFUNC(_wrap___glewClientActiveTextureARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1dARB", VALUEFUNC(_wrap___glewMultiTexCoord1dARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1dARB=", VALUEFUNC(_wrap___glewMultiTexCoord1dARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1dvARB", VALUEFUNC(_wrap___glewMultiTexCoord1dvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1dvARB=", VALUEFUNC(_wrap___glewMultiTexCoord1dvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1fARB", VALUEFUNC(_wrap___glewMultiTexCoord1fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1fARB=", VALUEFUNC(_wrap___glewMultiTexCoord1fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1fvARB", VALUEFUNC(_wrap___glewMultiTexCoord1fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1fvARB=", VALUEFUNC(_wrap___glewMultiTexCoord1fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1iARB", VALUEFUNC(_wrap___glewMultiTexCoord1iARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1iARB=", VALUEFUNC(_wrap___glewMultiTexCoord1iARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1ivARB", VALUEFUNC(_wrap___glewMultiTexCoord1ivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1ivARB=", VALUEFUNC(_wrap___glewMultiTexCoord1ivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1sARB", VALUEFUNC(_wrap___glewMultiTexCoord1sARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1sARB=", VALUEFUNC(_wrap___glewMultiTexCoord1sARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1svARB", VALUEFUNC(_wrap___glewMultiTexCoord1svARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1svARB=", VALUEFUNC(_wrap___glewMultiTexCoord1svARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2dARB", VALUEFUNC(_wrap___glewMultiTexCoord2dARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2dARB=", VALUEFUNC(_wrap___glewMultiTexCoord2dARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2dvARB", VALUEFUNC(_wrap___glewMultiTexCoord2dvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2dvARB=", VALUEFUNC(_wrap___glewMultiTexCoord2dvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2fARB", VALUEFUNC(_wrap___glewMultiTexCoord2fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2fARB=", VALUEFUNC(_wrap___glewMultiTexCoord2fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2fvARB", VALUEFUNC(_wrap___glewMultiTexCoord2fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2fvARB=", VALUEFUNC(_wrap___glewMultiTexCoord2fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2iARB", VALUEFUNC(_wrap___glewMultiTexCoord2iARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2iARB=", VALUEFUNC(_wrap___glewMultiTexCoord2iARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2ivARB", VALUEFUNC(_wrap___glewMultiTexCoord2ivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2ivARB=", VALUEFUNC(_wrap___glewMultiTexCoord2ivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2sARB", VALUEFUNC(_wrap___glewMultiTexCoord2sARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2sARB=", VALUEFUNC(_wrap___glewMultiTexCoord2sARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2svARB", VALUEFUNC(_wrap___glewMultiTexCoord2svARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2svARB=", VALUEFUNC(_wrap___glewMultiTexCoord2svARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3dARB", VALUEFUNC(_wrap___glewMultiTexCoord3dARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3dARB=", VALUEFUNC(_wrap___glewMultiTexCoord3dARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3dvARB", VALUEFUNC(_wrap___glewMultiTexCoord3dvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3dvARB=", VALUEFUNC(_wrap___glewMultiTexCoord3dvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3fARB", VALUEFUNC(_wrap___glewMultiTexCoord3fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3fARB=", VALUEFUNC(_wrap___glewMultiTexCoord3fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3fvARB", VALUEFUNC(_wrap___glewMultiTexCoord3fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3fvARB=", VALUEFUNC(_wrap___glewMultiTexCoord3fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3iARB", VALUEFUNC(_wrap___glewMultiTexCoord3iARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3iARB=", VALUEFUNC(_wrap___glewMultiTexCoord3iARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3ivARB", VALUEFUNC(_wrap___glewMultiTexCoord3ivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3ivARB=", VALUEFUNC(_wrap___glewMultiTexCoord3ivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3sARB", VALUEFUNC(_wrap___glewMultiTexCoord3sARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3sARB=", VALUEFUNC(_wrap___glewMultiTexCoord3sARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3svARB", VALUEFUNC(_wrap___glewMultiTexCoord3svARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3svARB=", VALUEFUNC(_wrap___glewMultiTexCoord3svARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4dARB", VALUEFUNC(_wrap___glewMultiTexCoord4dARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4dARB=", VALUEFUNC(_wrap___glewMultiTexCoord4dARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4dvARB", VALUEFUNC(_wrap___glewMultiTexCoord4dvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4dvARB=", VALUEFUNC(_wrap___glewMultiTexCoord4dvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4fARB", VALUEFUNC(_wrap___glewMultiTexCoord4fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4fARB=", VALUEFUNC(_wrap___glewMultiTexCoord4fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4fvARB", VALUEFUNC(_wrap___glewMultiTexCoord4fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4fvARB=", VALUEFUNC(_wrap___glewMultiTexCoord4fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4iARB", VALUEFUNC(_wrap___glewMultiTexCoord4iARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4iARB=", VALUEFUNC(_wrap___glewMultiTexCoord4iARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4ivARB", VALUEFUNC(_wrap___glewMultiTexCoord4ivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4ivARB=", VALUEFUNC(_wrap___glewMultiTexCoord4ivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4sARB", VALUEFUNC(_wrap___glewMultiTexCoord4sARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4sARB=", VALUEFUNC(_wrap___glewMultiTexCoord4sARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4svARB", VALUEFUNC(_wrap___glewMultiTexCoord4svARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4svARB=", VALUEFUNC(_wrap___glewMultiTexCoord4svARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewBeginQueryARB", VALUEFUNC(_wrap___glewBeginQueryARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewBeginQueryARB=", VALUEFUNC(_wrap___glewBeginQueryARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteQueriesARB", VALUEFUNC(_wrap___glewDeleteQueriesARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteQueriesARB=", VALUEFUNC(_wrap___glewDeleteQueriesARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewEndQueryARB", VALUEFUNC(_wrap___glewEndQueryARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewEndQueryARB=", VALUEFUNC(_wrap___glewEndQueryARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenQueriesARB", VALUEFUNC(_wrap___glewGenQueriesARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenQueriesARB=", VALUEFUNC(_wrap___glewGenQueriesARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetQueryObjectivARB", VALUEFUNC(_wrap___glewGetQueryObjectivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetQueryObjectivARB=", VALUEFUNC(_wrap___glewGetQueryObjectivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetQueryObjectuivARB", VALUEFUNC(_wrap___glewGetQueryObjectuivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetQueryObjectuivARB=", VALUEFUNC(_wrap___glewGetQueryObjectuivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetQueryivARB", VALUEFUNC(_wrap___glewGetQueryivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetQueryivARB=", VALUEFUNC(_wrap___glewGetQueryivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsQueryARB", VALUEFUNC(_wrap___glewIsQueryARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsQueryARB=", VALUEFUNC(_wrap___glewIsQueryARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewPointParameterfARB", VALUEFUNC(_wrap___glewPointParameterfARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewPointParameterfARB=", VALUEFUNC(_wrap___glewPointParameterfARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewPointParameterfvARB", VALUEFUNC(_wrap___glewPointParameterfvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewPointParameterfvARB=", VALUEFUNC(_wrap___glewPointParameterfvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewAttachObjectARB", VALUEFUNC(_wrap___glewAttachObjectARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewAttachObjectARB=", VALUEFUNC(_wrap___glewAttachObjectARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompileShaderARB", VALUEFUNC(_wrap___glewCompileShaderARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompileShaderARB=", VALUEFUNC(_wrap___glewCompileShaderARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewCreateProgramObjectARB", VALUEFUNC(_wrap___glewCreateProgramObjectARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewCreateProgramObjectARB=", VALUEFUNC(_wrap___glewCreateProgramObjectARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewCreateShaderObjectARB", VALUEFUNC(_wrap___glewCreateShaderObjectARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewCreateShaderObjectARB=", VALUEFUNC(_wrap___glewCreateShaderObjectARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteObjectARB", VALUEFUNC(_wrap___glewDeleteObjectARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteObjectARB=", VALUEFUNC(_wrap___glewDeleteObjectARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewDetachObjectARB", VALUEFUNC(_wrap___glewDetachObjectARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewDetachObjectARB=", VALUEFUNC(_wrap___glewDetachObjectARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetActiveUniformARB", VALUEFUNC(_wrap___glewGetActiveUniformARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetActiveUniformARB=", VALUEFUNC(_wrap___glewGetActiveUniformARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetAttachedObjectsARB", VALUEFUNC(_wrap___glewGetAttachedObjectsARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetAttachedObjectsARB=", VALUEFUNC(_wrap___glewGetAttachedObjectsARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetHandleARB", VALUEFUNC(_wrap___glewGetHandleARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetHandleARB=", VALUEFUNC(_wrap___glewGetHandleARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetInfoLogARB", VALUEFUNC(_wrap___glewGetInfoLogARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetInfoLogARB=", VALUEFUNC(_wrap___glewGetInfoLogARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetObjectParameterfvARB", VALUEFUNC(_wrap___glewGetObjectParameterfvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetObjectParameterfvARB=", VALUEFUNC(_wrap___glewGetObjectParameterfvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetObjectParameterivARB", VALUEFUNC(_wrap___glewGetObjectParameterivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetObjectParameterivARB=", VALUEFUNC(_wrap___glewGetObjectParameterivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetShaderSourceARB", VALUEFUNC(_wrap___glewGetShaderSourceARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetShaderSourceARB=", VALUEFUNC(_wrap___glewGetShaderSourceARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetUniformLocationARB", VALUEFUNC(_wrap___glewGetUniformLocationARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetUniformLocationARB=", VALUEFUNC(_wrap___glewGetUniformLocationARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetUniformfvARB", VALUEFUNC(_wrap___glewGetUniformfvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetUniformfvARB=", VALUEFUNC(_wrap___glewGetUniformfvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetUniformivARB", VALUEFUNC(_wrap___glewGetUniformivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetUniformivARB=", VALUEFUNC(_wrap___glewGetUniformivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewLinkProgramARB", VALUEFUNC(_wrap___glewLinkProgramARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewLinkProgramARB=", VALUEFUNC(_wrap___glewLinkProgramARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewShaderSourceARB", VALUEFUNC(_wrap___glewShaderSourceARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewShaderSourceARB=", VALUEFUNC(_wrap___glewShaderSourceARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform1fARB", VALUEFUNC(_wrap___glewUniform1fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform1fARB=", VALUEFUNC(_wrap___glewUniform1fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform1fvARB", VALUEFUNC(_wrap___glewUniform1fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform1fvARB=", VALUEFUNC(_wrap___glewUniform1fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform1iARB", VALUEFUNC(_wrap___glewUniform1iARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform1iARB=", VALUEFUNC(_wrap___glewUniform1iARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform1ivARB", VALUEFUNC(_wrap___glewUniform1ivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform1ivARB=", VALUEFUNC(_wrap___glewUniform1ivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform2fARB", VALUEFUNC(_wrap___glewUniform2fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform2fARB=", VALUEFUNC(_wrap___glewUniform2fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform2fvARB", VALUEFUNC(_wrap___glewUniform2fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform2fvARB=", VALUEFUNC(_wrap___glewUniform2fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform2iARB", VALUEFUNC(_wrap___glewUniform2iARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform2iARB=", VALUEFUNC(_wrap___glewUniform2iARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform2ivARB", VALUEFUNC(_wrap___glewUniform2ivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform2ivARB=", VALUEFUNC(_wrap___glewUniform2ivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform3fARB", VALUEFUNC(_wrap___glewUniform3fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform3fARB=", VALUEFUNC(_wrap___glewUniform3fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform3fvARB", VALUEFUNC(_wrap___glewUniform3fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform3fvARB=", VALUEFUNC(_wrap___glewUniform3fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform3iARB", VALUEFUNC(_wrap___glewUniform3iARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform3iARB=", VALUEFUNC(_wrap___glewUniform3iARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform3ivARB", VALUEFUNC(_wrap___glewUniform3ivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform3ivARB=", VALUEFUNC(_wrap___glewUniform3ivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform4fARB", VALUEFUNC(_wrap___glewUniform4fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform4fARB=", VALUEFUNC(_wrap___glewUniform4fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform4fvARB", VALUEFUNC(_wrap___glewUniform4fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform4fvARB=", VALUEFUNC(_wrap___glewUniform4fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform4iARB", VALUEFUNC(_wrap___glewUniform4iARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform4iARB=", VALUEFUNC(_wrap___glewUniform4iARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform4ivARB", VALUEFUNC(_wrap___glewUniform4ivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform4ivARB=", VALUEFUNC(_wrap___glewUniform4ivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix2fvARB", VALUEFUNC(_wrap___glewUniformMatrix2fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix2fvARB=", VALUEFUNC(_wrap___glewUniformMatrix2fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix3fvARB", VALUEFUNC(_wrap___glewUniformMatrix3fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix3fvARB=", VALUEFUNC(_wrap___glewUniformMatrix3fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix4fvARB", VALUEFUNC(_wrap___glewUniformMatrix4fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniformMatrix4fvARB=", VALUEFUNC(_wrap___glewUniformMatrix4fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUseProgramObjectARB", VALUEFUNC(_wrap___glewUseProgramObjectARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUseProgramObjectARB=", VALUEFUNC(_wrap___glewUseProgramObjectARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewValidateProgramARB", VALUEFUNC(_wrap___glewValidateProgramARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewValidateProgramARB=", VALUEFUNC(_wrap___glewValidateProgramARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexBufferARB", VALUEFUNC(_wrap___glewTexBufferARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexBufferARB=", VALUEFUNC(_wrap___glewTexBufferARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTexImage1DARB", VALUEFUNC(_wrap___glewCompressedTexImage1DARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTexImage1DARB=", VALUEFUNC(_wrap___glewCompressedTexImage1DARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTexImage2DARB", VALUEFUNC(_wrap___glewCompressedTexImage2DARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTexImage2DARB=", VALUEFUNC(_wrap___glewCompressedTexImage2DARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTexImage3DARB", VALUEFUNC(_wrap___glewCompressedTexImage3DARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTexImage3DARB=", VALUEFUNC(_wrap___glewCompressedTexImage3DARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTexSubImage1DARB", VALUEFUNC(_wrap___glewCompressedTexSubImage1DARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTexSubImage1DARB=", VALUEFUNC(_wrap___glewCompressedTexSubImage1DARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTexSubImage2DARB", VALUEFUNC(_wrap___glewCompressedTexSubImage2DARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTexSubImage2DARB=", VALUEFUNC(_wrap___glewCompressedTexSubImage2DARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTexSubImage3DARB", VALUEFUNC(_wrap___glewCompressedTexSubImage3DARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTexSubImage3DARB=", VALUEFUNC(_wrap___glewCompressedTexSubImage3DARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetCompressedTexImageARB", VALUEFUNC(_wrap___glewGetCompressedTexImageARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetCompressedTexImageARB=", VALUEFUNC(_wrap___glewGetCompressedTexImageARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewLoadTransposeMatrixdARB", VALUEFUNC(_wrap___glewLoadTransposeMatrixdARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewLoadTransposeMatrixdARB=", VALUEFUNC(_wrap___glewLoadTransposeMatrixdARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewLoadTransposeMatrixfARB", VALUEFUNC(_wrap___glewLoadTransposeMatrixfARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewLoadTransposeMatrixfARB=", VALUEFUNC(_wrap___glewLoadTransposeMatrixfARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultTransposeMatrixdARB", VALUEFUNC(_wrap___glewMultTransposeMatrixdARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultTransposeMatrixdARB=", VALUEFUNC(_wrap___glewMultTransposeMatrixdARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultTransposeMatrixfARB", VALUEFUNC(_wrap___glewMultTransposeMatrixfARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultTransposeMatrixfARB=", VALUEFUNC(_wrap___glewMultTransposeMatrixfARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindVertexArray", VALUEFUNC(_wrap___glewBindVertexArray_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindVertexArray=", VALUEFUNC(_wrap___glewBindVertexArray_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteVertexArrays", VALUEFUNC(_wrap___glewDeleteVertexArrays_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteVertexArrays=", VALUEFUNC(_wrap___glewDeleteVertexArrays_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenVertexArrays", VALUEFUNC(_wrap___glewGenVertexArrays_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenVertexArrays=", VALUEFUNC(_wrap___glewGenVertexArrays_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsVertexArray", VALUEFUNC(_wrap___glewIsVertexArray_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsVertexArray=", VALUEFUNC(_wrap___glewIsVertexArray_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexBlendARB", VALUEFUNC(_wrap___glewVertexBlendARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexBlendARB=", VALUEFUNC(_wrap___glewVertexBlendARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWeightPointerARB", VALUEFUNC(_wrap___glewWeightPointerARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWeightPointerARB=", VALUEFUNC(_wrap___glewWeightPointerARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWeightbvARB", VALUEFUNC(_wrap___glewWeightbvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWeightbvARB=", VALUEFUNC(_wrap___glewWeightbvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWeightdvARB", VALUEFUNC(_wrap___glewWeightdvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWeightdvARB=", VALUEFUNC(_wrap___glewWeightdvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWeightfvARB", VALUEFUNC(_wrap___glewWeightfvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWeightfvARB=", VALUEFUNC(_wrap___glewWeightfvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWeightivARB", VALUEFUNC(_wrap___glewWeightivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWeightivARB=", VALUEFUNC(_wrap___glewWeightivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWeightsvARB", VALUEFUNC(_wrap___glewWeightsvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWeightsvARB=", VALUEFUNC(_wrap___glewWeightsvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWeightubvARB", VALUEFUNC(_wrap___glewWeightubvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWeightubvARB=", VALUEFUNC(_wrap___glewWeightubvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWeightuivARB", VALUEFUNC(_wrap___glewWeightuivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWeightuivARB=", VALUEFUNC(_wrap___glewWeightuivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWeightusvARB", VALUEFUNC(_wrap___glewWeightusvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWeightusvARB=", VALUEFUNC(_wrap___glewWeightusvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindBufferARB", VALUEFUNC(_wrap___glewBindBufferARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindBufferARB=", VALUEFUNC(_wrap___glewBindBufferARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewBufferDataARB", VALUEFUNC(_wrap___glewBufferDataARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewBufferDataARB=", VALUEFUNC(_wrap___glewBufferDataARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewBufferSubDataARB", VALUEFUNC(_wrap___glewBufferSubDataARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewBufferSubDataARB=", VALUEFUNC(_wrap___glewBufferSubDataARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteBuffersARB", VALUEFUNC(_wrap___glewDeleteBuffersARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteBuffersARB=", VALUEFUNC(_wrap___glewDeleteBuffersARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenBuffersARB", VALUEFUNC(_wrap___glewGenBuffersARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenBuffersARB=", VALUEFUNC(_wrap___glewGenBuffersARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetBufferParameterivARB", VALUEFUNC(_wrap___glewGetBufferParameterivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetBufferParameterivARB=", VALUEFUNC(_wrap___glewGetBufferParameterivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetBufferPointervARB", VALUEFUNC(_wrap___glewGetBufferPointervARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetBufferPointervARB=", VALUEFUNC(_wrap___glewGetBufferPointervARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetBufferSubDataARB", VALUEFUNC(_wrap___glewGetBufferSubDataARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetBufferSubDataARB=", VALUEFUNC(_wrap___glewGetBufferSubDataARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsBufferARB", VALUEFUNC(_wrap___glewIsBufferARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsBufferARB=", VALUEFUNC(_wrap___glewIsBufferARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewMapBufferARB", VALUEFUNC(_wrap___glewMapBufferARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewMapBufferARB=", VALUEFUNC(_wrap___glewMapBufferARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewUnmapBufferARB", VALUEFUNC(_wrap___glewUnmapBufferARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewUnmapBufferARB=", VALUEFUNC(_wrap___glewUnmapBufferARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindProgramARB", VALUEFUNC(_wrap___glewBindProgramARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindProgramARB=", VALUEFUNC(_wrap___glewBindProgramARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteProgramsARB", VALUEFUNC(_wrap___glewDeleteProgramsARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteProgramsARB=", VALUEFUNC(_wrap___glewDeleteProgramsARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewDisableVertexAttribArrayARB", VALUEFUNC(_wrap___glewDisableVertexAttribArrayARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewDisableVertexAttribArrayARB=", VALUEFUNC(_wrap___glewDisableVertexAttribArrayARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewEnableVertexAttribArrayARB", VALUEFUNC(_wrap___glewEnableVertexAttribArrayARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewEnableVertexAttribArrayARB=", VALUEFUNC(_wrap___glewEnableVertexAttribArrayARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenProgramsARB", VALUEFUNC(_wrap___glewGenProgramsARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenProgramsARB=", VALUEFUNC(_wrap___glewGenProgramsARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramEnvParameterdvARB", VALUEFUNC(_wrap___glewGetProgramEnvParameterdvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramEnvParameterdvARB=", VALUEFUNC(_wrap___glewGetProgramEnvParameterdvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramEnvParameterfvARB", VALUEFUNC(_wrap___glewGetProgramEnvParameterfvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramEnvParameterfvARB=", VALUEFUNC(_wrap___glewGetProgramEnvParameterfvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramLocalParameterdvARB", VALUEFUNC(_wrap___glewGetProgramLocalParameterdvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramLocalParameterdvARB=", VALUEFUNC(_wrap___glewGetProgramLocalParameterdvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramLocalParameterfvARB", VALUEFUNC(_wrap___glewGetProgramLocalParameterfvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramLocalParameterfvARB=", VALUEFUNC(_wrap___glewGetProgramLocalParameterfvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramStringARB", VALUEFUNC(_wrap___glewGetProgramStringARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramStringARB=", VALUEFUNC(_wrap___glewGetProgramStringARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramivARB", VALUEFUNC(_wrap___glewGetProgramivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramivARB=", VALUEFUNC(_wrap___glewGetProgramivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribPointervARB", VALUEFUNC(_wrap___glewGetVertexAttribPointervARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribPointervARB=", VALUEFUNC(_wrap___glewGetVertexAttribPointervARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribdvARB", VALUEFUNC(_wrap___glewGetVertexAttribdvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribdvARB=", VALUEFUNC(_wrap___glewGetVertexAttribdvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribfvARB", VALUEFUNC(_wrap___glewGetVertexAttribfvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribfvARB=", VALUEFUNC(_wrap___glewGetVertexAttribfvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribivARB", VALUEFUNC(_wrap___glewGetVertexAttribivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribivARB=", VALUEFUNC(_wrap___glewGetVertexAttribivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsProgramARB", VALUEFUNC(_wrap___glewIsProgramARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsProgramARB=", VALUEFUNC(_wrap___glewIsProgramARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameter4dARB", VALUEFUNC(_wrap___glewProgramEnvParameter4dARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameter4dARB=", VALUEFUNC(_wrap___glewProgramEnvParameter4dARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameter4dvARB", VALUEFUNC(_wrap___glewProgramEnvParameter4dvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameter4dvARB=", VALUEFUNC(_wrap___glewProgramEnvParameter4dvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameter4fARB", VALUEFUNC(_wrap___glewProgramEnvParameter4fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameter4fARB=", VALUEFUNC(_wrap___glewProgramEnvParameter4fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameter4fvARB", VALUEFUNC(_wrap___glewProgramEnvParameter4fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameter4fvARB=", VALUEFUNC(_wrap___glewProgramEnvParameter4fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameter4dARB", VALUEFUNC(_wrap___glewProgramLocalParameter4dARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameter4dARB=", VALUEFUNC(_wrap___glewProgramLocalParameter4dARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameter4dvARB", VALUEFUNC(_wrap___glewProgramLocalParameter4dvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameter4dvARB=", VALUEFUNC(_wrap___glewProgramLocalParameter4dvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameter4fARB", VALUEFUNC(_wrap___glewProgramLocalParameter4fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameter4fARB=", VALUEFUNC(_wrap___glewProgramLocalParameter4fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameter4fvARB", VALUEFUNC(_wrap___glewProgramLocalParameter4fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameter4fvARB=", VALUEFUNC(_wrap___glewProgramLocalParameter4fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramStringARB", VALUEFUNC(_wrap___glewProgramStringARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramStringARB=", VALUEFUNC(_wrap___glewProgramStringARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1dARB", VALUEFUNC(_wrap___glewVertexAttrib1dARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1dARB=", VALUEFUNC(_wrap___glewVertexAttrib1dARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1dvARB", VALUEFUNC(_wrap___glewVertexAttrib1dvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1dvARB=", VALUEFUNC(_wrap___glewVertexAttrib1dvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1fARB", VALUEFUNC(_wrap___glewVertexAttrib1fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1fARB=", VALUEFUNC(_wrap___glewVertexAttrib1fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1fvARB", VALUEFUNC(_wrap___glewVertexAttrib1fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1fvARB=", VALUEFUNC(_wrap___glewVertexAttrib1fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1sARB", VALUEFUNC(_wrap___glewVertexAttrib1sARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1sARB=", VALUEFUNC(_wrap___glewVertexAttrib1sARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1svARB", VALUEFUNC(_wrap___glewVertexAttrib1svARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1svARB=", VALUEFUNC(_wrap___glewVertexAttrib1svARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2dARB", VALUEFUNC(_wrap___glewVertexAttrib2dARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2dARB=", VALUEFUNC(_wrap___glewVertexAttrib2dARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2dvARB", VALUEFUNC(_wrap___glewVertexAttrib2dvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2dvARB=", VALUEFUNC(_wrap___glewVertexAttrib2dvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2fARB", VALUEFUNC(_wrap___glewVertexAttrib2fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2fARB=", VALUEFUNC(_wrap___glewVertexAttrib2fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2fvARB", VALUEFUNC(_wrap___glewVertexAttrib2fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2fvARB=", VALUEFUNC(_wrap___glewVertexAttrib2fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2sARB", VALUEFUNC(_wrap___glewVertexAttrib2sARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2sARB=", VALUEFUNC(_wrap___glewVertexAttrib2sARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2svARB", VALUEFUNC(_wrap___glewVertexAttrib2svARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2svARB=", VALUEFUNC(_wrap___glewVertexAttrib2svARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3dARB", VALUEFUNC(_wrap___glewVertexAttrib3dARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3dARB=", VALUEFUNC(_wrap___glewVertexAttrib3dARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3dvARB", VALUEFUNC(_wrap___glewVertexAttrib3dvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3dvARB=", VALUEFUNC(_wrap___glewVertexAttrib3dvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3fARB", VALUEFUNC(_wrap___glewVertexAttrib3fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3fARB=", VALUEFUNC(_wrap___glewVertexAttrib3fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3fvARB", VALUEFUNC(_wrap___glewVertexAttrib3fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3fvARB=", VALUEFUNC(_wrap___glewVertexAttrib3fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3sARB", VALUEFUNC(_wrap___glewVertexAttrib3sARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3sARB=", VALUEFUNC(_wrap___glewVertexAttrib3sARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3svARB", VALUEFUNC(_wrap___glewVertexAttrib3svARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3svARB=", VALUEFUNC(_wrap___glewVertexAttrib3svARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NbvARB", VALUEFUNC(_wrap___glewVertexAttrib4NbvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NbvARB=", VALUEFUNC(_wrap___glewVertexAttrib4NbvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NivARB", VALUEFUNC(_wrap___glewVertexAttrib4NivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NivARB=", VALUEFUNC(_wrap___glewVertexAttrib4NivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NsvARB", VALUEFUNC(_wrap___glewVertexAttrib4NsvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NsvARB=", VALUEFUNC(_wrap___glewVertexAttrib4NsvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NubARB", VALUEFUNC(_wrap___glewVertexAttrib4NubARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NubARB=", VALUEFUNC(_wrap___glewVertexAttrib4NubARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NubvARB", VALUEFUNC(_wrap___glewVertexAttrib4NubvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NubvARB=", VALUEFUNC(_wrap___glewVertexAttrib4NubvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NuivARB", VALUEFUNC(_wrap___glewVertexAttrib4NuivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NuivARB=", VALUEFUNC(_wrap___glewVertexAttrib4NuivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NusvARB", VALUEFUNC(_wrap___glewVertexAttrib4NusvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4NusvARB=", VALUEFUNC(_wrap___glewVertexAttrib4NusvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4bvARB", VALUEFUNC(_wrap___glewVertexAttrib4bvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4bvARB=", VALUEFUNC(_wrap___glewVertexAttrib4bvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4dARB", VALUEFUNC(_wrap___glewVertexAttrib4dARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4dARB=", VALUEFUNC(_wrap___glewVertexAttrib4dARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4dvARB", VALUEFUNC(_wrap___glewVertexAttrib4dvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4dvARB=", VALUEFUNC(_wrap___glewVertexAttrib4dvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4fARB", VALUEFUNC(_wrap___glewVertexAttrib4fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4fARB=", VALUEFUNC(_wrap___glewVertexAttrib4fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4fvARB", VALUEFUNC(_wrap___glewVertexAttrib4fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4fvARB=", VALUEFUNC(_wrap___glewVertexAttrib4fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4ivARB", VALUEFUNC(_wrap___glewVertexAttrib4ivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4ivARB=", VALUEFUNC(_wrap___glewVertexAttrib4ivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4sARB", VALUEFUNC(_wrap___glewVertexAttrib4sARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4sARB=", VALUEFUNC(_wrap___glewVertexAttrib4sARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4svARB", VALUEFUNC(_wrap___glewVertexAttrib4svARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4svARB=", VALUEFUNC(_wrap___glewVertexAttrib4svARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4ubvARB", VALUEFUNC(_wrap___glewVertexAttrib4ubvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4ubvARB=", VALUEFUNC(_wrap___glewVertexAttrib4ubvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4uivARB", VALUEFUNC(_wrap___glewVertexAttrib4uivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4uivARB=", VALUEFUNC(_wrap___glewVertexAttrib4uivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4usvARB", VALUEFUNC(_wrap___glewVertexAttrib4usvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4usvARB=", VALUEFUNC(_wrap___glewVertexAttrib4usvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribPointerARB", VALUEFUNC(_wrap___glewVertexAttribPointerARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribPointerARB=", VALUEFUNC(_wrap___glewVertexAttribPointerARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindAttribLocationARB", VALUEFUNC(_wrap___glewBindAttribLocationARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindAttribLocationARB=", VALUEFUNC(_wrap___glewBindAttribLocationARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetActiveAttribARB", VALUEFUNC(_wrap___glewGetActiveAttribARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetActiveAttribARB=", VALUEFUNC(_wrap___glewGetActiveAttribARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetAttribLocationARB", VALUEFUNC(_wrap___glewGetAttribLocationARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetAttribLocationARB=", VALUEFUNC(_wrap___glewGetAttribLocationARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2dARB", VALUEFUNC(_wrap___glewWindowPos2dARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2dARB=", VALUEFUNC(_wrap___glewWindowPos2dARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2dvARB", VALUEFUNC(_wrap___glewWindowPos2dvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2dvARB=", VALUEFUNC(_wrap___glewWindowPos2dvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2fARB", VALUEFUNC(_wrap___glewWindowPos2fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2fARB=", VALUEFUNC(_wrap___glewWindowPos2fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2fvARB", VALUEFUNC(_wrap___glewWindowPos2fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2fvARB=", VALUEFUNC(_wrap___glewWindowPos2fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2iARB", VALUEFUNC(_wrap___glewWindowPos2iARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2iARB=", VALUEFUNC(_wrap___glewWindowPos2iARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2ivARB", VALUEFUNC(_wrap___glewWindowPos2ivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2ivARB=", VALUEFUNC(_wrap___glewWindowPos2ivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2sARB", VALUEFUNC(_wrap___glewWindowPos2sARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2sARB=", VALUEFUNC(_wrap___glewWindowPos2sARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2svARB", VALUEFUNC(_wrap___glewWindowPos2svARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2svARB=", VALUEFUNC(_wrap___glewWindowPos2svARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3dARB", VALUEFUNC(_wrap___glewWindowPos3dARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3dARB=", VALUEFUNC(_wrap___glewWindowPos3dARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3dvARB", VALUEFUNC(_wrap___glewWindowPos3dvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3dvARB=", VALUEFUNC(_wrap___glewWindowPos3dvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3fARB", VALUEFUNC(_wrap___glewWindowPos3fARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3fARB=", VALUEFUNC(_wrap___glewWindowPos3fARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3fvARB", VALUEFUNC(_wrap___glewWindowPos3fvARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3fvARB=", VALUEFUNC(_wrap___glewWindowPos3fvARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3iARB", VALUEFUNC(_wrap___glewWindowPos3iARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3iARB=", VALUEFUNC(_wrap___glewWindowPos3iARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3ivARB", VALUEFUNC(_wrap___glewWindowPos3ivARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3ivARB=", VALUEFUNC(_wrap___glewWindowPos3ivARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3sARB", VALUEFUNC(_wrap___glewWindowPos3sARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3sARB=", VALUEFUNC(_wrap___glewWindowPos3sARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3svARB", VALUEFUNC(_wrap___glewWindowPos3svARB_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3svARB=", VALUEFUNC(_wrap___glewWindowPos3svARB_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawBuffersATI", VALUEFUNC(_wrap___glewDrawBuffersATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawBuffersATI=", VALUEFUNC(_wrap___glewDrawBuffersATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawElementArrayATI", VALUEFUNC(_wrap___glewDrawElementArrayATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawElementArrayATI=", VALUEFUNC(_wrap___glewDrawElementArrayATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawRangeElementArrayATI", VALUEFUNC(_wrap___glewDrawRangeElementArrayATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawRangeElementArrayATI=", VALUEFUNC(_wrap___glewDrawRangeElementArrayATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewElementPointerATI", VALUEFUNC(_wrap___glewElementPointerATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewElementPointerATI=", VALUEFUNC(_wrap___glewElementPointerATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTexBumpParameterfvATI", VALUEFUNC(_wrap___glewGetTexBumpParameterfvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTexBumpParameterfvATI=", VALUEFUNC(_wrap___glewGetTexBumpParameterfvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTexBumpParameterivATI", VALUEFUNC(_wrap___glewGetTexBumpParameterivATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTexBumpParameterivATI=", VALUEFUNC(_wrap___glewGetTexBumpParameterivATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexBumpParameterfvATI", VALUEFUNC(_wrap___glewTexBumpParameterfvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexBumpParameterfvATI=", VALUEFUNC(_wrap___glewTexBumpParameterfvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexBumpParameterivATI", VALUEFUNC(_wrap___glewTexBumpParameterivATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexBumpParameterivATI=", VALUEFUNC(_wrap___glewTexBumpParameterivATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewAlphaFragmentOp1ATI", VALUEFUNC(_wrap___glewAlphaFragmentOp1ATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewAlphaFragmentOp1ATI=", VALUEFUNC(_wrap___glewAlphaFragmentOp1ATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewAlphaFragmentOp2ATI", VALUEFUNC(_wrap___glewAlphaFragmentOp2ATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewAlphaFragmentOp2ATI=", VALUEFUNC(_wrap___glewAlphaFragmentOp2ATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewAlphaFragmentOp3ATI", VALUEFUNC(_wrap___glewAlphaFragmentOp3ATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewAlphaFragmentOp3ATI=", VALUEFUNC(_wrap___glewAlphaFragmentOp3ATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewBeginFragmentShaderATI", VALUEFUNC(_wrap___glewBeginFragmentShaderATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewBeginFragmentShaderATI=", VALUEFUNC(_wrap___glewBeginFragmentShaderATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindFragmentShaderATI", VALUEFUNC(_wrap___glewBindFragmentShaderATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindFragmentShaderATI=", VALUEFUNC(_wrap___glewBindFragmentShaderATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorFragmentOp1ATI", VALUEFUNC(_wrap___glewColorFragmentOp1ATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorFragmentOp1ATI=", VALUEFUNC(_wrap___glewColorFragmentOp1ATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorFragmentOp2ATI", VALUEFUNC(_wrap___glewColorFragmentOp2ATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorFragmentOp2ATI=", VALUEFUNC(_wrap___glewColorFragmentOp2ATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorFragmentOp3ATI", VALUEFUNC(_wrap___glewColorFragmentOp3ATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorFragmentOp3ATI=", VALUEFUNC(_wrap___glewColorFragmentOp3ATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteFragmentShaderATI", VALUEFUNC(_wrap___glewDeleteFragmentShaderATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteFragmentShaderATI=", VALUEFUNC(_wrap___glewDeleteFragmentShaderATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewEndFragmentShaderATI", VALUEFUNC(_wrap___glewEndFragmentShaderATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewEndFragmentShaderATI=", VALUEFUNC(_wrap___glewEndFragmentShaderATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenFragmentShadersATI", VALUEFUNC(_wrap___glewGenFragmentShadersATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenFragmentShadersATI=", VALUEFUNC(_wrap___glewGenFragmentShadersATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewPassTexCoordATI", VALUEFUNC(_wrap___glewPassTexCoordATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewPassTexCoordATI=", VALUEFUNC(_wrap___glewPassTexCoordATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewSampleMapATI", VALUEFUNC(_wrap___glewSampleMapATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewSampleMapATI=", VALUEFUNC(_wrap___glewSampleMapATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewSetFragmentShaderConstantATI", VALUEFUNC(_wrap___glewSetFragmentShaderConstantATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewSetFragmentShaderConstantATI=", VALUEFUNC(_wrap___glewSetFragmentShaderConstantATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewMapObjectBufferATI", VALUEFUNC(_wrap___glewMapObjectBufferATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewMapObjectBufferATI=", VALUEFUNC(_wrap___glewMapObjectBufferATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewUnmapObjectBufferATI", VALUEFUNC(_wrap___glewUnmapObjectBufferATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewUnmapObjectBufferATI=", VALUEFUNC(_wrap___glewUnmapObjectBufferATI_set), 1);
  rb_define_singleton_method(mGlew, "__glPNTrianglewesfATI", VALUEFUNC(_wrap___glPNTrianglewesfATI_get), 0);
  rb_define_singleton_method(mGlew, "__glPNTrianglewesfATI=", VALUEFUNC(_wrap___glPNTrianglewesfATI_set), 1);
  rb_define_singleton_method(mGlew, "__glPNTrianglewesiATI", VALUEFUNC(_wrap___glPNTrianglewesiATI_get), 0);
  rb_define_singleton_method(mGlew, "__glPNTrianglewesiATI=", VALUEFUNC(_wrap___glPNTrianglewesiATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewStencilFuncSeparateATI", VALUEFUNC(_wrap___glewStencilFuncSeparateATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewStencilFuncSeparateATI=", VALUEFUNC(_wrap___glewStencilFuncSeparateATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewStencilOpSeparateATI", VALUEFUNC(_wrap___glewStencilOpSeparateATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewStencilOpSeparateATI=", VALUEFUNC(_wrap___glewStencilOpSeparateATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewArrayObjectATI", VALUEFUNC(_wrap___glewArrayObjectATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewArrayObjectATI=", VALUEFUNC(_wrap___glewArrayObjectATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewFreeObjectBufferATI", VALUEFUNC(_wrap___glewFreeObjectBufferATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewFreeObjectBufferATI=", VALUEFUNC(_wrap___glewFreeObjectBufferATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetArrayObjectfvATI", VALUEFUNC(_wrap___glewGetArrayObjectfvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetArrayObjectfvATI=", VALUEFUNC(_wrap___glewGetArrayObjectfvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetArrayObjectivATI", VALUEFUNC(_wrap___glewGetArrayObjectivATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetArrayObjectivATI=", VALUEFUNC(_wrap___glewGetArrayObjectivATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetObjectBufferfvATI", VALUEFUNC(_wrap___glewGetObjectBufferfvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetObjectBufferfvATI=", VALUEFUNC(_wrap___glewGetObjectBufferfvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetObjectBufferivATI", VALUEFUNC(_wrap___glewGetObjectBufferivATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetObjectBufferivATI=", VALUEFUNC(_wrap___glewGetObjectBufferivATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVariantArrayObjectfvATI", VALUEFUNC(_wrap___glewGetVariantArrayObjectfvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVariantArrayObjectfvATI=", VALUEFUNC(_wrap___glewGetVariantArrayObjectfvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVariantArrayObjectivATI", VALUEFUNC(_wrap___glewGetVariantArrayObjectivATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVariantArrayObjectivATI=", VALUEFUNC(_wrap___glewGetVariantArrayObjectivATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsObjectBufferATI", VALUEFUNC(_wrap___glewIsObjectBufferATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsObjectBufferATI=", VALUEFUNC(_wrap___glewIsObjectBufferATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewNewObjectBufferATI", VALUEFUNC(_wrap___glewNewObjectBufferATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewNewObjectBufferATI=", VALUEFUNC(_wrap___glewNewObjectBufferATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewUpdateObjectBufferATI", VALUEFUNC(_wrap___glewUpdateObjectBufferATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewUpdateObjectBufferATI=", VALUEFUNC(_wrap___glewUpdateObjectBufferATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVariantArrayObjectATI", VALUEFUNC(_wrap___glewVariantArrayObjectATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVariantArrayObjectATI=", VALUEFUNC(_wrap___glewVariantArrayObjectATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribArrayObjectfvATI", VALUEFUNC(_wrap___glewGetVertexAttribArrayObjectfvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribArrayObjectfvATI=", VALUEFUNC(_wrap___glewGetVertexAttribArrayObjectfvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribArrayObjectivATI", VALUEFUNC(_wrap___glewGetVertexAttribArrayObjectivATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribArrayObjectivATI=", VALUEFUNC(_wrap___glewGetVertexAttribArrayObjectivATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribArrayObjectATI", VALUEFUNC(_wrap___glewVertexAttribArrayObjectATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribArrayObjectATI=", VALUEFUNC(_wrap___glewVertexAttribArrayObjectATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewClientActiveVertexStreamATI", VALUEFUNC(_wrap___glewClientActiveVertexStreamATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewClientActiveVertexStreamATI=", VALUEFUNC(_wrap___glewClientActiveVertexStreamATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormalStream3bATI", VALUEFUNC(_wrap___glewNormalStream3bATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormalStream3bATI=", VALUEFUNC(_wrap___glewNormalStream3bATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormalStream3bvATI", VALUEFUNC(_wrap___glewNormalStream3bvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormalStream3bvATI=", VALUEFUNC(_wrap___glewNormalStream3bvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormalStream3dATI", VALUEFUNC(_wrap___glewNormalStream3dATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormalStream3dATI=", VALUEFUNC(_wrap___glewNormalStream3dATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormalStream3dvATI", VALUEFUNC(_wrap___glewNormalStream3dvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormalStream3dvATI=", VALUEFUNC(_wrap___glewNormalStream3dvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormalStream3fATI", VALUEFUNC(_wrap___glewNormalStream3fATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormalStream3fATI=", VALUEFUNC(_wrap___glewNormalStream3fATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormalStream3fvATI", VALUEFUNC(_wrap___glewNormalStream3fvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormalStream3fvATI=", VALUEFUNC(_wrap___glewNormalStream3fvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormalStream3iATI", VALUEFUNC(_wrap___glewNormalStream3iATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormalStream3iATI=", VALUEFUNC(_wrap___glewNormalStream3iATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormalStream3ivATI", VALUEFUNC(_wrap___glewNormalStream3ivATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormalStream3ivATI=", VALUEFUNC(_wrap___glewNormalStream3ivATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormalStream3sATI", VALUEFUNC(_wrap___glewNormalStream3sATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormalStream3sATI=", VALUEFUNC(_wrap___glewNormalStream3sATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormalStream3svATI", VALUEFUNC(_wrap___glewNormalStream3svATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormalStream3svATI=", VALUEFUNC(_wrap___glewNormalStream3svATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexBlendEnvfATI", VALUEFUNC(_wrap___glewVertexBlendEnvfATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexBlendEnvfATI=", VALUEFUNC(_wrap___glewVertexBlendEnvfATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexBlendEnviATI", VALUEFUNC(_wrap___glewVertexBlendEnviATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexBlendEnviATI=", VALUEFUNC(_wrap___glewVertexBlendEnviATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream2dATI", VALUEFUNC(_wrap___glewVertexStream2dATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream2dATI=", VALUEFUNC(_wrap___glewVertexStream2dATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream2dvATI", VALUEFUNC(_wrap___glewVertexStream2dvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream2dvATI=", VALUEFUNC(_wrap___glewVertexStream2dvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream2fATI", VALUEFUNC(_wrap___glewVertexStream2fATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream2fATI=", VALUEFUNC(_wrap___glewVertexStream2fATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream2fvATI", VALUEFUNC(_wrap___glewVertexStream2fvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream2fvATI=", VALUEFUNC(_wrap___glewVertexStream2fvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream2iATI", VALUEFUNC(_wrap___glewVertexStream2iATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream2iATI=", VALUEFUNC(_wrap___glewVertexStream2iATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream2ivATI", VALUEFUNC(_wrap___glewVertexStream2ivATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream2ivATI=", VALUEFUNC(_wrap___glewVertexStream2ivATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream2sATI", VALUEFUNC(_wrap___glewVertexStream2sATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream2sATI=", VALUEFUNC(_wrap___glewVertexStream2sATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream2svATI", VALUEFUNC(_wrap___glewVertexStream2svATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream2svATI=", VALUEFUNC(_wrap___glewVertexStream2svATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream3dATI", VALUEFUNC(_wrap___glewVertexStream3dATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream3dATI=", VALUEFUNC(_wrap___glewVertexStream3dATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream3dvATI", VALUEFUNC(_wrap___glewVertexStream3dvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream3dvATI=", VALUEFUNC(_wrap___glewVertexStream3dvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream3fATI", VALUEFUNC(_wrap___glewVertexStream3fATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream3fATI=", VALUEFUNC(_wrap___glewVertexStream3fATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream3fvATI", VALUEFUNC(_wrap___glewVertexStream3fvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream3fvATI=", VALUEFUNC(_wrap___glewVertexStream3fvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream3iATI", VALUEFUNC(_wrap___glewVertexStream3iATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream3iATI=", VALUEFUNC(_wrap___glewVertexStream3iATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream3ivATI", VALUEFUNC(_wrap___glewVertexStream3ivATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream3ivATI=", VALUEFUNC(_wrap___glewVertexStream3ivATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream3sATI", VALUEFUNC(_wrap___glewVertexStream3sATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream3sATI=", VALUEFUNC(_wrap___glewVertexStream3sATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream3svATI", VALUEFUNC(_wrap___glewVertexStream3svATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream3svATI=", VALUEFUNC(_wrap___glewVertexStream3svATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream4dATI", VALUEFUNC(_wrap___glewVertexStream4dATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream4dATI=", VALUEFUNC(_wrap___glewVertexStream4dATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream4dvATI", VALUEFUNC(_wrap___glewVertexStream4dvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream4dvATI=", VALUEFUNC(_wrap___glewVertexStream4dvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream4fATI", VALUEFUNC(_wrap___glewVertexStream4fATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream4fATI=", VALUEFUNC(_wrap___glewVertexStream4fATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream4fvATI", VALUEFUNC(_wrap___glewVertexStream4fvATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream4fvATI=", VALUEFUNC(_wrap___glewVertexStream4fvATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream4iATI", VALUEFUNC(_wrap___glewVertexStream4iATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream4iATI=", VALUEFUNC(_wrap___glewVertexStream4iATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream4ivATI", VALUEFUNC(_wrap___glewVertexStream4ivATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream4ivATI=", VALUEFUNC(_wrap___glewVertexStream4ivATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream4sATI", VALUEFUNC(_wrap___glewVertexStream4sATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream4sATI=", VALUEFUNC(_wrap___glewVertexStream4sATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexStream4svATI", VALUEFUNC(_wrap___glewVertexStream4svATI_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexStream4svATI=", VALUEFUNC(_wrap___glewVertexStream4svATI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetUniformBufferSizeEXT", VALUEFUNC(_wrap___glewGetUniformBufferSizeEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetUniformBufferSizeEXT=", VALUEFUNC(_wrap___glewGetUniformBufferSizeEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetUniformOffsetEXT", VALUEFUNC(_wrap___glewGetUniformOffsetEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetUniformOffsetEXT=", VALUEFUNC(_wrap___glewGetUniformOffsetEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniformBufferEXT", VALUEFUNC(_wrap___glewUniformBufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniformBufferEXT=", VALUEFUNC(_wrap___glewUniformBufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBlendColorEXT", VALUEFUNC(_wrap___glewBlendColorEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBlendColorEXT=", VALUEFUNC(_wrap___glewBlendColorEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBlendEquationSeparateEXT", VALUEFUNC(_wrap___glewBlendEquationSeparateEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBlendEquationSeparateEXT=", VALUEFUNC(_wrap___glewBlendEquationSeparateEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBlendFuncSeparateEXT", VALUEFUNC(_wrap___glewBlendFuncSeparateEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBlendFuncSeparateEXT=", VALUEFUNC(_wrap___glewBlendFuncSeparateEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBlendEquationEXT", VALUEFUNC(_wrap___glewBlendEquationEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBlendEquationEXT=", VALUEFUNC(_wrap___glewBlendEquationEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorSubTableEXT", VALUEFUNC(_wrap___glewColorSubTableEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorSubTableEXT=", VALUEFUNC(_wrap___glewColorSubTableEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyColorSubTableEXT", VALUEFUNC(_wrap___glewCopyColorSubTableEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyColorSubTableEXT=", VALUEFUNC(_wrap___glewCopyColorSubTableEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewLockArraysEXT", VALUEFUNC(_wrap___glewLockArraysEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewLockArraysEXT=", VALUEFUNC(_wrap___glewLockArraysEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewUnlockArraysEXT", VALUEFUNC(_wrap___glewUnlockArraysEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewUnlockArraysEXT=", VALUEFUNC(_wrap___glewUnlockArraysEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewConvolutionFilter1DEXT", VALUEFUNC(_wrap___glewConvolutionFilter1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewConvolutionFilter1DEXT=", VALUEFUNC(_wrap___glewConvolutionFilter1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewConvolutionFilter2DEXT", VALUEFUNC(_wrap___glewConvolutionFilter2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewConvolutionFilter2DEXT=", VALUEFUNC(_wrap___glewConvolutionFilter2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameterfEXT", VALUEFUNC(_wrap___glewConvolutionParameterfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameterfEXT=", VALUEFUNC(_wrap___glewConvolutionParameterfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameterfvEXT", VALUEFUNC(_wrap___glewConvolutionParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameterfvEXT=", VALUEFUNC(_wrap___glewConvolutionParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameteriEXT", VALUEFUNC(_wrap___glewConvolutionParameteriEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameteriEXT=", VALUEFUNC(_wrap___glewConvolutionParameteriEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameterivEXT", VALUEFUNC(_wrap___glewConvolutionParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewConvolutionParameterivEXT=", VALUEFUNC(_wrap___glewConvolutionParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyConvolutionFilter1DEXT", VALUEFUNC(_wrap___glewCopyConvolutionFilter1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyConvolutionFilter1DEXT=", VALUEFUNC(_wrap___glewCopyConvolutionFilter1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyConvolutionFilter2DEXT", VALUEFUNC(_wrap___glewCopyConvolutionFilter2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyConvolutionFilter2DEXT=", VALUEFUNC(_wrap___glewCopyConvolutionFilter2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetConvolutionFilterEXT", VALUEFUNC(_wrap___glewGetConvolutionFilterEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetConvolutionFilterEXT=", VALUEFUNC(_wrap___glewGetConvolutionFilterEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetConvolutionParameterfvEXT", VALUEFUNC(_wrap___glewGetConvolutionParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetConvolutionParameterfvEXT=", VALUEFUNC(_wrap___glewGetConvolutionParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetConvolutionParameterivEXT", VALUEFUNC(_wrap___glewGetConvolutionParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetConvolutionParameterivEXT=", VALUEFUNC(_wrap___glewGetConvolutionParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetSeparableFilterEXT", VALUEFUNC(_wrap___glewGetSeparableFilterEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetSeparableFilterEXT=", VALUEFUNC(_wrap___glewGetSeparableFilterEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSeparableFilter2DEXT", VALUEFUNC(_wrap___glewSeparableFilter2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSeparableFilter2DEXT=", VALUEFUNC(_wrap___glewSeparableFilter2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBinormalPointerEXT", VALUEFUNC(_wrap___glewBinormalPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBinormalPointerEXT=", VALUEFUNC(_wrap___glewBinormalPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTangentPointerEXT", VALUEFUNC(_wrap___glewTangentPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTangentPointerEXT=", VALUEFUNC(_wrap___glewTangentPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyTexImage1DEXT", VALUEFUNC(_wrap___glewCopyTexImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyTexImage1DEXT=", VALUEFUNC(_wrap___glewCopyTexImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyTexImage2DEXT", VALUEFUNC(_wrap___glewCopyTexImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyTexImage2DEXT=", VALUEFUNC(_wrap___glewCopyTexImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyTexSubImage1DEXT", VALUEFUNC(_wrap___glewCopyTexSubImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyTexSubImage1DEXT=", VALUEFUNC(_wrap___glewCopyTexSubImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyTexSubImage2DEXT", VALUEFUNC(_wrap___glewCopyTexSubImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyTexSubImage2DEXT=", VALUEFUNC(_wrap___glewCopyTexSubImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyTexSubImage3DEXT", VALUEFUNC(_wrap___glewCopyTexSubImage3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyTexSubImage3DEXT=", VALUEFUNC(_wrap___glewCopyTexSubImage3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCullParameterdvEXT", VALUEFUNC(_wrap___glewCullParameterdvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCullParameterdvEXT=", VALUEFUNC(_wrap___glewCullParameterdvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCullParameterfvEXT", VALUEFUNC(_wrap___glewCullParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCullParameterfvEXT=", VALUEFUNC(_wrap___glewCullParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDepthBoundsEXT", VALUEFUNC(_wrap___glewDepthBoundsEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDepthBoundsEXT=", VALUEFUNC(_wrap___glewDepthBoundsEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindMultiTextureEXT", VALUEFUNC(_wrap___glewBindMultiTextureEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindMultiTextureEXT=", VALUEFUNC(_wrap___glewBindMultiTextureEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCheckNamedFramebufferStatusEXT", VALUEFUNC(_wrap___glewCheckNamedFramebufferStatusEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCheckNamedFramebufferStatusEXT=", VALUEFUNC(_wrap___glewCheckNamedFramebufferStatusEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewClientAttribDefaultEXT", VALUEFUNC(_wrap___glewClientAttribDefaultEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewClientAttribDefaultEXT=", VALUEFUNC(_wrap___glewClientAttribDefaultEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedMultiTexImage1DEXT", VALUEFUNC(_wrap___glewCompressedMultiTexImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedMultiTexImage1DEXT=", VALUEFUNC(_wrap___glewCompressedMultiTexImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedMultiTexImage2DEXT", VALUEFUNC(_wrap___glewCompressedMultiTexImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedMultiTexImage2DEXT=", VALUEFUNC(_wrap___glewCompressedMultiTexImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedMultiTexImage3DEXT", VALUEFUNC(_wrap___glewCompressedMultiTexImage3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedMultiTexImage3DEXT=", VALUEFUNC(_wrap___glewCompressedMultiTexImage3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedMultiTexSubImage1DEXT", VALUEFUNC(_wrap___glewCompressedMultiTexSubImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedMultiTexSubImage1DEXT=", VALUEFUNC(_wrap___glewCompressedMultiTexSubImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedMultiTexSubImage2DEXT", VALUEFUNC(_wrap___glewCompressedMultiTexSubImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedMultiTexSubImage2DEXT=", VALUEFUNC(_wrap___glewCompressedMultiTexSubImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedMultiTexSubImage3DEXT", VALUEFUNC(_wrap___glewCompressedMultiTexSubImage3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedMultiTexSubImage3DEXT=", VALUEFUNC(_wrap___glewCompressedMultiTexSubImage3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTextureImage1DEXT", VALUEFUNC(_wrap___glewCompressedTextureImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTextureImage1DEXT=", VALUEFUNC(_wrap___glewCompressedTextureImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTextureImage2DEXT", VALUEFUNC(_wrap___glewCompressedTextureImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTextureImage2DEXT=", VALUEFUNC(_wrap___glewCompressedTextureImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTextureImage3DEXT", VALUEFUNC(_wrap___glewCompressedTextureImage3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTextureImage3DEXT=", VALUEFUNC(_wrap___glewCompressedTextureImage3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTextureSubImage1DEXT", VALUEFUNC(_wrap___glewCompressedTextureSubImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTextureSubImage1DEXT=", VALUEFUNC(_wrap___glewCompressedTextureSubImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTextureSubImage2DEXT", VALUEFUNC(_wrap___glewCompressedTextureSubImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTextureSubImage2DEXT=", VALUEFUNC(_wrap___glewCompressedTextureSubImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCompressedTextureSubImage3DEXT", VALUEFUNC(_wrap___glewCompressedTextureSubImage3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCompressedTextureSubImage3DEXT=", VALUEFUNC(_wrap___glewCompressedTextureSubImage3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyMultiTexImage1DEXT", VALUEFUNC(_wrap___glewCopyMultiTexImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyMultiTexImage1DEXT=", VALUEFUNC(_wrap___glewCopyMultiTexImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyMultiTexImage2DEXT", VALUEFUNC(_wrap___glewCopyMultiTexImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyMultiTexImage2DEXT=", VALUEFUNC(_wrap___glewCopyMultiTexImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyMultiTexSubImage1DEXT", VALUEFUNC(_wrap___glewCopyMultiTexSubImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyMultiTexSubImage1DEXT=", VALUEFUNC(_wrap___glewCopyMultiTexSubImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyMultiTexSubImage2DEXT", VALUEFUNC(_wrap___glewCopyMultiTexSubImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyMultiTexSubImage2DEXT=", VALUEFUNC(_wrap___glewCopyMultiTexSubImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyMultiTexSubImage3DEXT", VALUEFUNC(_wrap___glewCopyMultiTexSubImage3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyMultiTexSubImage3DEXT=", VALUEFUNC(_wrap___glewCopyMultiTexSubImage3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyTextureImage1DEXT", VALUEFUNC(_wrap___glewCopyTextureImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyTextureImage1DEXT=", VALUEFUNC(_wrap___glewCopyTextureImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyTextureImage2DEXT", VALUEFUNC(_wrap___glewCopyTextureImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyTextureImage2DEXT=", VALUEFUNC(_wrap___glewCopyTextureImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyTextureSubImage1DEXT", VALUEFUNC(_wrap___glewCopyTextureSubImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyTextureSubImage1DEXT=", VALUEFUNC(_wrap___glewCopyTextureSubImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyTextureSubImage2DEXT", VALUEFUNC(_wrap___glewCopyTextureSubImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyTextureSubImage2DEXT=", VALUEFUNC(_wrap___glewCopyTextureSubImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyTextureSubImage3DEXT", VALUEFUNC(_wrap___glewCopyTextureSubImage3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyTextureSubImage3DEXT=", VALUEFUNC(_wrap___glewCopyTextureSubImage3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDisableClientStateIndexedEXT", VALUEFUNC(_wrap___glewDisableClientStateIndexedEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDisableClientStateIndexedEXT=", VALUEFUNC(_wrap___glewDisableClientStateIndexedEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewEnableClientStateIndexedEXT", VALUEFUNC(_wrap___glewEnableClientStateIndexedEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewEnableClientStateIndexedEXT=", VALUEFUNC(_wrap___glewEnableClientStateIndexedEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferDrawBufferEXT", VALUEFUNC(_wrap___glewFramebufferDrawBufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferDrawBufferEXT=", VALUEFUNC(_wrap___glewFramebufferDrawBufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferDrawBuffersEXT", VALUEFUNC(_wrap___glewFramebufferDrawBuffersEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferDrawBuffersEXT=", VALUEFUNC(_wrap___glewFramebufferDrawBuffersEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferReadBufferEXT", VALUEFUNC(_wrap___glewFramebufferReadBufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferReadBufferEXT=", VALUEFUNC(_wrap___glewFramebufferReadBufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenerateMultiTexMipmapEXT", VALUEFUNC(_wrap___glewGenerateMultiTexMipmapEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenerateMultiTexMipmapEXT=", VALUEFUNC(_wrap___glewGenerateMultiTexMipmapEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenerateTextureMipmapEXT", VALUEFUNC(_wrap___glewGenerateTextureMipmapEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenerateTextureMipmapEXT=", VALUEFUNC(_wrap___glewGenerateTextureMipmapEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetCompressedMultiTexImageEXT", VALUEFUNC(_wrap___glewGetCompressedMultiTexImageEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetCompressedMultiTexImageEXT=", VALUEFUNC(_wrap___glewGetCompressedMultiTexImageEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetCompressedTextureImageEXT", VALUEFUNC(_wrap___glewGetCompressedTextureImageEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetCompressedTextureImageEXT=", VALUEFUNC(_wrap___glewGetCompressedTextureImageEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetDoubleIndexedvEXT", VALUEFUNC(_wrap___glewGetDoubleIndexedvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetDoubleIndexedvEXT=", VALUEFUNC(_wrap___glewGetDoubleIndexedvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFloatIndexedvEXT", VALUEFUNC(_wrap___glewGetFloatIndexedvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFloatIndexedvEXT=", VALUEFUNC(_wrap___glewGetFloatIndexedvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFramebufferParameterivEXT", VALUEFUNC(_wrap___glewGetFramebufferParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFramebufferParameterivEXT=", VALUEFUNC(_wrap___glewGetFramebufferParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexEnvfvEXT", VALUEFUNC(_wrap___glewGetMultiTexEnvfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexEnvfvEXT=", VALUEFUNC(_wrap___glewGetMultiTexEnvfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexEnvivEXT", VALUEFUNC(_wrap___glewGetMultiTexEnvivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexEnvivEXT=", VALUEFUNC(_wrap___glewGetMultiTexEnvivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexGendvEXT", VALUEFUNC(_wrap___glewGetMultiTexGendvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexGendvEXT=", VALUEFUNC(_wrap___glewGetMultiTexGendvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexGenfvEXT", VALUEFUNC(_wrap___glewGetMultiTexGenfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexGenfvEXT=", VALUEFUNC(_wrap___glewGetMultiTexGenfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexGenivEXT", VALUEFUNC(_wrap___glewGetMultiTexGenivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexGenivEXT=", VALUEFUNC(_wrap___glewGetMultiTexGenivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexImageEXT", VALUEFUNC(_wrap___glewGetMultiTexImageEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexImageEXT=", VALUEFUNC(_wrap___glewGetMultiTexImageEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexLevelParameterfvEXT", VALUEFUNC(_wrap___glewGetMultiTexLevelParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexLevelParameterfvEXT=", VALUEFUNC(_wrap___glewGetMultiTexLevelParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexLevelParameterivEXT", VALUEFUNC(_wrap___glewGetMultiTexLevelParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexLevelParameterivEXT=", VALUEFUNC(_wrap___glewGetMultiTexLevelParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexParameterIivEXT", VALUEFUNC(_wrap___glewGetMultiTexParameterIivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexParameterIivEXT=", VALUEFUNC(_wrap___glewGetMultiTexParameterIivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexParameterIuivEXT", VALUEFUNC(_wrap___glewGetMultiTexParameterIuivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexParameterIuivEXT=", VALUEFUNC(_wrap___glewGetMultiTexParameterIuivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexParameterfvEXT", VALUEFUNC(_wrap___glewGetMultiTexParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexParameterfvEXT=", VALUEFUNC(_wrap___glewGetMultiTexParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexParameterivEXT", VALUEFUNC(_wrap___glewGetMultiTexParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMultiTexParameterivEXT=", VALUEFUNC(_wrap___glewGetMultiTexParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetNamedBufferParameterivEXT", VALUEFUNC(_wrap___glewGetNamedBufferParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetNamedBufferParameterivEXT=", VALUEFUNC(_wrap___glewGetNamedBufferParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetNamedBufferPointervEXT", VALUEFUNC(_wrap___glewGetNamedBufferPointervEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetNamedBufferPointervEXT=", VALUEFUNC(_wrap___glewGetNamedBufferPointervEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetNamedBufferSubDataEXT", VALUEFUNC(_wrap___glewGetNamedBufferSubDataEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetNamedBufferSubDataEXT=", VALUEFUNC(_wrap___glewGetNamedBufferSubDataEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetNamedFramebufferAttachmentParameterivEXT", VALUEFUNC(_wrap___glewGetNamedFramebufferAttachmentParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetNamedFramebufferAttachmentParameterivEXT=", VALUEFUNC(_wrap___glewGetNamedFramebufferAttachmentParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetNamedProgramLocalParameterIivEXT", VALUEFUNC(_wrap___glewGetNamedProgramLocalParameterIivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetNamedProgramLocalParameterIivEXT=", VALUEFUNC(_wrap___glewGetNamedProgramLocalParameterIivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetNamedProgramLocalParameterIuivEXT", VALUEFUNC(_wrap___glewGetNamedProgramLocalParameterIuivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetNamedProgramLocalParameterIuivEXT=", VALUEFUNC(_wrap___glewGetNamedProgramLocalParameterIuivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetNamedProgramLocalParameterdvEXT", VALUEFUNC(_wrap___glewGetNamedProgramLocalParameterdvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetNamedProgramLocalParameterdvEXT=", VALUEFUNC(_wrap___glewGetNamedProgramLocalParameterdvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetNamedProgramLocalParameterfvEXT", VALUEFUNC(_wrap___glewGetNamedProgramLocalParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetNamedProgramLocalParameterfvEXT=", VALUEFUNC(_wrap___glewGetNamedProgramLocalParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetNamedProgramStringEXT", VALUEFUNC(_wrap___glewGetNamedProgramStringEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetNamedProgramStringEXT=", VALUEFUNC(_wrap___glewGetNamedProgramStringEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetNamedProgramivEXT", VALUEFUNC(_wrap___glewGetNamedProgramivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetNamedProgramivEXT=", VALUEFUNC(_wrap___glewGetNamedProgramivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetNamedRenderbufferParameterivEXT", VALUEFUNC(_wrap___glewGetNamedRenderbufferParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetNamedRenderbufferParameterivEXT=", VALUEFUNC(_wrap___glewGetNamedRenderbufferParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetPointerIndexedvEXT", VALUEFUNC(_wrap___glewGetPointerIndexedvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetPointerIndexedvEXT=", VALUEFUNC(_wrap___glewGetPointerIndexedvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTextureImageEXT", VALUEFUNC(_wrap___glewGetTextureImageEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTextureImageEXT=", VALUEFUNC(_wrap___glewGetTextureImageEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTextureLevelParameterfvEXT", VALUEFUNC(_wrap___glewGetTextureLevelParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTextureLevelParameterfvEXT=", VALUEFUNC(_wrap___glewGetTextureLevelParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTextureLevelParameterivEXT", VALUEFUNC(_wrap___glewGetTextureLevelParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTextureLevelParameterivEXT=", VALUEFUNC(_wrap___glewGetTextureLevelParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTextureParameterIivEXT", VALUEFUNC(_wrap___glewGetTextureParameterIivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTextureParameterIivEXT=", VALUEFUNC(_wrap___glewGetTextureParameterIivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTextureParameterIuivEXT", VALUEFUNC(_wrap___glewGetTextureParameterIuivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTextureParameterIuivEXT=", VALUEFUNC(_wrap___glewGetTextureParameterIuivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTextureParameterfvEXT", VALUEFUNC(_wrap___glewGetTextureParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTextureParameterfvEXT=", VALUEFUNC(_wrap___glewGetTextureParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTextureParameterivEXT", VALUEFUNC(_wrap___glewGetTextureParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTextureParameterivEXT=", VALUEFUNC(_wrap___glewGetTextureParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMapNamedBufferEXT", VALUEFUNC(_wrap___glewMapNamedBufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMapNamedBufferEXT=", VALUEFUNC(_wrap___glewMapNamedBufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixFrustumEXT", VALUEFUNC(_wrap___glewMatrixFrustumEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixFrustumEXT=", VALUEFUNC(_wrap___glewMatrixFrustumEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixLoadIdentityEXT", VALUEFUNC(_wrap___glewMatrixLoadIdentityEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixLoadIdentityEXT=", VALUEFUNC(_wrap___glewMatrixLoadIdentityEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixLoadTransposedEXT", VALUEFUNC(_wrap___glewMatrixLoadTransposedEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixLoadTransposedEXT=", VALUEFUNC(_wrap___glewMatrixLoadTransposedEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixLoadTransposefEXT", VALUEFUNC(_wrap___glewMatrixLoadTransposefEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixLoadTransposefEXT=", VALUEFUNC(_wrap___glewMatrixLoadTransposefEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixLoaddEXT", VALUEFUNC(_wrap___glewMatrixLoaddEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixLoaddEXT=", VALUEFUNC(_wrap___glewMatrixLoaddEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixLoadfEXT", VALUEFUNC(_wrap___glewMatrixLoadfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixLoadfEXT=", VALUEFUNC(_wrap___glewMatrixLoadfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixMultTransposedEXT", VALUEFUNC(_wrap___glewMatrixMultTransposedEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixMultTransposedEXT=", VALUEFUNC(_wrap___glewMatrixMultTransposedEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixMultTransposefEXT", VALUEFUNC(_wrap___glewMatrixMultTransposefEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixMultTransposefEXT=", VALUEFUNC(_wrap___glewMatrixMultTransposefEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixMultdEXT", VALUEFUNC(_wrap___glewMatrixMultdEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixMultdEXT=", VALUEFUNC(_wrap___glewMatrixMultdEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixMultfEXT", VALUEFUNC(_wrap___glewMatrixMultfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixMultfEXT=", VALUEFUNC(_wrap___glewMatrixMultfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixOrthoEXT", VALUEFUNC(_wrap___glewMatrixOrthoEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixOrthoEXT=", VALUEFUNC(_wrap___glewMatrixOrthoEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixPopEXT", VALUEFUNC(_wrap___glewMatrixPopEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixPopEXT=", VALUEFUNC(_wrap___glewMatrixPopEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixPushEXT", VALUEFUNC(_wrap___glewMatrixPushEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixPushEXT=", VALUEFUNC(_wrap___glewMatrixPushEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixRotatedEXT", VALUEFUNC(_wrap___glewMatrixRotatedEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixRotatedEXT=", VALUEFUNC(_wrap___glewMatrixRotatedEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixRotatefEXT", VALUEFUNC(_wrap___glewMatrixRotatefEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixRotatefEXT=", VALUEFUNC(_wrap___glewMatrixRotatefEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixScaledEXT", VALUEFUNC(_wrap___glewMatrixScaledEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixScaledEXT=", VALUEFUNC(_wrap___glewMatrixScaledEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixScalefEXT", VALUEFUNC(_wrap___glewMatrixScalefEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixScalefEXT=", VALUEFUNC(_wrap___glewMatrixScalefEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixTranslatedEXT", VALUEFUNC(_wrap___glewMatrixTranslatedEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixTranslatedEXT=", VALUEFUNC(_wrap___glewMatrixTranslatedEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMatrixTranslatefEXT", VALUEFUNC(_wrap___glewMatrixTranslatefEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMatrixTranslatefEXT=", VALUEFUNC(_wrap___glewMatrixTranslatefEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexBufferEXT", VALUEFUNC(_wrap___glewMultiTexBufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexBufferEXT=", VALUEFUNC(_wrap___glewMultiTexBufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoordPointerEXT", VALUEFUNC(_wrap___glewMultiTexCoordPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoordPointerEXT=", VALUEFUNC(_wrap___glewMultiTexCoordPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexEnvfEXT", VALUEFUNC(_wrap___glewMultiTexEnvfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexEnvfEXT=", VALUEFUNC(_wrap___glewMultiTexEnvfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexEnvfvEXT", VALUEFUNC(_wrap___glewMultiTexEnvfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexEnvfvEXT=", VALUEFUNC(_wrap___glewMultiTexEnvfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexEnviEXT", VALUEFUNC(_wrap___glewMultiTexEnviEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexEnviEXT=", VALUEFUNC(_wrap___glewMultiTexEnviEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexEnvivEXT", VALUEFUNC(_wrap___glewMultiTexEnvivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexEnvivEXT=", VALUEFUNC(_wrap___glewMultiTexEnvivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexGendEXT", VALUEFUNC(_wrap___glewMultiTexGendEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexGendEXT=", VALUEFUNC(_wrap___glewMultiTexGendEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexGendvEXT", VALUEFUNC(_wrap___glewMultiTexGendvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexGendvEXT=", VALUEFUNC(_wrap___glewMultiTexGendvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexGenfEXT", VALUEFUNC(_wrap___glewMultiTexGenfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexGenfEXT=", VALUEFUNC(_wrap___glewMultiTexGenfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexGenfvEXT", VALUEFUNC(_wrap___glewMultiTexGenfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexGenfvEXT=", VALUEFUNC(_wrap___glewMultiTexGenfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexGeniEXT", VALUEFUNC(_wrap___glewMultiTexGeniEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexGeniEXT=", VALUEFUNC(_wrap___glewMultiTexGeniEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexGenivEXT", VALUEFUNC(_wrap___glewMultiTexGenivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexGenivEXT=", VALUEFUNC(_wrap___glewMultiTexGenivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexImage1DEXT", VALUEFUNC(_wrap___glewMultiTexImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexImage1DEXT=", VALUEFUNC(_wrap___glewMultiTexImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexImage2DEXT", VALUEFUNC(_wrap___glewMultiTexImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexImage2DEXT=", VALUEFUNC(_wrap___glewMultiTexImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexImage3DEXT", VALUEFUNC(_wrap___glewMultiTexImage3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexImage3DEXT=", VALUEFUNC(_wrap___glewMultiTexImage3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexParameterIivEXT", VALUEFUNC(_wrap___glewMultiTexParameterIivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexParameterIivEXT=", VALUEFUNC(_wrap___glewMultiTexParameterIivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexParameterIuivEXT", VALUEFUNC(_wrap___glewMultiTexParameterIuivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexParameterIuivEXT=", VALUEFUNC(_wrap___glewMultiTexParameterIuivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexParameterfEXT", VALUEFUNC(_wrap___glewMultiTexParameterfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexParameterfEXT=", VALUEFUNC(_wrap___glewMultiTexParameterfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexParameterfvEXT", VALUEFUNC(_wrap___glewMultiTexParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexParameterfvEXT=", VALUEFUNC(_wrap___glewMultiTexParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexParameteriEXT", VALUEFUNC(_wrap___glewMultiTexParameteriEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexParameteriEXT=", VALUEFUNC(_wrap___glewMultiTexParameteriEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexParameterivEXT", VALUEFUNC(_wrap___glewMultiTexParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexParameterivEXT=", VALUEFUNC(_wrap___glewMultiTexParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexRenderbufferEXT", VALUEFUNC(_wrap___glewMultiTexRenderbufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexRenderbufferEXT=", VALUEFUNC(_wrap___glewMultiTexRenderbufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexSubImage1DEXT", VALUEFUNC(_wrap___glewMultiTexSubImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexSubImage1DEXT=", VALUEFUNC(_wrap___glewMultiTexSubImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexSubImage2DEXT", VALUEFUNC(_wrap___glewMultiTexSubImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexSubImage2DEXT=", VALUEFUNC(_wrap___glewMultiTexSubImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexSubImage3DEXT", VALUEFUNC(_wrap___glewMultiTexSubImage3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexSubImage3DEXT=", VALUEFUNC(_wrap___glewMultiTexSubImage3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedBufferDataEXT", VALUEFUNC(_wrap___glewNamedBufferDataEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedBufferDataEXT=", VALUEFUNC(_wrap___glewNamedBufferDataEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedBufferSubDataEXT", VALUEFUNC(_wrap___glewNamedBufferSubDataEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedBufferSubDataEXT=", VALUEFUNC(_wrap___glewNamedBufferSubDataEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferRenderbufferEXT", VALUEFUNC(_wrap___glewNamedFramebufferRenderbufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferRenderbufferEXT=", VALUEFUNC(_wrap___glewNamedFramebufferRenderbufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferTexture1DEXT", VALUEFUNC(_wrap___glewNamedFramebufferTexture1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferTexture1DEXT=", VALUEFUNC(_wrap___glewNamedFramebufferTexture1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferTexture2DEXT", VALUEFUNC(_wrap___glewNamedFramebufferTexture2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferTexture2DEXT=", VALUEFUNC(_wrap___glewNamedFramebufferTexture2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferTexture3DEXT", VALUEFUNC(_wrap___glewNamedFramebufferTexture3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferTexture3DEXT=", VALUEFUNC(_wrap___glewNamedFramebufferTexture3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferTextureEXT", VALUEFUNC(_wrap___glewNamedFramebufferTextureEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferTextureEXT=", VALUEFUNC(_wrap___glewNamedFramebufferTextureEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferTextureFaceEXT", VALUEFUNC(_wrap___glewNamedFramebufferTextureFaceEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferTextureFaceEXT=", VALUEFUNC(_wrap___glewNamedFramebufferTextureFaceEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferTextureLayerEXT", VALUEFUNC(_wrap___glewNamedFramebufferTextureLayerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedFramebufferTextureLayerEXT=", VALUEFUNC(_wrap___glewNamedFramebufferTextureLayerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameter4dEXT", VALUEFUNC(_wrap___glewNamedProgramLocalParameter4dEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameter4dEXT=", VALUEFUNC(_wrap___glewNamedProgramLocalParameter4dEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameter4dvEXT", VALUEFUNC(_wrap___glewNamedProgramLocalParameter4dvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameter4dvEXT=", VALUEFUNC(_wrap___glewNamedProgramLocalParameter4dvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameter4fEXT", VALUEFUNC(_wrap___glewNamedProgramLocalParameter4fEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameter4fEXT=", VALUEFUNC(_wrap___glewNamedProgramLocalParameter4fEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameter4fvEXT", VALUEFUNC(_wrap___glewNamedProgramLocalParameter4fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameter4fvEXT=", VALUEFUNC(_wrap___glewNamedProgramLocalParameter4fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameterI4iEXT", VALUEFUNC(_wrap___glewNamedProgramLocalParameterI4iEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameterI4iEXT=", VALUEFUNC(_wrap___glewNamedProgramLocalParameterI4iEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameterI4ivEXT", VALUEFUNC(_wrap___glewNamedProgramLocalParameterI4ivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameterI4ivEXT=", VALUEFUNC(_wrap___glewNamedProgramLocalParameterI4ivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameterI4uiEXT", VALUEFUNC(_wrap___glewNamedProgramLocalParameterI4uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameterI4uiEXT=", VALUEFUNC(_wrap___glewNamedProgramLocalParameterI4uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameterI4uivEXT", VALUEFUNC(_wrap___glewNamedProgramLocalParameterI4uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameterI4uivEXT=", VALUEFUNC(_wrap___glewNamedProgramLocalParameterI4uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameters4fvEXT", VALUEFUNC(_wrap___glewNamedProgramLocalParameters4fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParameters4fvEXT=", VALUEFUNC(_wrap___glewNamedProgramLocalParameters4fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParametersI4ivEXT", VALUEFUNC(_wrap___glewNamedProgramLocalParametersI4ivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParametersI4ivEXT=", VALUEFUNC(_wrap___glewNamedProgramLocalParametersI4ivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParametersI4uivEXT", VALUEFUNC(_wrap___glewNamedProgramLocalParametersI4uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedProgramLocalParametersI4uivEXT=", VALUEFUNC(_wrap___glewNamedProgramLocalParametersI4uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedProgramStringEXT", VALUEFUNC(_wrap___glewNamedProgramStringEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedProgramStringEXT=", VALUEFUNC(_wrap___glewNamedProgramStringEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedRenderbufferStorageEXT", VALUEFUNC(_wrap___glewNamedRenderbufferStorageEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedRenderbufferStorageEXT=", VALUEFUNC(_wrap___glewNamedRenderbufferStorageEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedRenderbufferStorageMultisampleCoverageEXT", VALUEFUNC(_wrap___glewNamedRenderbufferStorageMultisampleCoverageEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedRenderbufferStorageMultisampleCoverageEXT=", VALUEFUNC(_wrap___glewNamedRenderbufferStorageMultisampleCoverageEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNamedRenderbufferStorageMultisampleEXT", VALUEFUNC(_wrap___glewNamedRenderbufferStorageMultisampleEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNamedRenderbufferStorageMultisampleEXT=", VALUEFUNC(_wrap___glewNamedRenderbufferStorageMultisampleEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform1fEXT", VALUEFUNC(_wrap___glewProgramUniform1fEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform1fEXT=", VALUEFUNC(_wrap___glewProgramUniform1fEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform1fvEXT", VALUEFUNC(_wrap___glewProgramUniform1fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform1fvEXT=", VALUEFUNC(_wrap___glewProgramUniform1fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform1iEXT", VALUEFUNC(_wrap___glewProgramUniform1iEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform1iEXT=", VALUEFUNC(_wrap___glewProgramUniform1iEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform1ivEXT", VALUEFUNC(_wrap___glewProgramUniform1ivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform1ivEXT=", VALUEFUNC(_wrap___glewProgramUniform1ivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform1uiEXT", VALUEFUNC(_wrap___glewProgramUniform1uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform1uiEXT=", VALUEFUNC(_wrap___glewProgramUniform1uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform1uivEXT", VALUEFUNC(_wrap___glewProgramUniform1uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform1uivEXT=", VALUEFUNC(_wrap___glewProgramUniform1uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform2fEXT", VALUEFUNC(_wrap___glewProgramUniform2fEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform2fEXT=", VALUEFUNC(_wrap___glewProgramUniform2fEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform2fvEXT", VALUEFUNC(_wrap___glewProgramUniform2fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform2fvEXT=", VALUEFUNC(_wrap___glewProgramUniform2fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform2iEXT", VALUEFUNC(_wrap___glewProgramUniform2iEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform2iEXT=", VALUEFUNC(_wrap___glewProgramUniform2iEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform2ivEXT", VALUEFUNC(_wrap___glewProgramUniform2ivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform2ivEXT=", VALUEFUNC(_wrap___glewProgramUniform2ivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform2uiEXT", VALUEFUNC(_wrap___glewProgramUniform2uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform2uiEXT=", VALUEFUNC(_wrap___glewProgramUniform2uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform2uivEXT", VALUEFUNC(_wrap___glewProgramUniform2uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform2uivEXT=", VALUEFUNC(_wrap___glewProgramUniform2uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform3fEXT", VALUEFUNC(_wrap___glewProgramUniform3fEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform3fEXT=", VALUEFUNC(_wrap___glewProgramUniform3fEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform3fvEXT", VALUEFUNC(_wrap___glewProgramUniform3fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform3fvEXT=", VALUEFUNC(_wrap___glewProgramUniform3fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform3iEXT", VALUEFUNC(_wrap___glewProgramUniform3iEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform3iEXT=", VALUEFUNC(_wrap___glewProgramUniform3iEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform3ivEXT", VALUEFUNC(_wrap___glewProgramUniform3ivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform3ivEXT=", VALUEFUNC(_wrap___glewProgramUniform3ivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform3uiEXT", VALUEFUNC(_wrap___glewProgramUniform3uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform3uiEXT=", VALUEFUNC(_wrap___glewProgramUniform3uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform3uivEXT", VALUEFUNC(_wrap___glewProgramUniform3uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform3uivEXT=", VALUEFUNC(_wrap___glewProgramUniform3uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform4fEXT", VALUEFUNC(_wrap___glewProgramUniform4fEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform4fEXT=", VALUEFUNC(_wrap___glewProgramUniform4fEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform4fvEXT", VALUEFUNC(_wrap___glewProgramUniform4fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform4fvEXT=", VALUEFUNC(_wrap___glewProgramUniform4fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform4iEXT", VALUEFUNC(_wrap___glewProgramUniform4iEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform4iEXT=", VALUEFUNC(_wrap___glewProgramUniform4iEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform4ivEXT", VALUEFUNC(_wrap___glewProgramUniform4ivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform4ivEXT=", VALUEFUNC(_wrap___glewProgramUniform4ivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform4uiEXT", VALUEFUNC(_wrap___glewProgramUniform4uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform4uiEXT=", VALUEFUNC(_wrap___glewProgramUniform4uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniform4uivEXT", VALUEFUNC(_wrap___glewProgramUniform4uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniform4uivEXT=", VALUEFUNC(_wrap___glewProgramUniform4uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix2fvEXT", VALUEFUNC(_wrap___glewProgramUniformMatrix2fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix2fvEXT=", VALUEFUNC(_wrap___glewProgramUniformMatrix2fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix2x3fvEXT", VALUEFUNC(_wrap___glewProgramUniformMatrix2x3fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix2x3fvEXT=", VALUEFUNC(_wrap___glewProgramUniformMatrix2x3fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix2x4fvEXT", VALUEFUNC(_wrap___glewProgramUniformMatrix2x4fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix2x4fvEXT=", VALUEFUNC(_wrap___glewProgramUniformMatrix2x4fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix3fvEXT", VALUEFUNC(_wrap___glewProgramUniformMatrix3fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix3fvEXT=", VALUEFUNC(_wrap___glewProgramUniformMatrix3fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix3x2fvEXT", VALUEFUNC(_wrap___glewProgramUniformMatrix3x2fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix3x2fvEXT=", VALUEFUNC(_wrap___glewProgramUniformMatrix3x2fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix3x4fvEXT", VALUEFUNC(_wrap___glewProgramUniformMatrix3x4fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix3x4fvEXT=", VALUEFUNC(_wrap___glewProgramUniformMatrix3x4fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix4fvEXT", VALUEFUNC(_wrap___glewProgramUniformMatrix4fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix4fvEXT=", VALUEFUNC(_wrap___glewProgramUniformMatrix4fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix4x2fvEXT", VALUEFUNC(_wrap___glewProgramUniformMatrix4x2fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix4x2fvEXT=", VALUEFUNC(_wrap___glewProgramUniformMatrix4x2fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix4x3fvEXT", VALUEFUNC(_wrap___glewProgramUniformMatrix4x3fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramUniformMatrix4x3fvEXT=", VALUEFUNC(_wrap___glewProgramUniformMatrix4x3fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewPushClientAttribDefaultEXT", VALUEFUNC(_wrap___glewPushClientAttribDefaultEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewPushClientAttribDefaultEXT=", VALUEFUNC(_wrap___glewPushClientAttribDefaultEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureBufferEXT", VALUEFUNC(_wrap___glewTextureBufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureBufferEXT=", VALUEFUNC(_wrap___glewTextureBufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureImage1DEXT", VALUEFUNC(_wrap___glewTextureImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureImage1DEXT=", VALUEFUNC(_wrap___glewTextureImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureImage2DEXT", VALUEFUNC(_wrap___glewTextureImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureImage2DEXT=", VALUEFUNC(_wrap___glewTextureImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureImage3DEXT", VALUEFUNC(_wrap___glewTextureImage3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureImage3DEXT=", VALUEFUNC(_wrap___glewTextureImage3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureParameterIivEXT", VALUEFUNC(_wrap___glewTextureParameterIivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureParameterIivEXT=", VALUEFUNC(_wrap___glewTextureParameterIivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureParameterIuivEXT", VALUEFUNC(_wrap___glewTextureParameterIuivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureParameterIuivEXT=", VALUEFUNC(_wrap___glewTextureParameterIuivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureParameterfEXT", VALUEFUNC(_wrap___glewTextureParameterfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureParameterfEXT=", VALUEFUNC(_wrap___glewTextureParameterfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureParameterfvEXT", VALUEFUNC(_wrap___glewTextureParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureParameterfvEXT=", VALUEFUNC(_wrap___glewTextureParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureParameteriEXT", VALUEFUNC(_wrap___glewTextureParameteriEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureParameteriEXT=", VALUEFUNC(_wrap___glewTextureParameteriEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureParameterivEXT", VALUEFUNC(_wrap___glewTextureParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureParameterivEXT=", VALUEFUNC(_wrap___glewTextureParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureRenderbufferEXT", VALUEFUNC(_wrap___glewTextureRenderbufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureRenderbufferEXT=", VALUEFUNC(_wrap___glewTextureRenderbufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureSubImage1DEXT", VALUEFUNC(_wrap___glewTextureSubImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureSubImage1DEXT=", VALUEFUNC(_wrap___glewTextureSubImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureSubImage2DEXT", VALUEFUNC(_wrap___glewTextureSubImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureSubImage2DEXT=", VALUEFUNC(_wrap___glewTextureSubImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureSubImage3DEXT", VALUEFUNC(_wrap___glewTextureSubImage3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureSubImage3DEXT=", VALUEFUNC(_wrap___glewTextureSubImage3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewUnmapNamedBufferEXT", VALUEFUNC(_wrap___glewUnmapNamedBufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewUnmapNamedBufferEXT=", VALUEFUNC(_wrap___glewUnmapNamedBufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorMaskIndexedEXT", VALUEFUNC(_wrap___glewColorMaskIndexedEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorMaskIndexedEXT=", VALUEFUNC(_wrap___glewColorMaskIndexedEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDisableIndexedEXT", VALUEFUNC(_wrap___glewDisableIndexedEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDisableIndexedEXT=", VALUEFUNC(_wrap___glewDisableIndexedEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewEnableIndexedEXT", VALUEFUNC(_wrap___glewEnableIndexedEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewEnableIndexedEXT=", VALUEFUNC(_wrap___glewEnableIndexedEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetBooleanIndexedvEXT", VALUEFUNC(_wrap___glewGetBooleanIndexedvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetBooleanIndexedvEXT=", VALUEFUNC(_wrap___glewGetBooleanIndexedvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetIntegerIndexedvEXT", VALUEFUNC(_wrap___glewGetIntegerIndexedvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetIntegerIndexedvEXT=", VALUEFUNC(_wrap___glewGetIntegerIndexedvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsEnabledIndexedEXT", VALUEFUNC(_wrap___glewIsEnabledIndexedEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsEnabledIndexedEXT=", VALUEFUNC(_wrap___glewIsEnabledIndexedEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawArraysInstancedEXT", VALUEFUNC(_wrap___glewDrawArraysInstancedEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawArraysInstancedEXT=", VALUEFUNC(_wrap___glewDrawArraysInstancedEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawElementsInstancedEXT", VALUEFUNC(_wrap___glewDrawElementsInstancedEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawElementsInstancedEXT=", VALUEFUNC(_wrap___glewDrawElementsInstancedEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawRangeElementsEXT", VALUEFUNC(_wrap___glewDrawRangeElementsEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawRangeElementsEXT=", VALUEFUNC(_wrap___glewDrawRangeElementsEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogCoordPointerEXT", VALUEFUNC(_wrap___glewFogCoordPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogCoordPointerEXT=", VALUEFUNC(_wrap___glewFogCoordPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogCoorddEXT", VALUEFUNC(_wrap___glewFogCoorddEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogCoorddEXT=", VALUEFUNC(_wrap___glewFogCoorddEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogCoorddvEXT", VALUEFUNC(_wrap___glewFogCoorddvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogCoorddvEXT=", VALUEFUNC(_wrap___glewFogCoorddvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogCoordfEXT", VALUEFUNC(_wrap___glewFogCoordfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogCoordfEXT=", VALUEFUNC(_wrap___glewFogCoordfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogCoordfvEXT", VALUEFUNC(_wrap___glewFogCoordfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogCoordfvEXT=", VALUEFUNC(_wrap___glewFogCoordfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentColorMaterialEXT", VALUEFUNC(_wrap___glewFragmentColorMaterialEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentColorMaterialEXT=", VALUEFUNC(_wrap___glewFragmentColorMaterialEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModelfEXT", VALUEFUNC(_wrap___glewFragmentLightModelfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModelfEXT=", VALUEFUNC(_wrap___glewFragmentLightModelfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModelfvEXT", VALUEFUNC(_wrap___glewFragmentLightModelfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModelfvEXT=", VALUEFUNC(_wrap___glewFragmentLightModelfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModeliEXT", VALUEFUNC(_wrap___glewFragmentLightModeliEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModeliEXT=", VALUEFUNC(_wrap___glewFragmentLightModeliEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModelivEXT", VALUEFUNC(_wrap___glewFragmentLightModelivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModelivEXT=", VALUEFUNC(_wrap___glewFragmentLightModelivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightfEXT", VALUEFUNC(_wrap___glewFragmentLightfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightfEXT=", VALUEFUNC(_wrap___glewFragmentLightfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightfvEXT", VALUEFUNC(_wrap___glewFragmentLightfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightfvEXT=", VALUEFUNC(_wrap___glewFragmentLightfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightiEXT", VALUEFUNC(_wrap___glewFragmentLightiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightiEXT=", VALUEFUNC(_wrap___glewFragmentLightiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightivEXT", VALUEFUNC(_wrap___glewFragmentLightivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightivEXT=", VALUEFUNC(_wrap___glewFragmentLightivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialfEXT", VALUEFUNC(_wrap___glewFragmentMaterialfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialfEXT=", VALUEFUNC(_wrap___glewFragmentMaterialfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialfvEXT", VALUEFUNC(_wrap___glewFragmentMaterialfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialfvEXT=", VALUEFUNC(_wrap___glewFragmentMaterialfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialiEXT", VALUEFUNC(_wrap___glewFragmentMaterialiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialiEXT=", VALUEFUNC(_wrap___glewFragmentMaterialiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialivEXT", VALUEFUNC(_wrap___glewFragmentMaterialivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialivEXT=", VALUEFUNC(_wrap___glewFragmentMaterialivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFragmentLightfvEXT", VALUEFUNC(_wrap___glewGetFragmentLightfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFragmentLightfvEXT=", VALUEFUNC(_wrap___glewGetFragmentLightfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFragmentLightivEXT", VALUEFUNC(_wrap___glewGetFragmentLightivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFragmentLightivEXT=", VALUEFUNC(_wrap___glewGetFragmentLightivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFragmentMaterialfvEXT", VALUEFUNC(_wrap___glewGetFragmentMaterialfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFragmentMaterialfvEXT=", VALUEFUNC(_wrap___glewGetFragmentMaterialfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFragmentMaterialivEXT", VALUEFUNC(_wrap___glewGetFragmentMaterialivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFragmentMaterialivEXT=", VALUEFUNC(_wrap___glewGetFragmentMaterialivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewLightEnviEXT", VALUEFUNC(_wrap___glewLightEnviEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewLightEnviEXT=", VALUEFUNC(_wrap___glewLightEnviEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBlitFramebufferEXT", VALUEFUNC(_wrap___glewBlitFramebufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBlitFramebufferEXT=", VALUEFUNC(_wrap___glewBlitFramebufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewRenderbufferStorageMultisampleEXT", VALUEFUNC(_wrap___glewRenderbufferStorageMultisampleEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewRenderbufferStorageMultisampleEXT=", VALUEFUNC(_wrap___glewRenderbufferStorageMultisampleEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindFramebufferEXT", VALUEFUNC(_wrap___glewBindFramebufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindFramebufferEXT=", VALUEFUNC(_wrap___glewBindFramebufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindRenderbufferEXT", VALUEFUNC(_wrap___glewBindRenderbufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindRenderbufferEXT=", VALUEFUNC(_wrap___glewBindRenderbufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewCheckFramebufferStatusEXT", VALUEFUNC(_wrap___glewCheckFramebufferStatusEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewCheckFramebufferStatusEXT=", VALUEFUNC(_wrap___glewCheckFramebufferStatusEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteFramebuffersEXT", VALUEFUNC(_wrap___glewDeleteFramebuffersEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteFramebuffersEXT=", VALUEFUNC(_wrap___glewDeleteFramebuffersEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteRenderbuffersEXT", VALUEFUNC(_wrap___glewDeleteRenderbuffersEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteRenderbuffersEXT=", VALUEFUNC(_wrap___glewDeleteRenderbuffersEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferRenderbufferEXT", VALUEFUNC(_wrap___glewFramebufferRenderbufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferRenderbufferEXT=", VALUEFUNC(_wrap___glewFramebufferRenderbufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexture1DEXT", VALUEFUNC(_wrap___glewFramebufferTexture1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexture1DEXT=", VALUEFUNC(_wrap___glewFramebufferTexture1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexture2DEXT", VALUEFUNC(_wrap___glewFramebufferTexture2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexture2DEXT=", VALUEFUNC(_wrap___glewFramebufferTexture2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexture3DEXT", VALUEFUNC(_wrap___glewFramebufferTexture3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferTexture3DEXT=", VALUEFUNC(_wrap___glewFramebufferTexture3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenFramebuffersEXT", VALUEFUNC(_wrap___glewGenFramebuffersEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenFramebuffersEXT=", VALUEFUNC(_wrap___glewGenFramebuffersEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenRenderbuffersEXT", VALUEFUNC(_wrap___glewGenRenderbuffersEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenRenderbuffersEXT=", VALUEFUNC(_wrap___glewGenRenderbuffersEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenerateMipmapEXT", VALUEFUNC(_wrap___glewGenerateMipmapEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenerateMipmapEXT=", VALUEFUNC(_wrap___glewGenerateMipmapEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFramebufferAttachmentParameterivEXT", VALUEFUNC(_wrap___glewGetFramebufferAttachmentParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFramebufferAttachmentParameterivEXT=", VALUEFUNC(_wrap___glewGetFramebufferAttachmentParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetRenderbufferParameterivEXT", VALUEFUNC(_wrap___glewGetRenderbufferParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetRenderbufferParameterivEXT=", VALUEFUNC(_wrap___glewGetRenderbufferParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsFramebufferEXT", VALUEFUNC(_wrap___glewIsFramebufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsFramebufferEXT=", VALUEFUNC(_wrap___glewIsFramebufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsRenderbufferEXT", VALUEFUNC(_wrap___glewIsRenderbufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsRenderbufferEXT=", VALUEFUNC(_wrap___glewIsRenderbufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewRenderbufferStorageEXT", VALUEFUNC(_wrap___glewRenderbufferStorageEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewRenderbufferStorageEXT=", VALUEFUNC(_wrap___glewRenderbufferStorageEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferTextureEXT", VALUEFUNC(_wrap___glewFramebufferTextureEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferTextureEXT=", VALUEFUNC(_wrap___glewFramebufferTextureEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferTextureFaceEXT", VALUEFUNC(_wrap___glewFramebufferTextureFaceEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferTextureFaceEXT=", VALUEFUNC(_wrap___glewFramebufferTextureFaceEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFramebufferTextureLayerEXT", VALUEFUNC(_wrap___glewFramebufferTextureLayerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewFramebufferTextureLayerEXT=", VALUEFUNC(_wrap___glewFramebufferTextureLayerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramParameteriEXT", VALUEFUNC(_wrap___glewProgramParameteriEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramParameteriEXT=", VALUEFUNC(_wrap___glewProgramParameteriEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameters4fvEXT", VALUEFUNC(_wrap___glewProgramEnvParameters4fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameters4fvEXT=", VALUEFUNC(_wrap___glewProgramEnvParameters4fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameters4fvEXT", VALUEFUNC(_wrap___glewProgramLocalParameters4fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameters4fvEXT=", VALUEFUNC(_wrap___glewProgramLocalParameters4fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindFragDataLocationEXT", VALUEFUNC(_wrap___glewBindFragDataLocationEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindFragDataLocationEXT=", VALUEFUNC(_wrap___glewBindFragDataLocationEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFragDataLocationEXT", VALUEFUNC(_wrap___glewGetFragDataLocationEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFragDataLocationEXT=", VALUEFUNC(_wrap___glewGetFragDataLocationEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetUniformuivEXT", VALUEFUNC(_wrap___glewGetUniformuivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetUniformuivEXT=", VALUEFUNC(_wrap___glewGetUniformuivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribIivEXT", VALUEFUNC(_wrap___glewGetVertexAttribIivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribIivEXT=", VALUEFUNC(_wrap___glewGetVertexAttribIivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribIuivEXT", VALUEFUNC(_wrap___glewGetVertexAttribIuivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribIuivEXT=", VALUEFUNC(_wrap___glewGetVertexAttribIuivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform1uiEXT", VALUEFUNC(_wrap___glewUniform1uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform1uiEXT=", VALUEFUNC(_wrap___glewUniform1uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform1uivEXT", VALUEFUNC(_wrap___glewUniform1uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform1uivEXT=", VALUEFUNC(_wrap___glewUniform1uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform2uiEXT", VALUEFUNC(_wrap___glewUniform2uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform2uiEXT=", VALUEFUNC(_wrap___glewUniform2uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform2uivEXT", VALUEFUNC(_wrap___glewUniform2uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform2uivEXT=", VALUEFUNC(_wrap___glewUniform2uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform3uiEXT", VALUEFUNC(_wrap___glewUniform3uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform3uiEXT=", VALUEFUNC(_wrap___glewUniform3uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform3uivEXT", VALUEFUNC(_wrap___glewUniform3uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform3uivEXT=", VALUEFUNC(_wrap___glewUniform3uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform4uiEXT", VALUEFUNC(_wrap___glewUniform4uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform4uiEXT=", VALUEFUNC(_wrap___glewUniform4uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewUniform4uivEXT", VALUEFUNC(_wrap___glewUniform4uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewUniform4uivEXT=", VALUEFUNC(_wrap___glewUniform4uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1iEXT", VALUEFUNC(_wrap___glewVertexAttribI1iEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1iEXT=", VALUEFUNC(_wrap___glewVertexAttribI1iEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1ivEXT", VALUEFUNC(_wrap___glewVertexAttribI1ivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1ivEXT=", VALUEFUNC(_wrap___glewVertexAttribI1ivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1uiEXT", VALUEFUNC(_wrap___glewVertexAttribI1uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1uiEXT=", VALUEFUNC(_wrap___glewVertexAttribI1uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1uivEXT", VALUEFUNC(_wrap___glewVertexAttribI1uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI1uivEXT=", VALUEFUNC(_wrap___glewVertexAttribI1uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2iEXT", VALUEFUNC(_wrap___glewVertexAttribI2iEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2iEXT=", VALUEFUNC(_wrap___glewVertexAttribI2iEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2ivEXT", VALUEFUNC(_wrap___glewVertexAttribI2ivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2ivEXT=", VALUEFUNC(_wrap___glewVertexAttribI2ivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2uiEXT", VALUEFUNC(_wrap___glewVertexAttribI2uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2uiEXT=", VALUEFUNC(_wrap___glewVertexAttribI2uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2uivEXT", VALUEFUNC(_wrap___glewVertexAttribI2uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI2uivEXT=", VALUEFUNC(_wrap___glewVertexAttribI2uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3iEXT", VALUEFUNC(_wrap___glewVertexAttribI3iEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3iEXT=", VALUEFUNC(_wrap___glewVertexAttribI3iEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3ivEXT", VALUEFUNC(_wrap___glewVertexAttribI3ivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3ivEXT=", VALUEFUNC(_wrap___glewVertexAttribI3ivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3uiEXT", VALUEFUNC(_wrap___glewVertexAttribI3uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3uiEXT=", VALUEFUNC(_wrap___glewVertexAttribI3uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3uivEXT", VALUEFUNC(_wrap___glewVertexAttribI3uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI3uivEXT=", VALUEFUNC(_wrap___glewVertexAttribI3uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4bvEXT", VALUEFUNC(_wrap___glewVertexAttribI4bvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4bvEXT=", VALUEFUNC(_wrap___glewVertexAttribI4bvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4iEXT", VALUEFUNC(_wrap___glewVertexAttribI4iEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4iEXT=", VALUEFUNC(_wrap___glewVertexAttribI4iEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4ivEXT", VALUEFUNC(_wrap___glewVertexAttribI4ivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4ivEXT=", VALUEFUNC(_wrap___glewVertexAttribI4ivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4svEXT", VALUEFUNC(_wrap___glewVertexAttribI4svEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4svEXT=", VALUEFUNC(_wrap___glewVertexAttribI4svEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4ubvEXT", VALUEFUNC(_wrap___glewVertexAttribI4ubvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4ubvEXT=", VALUEFUNC(_wrap___glewVertexAttribI4ubvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4uiEXT", VALUEFUNC(_wrap___glewVertexAttribI4uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4uiEXT=", VALUEFUNC(_wrap___glewVertexAttribI4uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4uivEXT", VALUEFUNC(_wrap___glewVertexAttribI4uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4uivEXT=", VALUEFUNC(_wrap___glewVertexAttribI4uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4usvEXT", VALUEFUNC(_wrap___glewVertexAttribI4usvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribI4usvEXT=", VALUEFUNC(_wrap___glewVertexAttribI4usvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribIPointerEXT", VALUEFUNC(_wrap___glewVertexAttribIPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribIPointerEXT=", VALUEFUNC(_wrap___glewVertexAttribIPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetHistogramEXT", VALUEFUNC(_wrap___glewGetHistogramEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetHistogramEXT=", VALUEFUNC(_wrap___glewGetHistogramEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetHistogramParameterfvEXT", VALUEFUNC(_wrap___glewGetHistogramParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetHistogramParameterfvEXT=", VALUEFUNC(_wrap___glewGetHistogramParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetHistogramParameterivEXT", VALUEFUNC(_wrap___glewGetHistogramParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetHistogramParameterivEXT=", VALUEFUNC(_wrap___glewGetHistogramParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMinmaxEXT", VALUEFUNC(_wrap___glewGetMinmaxEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMinmaxEXT=", VALUEFUNC(_wrap___glewGetMinmaxEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMinmaxParameterfvEXT", VALUEFUNC(_wrap___glewGetMinmaxParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMinmaxParameterfvEXT=", VALUEFUNC(_wrap___glewGetMinmaxParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMinmaxParameterivEXT", VALUEFUNC(_wrap___glewGetMinmaxParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMinmaxParameterivEXT=", VALUEFUNC(_wrap___glewGetMinmaxParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewHistogramEXT", VALUEFUNC(_wrap___glewHistogramEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewHistogramEXT=", VALUEFUNC(_wrap___glewHistogramEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMinmaxEXT", VALUEFUNC(_wrap___glewMinmaxEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMinmaxEXT=", VALUEFUNC(_wrap___glewMinmaxEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewResetHistogramEXT", VALUEFUNC(_wrap___glewResetHistogramEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewResetHistogramEXT=", VALUEFUNC(_wrap___glewResetHistogramEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewResetMinmaxEXT", VALUEFUNC(_wrap___glewResetMinmaxEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewResetMinmaxEXT=", VALUEFUNC(_wrap___glewResetMinmaxEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewIndexFuncEXT", VALUEFUNC(_wrap___glewIndexFuncEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewIndexFuncEXT=", VALUEFUNC(_wrap___glewIndexFuncEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewIndexMaterialEXT", VALUEFUNC(_wrap___glewIndexMaterialEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewIndexMaterialEXT=", VALUEFUNC(_wrap___glewIndexMaterialEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewApplyTextureEXT", VALUEFUNC(_wrap___glewApplyTextureEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewApplyTextureEXT=", VALUEFUNC(_wrap___glewApplyTextureEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureLightEXT", VALUEFUNC(_wrap___glewTextureLightEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureLightEXT=", VALUEFUNC(_wrap___glewTextureLightEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureMaterialEXT", VALUEFUNC(_wrap___glewTextureMaterialEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureMaterialEXT=", VALUEFUNC(_wrap___glewTextureMaterialEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiDrawArraysEXT", VALUEFUNC(_wrap___glewMultiDrawArraysEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiDrawArraysEXT=", VALUEFUNC(_wrap___glewMultiDrawArraysEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiDrawElementsEXT", VALUEFUNC(_wrap___glewMultiDrawElementsEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiDrawElementsEXT=", VALUEFUNC(_wrap___glewMultiDrawElementsEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSampleMaskEXT", VALUEFUNC(_wrap___glewSampleMaskEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSampleMaskEXT=", VALUEFUNC(_wrap___glewSampleMaskEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSamplePatternEXT", VALUEFUNC(_wrap___glewSamplePatternEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSamplePatternEXT=", VALUEFUNC(_wrap___glewSamplePatternEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorTableEXT", VALUEFUNC(_wrap___glewColorTableEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorTableEXT=", VALUEFUNC(_wrap___glewColorTableEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetColorTableEXT", VALUEFUNC(_wrap___glewGetColorTableEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetColorTableEXT=", VALUEFUNC(_wrap___glewGetColorTableEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetColorTableParameterfvEXT", VALUEFUNC(_wrap___glewGetColorTableParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetColorTableParameterfvEXT=", VALUEFUNC(_wrap___glewGetColorTableParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetColorTableParameterivEXT", VALUEFUNC(_wrap___glewGetColorTableParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetColorTableParameterivEXT=", VALUEFUNC(_wrap___glewGetColorTableParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetPixelTransformParameterfvEXT", VALUEFUNC(_wrap___glewGetPixelTransformParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetPixelTransformParameterfvEXT=", VALUEFUNC(_wrap___glewGetPixelTransformParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetPixelTransformParameterivEXT", VALUEFUNC(_wrap___glewGetPixelTransformParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetPixelTransformParameterivEXT=", VALUEFUNC(_wrap___glewGetPixelTransformParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewPixelTransformParameterfEXT", VALUEFUNC(_wrap___glewPixelTransformParameterfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewPixelTransformParameterfEXT=", VALUEFUNC(_wrap___glewPixelTransformParameterfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewPixelTransformParameterfvEXT", VALUEFUNC(_wrap___glewPixelTransformParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewPixelTransformParameterfvEXT=", VALUEFUNC(_wrap___glewPixelTransformParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewPixelTransformParameteriEXT", VALUEFUNC(_wrap___glewPixelTransformParameteriEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewPixelTransformParameteriEXT=", VALUEFUNC(_wrap___glewPixelTransformParameteriEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewPixelTransformParameterivEXT", VALUEFUNC(_wrap___glewPixelTransformParameterivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewPixelTransformParameterivEXT=", VALUEFUNC(_wrap___glewPixelTransformParameterivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewPointParameterfEXT", VALUEFUNC(_wrap___glewPointParameterfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewPointParameterfEXT=", VALUEFUNC(_wrap___glewPointParameterfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewPointParameterfvEXT", VALUEFUNC(_wrap___glewPointParameterfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewPointParameterfvEXT=", VALUEFUNC(_wrap___glewPointParameterfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewPolygonOffsetEXT", VALUEFUNC(_wrap___glewPolygonOffsetEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewPolygonOffsetEXT=", VALUEFUNC(_wrap___glewPolygonOffsetEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBeginSceneEXT", VALUEFUNC(_wrap___glewBeginSceneEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBeginSceneEXT=", VALUEFUNC(_wrap___glewBeginSceneEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewEndSceneEXT", VALUEFUNC(_wrap___glewEndSceneEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewEndSceneEXT=", VALUEFUNC(_wrap___glewEndSceneEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3bEXT", VALUEFUNC(_wrap___glewSecondaryColor3bEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3bEXT=", VALUEFUNC(_wrap___glewSecondaryColor3bEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3bvEXT", VALUEFUNC(_wrap___glewSecondaryColor3bvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3bvEXT=", VALUEFUNC(_wrap___glewSecondaryColor3bvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3dEXT", VALUEFUNC(_wrap___glewSecondaryColor3dEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3dEXT=", VALUEFUNC(_wrap___glewSecondaryColor3dEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3dvEXT", VALUEFUNC(_wrap___glewSecondaryColor3dvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3dvEXT=", VALUEFUNC(_wrap___glewSecondaryColor3dvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3fEXT", VALUEFUNC(_wrap___glewSecondaryColor3fEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3fEXT=", VALUEFUNC(_wrap___glewSecondaryColor3fEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3fvEXT", VALUEFUNC(_wrap___glewSecondaryColor3fvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3fvEXT=", VALUEFUNC(_wrap___glewSecondaryColor3fvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3iEXT", VALUEFUNC(_wrap___glewSecondaryColor3iEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3iEXT=", VALUEFUNC(_wrap___glewSecondaryColor3iEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3ivEXT", VALUEFUNC(_wrap___glewSecondaryColor3ivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3ivEXT=", VALUEFUNC(_wrap___glewSecondaryColor3ivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3sEXT", VALUEFUNC(_wrap___glewSecondaryColor3sEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3sEXT=", VALUEFUNC(_wrap___glewSecondaryColor3sEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3svEXT", VALUEFUNC(_wrap___glewSecondaryColor3svEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3svEXT=", VALUEFUNC(_wrap___glewSecondaryColor3svEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3ubEXT", VALUEFUNC(_wrap___glewSecondaryColor3ubEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3ubEXT=", VALUEFUNC(_wrap___glewSecondaryColor3ubEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3ubvEXT", VALUEFUNC(_wrap___glewSecondaryColor3ubvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3ubvEXT=", VALUEFUNC(_wrap___glewSecondaryColor3ubvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3uiEXT", VALUEFUNC(_wrap___glewSecondaryColor3uiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3uiEXT=", VALUEFUNC(_wrap___glewSecondaryColor3uiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3uivEXT", VALUEFUNC(_wrap___glewSecondaryColor3uivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3uivEXT=", VALUEFUNC(_wrap___glewSecondaryColor3uivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3usEXT", VALUEFUNC(_wrap___glewSecondaryColor3usEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3usEXT=", VALUEFUNC(_wrap___glewSecondaryColor3usEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3usvEXT", VALUEFUNC(_wrap___glewSecondaryColor3usvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3usvEXT=", VALUEFUNC(_wrap___glewSecondaryColor3usvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColorPointerEXT", VALUEFUNC(_wrap___glewSecondaryColorPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColorPointerEXT=", VALUEFUNC(_wrap___glewSecondaryColorPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewActiveStencilFaceEXT", VALUEFUNC(_wrap___glewActiveStencilFaceEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewActiveStencilFaceEXT=", VALUEFUNC(_wrap___glewActiveStencilFaceEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexSubImage1DEXT", VALUEFUNC(_wrap___glewTexSubImage1DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexSubImage1DEXT=", VALUEFUNC(_wrap___glewTexSubImage1DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexSubImage2DEXT", VALUEFUNC(_wrap___glewTexSubImage2DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexSubImage2DEXT=", VALUEFUNC(_wrap___glewTexSubImage2DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexSubImage3DEXT", VALUEFUNC(_wrap___glewTexSubImage3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexSubImage3DEXT=", VALUEFUNC(_wrap___glewTexSubImage3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexImage3DEXT", VALUEFUNC(_wrap___glewTexImage3DEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexImage3DEXT=", VALUEFUNC(_wrap___glewTexImage3DEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexBufferEXT", VALUEFUNC(_wrap___glewTexBufferEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexBufferEXT=", VALUEFUNC(_wrap___glewTexBufferEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewClearColorIiEXT", VALUEFUNC(_wrap___glewClearColorIiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewClearColorIiEXT=", VALUEFUNC(_wrap___glewClearColorIiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewClearColorIuiEXT", VALUEFUNC(_wrap___glewClearColorIuiEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewClearColorIuiEXT=", VALUEFUNC(_wrap___glewClearColorIuiEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTexParameterIivEXT", VALUEFUNC(_wrap___glewGetTexParameterIivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTexParameterIivEXT=", VALUEFUNC(_wrap___glewGetTexParameterIivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTexParameterIuivEXT", VALUEFUNC(_wrap___glewGetTexParameterIuivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTexParameterIuivEXT=", VALUEFUNC(_wrap___glewGetTexParameterIuivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexParameterIivEXT", VALUEFUNC(_wrap___glewTexParameterIivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexParameterIivEXT=", VALUEFUNC(_wrap___glewTexParameterIivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexParameterIuivEXT", VALUEFUNC(_wrap___glewTexParameterIuivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexParameterIuivEXT=", VALUEFUNC(_wrap___glewTexParameterIuivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewAreTexturesResidentEXT", VALUEFUNC(_wrap___glewAreTexturesResidentEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewAreTexturesResidentEXT=", VALUEFUNC(_wrap___glewAreTexturesResidentEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindTextureEXT", VALUEFUNC(_wrap___glewBindTextureEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindTextureEXT=", VALUEFUNC(_wrap___glewBindTextureEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteTexturesEXT", VALUEFUNC(_wrap___glewDeleteTexturesEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteTexturesEXT=", VALUEFUNC(_wrap___glewDeleteTexturesEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenTexturesEXT", VALUEFUNC(_wrap___glewGenTexturesEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenTexturesEXT=", VALUEFUNC(_wrap___glewGenTexturesEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsTextureEXT", VALUEFUNC(_wrap___glewIsTextureEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsTextureEXT=", VALUEFUNC(_wrap___glewIsTextureEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewPrioritizeTexturesEXT", VALUEFUNC(_wrap___glewPrioritizeTexturesEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewPrioritizeTexturesEXT=", VALUEFUNC(_wrap___glewPrioritizeTexturesEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureNormalEXT", VALUEFUNC(_wrap___glewTextureNormalEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureNormalEXT=", VALUEFUNC(_wrap___glewTextureNormalEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetQueryObjecti64vEXT", VALUEFUNC(_wrap___glewGetQueryObjecti64vEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetQueryObjecti64vEXT=", VALUEFUNC(_wrap___glewGetQueryObjecti64vEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetQueryObjectui64vEXT", VALUEFUNC(_wrap___glewGetQueryObjectui64vEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetQueryObjectui64vEXT=", VALUEFUNC(_wrap___glewGetQueryObjectui64vEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBeginTransformFeedbackEXT", VALUEFUNC(_wrap___glewBeginTransformFeedbackEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBeginTransformFeedbackEXT=", VALUEFUNC(_wrap___glewBeginTransformFeedbackEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindBufferBaseEXT", VALUEFUNC(_wrap___glewBindBufferBaseEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindBufferBaseEXT=", VALUEFUNC(_wrap___glewBindBufferBaseEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindBufferOffsetEXT", VALUEFUNC(_wrap___glewBindBufferOffsetEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindBufferOffsetEXT=", VALUEFUNC(_wrap___glewBindBufferOffsetEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindBufferRangeEXT", VALUEFUNC(_wrap___glewBindBufferRangeEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindBufferRangeEXT=", VALUEFUNC(_wrap___glewBindBufferRangeEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewEndTransformFeedbackEXT", VALUEFUNC(_wrap___glewEndTransformFeedbackEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewEndTransformFeedbackEXT=", VALUEFUNC(_wrap___glewEndTransformFeedbackEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTransformFeedbackVaryingEXT", VALUEFUNC(_wrap___glewGetTransformFeedbackVaryingEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTransformFeedbackVaryingEXT=", VALUEFUNC(_wrap___glewGetTransformFeedbackVaryingEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTransformFeedbackVaryingsEXT", VALUEFUNC(_wrap___glewTransformFeedbackVaryingsEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTransformFeedbackVaryingsEXT=", VALUEFUNC(_wrap___glewTransformFeedbackVaryingsEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewArrayElementEXT", VALUEFUNC(_wrap___glewArrayElementEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewArrayElementEXT=", VALUEFUNC(_wrap___glewArrayElementEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorPointerEXT", VALUEFUNC(_wrap___glewColorPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorPointerEXT=", VALUEFUNC(_wrap___glewColorPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawArraysEXT", VALUEFUNC(_wrap___glewDrawArraysEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawArraysEXT=", VALUEFUNC(_wrap___glewDrawArraysEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewEdgeFlagPointerEXT", VALUEFUNC(_wrap___glewEdgeFlagPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewEdgeFlagPointerEXT=", VALUEFUNC(_wrap___glewEdgeFlagPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetPointervEXT", VALUEFUNC(_wrap___glewGetPointervEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetPointervEXT=", VALUEFUNC(_wrap___glewGetPointervEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewIndexPointerEXT", VALUEFUNC(_wrap___glewIndexPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewIndexPointerEXT=", VALUEFUNC(_wrap___glewIndexPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormalPointerEXT", VALUEFUNC(_wrap___glewNormalPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormalPointerEXT=", VALUEFUNC(_wrap___glewNormalPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoordPointerEXT", VALUEFUNC(_wrap___glewTexCoordPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoordPointerEXT=", VALUEFUNC(_wrap___glewTexCoordPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexPointerEXT", VALUEFUNC(_wrap___glewVertexPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexPointerEXT=", VALUEFUNC(_wrap___glewVertexPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBeginVertexShaderEXT", VALUEFUNC(_wrap___glewBeginVertexShaderEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBeginVertexShaderEXT=", VALUEFUNC(_wrap___glewBeginVertexShaderEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindLightParameterEXT", VALUEFUNC(_wrap___glewBindLightParameterEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindLightParameterEXT=", VALUEFUNC(_wrap___glewBindLightParameterEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindMaterialParameterEXT", VALUEFUNC(_wrap___glewBindMaterialParameterEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindMaterialParameterEXT=", VALUEFUNC(_wrap___glewBindMaterialParameterEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindParameterEXT", VALUEFUNC(_wrap___glewBindParameterEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindParameterEXT=", VALUEFUNC(_wrap___glewBindParameterEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindTexGenParameterEXT", VALUEFUNC(_wrap___glewBindTexGenParameterEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindTexGenParameterEXT=", VALUEFUNC(_wrap___glewBindTexGenParameterEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindTextureUnitParameterEXT", VALUEFUNC(_wrap___glewBindTextureUnitParameterEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindTextureUnitParameterEXT=", VALUEFUNC(_wrap___glewBindTextureUnitParameterEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindVertexShaderEXT", VALUEFUNC(_wrap___glewBindVertexShaderEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindVertexShaderEXT=", VALUEFUNC(_wrap___glewBindVertexShaderEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteVertexShaderEXT", VALUEFUNC(_wrap___glewDeleteVertexShaderEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteVertexShaderEXT=", VALUEFUNC(_wrap___glewDeleteVertexShaderEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDisableVariantClientStateEXT", VALUEFUNC(_wrap___glewDisableVariantClientStateEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDisableVariantClientStateEXT=", VALUEFUNC(_wrap___glewDisableVariantClientStateEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewEnableVariantClientStateEXT", VALUEFUNC(_wrap___glewEnableVariantClientStateEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewEnableVariantClientStateEXT=", VALUEFUNC(_wrap___glewEnableVariantClientStateEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewEndVertexShaderEXT", VALUEFUNC(_wrap___glewEndVertexShaderEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewEndVertexShaderEXT=", VALUEFUNC(_wrap___glewEndVertexShaderEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewExtractComponentEXT", VALUEFUNC(_wrap___glewExtractComponentEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewExtractComponentEXT=", VALUEFUNC(_wrap___glewExtractComponentEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenSymbolsEXT", VALUEFUNC(_wrap___glewGenSymbolsEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenSymbolsEXT=", VALUEFUNC(_wrap___glewGenSymbolsEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenVertexShadersEXT", VALUEFUNC(_wrap___glewGenVertexShadersEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenVertexShadersEXT=", VALUEFUNC(_wrap___glewGenVertexShadersEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetInvariantBooleanvEXT", VALUEFUNC(_wrap___glewGetInvariantBooleanvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetInvariantBooleanvEXT=", VALUEFUNC(_wrap___glewGetInvariantBooleanvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetInvariantFloatvEXT", VALUEFUNC(_wrap___glewGetInvariantFloatvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetInvariantFloatvEXT=", VALUEFUNC(_wrap___glewGetInvariantFloatvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetInvariantIntegervEXT", VALUEFUNC(_wrap___glewGetInvariantIntegervEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetInvariantIntegervEXT=", VALUEFUNC(_wrap___glewGetInvariantIntegervEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetLocalConstantBooleanvEXT", VALUEFUNC(_wrap___glewGetLocalConstantBooleanvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetLocalConstantBooleanvEXT=", VALUEFUNC(_wrap___glewGetLocalConstantBooleanvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetLocalConstantFloatvEXT", VALUEFUNC(_wrap___glewGetLocalConstantFloatvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetLocalConstantFloatvEXT=", VALUEFUNC(_wrap___glewGetLocalConstantFloatvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetLocalConstantIntegervEXT", VALUEFUNC(_wrap___glewGetLocalConstantIntegervEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetLocalConstantIntegervEXT=", VALUEFUNC(_wrap___glewGetLocalConstantIntegervEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVariantBooleanvEXT", VALUEFUNC(_wrap___glewGetVariantBooleanvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVariantBooleanvEXT=", VALUEFUNC(_wrap___glewGetVariantBooleanvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVariantFloatvEXT", VALUEFUNC(_wrap___glewGetVariantFloatvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVariantFloatvEXT=", VALUEFUNC(_wrap___glewGetVariantFloatvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVariantIntegervEXT", VALUEFUNC(_wrap___glewGetVariantIntegervEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVariantIntegervEXT=", VALUEFUNC(_wrap___glewGetVariantIntegervEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVariantPointervEXT", VALUEFUNC(_wrap___glewGetVariantPointervEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVariantPointervEXT=", VALUEFUNC(_wrap___glewGetVariantPointervEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewInsertComponentEXT", VALUEFUNC(_wrap___glewInsertComponentEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewInsertComponentEXT=", VALUEFUNC(_wrap___glewInsertComponentEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsVariantEnabledEXT", VALUEFUNC(_wrap___glewIsVariantEnabledEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsVariantEnabledEXT=", VALUEFUNC(_wrap___glewIsVariantEnabledEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSetInvariantEXT", VALUEFUNC(_wrap___glewSetInvariantEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSetInvariantEXT=", VALUEFUNC(_wrap___glewSetInvariantEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSetLocalConstantEXT", VALUEFUNC(_wrap___glewSetLocalConstantEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSetLocalConstantEXT=", VALUEFUNC(_wrap___glewSetLocalConstantEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewShaderOp1EXT", VALUEFUNC(_wrap___glewShaderOp1EXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewShaderOp1EXT=", VALUEFUNC(_wrap___glewShaderOp1EXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewShaderOp2EXT", VALUEFUNC(_wrap___glewShaderOp2EXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewShaderOp2EXT=", VALUEFUNC(_wrap___glewShaderOp2EXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewShaderOp3EXT", VALUEFUNC(_wrap___glewShaderOp3EXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewShaderOp3EXT=", VALUEFUNC(_wrap___glewShaderOp3EXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewSwizzleEXT", VALUEFUNC(_wrap___glewSwizzleEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewSwizzleEXT=", VALUEFUNC(_wrap___glewSwizzleEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVariantPointerEXT", VALUEFUNC(_wrap___glewVariantPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVariantPointerEXT=", VALUEFUNC(_wrap___glewVariantPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVariantbvEXT", VALUEFUNC(_wrap___glewVariantbvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVariantbvEXT=", VALUEFUNC(_wrap___glewVariantbvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVariantdvEXT", VALUEFUNC(_wrap___glewVariantdvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVariantdvEXT=", VALUEFUNC(_wrap___glewVariantdvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVariantfvEXT", VALUEFUNC(_wrap___glewVariantfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVariantfvEXT=", VALUEFUNC(_wrap___glewVariantfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVariantivEXT", VALUEFUNC(_wrap___glewVariantivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVariantivEXT=", VALUEFUNC(_wrap___glewVariantivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVariantsvEXT", VALUEFUNC(_wrap___glewVariantsvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVariantsvEXT=", VALUEFUNC(_wrap___glewVariantsvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVariantubvEXT", VALUEFUNC(_wrap___glewVariantubvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVariantubvEXT=", VALUEFUNC(_wrap___glewVariantubvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVariantuivEXT", VALUEFUNC(_wrap___glewVariantuivEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVariantuivEXT=", VALUEFUNC(_wrap___glewVariantuivEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVariantusvEXT", VALUEFUNC(_wrap___glewVariantusvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVariantusvEXT=", VALUEFUNC(_wrap___glewVariantusvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewWriteMaskEXT", VALUEFUNC(_wrap___glewWriteMaskEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewWriteMaskEXT=", VALUEFUNC(_wrap___glewWriteMaskEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexWeightPointerEXT", VALUEFUNC(_wrap___glewVertexWeightPointerEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexWeightPointerEXT=", VALUEFUNC(_wrap___glewVertexWeightPointerEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexWeightfEXT", VALUEFUNC(_wrap___glewVertexWeightfEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexWeightfEXT=", VALUEFUNC(_wrap___glewVertexWeightfEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexWeightfvEXT", VALUEFUNC(_wrap___glewVertexWeightfvEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexWeightfvEXT=", VALUEFUNC(_wrap___glewVertexWeightfvEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewFrameTerminatorGREMEDY", VALUEFUNC(_wrap___glewFrameTerminatorGREMEDY_get), 0);
  rb_define_singleton_method(mGlew, "__glewFrameTerminatorGREMEDY=", VALUEFUNC(_wrap___glewFrameTerminatorGREMEDY_set), 1);
  rb_define_singleton_method(mGlew, "__glewStringMarkerGREMEDY", VALUEFUNC(_wrap___glewStringMarkerGREMEDY_get), 0);
  rb_define_singleton_method(mGlew, "__glewStringMarkerGREMEDY=", VALUEFUNC(_wrap___glewStringMarkerGREMEDY_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetImageTransformParameterfvHP", VALUEFUNC(_wrap___glewGetImageTransformParameterfvHP_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetImageTransformParameterfvHP=", VALUEFUNC(_wrap___glewGetImageTransformParameterfvHP_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetImageTransformParameterivHP", VALUEFUNC(_wrap___glewGetImageTransformParameterivHP_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetImageTransformParameterivHP=", VALUEFUNC(_wrap___glewGetImageTransformParameterivHP_set), 1);
  rb_define_singleton_method(mGlew, "__glewImageTransformParameterfHP", VALUEFUNC(_wrap___glewImageTransformParameterfHP_get), 0);
  rb_define_singleton_method(mGlew, "__glewImageTransformParameterfHP=", VALUEFUNC(_wrap___glewImageTransformParameterfHP_set), 1);
  rb_define_singleton_method(mGlew, "__glewImageTransformParameterfvHP", VALUEFUNC(_wrap___glewImageTransformParameterfvHP_get), 0);
  rb_define_singleton_method(mGlew, "__glewImageTransformParameterfvHP=", VALUEFUNC(_wrap___glewImageTransformParameterfvHP_set), 1);
  rb_define_singleton_method(mGlew, "__glewImageTransformParameteriHP", VALUEFUNC(_wrap___glewImageTransformParameteriHP_get), 0);
  rb_define_singleton_method(mGlew, "__glewImageTransformParameteriHP=", VALUEFUNC(_wrap___glewImageTransformParameteriHP_set), 1);
  rb_define_singleton_method(mGlew, "__glewImageTransformParameterivHP", VALUEFUNC(_wrap___glewImageTransformParameterivHP_get), 0);
  rb_define_singleton_method(mGlew, "__glewImageTransformParameterivHP=", VALUEFUNC(_wrap___glewImageTransformParameterivHP_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiModeDrawArraysIBM", VALUEFUNC(_wrap___glewMultiModeDrawArraysIBM_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiModeDrawArraysIBM=", VALUEFUNC(_wrap___glewMultiModeDrawArraysIBM_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiModeDrawElementsIBM", VALUEFUNC(_wrap___glewMultiModeDrawElementsIBM_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiModeDrawElementsIBM=", VALUEFUNC(_wrap___glewMultiModeDrawElementsIBM_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorPointerListIBM", VALUEFUNC(_wrap___glewColorPointerListIBM_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorPointerListIBM=", VALUEFUNC(_wrap___glewColorPointerListIBM_set), 1);
  rb_define_singleton_method(mGlew, "__glewEdgeFlagPointerListIBM", VALUEFUNC(_wrap___glewEdgeFlagPointerListIBM_get), 0);
  rb_define_singleton_method(mGlew, "__glewEdgeFlagPointerListIBM=", VALUEFUNC(_wrap___glewEdgeFlagPointerListIBM_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogCoordPointerListIBM", VALUEFUNC(_wrap___glewFogCoordPointerListIBM_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogCoordPointerListIBM=", VALUEFUNC(_wrap___glewFogCoordPointerListIBM_set), 1);
  rb_define_singleton_method(mGlew, "__glewIndexPointerListIBM", VALUEFUNC(_wrap___glewIndexPointerListIBM_get), 0);
  rb_define_singleton_method(mGlew, "__glewIndexPointerListIBM=", VALUEFUNC(_wrap___glewIndexPointerListIBM_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormalPointerListIBM", VALUEFUNC(_wrap___glewNormalPointerListIBM_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormalPointerListIBM=", VALUEFUNC(_wrap___glewNormalPointerListIBM_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColorPointerListIBM", VALUEFUNC(_wrap___glewSecondaryColorPointerListIBM_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColorPointerListIBM=", VALUEFUNC(_wrap___glewSecondaryColorPointerListIBM_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoordPointerListIBM", VALUEFUNC(_wrap___glewTexCoordPointerListIBM_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoordPointerListIBM=", VALUEFUNC(_wrap___glewTexCoordPointerListIBM_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexPointerListIBM", VALUEFUNC(_wrap___glewVertexPointerListIBM_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexPointerListIBM=", VALUEFUNC(_wrap___glewVertexPointerListIBM_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorPointervINTEL", VALUEFUNC(_wrap___glewColorPointervINTEL_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorPointervINTEL=", VALUEFUNC(_wrap___glewColorPointervINTEL_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormalPointervINTEL", VALUEFUNC(_wrap___glewNormalPointervINTEL_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormalPointervINTEL=", VALUEFUNC(_wrap___glewNormalPointervINTEL_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoordPointervINTEL", VALUEFUNC(_wrap___glewTexCoordPointervINTEL_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoordPointervINTEL=", VALUEFUNC(_wrap___glewTexCoordPointervINTEL_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexPointervINTEL", VALUEFUNC(_wrap___glewVertexPointervINTEL_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexPointervINTEL=", VALUEFUNC(_wrap___glewVertexPointervINTEL_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexScissorFuncINTEL", VALUEFUNC(_wrap___glewTexScissorFuncINTEL_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexScissorFuncINTEL=", VALUEFUNC(_wrap___glewTexScissorFuncINTEL_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexScissorINTEL", VALUEFUNC(_wrap___glewTexScissorINTEL_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexScissorINTEL=", VALUEFUNC(_wrap___glewTexScissorINTEL_set), 1);
  rb_define_singleton_method(mGlew, "__glewBufferRegionEnabledEXT", VALUEFUNC(_wrap___glewBufferRegionEnabledEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewBufferRegionEnabledEXT=", VALUEFUNC(_wrap___glewBufferRegionEnabledEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteBufferRegionEXT", VALUEFUNC(_wrap___glewDeleteBufferRegionEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteBufferRegionEXT=", VALUEFUNC(_wrap___glewDeleteBufferRegionEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewDrawBufferRegionEXT", VALUEFUNC(_wrap___glewDrawBufferRegionEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewDrawBufferRegionEXT=", VALUEFUNC(_wrap___glewDrawBufferRegionEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewNewBufferRegionEXT", VALUEFUNC(_wrap___glewNewBufferRegionEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewNewBufferRegionEXT=", VALUEFUNC(_wrap___glewNewBufferRegionEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewReadBufferRegionEXT", VALUEFUNC(_wrap___glewReadBufferRegionEXT_get), 0);
  rb_define_singleton_method(mGlew, "__glewReadBufferRegionEXT=", VALUEFUNC(_wrap___glewReadBufferRegionEXT_set), 1);
  rb_define_singleton_method(mGlew, "__glewResizeBuffersMESA", VALUEFUNC(_wrap___glewResizeBuffersMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewResizeBuffersMESA=", VALUEFUNC(_wrap___glewResizeBuffersMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2dMESA", VALUEFUNC(_wrap___glewWindowPos2dMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2dMESA=", VALUEFUNC(_wrap___glewWindowPos2dMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2dvMESA", VALUEFUNC(_wrap___glewWindowPos2dvMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2dvMESA=", VALUEFUNC(_wrap___glewWindowPos2dvMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2fMESA", VALUEFUNC(_wrap___glewWindowPos2fMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2fMESA=", VALUEFUNC(_wrap___glewWindowPos2fMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2fvMESA", VALUEFUNC(_wrap___glewWindowPos2fvMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2fvMESA=", VALUEFUNC(_wrap___glewWindowPos2fvMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2iMESA", VALUEFUNC(_wrap___glewWindowPos2iMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2iMESA=", VALUEFUNC(_wrap___glewWindowPos2iMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2ivMESA", VALUEFUNC(_wrap___glewWindowPos2ivMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2ivMESA=", VALUEFUNC(_wrap___glewWindowPos2ivMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2sMESA", VALUEFUNC(_wrap___glewWindowPos2sMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2sMESA=", VALUEFUNC(_wrap___glewWindowPos2sMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos2svMESA", VALUEFUNC(_wrap___glewWindowPos2svMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos2svMESA=", VALUEFUNC(_wrap___glewWindowPos2svMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3dMESA", VALUEFUNC(_wrap___glewWindowPos3dMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3dMESA=", VALUEFUNC(_wrap___glewWindowPos3dMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3dvMESA", VALUEFUNC(_wrap___glewWindowPos3dvMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3dvMESA=", VALUEFUNC(_wrap___glewWindowPos3dvMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3fMESA", VALUEFUNC(_wrap___glewWindowPos3fMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3fMESA=", VALUEFUNC(_wrap___glewWindowPos3fMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3fvMESA", VALUEFUNC(_wrap___glewWindowPos3fvMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3fvMESA=", VALUEFUNC(_wrap___glewWindowPos3fvMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3iMESA", VALUEFUNC(_wrap___glewWindowPos3iMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3iMESA=", VALUEFUNC(_wrap___glewWindowPos3iMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3ivMESA", VALUEFUNC(_wrap___glewWindowPos3ivMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3ivMESA=", VALUEFUNC(_wrap___glewWindowPos3ivMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3sMESA", VALUEFUNC(_wrap___glewWindowPos3sMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3sMESA=", VALUEFUNC(_wrap___glewWindowPos3sMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos3svMESA", VALUEFUNC(_wrap___glewWindowPos3svMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos3svMESA=", VALUEFUNC(_wrap___glewWindowPos3svMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos4dMESA", VALUEFUNC(_wrap___glewWindowPos4dMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos4dMESA=", VALUEFUNC(_wrap___glewWindowPos4dMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos4dvMESA", VALUEFUNC(_wrap___glewWindowPos4dvMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos4dvMESA=", VALUEFUNC(_wrap___glewWindowPos4dvMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos4fMESA", VALUEFUNC(_wrap___glewWindowPos4fMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos4fMESA=", VALUEFUNC(_wrap___glewWindowPos4fMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos4fvMESA", VALUEFUNC(_wrap___glewWindowPos4fvMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos4fvMESA=", VALUEFUNC(_wrap___glewWindowPos4fvMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos4iMESA", VALUEFUNC(_wrap___glewWindowPos4iMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos4iMESA=", VALUEFUNC(_wrap___glewWindowPos4iMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos4ivMESA", VALUEFUNC(_wrap___glewWindowPos4ivMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos4ivMESA=", VALUEFUNC(_wrap___glewWindowPos4ivMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos4sMESA", VALUEFUNC(_wrap___glewWindowPos4sMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos4sMESA=", VALUEFUNC(_wrap___glewWindowPos4sMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewWindowPos4svMESA", VALUEFUNC(_wrap___glewWindowPos4svMESA_get), 0);
  rb_define_singleton_method(mGlew, "__glewWindowPos4svMESA=", VALUEFUNC(_wrap___glewWindowPos4svMESA_set), 1);
  rb_define_singleton_method(mGlew, "__glewBeginConditionalRenderNV", VALUEFUNC(_wrap___glewBeginConditionalRenderNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewBeginConditionalRenderNV=", VALUEFUNC(_wrap___glewBeginConditionalRenderNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewEndConditionalRenderNV", VALUEFUNC(_wrap___glewEndConditionalRenderNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewEndConditionalRenderNV=", VALUEFUNC(_wrap___glewEndConditionalRenderNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewClearDepthdNV", VALUEFUNC(_wrap___glewClearDepthdNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewClearDepthdNV=", VALUEFUNC(_wrap___glewClearDepthdNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewDepthBoundsdNV", VALUEFUNC(_wrap___glewDepthBoundsdNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewDepthBoundsdNV=", VALUEFUNC(_wrap___glewDepthBoundsdNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewDepthRangedNV", VALUEFUNC(_wrap___glewDepthRangedNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewDepthRangedNV=", VALUEFUNC(_wrap___glewDepthRangedNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewEvalMapsNV", VALUEFUNC(_wrap___glewEvalMapsNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewEvalMapsNV=", VALUEFUNC(_wrap___glewEvalMapsNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMapAttribParameterfvNV", VALUEFUNC(_wrap___glewGetMapAttribParameterfvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMapAttribParameterfvNV=", VALUEFUNC(_wrap___glewGetMapAttribParameterfvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMapAttribParameterivNV", VALUEFUNC(_wrap___glewGetMapAttribParameterivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMapAttribParameterivNV=", VALUEFUNC(_wrap___glewGetMapAttribParameterivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMapControlPointsNV", VALUEFUNC(_wrap___glewGetMapControlPointsNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMapControlPointsNV=", VALUEFUNC(_wrap___glewGetMapControlPointsNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMapParameterfvNV", VALUEFUNC(_wrap___glewGetMapParameterfvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMapParameterfvNV=", VALUEFUNC(_wrap___glewGetMapParameterfvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMapParameterivNV", VALUEFUNC(_wrap___glewGetMapParameterivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMapParameterivNV=", VALUEFUNC(_wrap___glewGetMapParameterivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewMapControlPointsNV", VALUEFUNC(_wrap___glewMapControlPointsNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewMapControlPointsNV=", VALUEFUNC(_wrap___glewMapControlPointsNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewMapParameterfvNV", VALUEFUNC(_wrap___glewMapParameterfvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewMapParameterfvNV=", VALUEFUNC(_wrap___glewMapParameterfvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewMapParameterivNV", VALUEFUNC(_wrap___glewMapParameterivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewMapParameterivNV=", VALUEFUNC(_wrap___glewMapParameterivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetMultisamplefvNV", VALUEFUNC(_wrap___glewGetMultisamplefvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetMultisamplefvNV=", VALUEFUNC(_wrap___glewGetMultisamplefvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewSampleMaskIndexedNV", VALUEFUNC(_wrap___glewSampleMaskIndexedNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewSampleMaskIndexedNV=", VALUEFUNC(_wrap___glewSampleMaskIndexedNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexRenderbufferNV", VALUEFUNC(_wrap___glewTexRenderbufferNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexRenderbufferNV=", VALUEFUNC(_wrap___glewTexRenderbufferNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteFencesNV", VALUEFUNC(_wrap___glewDeleteFencesNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteFencesNV=", VALUEFUNC(_wrap___glewDeleteFencesNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewFinishFenceNV", VALUEFUNC(_wrap___glewFinishFenceNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewFinishFenceNV=", VALUEFUNC(_wrap___glewFinishFenceNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenFencesNV", VALUEFUNC(_wrap___glewGenFencesNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenFencesNV=", VALUEFUNC(_wrap___glewGenFencesNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFenceivNV", VALUEFUNC(_wrap___glewGetFenceivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFenceivNV=", VALUEFUNC(_wrap___glewGetFenceivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsFenceNV", VALUEFUNC(_wrap___glewIsFenceNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsFenceNV=", VALUEFUNC(_wrap___glewIsFenceNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewSetFenceNV", VALUEFUNC(_wrap___glewSetFenceNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewSetFenceNV=", VALUEFUNC(_wrap___glewSetFenceNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewTestFenceNV", VALUEFUNC(_wrap___glewTestFenceNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewTestFenceNV=", VALUEFUNC(_wrap___glewTestFenceNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramNamedParameterdvNV", VALUEFUNC(_wrap___glewGetProgramNamedParameterdvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramNamedParameterdvNV=", VALUEFUNC(_wrap___glewGetProgramNamedParameterdvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramNamedParameterfvNV", VALUEFUNC(_wrap___glewGetProgramNamedParameterfvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramNamedParameterfvNV=", VALUEFUNC(_wrap___glewGetProgramNamedParameterfvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramNamedParameter4dNV", VALUEFUNC(_wrap___glewProgramNamedParameter4dNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramNamedParameter4dNV=", VALUEFUNC(_wrap___glewProgramNamedParameter4dNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramNamedParameter4dvNV", VALUEFUNC(_wrap___glewProgramNamedParameter4dvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramNamedParameter4dvNV=", VALUEFUNC(_wrap___glewProgramNamedParameter4dvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramNamedParameter4fNV", VALUEFUNC(_wrap___glewProgramNamedParameter4fNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramNamedParameter4fNV=", VALUEFUNC(_wrap___glewProgramNamedParameter4fNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramNamedParameter4fvNV", VALUEFUNC(_wrap___glewProgramNamedParameter4fvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramNamedParameter4fvNV=", VALUEFUNC(_wrap___glewProgramNamedParameter4fvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewRenderbufferStorageMultisampleCoverageNV", VALUEFUNC(_wrap___glewRenderbufferStorageMultisampleCoverageNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewRenderbufferStorageMultisampleCoverageNV=", VALUEFUNC(_wrap___glewRenderbufferStorageMultisampleCoverageNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramVertexLimitNV", VALUEFUNC(_wrap___glewProgramVertexLimitNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramVertexLimitNV=", VALUEFUNC(_wrap___glewProgramVertexLimitNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameterI4iNV", VALUEFUNC(_wrap___glewProgramEnvParameterI4iNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameterI4iNV=", VALUEFUNC(_wrap___glewProgramEnvParameterI4iNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameterI4ivNV", VALUEFUNC(_wrap___glewProgramEnvParameterI4ivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameterI4ivNV=", VALUEFUNC(_wrap___glewProgramEnvParameterI4ivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameterI4uiNV", VALUEFUNC(_wrap___glewProgramEnvParameterI4uiNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameterI4uiNV=", VALUEFUNC(_wrap___glewProgramEnvParameterI4uiNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameterI4uivNV", VALUEFUNC(_wrap___glewProgramEnvParameterI4uivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParameterI4uivNV=", VALUEFUNC(_wrap___glewProgramEnvParameterI4uivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParametersI4ivNV", VALUEFUNC(_wrap___glewProgramEnvParametersI4ivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParametersI4ivNV=", VALUEFUNC(_wrap___glewProgramEnvParametersI4ivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParametersI4uivNV", VALUEFUNC(_wrap___glewProgramEnvParametersI4uivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramEnvParametersI4uivNV=", VALUEFUNC(_wrap___glewProgramEnvParametersI4uivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameterI4iNV", VALUEFUNC(_wrap___glewProgramLocalParameterI4iNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameterI4iNV=", VALUEFUNC(_wrap___glewProgramLocalParameterI4iNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameterI4ivNV", VALUEFUNC(_wrap___glewProgramLocalParameterI4ivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameterI4ivNV=", VALUEFUNC(_wrap___glewProgramLocalParameterI4ivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameterI4uiNV", VALUEFUNC(_wrap___glewProgramLocalParameterI4uiNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameterI4uiNV=", VALUEFUNC(_wrap___glewProgramLocalParameterI4uiNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameterI4uivNV", VALUEFUNC(_wrap___glewProgramLocalParameterI4uivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParameterI4uivNV=", VALUEFUNC(_wrap___glewProgramLocalParameterI4uivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParametersI4ivNV", VALUEFUNC(_wrap___glewProgramLocalParametersI4ivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParametersI4ivNV=", VALUEFUNC(_wrap___glewProgramLocalParametersI4ivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParametersI4uivNV", VALUEFUNC(_wrap___glewProgramLocalParametersI4uivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramLocalParametersI4uivNV=", VALUEFUNC(_wrap___glewProgramLocalParametersI4uivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewColor3hNV", VALUEFUNC(_wrap___glewColor3hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewColor3hNV=", VALUEFUNC(_wrap___glewColor3hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewColor3hvNV", VALUEFUNC(_wrap___glewColor3hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewColor3hvNV=", VALUEFUNC(_wrap___glewColor3hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewColor4hNV", VALUEFUNC(_wrap___glewColor4hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewColor4hNV=", VALUEFUNC(_wrap___glewColor4hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewColor4hvNV", VALUEFUNC(_wrap___glewColor4hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewColor4hvNV=", VALUEFUNC(_wrap___glewColor4hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogCoordhNV", VALUEFUNC(_wrap___glewFogCoordhNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogCoordhNV=", VALUEFUNC(_wrap___glewFogCoordhNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogCoordhvNV", VALUEFUNC(_wrap___glewFogCoordhvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogCoordhvNV=", VALUEFUNC(_wrap___glewFogCoordhvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1hNV", VALUEFUNC(_wrap___glewMultiTexCoord1hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1hNV=", VALUEFUNC(_wrap___glewMultiTexCoord1hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1hvNV", VALUEFUNC(_wrap___glewMultiTexCoord1hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord1hvNV=", VALUEFUNC(_wrap___glewMultiTexCoord1hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2hNV", VALUEFUNC(_wrap___glewMultiTexCoord2hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2hNV=", VALUEFUNC(_wrap___glewMultiTexCoord2hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2hvNV", VALUEFUNC(_wrap___glewMultiTexCoord2hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord2hvNV=", VALUEFUNC(_wrap___glewMultiTexCoord2hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3hNV", VALUEFUNC(_wrap___glewMultiTexCoord3hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3hNV=", VALUEFUNC(_wrap___glewMultiTexCoord3hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3hvNV", VALUEFUNC(_wrap___glewMultiTexCoord3hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord3hvNV=", VALUEFUNC(_wrap___glewMultiTexCoord3hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4hNV", VALUEFUNC(_wrap___glewMultiTexCoord4hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4hNV=", VALUEFUNC(_wrap___glewMultiTexCoord4hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4hvNV", VALUEFUNC(_wrap___glewMultiTexCoord4hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewMultiTexCoord4hvNV=", VALUEFUNC(_wrap___glewMultiTexCoord4hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormal3hNV", VALUEFUNC(_wrap___glewNormal3hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormal3hNV=", VALUEFUNC(_wrap___glewNormal3hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormal3hvNV", VALUEFUNC(_wrap___glewNormal3hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormal3hvNV=", VALUEFUNC(_wrap___glewNormal3hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3hNV", VALUEFUNC(_wrap___glewSecondaryColor3hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3hNV=", VALUEFUNC(_wrap___glewSecondaryColor3hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3hvNV", VALUEFUNC(_wrap___glewSecondaryColor3hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewSecondaryColor3hvNV=", VALUEFUNC(_wrap___glewSecondaryColor3hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord1hNV", VALUEFUNC(_wrap___glewTexCoord1hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord1hNV=", VALUEFUNC(_wrap___glewTexCoord1hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord1hvNV", VALUEFUNC(_wrap___glewTexCoord1hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord1hvNV=", VALUEFUNC(_wrap___glewTexCoord1hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord2hNV", VALUEFUNC(_wrap___glewTexCoord2hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord2hNV=", VALUEFUNC(_wrap___glewTexCoord2hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord2hvNV", VALUEFUNC(_wrap___glewTexCoord2hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord2hvNV=", VALUEFUNC(_wrap___glewTexCoord2hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord3hNV", VALUEFUNC(_wrap___glewTexCoord3hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord3hNV=", VALUEFUNC(_wrap___glewTexCoord3hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord3hvNV", VALUEFUNC(_wrap___glewTexCoord3hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord3hvNV=", VALUEFUNC(_wrap___glewTexCoord3hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord4hNV", VALUEFUNC(_wrap___glewTexCoord4hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord4hNV=", VALUEFUNC(_wrap___glewTexCoord4hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord4hvNV", VALUEFUNC(_wrap___glewTexCoord4hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord4hvNV=", VALUEFUNC(_wrap___glewTexCoord4hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertex2hNV", VALUEFUNC(_wrap___glewVertex2hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertex2hNV=", VALUEFUNC(_wrap___glewVertex2hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertex2hvNV", VALUEFUNC(_wrap___glewVertex2hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertex2hvNV=", VALUEFUNC(_wrap___glewVertex2hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertex3hNV", VALUEFUNC(_wrap___glewVertex3hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertex3hNV=", VALUEFUNC(_wrap___glewVertex3hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertex3hvNV", VALUEFUNC(_wrap___glewVertex3hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertex3hvNV=", VALUEFUNC(_wrap___glewVertex3hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertex4hNV", VALUEFUNC(_wrap___glewVertex4hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertex4hNV=", VALUEFUNC(_wrap___glewVertex4hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertex4hvNV", VALUEFUNC(_wrap___glewVertex4hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertex4hvNV=", VALUEFUNC(_wrap___glewVertex4hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1hNV", VALUEFUNC(_wrap___glewVertexAttrib1hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1hNV=", VALUEFUNC(_wrap___glewVertexAttrib1hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1hvNV", VALUEFUNC(_wrap___glewVertexAttrib1hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1hvNV=", VALUEFUNC(_wrap___glewVertexAttrib1hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2hNV", VALUEFUNC(_wrap___glewVertexAttrib2hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2hNV=", VALUEFUNC(_wrap___glewVertexAttrib2hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2hvNV", VALUEFUNC(_wrap___glewVertexAttrib2hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2hvNV=", VALUEFUNC(_wrap___glewVertexAttrib2hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3hNV", VALUEFUNC(_wrap___glewVertexAttrib3hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3hNV=", VALUEFUNC(_wrap___glewVertexAttrib3hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3hvNV", VALUEFUNC(_wrap___glewVertexAttrib3hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3hvNV=", VALUEFUNC(_wrap___glewVertexAttrib3hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4hNV", VALUEFUNC(_wrap___glewVertexAttrib4hNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4hNV=", VALUEFUNC(_wrap___glewVertexAttrib4hNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4hvNV", VALUEFUNC(_wrap___glewVertexAttrib4hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4hvNV=", VALUEFUNC(_wrap___glewVertexAttrib4hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs1hvNV", VALUEFUNC(_wrap___glewVertexAttribs1hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs1hvNV=", VALUEFUNC(_wrap___glewVertexAttribs1hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs2hvNV", VALUEFUNC(_wrap___glewVertexAttribs2hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs2hvNV=", VALUEFUNC(_wrap___glewVertexAttribs2hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs3hvNV", VALUEFUNC(_wrap___glewVertexAttribs3hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs3hvNV=", VALUEFUNC(_wrap___glewVertexAttribs3hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs4hvNV", VALUEFUNC(_wrap___glewVertexAttribs4hvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs4hvNV=", VALUEFUNC(_wrap___glewVertexAttribs4hvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexWeighthNV", VALUEFUNC(_wrap___glewVertexWeighthNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexWeighthNV=", VALUEFUNC(_wrap___glewVertexWeighthNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexWeighthvNV", VALUEFUNC(_wrap___glewVertexWeighthvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexWeighthvNV=", VALUEFUNC(_wrap___glewVertexWeighthvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewBeginOcclusionQueryNV", VALUEFUNC(_wrap___glewBeginOcclusionQueryNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewBeginOcclusionQueryNV=", VALUEFUNC(_wrap___glewBeginOcclusionQueryNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteOcclusionQueriesNV", VALUEFUNC(_wrap___glewDeleteOcclusionQueriesNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteOcclusionQueriesNV=", VALUEFUNC(_wrap___glewDeleteOcclusionQueriesNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewEndOcclusionQueryNV", VALUEFUNC(_wrap___glewEndOcclusionQueryNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewEndOcclusionQueryNV=", VALUEFUNC(_wrap___glewEndOcclusionQueryNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenOcclusionQueriesNV", VALUEFUNC(_wrap___glewGenOcclusionQueriesNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenOcclusionQueriesNV=", VALUEFUNC(_wrap___glewGenOcclusionQueriesNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetOcclusionQueryivNV", VALUEFUNC(_wrap___glewGetOcclusionQueryivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetOcclusionQueryivNV=", VALUEFUNC(_wrap___glewGetOcclusionQueryivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetOcclusionQueryuivNV", VALUEFUNC(_wrap___glewGetOcclusionQueryuivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetOcclusionQueryuivNV=", VALUEFUNC(_wrap___glewGetOcclusionQueryuivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsOcclusionQueryNV", VALUEFUNC(_wrap___glewIsOcclusionQueryNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsOcclusionQueryNV=", VALUEFUNC(_wrap___glewIsOcclusionQueryNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramBufferParametersIivNV", VALUEFUNC(_wrap___glewProgramBufferParametersIivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramBufferParametersIivNV=", VALUEFUNC(_wrap___glewProgramBufferParametersIivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramBufferParametersIuivNV", VALUEFUNC(_wrap___glewProgramBufferParametersIuivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramBufferParametersIuivNV=", VALUEFUNC(_wrap___glewProgramBufferParametersIuivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramBufferParametersfvNV", VALUEFUNC(_wrap___glewProgramBufferParametersfvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramBufferParametersfvNV=", VALUEFUNC(_wrap___glewProgramBufferParametersfvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewFlushPixelDataRangeNV", VALUEFUNC(_wrap___glewFlushPixelDataRangeNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewFlushPixelDataRangeNV=", VALUEFUNC(_wrap___glewFlushPixelDataRangeNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewPixelDataRangeNV", VALUEFUNC(_wrap___glewPixelDataRangeNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewPixelDataRangeNV=", VALUEFUNC(_wrap___glewPixelDataRangeNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewPointParameteriNV", VALUEFUNC(_wrap___glewPointParameteriNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewPointParameteriNV=", VALUEFUNC(_wrap___glewPointParameteriNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewPointParameterivNV", VALUEFUNC(_wrap___glewPointParameterivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewPointParameterivNV=", VALUEFUNC(_wrap___glewPointParameterivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVideoi64vNV", VALUEFUNC(_wrap___glewGetVideoi64vNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVideoi64vNV=", VALUEFUNC(_wrap___glewGetVideoi64vNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVideoivNV", VALUEFUNC(_wrap___glewGetVideoivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVideoivNV=", VALUEFUNC(_wrap___glewGetVideoivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVideoui64vNV", VALUEFUNC(_wrap___glewGetVideoui64vNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVideoui64vNV=", VALUEFUNC(_wrap___glewGetVideoui64vNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVideouivNV", VALUEFUNC(_wrap___glewGetVideouivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVideouivNV=", VALUEFUNC(_wrap___glewGetVideouivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewPresentFrameDualFillNV", VALUEFUNC(_wrap___glewPresentFrameDualFillNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewPresentFrameDualFillNV=", VALUEFUNC(_wrap___glewPresentFrameDualFillNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewPresentFrameKeyedNV", VALUEFUNC(_wrap___glewPresentFrameKeyedNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewPresentFrameKeyedNV=", VALUEFUNC(_wrap___glewPresentFrameKeyedNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVideoParameterivNV", VALUEFUNC(_wrap___glewVideoParameterivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVideoParameterivNV=", VALUEFUNC(_wrap___glewVideoParameterivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewPrimitiveRestartIndexNV", VALUEFUNC(_wrap___glewPrimitiveRestartIndexNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewPrimitiveRestartIndexNV=", VALUEFUNC(_wrap___glewPrimitiveRestartIndexNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewPrimitiveRestartNV", VALUEFUNC(_wrap___glewPrimitiveRestartNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewPrimitiveRestartNV=", VALUEFUNC(_wrap___glewPrimitiveRestartNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewCombinerInputNV", VALUEFUNC(_wrap___glewCombinerInputNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewCombinerInputNV=", VALUEFUNC(_wrap___glewCombinerInputNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewCombinerOutputNV", VALUEFUNC(_wrap___glewCombinerOutputNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewCombinerOutputNV=", VALUEFUNC(_wrap___glewCombinerOutputNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewCombinerParameterfNV", VALUEFUNC(_wrap___glewCombinerParameterfNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewCombinerParameterfNV=", VALUEFUNC(_wrap___glewCombinerParameterfNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewCombinerParameterfvNV", VALUEFUNC(_wrap___glewCombinerParameterfvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewCombinerParameterfvNV=", VALUEFUNC(_wrap___glewCombinerParameterfvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewCombinerParameteriNV", VALUEFUNC(_wrap___glewCombinerParameteriNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewCombinerParameteriNV=", VALUEFUNC(_wrap___glewCombinerParameteriNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewCombinerParameterivNV", VALUEFUNC(_wrap___glewCombinerParameterivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewCombinerParameterivNV=", VALUEFUNC(_wrap___glewCombinerParameterivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewFinalCombinerInputNV", VALUEFUNC(_wrap___glewFinalCombinerInputNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewFinalCombinerInputNV=", VALUEFUNC(_wrap___glewFinalCombinerInputNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetCombinerInputParameterfvNV", VALUEFUNC(_wrap___glewGetCombinerInputParameterfvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetCombinerInputParameterfvNV=", VALUEFUNC(_wrap___glewGetCombinerInputParameterfvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetCombinerInputParameterivNV", VALUEFUNC(_wrap___glewGetCombinerInputParameterivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetCombinerInputParameterivNV=", VALUEFUNC(_wrap___glewGetCombinerInputParameterivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetCombinerOutputParameterfvNV", VALUEFUNC(_wrap___glewGetCombinerOutputParameterfvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetCombinerOutputParameterfvNV=", VALUEFUNC(_wrap___glewGetCombinerOutputParameterfvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetCombinerOutputParameterivNV", VALUEFUNC(_wrap___glewGetCombinerOutputParameterivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetCombinerOutputParameterivNV=", VALUEFUNC(_wrap___glewGetCombinerOutputParameterivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFinalCombinerInputParameterfvNV", VALUEFUNC(_wrap___glewGetFinalCombinerInputParameterfvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFinalCombinerInputParameterfvNV=", VALUEFUNC(_wrap___glewGetFinalCombinerInputParameterfvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFinalCombinerInputParameterivNV", VALUEFUNC(_wrap___glewGetFinalCombinerInputParameterivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFinalCombinerInputParameterivNV=", VALUEFUNC(_wrap___glewGetFinalCombinerInputParameterivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewCombinerStageParameterfvNV", VALUEFUNC(_wrap___glewCombinerStageParameterfvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewCombinerStageParameterfvNV=", VALUEFUNC(_wrap___glewCombinerStageParameterfvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetCombinerStageParameterfvNV", VALUEFUNC(_wrap___glewGetCombinerStageParameterfvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetCombinerStageParameterfvNV=", VALUEFUNC(_wrap___glewGetCombinerStageParameterfvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewActiveVaryingNV", VALUEFUNC(_wrap___glewActiveVaryingNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewActiveVaryingNV=", VALUEFUNC(_wrap___glewActiveVaryingNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewBeginTransformFeedbackNV", VALUEFUNC(_wrap___glewBeginTransformFeedbackNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewBeginTransformFeedbackNV=", VALUEFUNC(_wrap___glewBeginTransformFeedbackNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindBufferBaseNV", VALUEFUNC(_wrap___glewBindBufferBaseNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindBufferBaseNV=", VALUEFUNC(_wrap___glewBindBufferBaseNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindBufferOffsetNV", VALUEFUNC(_wrap___glewBindBufferOffsetNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindBufferOffsetNV=", VALUEFUNC(_wrap___glewBindBufferOffsetNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindBufferRangeNV", VALUEFUNC(_wrap___glewBindBufferRangeNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindBufferRangeNV=", VALUEFUNC(_wrap___glewBindBufferRangeNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewEndTransformFeedbackNV", VALUEFUNC(_wrap___glewEndTransformFeedbackNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewEndTransformFeedbackNV=", VALUEFUNC(_wrap___glewEndTransformFeedbackNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetActiveVaryingNV", VALUEFUNC(_wrap___glewGetActiveVaryingNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetActiveVaryingNV=", VALUEFUNC(_wrap___glewGetActiveVaryingNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTransformFeedbackVaryingNV", VALUEFUNC(_wrap___glewGetTransformFeedbackVaryingNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTransformFeedbackVaryingNV=", VALUEFUNC(_wrap___glewGetTransformFeedbackVaryingNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVaryingLocationNV", VALUEFUNC(_wrap___glewGetVaryingLocationNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVaryingLocationNV=", VALUEFUNC(_wrap___glewGetVaryingLocationNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewTransformFeedbackAttribsNV", VALUEFUNC(_wrap___glewTransformFeedbackAttribsNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewTransformFeedbackAttribsNV=", VALUEFUNC(_wrap___glewTransformFeedbackAttribsNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewTransformFeedbackVaryingsNV", VALUEFUNC(_wrap___glewTransformFeedbackVaryingsNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewTransformFeedbackVaryingsNV=", VALUEFUNC(_wrap___glewTransformFeedbackVaryingsNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewFlushVertexArrayRangeNV", VALUEFUNC(_wrap___glewFlushVertexArrayRangeNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewFlushVertexArrayRangeNV=", VALUEFUNC(_wrap___glewFlushVertexArrayRangeNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexArrayRangeNV", VALUEFUNC(_wrap___glewVertexArrayRangeNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexArrayRangeNV=", VALUEFUNC(_wrap___glewVertexArrayRangeNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewAreProgramsResidentNV", VALUEFUNC(_wrap___glewAreProgramsResidentNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewAreProgramsResidentNV=", VALUEFUNC(_wrap___glewAreProgramsResidentNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewBindProgramNV", VALUEFUNC(_wrap___glewBindProgramNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewBindProgramNV=", VALUEFUNC(_wrap___glewBindProgramNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteProgramsNV", VALUEFUNC(_wrap___glewDeleteProgramsNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteProgramsNV=", VALUEFUNC(_wrap___glewDeleteProgramsNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewExecuteProgramNV", VALUEFUNC(_wrap___glewExecuteProgramNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewExecuteProgramNV=", VALUEFUNC(_wrap___glewExecuteProgramNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenProgramsNV", VALUEFUNC(_wrap___glewGenProgramsNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenProgramsNV=", VALUEFUNC(_wrap___glewGenProgramsNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramParameterdvNV", VALUEFUNC(_wrap___glewGetProgramParameterdvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramParameterdvNV=", VALUEFUNC(_wrap___glewGetProgramParameterdvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramParameterfvNV", VALUEFUNC(_wrap___glewGetProgramParameterfvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramParameterfvNV=", VALUEFUNC(_wrap___glewGetProgramParameterfvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramStringNV", VALUEFUNC(_wrap___glewGetProgramStringNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramStringNV=", VALUEFUNC(_wrap___glewGetProgramStringNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetProgramivNV", VALUEFUNC(_wrap___glewGetProgramivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetProgramivNV=", VALUEFUNC(_wrap___glewGetProgramivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTrackMatrixivNV", VALUEFUNC(_wrap___glewGetTrackMatrixivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTrackMatrixivNV=", VALUEFUNC(_wrap___glewGetTrackMatrixivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribPointervNV", VALUEFUNC(_wrap___glewGetVertexAttribPointervNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribPointervNV=", VALUEFUNC(_wrap___glewGetVertexAttribPointervNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribdvNV", VALUEFUNC(_wrap___glewGetVertexAttribdvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribdvNV=", VALUEFUNC(_wrap___glewGetVertexAttribdvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribfvNV", VALUEFUNC(_wrap___glewGetVertexAttribfvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribfvNV=", VALUEFUNC(_wrap___glewGetVertexAttribfvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribivNV", VALUEFUNC(_wrap___glewGetVertexAttribivNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetVertexAttribivNV=", VALUEFUNC(_wrap___glewGetVertexAttribivNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsProgramNV", VALUEFUNC(_wrap___glewIsProgramNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsProgramNV=", VALUEFUNC(_wrap___glewIsProgramNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewLoadProgramNV", VALUEFUNC(_wrap___glewLoadProgramNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewLoadProgramNV=", VALUEFUNC(_wrap___glewLoadProgramNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramParameter4dNV", VALUEFUNC(_wrap___glewProgramParameter4dNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramParameter4dNV=", VALUEFUNC(_wrap___glewProgramParameter4dNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramParameter4dvNV", VALUEFUNC(_wrap___glewProgramParameter4dvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramParameter4dvNV=", VALUEFUNC(_wrap___glewProgramParameter4dvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramParameter4fNV", VALUEFUNC(_wrap___glewProgramParameter4fNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramParameter4fNV=", VALUEFUNC(_wrap___glewProgramParameter4fNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramParameter4fvNV", VALUEFUNC(_wrap___glewProgramParameter4fvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramParameter4fvNV=", VALUEFUNC(_wrap___glewProgramParameter4fvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramParameters4dvNV", VALUEFUNC(_wrap___glewProgramParameters4dvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramParameters4dvNV=", VALUEFUNC(_wrap___glewProgramParameters4dvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewProgramParameters4fvNV", VALUEFUNC(_wrap___glewProgramParameters4fvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewProgramParameters4fvNV=", VALUEFUNC(_wrap___glewProgramParameters4fvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewRequestResidentProgramsNV", VALUEFUNC(_wrap___glewRequestResidentProgramsNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewRequestResidentProgramsNV=", VALUEFUNC(_wrap___glewRequestResidentProgramsNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewTrackMatrixNV", VALUEFUNC(_wrap___glewTrackMatrixNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewTrackMatrixNV=", VALUEFUNC(_wrap___glewTrackMatrixNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1dNV", VALUEFUNC(_wrap___glewVertexAttrib1dNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1dNV=", VALUEFUNC(_wrap___glewVertexAttrib1dNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1dvNV", VALUEFUNC(_wrap___glewVertexAttrib1dvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1dvNV=", VALUEFUNC(_wrap___glewVertexAttrib1dvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1fNV", VALUEFUNC(_wrap___glewVertexAttrib1fNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1fNV=", VALUEFUNC(_wrap___glewVertexAttrib1fNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1fvNV", VALUEFUNC(_wrap___glewVertexAttrib1fvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1fvNV=", VALUEFUNC(_wrap___glewVertexAttrib1fvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1sNV", VALUEFUNC(_wrap___glewVertexAttrib1sNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1sNV=", VALUEFUNC(_wrap___glewVertexAttrib1sNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1svNV", VALUEFUNC(_wrap___glewVertexAttrib1svNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib1svNV=", VALUEFUNC(_wrap___glewVertexAttrib1svNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2dNV", VALUEFUNC(_wrap___glewVertexAttrib2dNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2dNV=", VALUEFUNC(_wrap___glewVertexAttrib2dNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2dvNV", VALUEFUNC(_wrap___glewVertexAttrib2dvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2dvNV=", VALUEFUNC(_wrap___glewVertexAttrib2dvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2fNV", VALUEFUNC(_wrap___glewVertexAttrib2fNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2fNV=", VALUEFUNC(_wrap___glewVertexAttrib2fNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2fvNV", VALUEFUNC(_wrap___glewVertexAttrib2fvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2fvNV=", VALUEFUNC(_wrap___glewVertexAttrib2fvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2sNV", VALUEFUNC(_wrap___glewVertexAttrib2sNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2sNV=", VALUEFUNC(_wrap___glewVertexAttrib2sNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2svNV", VALUEFUNC(_wrap___glewVertexAttrib2svNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib2svNV=", VALUEFUNC(_wrap___glewVertexAttrib2svNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3dNV", VALUEFUNC(_wrap___glewVertexAttrib3dNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3dNV=", VALUEFUNC(_wrap___glewVertexAttrib3dNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3dvNV", VALUEFUNC(_wrap___glewVertexAttrib3dvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3dvNV=", VALUEFUNC(_wrap___glewVertexAttrib3dvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3fNV", VALUEFUNC(_wrap___glewVertexAttrib3fNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3fNV=", VALUEFUNC(_wrap___glewVertexAttrib3fNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3fvNV", VALUEFUNC(_wrap___glewVertexAttrib3fvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3fvNV=", VALUEFUNC(_wrap___glewVertexAttrib3fvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3sNV", VALUEFUNC(_wrap___glewVertexAttrib3sNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3sNV=", VALUEFUNC(_wrap___glewVertexAttrib3sNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3svNV", VALUEFUNC(_wrap___glewVertexAttrib3svNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib3svNV=", VALUEFUNC(_wrap___glewVertexAttrib3svNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4dNV", VALUEFUNC(_wrap___glewVertexAttrib4dNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4dNV=", VALUEFUNC(_wrap___glewVertexAttrib4dNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4dvNV", VALUEFUNC(_wrap___glewVertexAttrib4dvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4dvNV=", VALUEFUNC(_wrap___glewVertexAttrib4dvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4fNV", VALUEFUNC(_wrap___glewVertexAttrib4fNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4fNV=", VALUEFUNC(_wrap___glewVertexAttrib4fNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4fvNV", VALUEFUNC(_wrap___glewVertexAttrib4fvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4fvNV=", VALUEFUNC(_wrap___glewVertexAttrib4fvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4sNV", VALUEFUNC(_wrap___glewVertexAttrib4sNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4sNV=", VALUEFUNC(_wrap___glewVertexAttrib4sNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4svNV", VALUEFUNC(_wrap___glewVertexAttrib4svNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4svNV=", VALUEFUNC(_wrap___glewVertexAttrib4svNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4ubNV", VALUEFUNC(_wrap___glewVertexAttrib4ubNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4ubNV=", VALUEFUNC(_wrap___glewVertexAttrib4ubNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4ubvNV", VALUEFUNC(_wrap___glewVertexAttrib4ubvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttrib4ubvNV=", VALUEFUNC(_wrap___glewVertexAttrib4ubvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribPointerNV", VALUEFUNC(_wrap___glewVertexAttribPointerNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribPointerNV=", VALUEFUNC(_wrap___glewVertexAttribPointerNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs1dvNV", VALUEFUNC(_wrap___glewVertexAttribs1dvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs1dvNV=", VALUEFUNC(_wrap___glewVertexAttribs1dvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs1fvNV", VALUEFUNC(_wrap___glewVertexAttribs1fvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs1fvNV=", VALUEFUNC(_wrap___glewVertexAttribs1fvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs1svNV", VALUEFUNC(_wrap___glewVertexAttribs1svNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs1svNV=", VALUEFUNC(_wrap___glewVertexAttribs1svNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs2dvNV", VALUEFUNC(_wrap___glewVertexAttribs2dvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs2dvNV=", VALUEFUNC(_wrap___glewVertexAttribs2dvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs2fvNV", VALUEFUNC(_wrap___glewVertexAttribs2fvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs2fvNV=", VALUEFUNC(_wrap___glewVertexAttribs2fvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs2svNV", VALUEFUNC(_wrap___glewVertexAttribs2svNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs2svNV=", VALUEFUNC(_wrap___glewVertexAttribs2svNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs3dvNV", VALUEFUNC(_wrap___glewVertexAttribs3dvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs3dvNV=", VALUEFUNC(_wrap___glewVertexAttribs3dvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs3fvNV", VALUEFUNC(_wrap___glewVertexAttribs3fvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs3fvNV=", VALUEFUNC(_wrap___glewVertexAttribs3fvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs3svNV", VALUEFUNC(_wrap___glewVertexAttribs3svNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs3svNV=", VALUEFUNC(_wrap___glewVertexAttribs3svNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs4dvNV", VALUEFUNC(_wrap___glewVertexAttribs4dvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs4dvNV=", VALUEFUNC(_wrap___glewVertexAttribs4dvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs4fvNV", VALUEFUNC(_wrap___glewVertexAttribs4fvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs4fvNV=", VALUEFUNC(_wrap___glewVertexAttribs4fvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs4svNV", VALUEFUNC(_wrap___glewVertexAttribs4svNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs4svNV=", VALUEFUNC(_wrap___glewVertexAttribs4svNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs4ubvNV", VALUEFUNC(_wrap___glewVertexAttribs4ubvNV_get), 0);
  rb_define_singleton_method(mGlew, "__glewVertexAttribs4ubvNV=", VALUEFUNC(_wrap___glewVertexAttribs4ubvNV_set), 1);
  rb_define_singleton_method(mGlew, "__glewClearDepthfOES", VALUEFUNC(_wrap___glewClearDepthfOES_get), 0);
  rb_define_singleton_method(mGlew, "__glewClearDepthfOES=", VALUEFUNC(_wrap___glewClearDepthfOES_set), 1);
  rb_define_singleton_method(mGlew, "__glewClipPlanefOES", VALUEFUNC(_wrap___glewClipPlanefOES_get), 0);
  rb_define_singleton_method(mGlew, "__glewClipPlanefOES=", VALUEFUNC(_wrap___glewClipPlanefOES_set), 1);
  rb_define_singleton_method(mGlew, "__glewDepthRangefOES", VALUEFUNC(_wrap___glewDepthRangefOES_get), 0);
  rb_define_singleton_method(mGlew, "__glewDepthRangefOES=", VALUEFUNC(_wrap___glewDepthRangefOES_set), 1);
  rb_define_singleton_method(mGlew, "__glewFrustumfOES", VALUEFUNC(_wrap___glewFrustumfOES_get), 0);
  rb_define_singleton_method(mGlew, "__glewFrustumfOES=", VALUEFUNC(_wrap___glewFrustumfOES_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetClipPlanefOES", VALUEFUNC(_wrap___glewGetClipPlanefOES_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetClipPlanefOES=", VALUEFUNC(_wrap___glewGetClipPlanefOES_set), 1);
  rb_define_singleton_method(mGlew, "__glewOrthofOES", VALUEFUNC(_wrap___glewOrthofOES_get), 0);
  rb_define_singleton_method(mGlew, "__glewOrthofOES=", VALUEFUNC(_wrap___glewOrthofOES_set), 1);
  rb_define_singleton_method(mGlew, "__glewDetailTexFuncSGIS", VALUEFUNC(_wrap___glewDetailTexFuncSGIS_get), 0);
  rb_define_singleton_method(mGlew, "__glewDetailTexFuncSGIS=", VALUEFUNC(_wrap___glewDetailTexFuncSGIS_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetDetailTexFuncSGIS", VALUEFUNC(_wrap___glewGetDetailTexFuncSGIS_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetDetailTexFuncSGIS=", VALUEFUNC(_wrap___glewGetDetailTexFuncSGIS_set), 1);
  rb_define_singleton_method(mGlew, "__glewFogFuncSGIS", VALUEFUNC(_wrap___glewFogFuncSGIS_get), 0);
  rb_define_singleton_method(mGlew, "__glewFogFuncSGIS=", VALUEFUNC(_wrap___glewFogFuncSGIS_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFogFuncSGIS", VALUEFUNC(_wrap___glewGetFogFuncSGIS_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFogFuncSGIS=", VALUEFUNC(_wrap___glewGetFogFuncSGIS_set), 1);
  rb_define_singleton_method(mGlew, "__glewSampleMaskSGIS", VALUEFUNC(_wrap___glewSampleMaskSGIS_get), 0);
  rb_define_singleton_method(mGlew, "__glewSampleMaskSGIS=", VALUEFUNC(_wrap___glewSampleMaskSGIS_set), 1);
  rb_define_singleton_method(mGlew, "__glewSamplePatternSGIS", VALUEFUNC(_wrap___glewSamplePatternSGIS_get), 0);
  rb_define_singleton_method(mGlew, "__glewSamplePatternSGIS=", VALUEFUNC(_wrap___glewSamplePatternSGIS_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetSharpenTexFuncSGIS", VALUEFUNC(_wrap___glewGetSharpenTexFuncSGIS_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetSharpenTexFuncSGIS=", VALUEFUNC(_wrap___glewGetSharpenTexFuncSGIS_set), 1);
  rb_define_singleton_method(mGlew, "__glewSharpenTexFuncSGIS", VALUEFUNC(_wrap___glewSharpenTexFuncSGIS_get), 0);
  rb_define_singleton_method(mGlew, "__glewSharpenTexFuncSGIS=", VALUEFUNC(_wrap___glewSharpenTexFuncSGIS_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexImage4DSGIS", VALUEFUNC(_wrap___glewTexImage4DSGIS_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexImage4DSGIS=", VALUEFUNC(_wrap___glewTexImage4DSGIS_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexSubImage4DSGIS", VALUEFUNC(_wrap___glewTexSubImage4DSGIS_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexSubImage4DSGIS=", VALUEFUNC(_wrap___glewTexSubImage4DSGIS_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetTexFilterFuncSGIS", VALUEFUNC(_wrap___glewGetTexFilterFuncSGIS_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetTexFilterFuncSGIS=", VALUEFUNC(_wrap___glewGetTexFilterFuncSGIS_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexFilterFuncSGIS", VALUEFUNC(_wrap___glewTexFilterFuncSGIS_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexFilterFuncSGIS=", VALUEFUNC(_wrap___glewTexFilterFuncSGIS_set), 1);
  rb_define_singleton_method(mGlew, "__glewAsyncMarkerSGIX", VALUEFUNC(_wrap___glewAsyncMarkerSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewAsyncMarkerSGIX=", VALUEFUNC(_wrap___glewAsyncMarkerSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewDeleteAsyncMarkersSGIX", VALUEFUNC(_wrap___glewDeleteAsyncMarkersSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewDeleteAsyncMarkersSGIX=", VALUEFUNC(_wrap___glewDeleteAsyncMarkersSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFinishAsyncSGIX", VALUEFUNC(_wrap___glewFinishAsyncSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFinishAsyncSGIX=", VALUEFUNC(_wrap___glewFinishAsyncSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewGenAsyncMarkersSGIX", VALUEFUNC(_wrap___glewGenAsyncMarkersSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewGenAsyncMarkersSGIX=", VALUEFUNC(_wrap___glewGenAsyncMarkersSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewIsAsyncMarkerSGIX", VALUEFUNC(_wrap___glewIsAsyncMarkerSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewIsAsyncMarkerSGIX=", VALUEFUNC(_wrap___glewIsAsyncMarkerSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewPollAsyncSGIX", VALUEFUNC(_wrap___glewPollAsyncSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewPollAsyncSGIX=", VALUEFUNC(_wrap___glewPollAsyncSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFlushRasterSGIX", VALUEFUNC(_wrap___glewFlushRasterSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFlushRasterSGIX=", VALUEFUNC(_wrap___glewFlushRasterSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewTextureFogSGIX", VALUEFUNC(_wrap___glewTextureFogSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewTextureFogSGIX=", VALUEFUNC(_wrap___glewTextureFogSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentColorMaterialSGIX", VALUEFUNC(_wrap___glewFragmentColorMaterialSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentColorMaterialSGIX=", VALUEFUNC(_wrap___glewFragmentColorMaterialSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModelfSGIX", VALUEFUNC(_wrap___glewFragmentLightModelfSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModelfSGIX=", VALUEFUNC(_wrap___glewFragmentLightModelfSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModelfvSGIX", VALUEFUNC(_wrap___glewFragmentLightModelfvSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModelfvSGIX=", VALUEFUNC(_wrap___glewFragmentLightModelfvSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModeliSGIX", VALUEFUNC(_wrap___glewFragmentLightModeliSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModeliSGIX=", VALUEFUNC(_wrap___glewFragmentLightModeliSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModelivSGIX", VALUEFUNC(_wrap___glewFragmentLightModelivSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightModelivSGIX=", VALUEFUNC(_wrap___glewFragmentLightModelivSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightfSGIX", VALUEFUNC(_wrap___glewFragmentLightfSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightfSGIX=", VALUEFUNC(_wrap___glewFragmentLightfSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightfvSGIX", VALUEFUNC(_wrap___glewFragmentLightfvSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightfvSGIX=", VALUEFUNC(_wrap___glewFragmentLightfvSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightiSGIX", VALUEFUNC(_wrap___glewFragmentLightiSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightiSGIX=", VALUEFUNC(_wrap___glewFragmentLightiSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentLightivSGIX", VALUEFUNC(_wrap___glewFragmentLightivSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentLightivSGIX=", VALUEFUNC(_wrap___glewFragmentLightivSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialfSGIX", VALUEFUNC(_wrap___glewFragmentMaterialfSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialfSGIX=", VALUEFUNC(_wrap___glewFragmentMaterialfSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialfvSGIX", VALUEFUNC(_wrap___glewFragmentMaterialfvSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialfvSGIX=", VALUEFUNC(_wrap___glewFragmentMaterialfvSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialiSGIX", VALUEFUNC(_wrap___glewFragmentMaterialiSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialiSGIX=", VALUEFUNC(_wrap___glewFragmentMaterialiSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialivSGIX", VALUEFUNC(_wrap___glewFragmentMaterialivSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFragmentMaterialivSGIX=", VALUEFUNC(_wrap___glewFragmentMaterialivSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFragmentLightfvSGIX", VALUEFUNC(_wrap___glewGetFragmentLightfvSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFragmentLightfvSGIX=", VALUEFUNC(_wrap___glewGetFragmentLightfvSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFragmentLightivSGIX", VALUEFUNC(_wrap___glewGetFragmentLightivSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFragmentLightivSGIX=", VALUEFUNC(_wrap___glewGetFragmentLightivSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFragmentMaterialfvSGIX", VALUEFUNC(_wrap___glewGetFragmentMaterialfvSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFragmentMaterialfvSGIX=", VALUEFUNC(_wrap___glewGetFragmentMaterialfvSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetFragmentMaterialivSGIX", VALUEFUNC(_wrap___glewGetFragmentMaterialivSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetFragmentMaterialivSGIX=", VALUEFUNC(_wrap___glewGetFragmentMaterialivSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewFrameZoomSGIX", VALUEFUNC(_wrap___glewFrameZoomSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFrameZoomSGIX=", VALUEFUNC(_wrap___glewFrameZoomSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewPixelTexGenSGIX", VALUEFUNC(_wrap___glewPixelTexGenSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewPixelTexGenSGIX=", VALUEFUNC(_wrap___glewPixelTexGenSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewReferencePlaneSGIX", VALUEFUNC(_wrap___glewReferencePlaneSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewReferencePlaneSGIX=", VALUEFUNC(_wrap___glewReferencePlaneSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewSpriteParameterfSGIX", VALUEFUNC(_wrap___glewSpriteParameterfSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewSpriteParameterfSGIX=", VALUEFUNC(_wrap___glewSpriteParameterfSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewSpriteParameterfvSGIX", VALUEFUNC(_wrap___glewSpriteParameterfvSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewSpriteParameterfvSGIX=", VALUEFUNC(_wrap___glewSpriteParameterfvSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewSpriteParameteriSGIX", VALUEFUNC(_wrap___glewSpriteParameteriSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewSpriteParameteriSGIX=", VALUEFUNC(_wrap___glewSpriteParameteriSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewSpriteParameterivSGIX", VALUEFUNC(_wrap___glewSpriteParameterivSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewSpriteParameterivSGIX=", VALUEFUNC(_wrap___glewSpriteParameterivSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewTagSampleBufferSGIX", VALUEFUNC(_wrap___glewTagSampleBufferSGIX_get), 0);
  rb_define_singleton_method(mGlew, "__glewTagSampleBufferSGIX=", VALUEFUNC(_wrap___glewTagSampleBufferSGIX_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorTableParameterfvSGI", VALUEFUNC(_wrap___glewColorTableParameterfvSGI_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorTableParameterfvSGI=", VALUEFUNC(_wrap___glewColorTableParameterfvSGI_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorTableParameterivSGI", VALUEFUNC(_wrap___glewColorTableParameterivSGI_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorTableParameterivSGI=", VALUEFUNC(_wrap___glewColorTableParameterivSGI_set), 1);
  rb_define_singleton_method(mGlew, "__glewColorTableSGI", VALUEFUNC(_wrap___glewColorTableSGI_get), 0);
  rb_define_singleton_method(mGlew, "__glewColorTableSGI=", VALUEFUNC(_wrap___glewColorTableSGI_set), 1);
  rb_define_singleton_method(mGlew, "__glewCopyColorTableSGI", VALUEFUNC(_wrap___glewCopyColorTableSGI_get), 0);
  rb_define_singleton_method(mGlew, "__glewCopyColorTableSGI=", VALUEFUNC(_wrap___glewCopyColorTableSGI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetColorTableParameterfvSGI", VALUEFUNC(_wrap___glewGetColorTableParameterfvSGI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetColorTableParameterfvSGI=", VALUEFUNC(_wrap___glewGetColorTableParameterfvSGI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetColorTableParameterivSGI", VALUEFUNC(_wrap___glewGetColorTableParameterivSGI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetColorTableParameterivSGI=", VALUEFUNC(_wrap___glewGetColorTableParameterivSGI_set), 1);
  rb_define_singleton_method(mGlew, "__glewGetColorTableSGI", VALUEFUNC(_wrap___glewGetColorTableSGI_get), 0);
  rb_define_singleton_method(mGlew, "__glewGetColorTableSGI=", VALUEFUNC(_wrap___glewGetColorTableSGI_set), 1);
  rb_define_singleton_method(mGlew, "__glewFinishTextureSUNX", VALUEFUNC(_wrap___glewFinishTextureSUNX_get), 0);
  rb_define_singleton_method(mGlew, "__glewFinishTextureSUNX=", VALUEFUNC(_wrap___glewFinishTextureSUNX_set), 1);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactorbSUN", VALUEFUNC(_wrap___glewGlobalAlphaFactorbSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactorbSUN=", VALUEFUNC(_wrap___glewGlobalAlphaFactorbSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactordSUN", VALUEFUNC(_wrap___glewGlobalAlphaFactordSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactordSUN=", VALUEFUNC(_wrap___glewGlobalAlphaFactordSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactorfSUN", VALUEFUNC(_wrap___glewGlobalAlphaFactorfSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactorfSUN=", VALUEFUNC(_wrap___glewGlobalAlphaFactorfSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactoriSUN", VALUEFUNC(_wrap___glewGlobalAlphaFactoriSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactoriSUN=", VALUEFUNC(_wrap___glewGlobalAlphaFactoriSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactorsSUN", VALUEFUNC(_wrap___glewGlobalAlphaFactorsSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactorsSUN=", VALUEFUNC(_wrap___glewGlobalAlphaFactorsSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactorubSUN", VALUEFUNC(_wrap___glewGlobalAlphaFactorubSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactorubSUN=", VALUEFUNC(_wrap___glewGlobalAlphaFactorubSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactoruiSUN", VALUEFUNC(_wrap___glewGlobalAlphaFactoruiSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactoruiSUN=", VALUEFUNC(_wrap___glewGlobalAlphaFactoruiSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactorusSUN", VALUEFUNC(_wrap___glewGlobalAlphaFactorusSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewGlobalAlphaFactorusSUN=", VALUEFUNC(_wrap___glewGlobalAlphaFactorusSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReadVideoPixelsSUN", VALUEFUNC(_wrap___glewReadVideoPixelsSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReadVideoPixelsSUN=", VALUEFUNC(_wrap___glewReadVideoPixelsSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodePointerSUN", VALUEFUNC(_wrap___glewReplacementCodePointerSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodePointerSUN=", VALUEFUNC(_wrap___glewReplacementCodePointerSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeubSUN", VALUEFUNC(_wrap___glewReplacementCodeubSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeubSUN=", VALUEFUNC(_wrap___glewReplacementCodeubSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeubvSUN", VALUEFUNC(_wrap___glewReplacementCodeubvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeubvSUN=", VALUEFUNC(_wrap___glewReplacementCodeubvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiSUN", VALUEFUNC(_wrap___glewReplacementCodeuiSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuivSUN", VALUEFUNC(_wrap___glewReplacementCodeuivSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuivSUN=", VALUEFUNC(_wrap___glewReplacementCodeuivSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeusSUN", VALUEFUNC(_wrap___glewReplacementCodeusSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeusSUN=", VALUEFUNC(_wrap___glewReplacementCodeusSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeusvSUN", VALUEFUNC(_wrap___glewReplacementCodeusvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeusvSUN=", VALUEFUNC(_wrap___glewReplacementCodeusvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewColor3fVertex3fSUN", VALUEFUNC(_wrap___glewColor3fVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewColor3fVertex3fSUN=", VALUEFUNC(_wrap___glewColor3fVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewColor3fVertex3fvSUN", VALUEFUNC(_wrap___glewColor3fVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewColor3fVertex3fvSUN=", VALUEFUNC(_wrap___glewColor3fVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewColor4fNormal3fVertex3fSUN", VALUEFUNC(_wrap___glewColor4fNormal3fVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewColor4fNormal3fVertex3fSUN=", VALUEFUNC(_wrap___glewColor4fNormal3fVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewColor4fNormal3fVertex3fvSUN", VALUEFUNC(_wrap___glewColor4fNormal3fVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewColor4fNormal3fVertex3fvSUN=", VALUEFUNC(_wrap___glewColor4fNormal3fVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewColor4ubVertex2fSUN", VALUEFUNC(_wrap___glewColor4ubVertex2fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewColor4ubVertex2fSUN=", VALUEFUNC(_wrap___glewColor4ubVertex2fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewColor4ubVertex2fvSUN", VALUEFUNC(_wrap___glewColor4ubVertex2fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewColor4ubVertex2fvSUN=", VALUEFUNC(_wrap___glewColor4ubVertex2fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewColor4ubVertex3fSUN", VALUEFUNC(_wrap___glewColor4ubVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewColor4ubVertex3fSUN=", VALUEFUNC(_wrap___glewColor4ubVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewColor4ubVertex3fvSUN", VALUEFUNC(_wrap___glewColor4ubVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewColor4ubVertex3fvSUN=", VALUEFUNC(_wrap___glewColor4ubVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormal3fVertex3fSUN", VALUEFUNC(_wrap___glewNormal3fVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormal3fVertex3fSUN=", VALUEFUNC(_wrap___glewNormal3fVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewNormal3fVertex3fvSUN", VALUEFUNC(_wrap___glewNormal3fVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewNormal3fVertex3fvSUN=", VALUEFUNC(_wrap___glewNormal3fVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiColor3fVertex3fSUN", VALUEFUNC(_wrap___glewReplacementCodeuiColor3fVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiColor3fVertex3fSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiColor3fVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiColor3fVertex3fvSUN", VALUEFUNC(_wrap___glewReplacementCodeuiColor3fVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiColor3fVertex3fvSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiColor3fVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiColor4fNormal3fVertex3fSUN", VALUEFUNC(_wrap___glewReplacementCodeuiColor4fNormal3fVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiColor4fNormal3fVertex3fSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiColor4fNormal3fVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiColor4fNormal3fVertex3fvSUN", VALUEFUNC(_wrap___glewReplacementCodeuiColor4fNormal3fVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiColor4fNormal3fVertex3fvSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiColor4fNormal3fVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiColor4ubVertex3fSUN", VALUEFUNC(_wrap___glewReplacementCodeuiColor4ubVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiColor4ubVertex3fSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiColor4ubVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiColor4ubVertex3fvSUN", VALUEFUNC(_wrap___glewReplacementCodeuiColor4ubVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiColor4ubVertex3fvSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiColor4ubVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiNormal3fVertex3fSUN", VALUEFUNC(_wrap___glewReplacementCodeuiNormal3fVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiNormal3fVertex3fSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiNormal3fVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiNormal3fVertex3fvSUN", VALUEFUNC(_wrap___glewReplacementCodeuiNormal3fVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiNormal3fVertex3fvSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiNormal3fVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN", VALUEFUNC(_wrap___glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN", VALUEFUNC(_wrap___glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN", VALUEFUNC(_wrap___glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN", VALUEFUNC(_wrap___glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiTexCoord2fVertex3fSUN", VALUEFUNC(_wrap___glewReplacementCodeuiTexCoord2fVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiTexCoord2fVertex3fSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiTexCoord2fVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiTexCoord2fVertex3fvSUN", VALUEFUNC(_wrap___glewReplacementCodeuiTexCoord2fVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiTexCoord2fVertex3fvSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiTexCoord2fVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiVertex3fSUN", VALUEFUNC(_wrap___glewReplacementCodeuiVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiVertex3fSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiVertex3fvSUN", VALUEFUNC(_wrap___glewReplacementCodeuiVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewReplacementCodeuiVertex3fvSUN=", VALUEFUNC(_wrap___glewReplacementCodeuiVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fColor3fVertex3fSUN", VALUEFUNC(_wrap___glewTexCoord2fColor3fVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fColor3fVertex3fSUN=", VALUEFUNC(_wrap___glewTexCoord2fColor3fVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fColor3fVertex3fvSUN", VALUEFUNC(_wrap___glewTexCoord2fColor3fVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fColor3fVertex3fvSUN=", VALUEFUNC(_wrap___glewTexCoord2fColor3fVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fColor4fNormal3fVertex3fSUN", VALUEFUNC(_wrap___glewTexCoord2fColor4fNormal3fVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fColor4fNormal3fVertex3fSUN=", VALUEFUNC(_wrap___glewTexCoord2fColor4fNormal3fVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fColor4fNormal3fVertex3fvSUN", VALUEFUNC(_wrap___glewTexCoord2fColor4fNormal3fVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fColor4fNormal3fVertex3fvSUN=", VALUEFUNC(_wrap___glewTexCoord2fColor4fNormal3fVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fColor4ubVertex3fSUN", VALUEFUNC(_wrap___glewTexCoord2fColor4ubVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fColor4ubVertex3fSUN=", VALUEFUNC(_wrap___glewTexCoord2fColor4ubVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fColor4ubVertex3fvSUN", VALUEFUNC(_wrap___glewTexCoord2fColor4ubVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fColor4ubVertex3fvSUN=", VALUEFUNC(_wrap___glewTexCoord2fColor4ubVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fNormal3fVertex3fSUN", VALUEFUNC(_wrap___glewTexCoord2fNormal3fVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fNormal3fVertex3fSUN=", VALUEFUNC(_wrap___glewTexCoord2fNormal3fVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fNormal3fVertex3fvSUN", VALUEFUNC(_wrap___glewTexCoord2fNormal3fVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fNormal3fVertex3fvSUN=", VALUEFUNC(_wrap___glewTexCoord2fNormal3fVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fVertex3fSUN", VALUEFUNC(_wrap___glewTexCoord2fVertex3fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fVertex3fSUN=", VALUEFUNC(_wrap___glewTexCoord2fVertex3fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fVertex3fvSUN", VALUEFUNC(_wrap___glewTexCoord2fVertex3fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord2fVertex3fvSUN=", VALUEFUNC(_wrap___glewTexCoord2fVertex3fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord4fColor4fNormal3fVertex4fSUN", VALUEFUNC(_wrap___glewTexCoord4fColor4fNormal3fVertex4fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord4fColor4fNormal3fVertex4fSUN=", VALUEFUNC(_wrap___glewTexCoord4fColor4fNormal3fVertex4fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord4fColor4fNormal3fVertex4fvSUN", VALUEFUNC(_wrap___glewTexCoord4fColor4fNormal3fVertex4fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord4fColor4fNormal3fVertex4fvSUN=", VALUEFUNC(_wrap___glewTexCoord4fColor4fNormal3fVertex4fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord4fVertex4fSUN", VALUEFUNC(_wrap___glewTexCoord4fVertex4fSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord4fVertex4fSUN=", VALUEFUNC(_wrap___glewTexCoord4fVertex4fSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewTexCoord4fVertex4fvSUN", VALUEFUNC(_wrap___glewTexCoord4fVertex4fvSUN_get), 0);
  rb_define_singleton_method(mGlew, "__glewTexCoord4fVertex4fvSUN=", VALUEFUNC(_wrap___glewTexCoord4fVertex4fvSUN_set), 1);
  rb_define_singleton_method(mGlew, "__glewAddSwapHintRectWIN", VALUEFUNC(_wrap___glewAddSwapHintRectWIN_get), 0);
  rb_define_singleton_method(mGlew, "__glewAddSwapHintRectWIN=", VALUEFUNC(_wrap___glewAddSwapHintRectWIN_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_1_1", VALUEFUNC(_wrap___GLEW_VERSION_1_1_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_1_1=", VALUEFUNC(_wrap___GLEW_VERSION_1_1_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_1_2", VALUEFUNC(_wrap___GLEW_VERSION_1_2_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_1_2=", VALUEFUNC(_wrap___GLEW_VERSION_1_2_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_1_3", VALUEFUNC(_wrap___GLEW_VERSION_1_3_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_1_3=", VALUEFUNC(_wrap___GLEW_VERSION_1_3_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_1_4", VALUEFUNC(_wrap___GLEW_VERSION_1_4_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_1_4=", VALUEFUNC(_wrap___GLEW_VERSION_1_4_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_1_5", VALUEFUNC(_wrap___GLEW_VERSION_1_5_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_1_5=", VALUEFUNC(_wrap___GLEW_VERSION_1_5_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_2_0", VALUEFUNC(_wrap___GLEW_VERSION_2_0_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_2_0=", VALUEFUNC(_wrap___GLEW_VERSION_2_0_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_2_1", VALUEFUNC(_wrap___GLEW_VERSION_2_1_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_2_1=", VALUEFUNC(_wrap___GLEW_VERSION_2_1_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_3_0", VALUEFUNC(_wrap___GLEW_VERSION_3_0_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_VERSION_3_0=", VALUEFUNC(_wrap___GLEW_VERSION_3_0_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_3DFX_multisample", VALUEFUNC(_wrap___GLEW_3DFX_multisample_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_3DFX_multisample=", VALUEFUNC(_wrap___GLEW_3DFX_multisample_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_3DFX_tbuffer", VALUEFUNC(_wrap___GLEW_3DFX_tbuffer_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_3DFX_tbuffer=", VALUEFUNC(_wrap___GLEW_3DFX_tbuffer_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_3DFX_texture_compression_FXT1", VALUEFUNC(_wrap___GLEW_3DFX_texture_compression_FXT1_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_3DFX_texture_compression_FXT1=", VALUEFUNC(_wrap___GLEW_3DFX_texture_compression_FXT1_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_client_storage", VALUEFUNC(_wrap___GLEW_APPLE_client_storage_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_client_storage=", VALUEFUNC(_wrap___GLEW_APPLE_client_storage_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_element_array", VALUEFUNC(_wrap___GLEW_APPLE_element_array_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_element_array=", VALUEFUNC(_wrap___GLEW_APPLE_element_array_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_fence", VALUEFUNC(_wrap___GLEW_APPLE_fence_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_fence=", VALUEFUNC(_wrap___GLEW_APPLE_fence_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_float_pixels", VALUEFUNC(_wrap___GLEW_APPLE_float_pixels_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_float_pixels=", VALUEFUNC(_wrap___GLEW_APPLE_float_pixels_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_flush_buffer_range", VALUEFUNC(_wrap___GLEW_APPLE_flush_buffer_range_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_flush_buffer_range=", VALUEFUNC(_wrap___GLEW_APPLE_flush_buffer_range_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_pixel_buffer", VALUEFUNC(_wrap___GLEW_APPLE_pixel_buffer_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_pixel_buffer=", VALUEFUNC(_wrap___GLEW_APPLE_pixel_buffer_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_specular_vector", VALUEFUNC(_wrap___GLEW_APPLE_specular_vector_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_specular_vector=", VALUEFUNC(_wrap___GLEW_APPLE_specular_vector_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_texture_range", VALUEFUNC(_wrap___GLEW_APPLE_texture_range_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_texture_range=", VALUEFUNC(_wrap___GLEW_APPLE_texture_range_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_transform_hint", VALUEFUNC(_wrap___GLEW_APPLE_transform_hint_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_transform_hint=", VALUEFUNC(_wrap___GLEW_APPLE_transform_hint_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_vertex_array_object", VALUEFUNC(_wrap___GLEW_APPLE_vertex_array_object_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_vertex_array_object=", VALUEFUNC(_wrap___GLEW_APPLE_vertex_array_object_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_vertex_array_range", VALUEFUNC(_wrap___GLEW_APPLE_vertex_array_range_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_vertex_array_range=", VALUEFUNC(_wrap___GLEW_APPLE_vertex_array_range_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_ycbcr_422", VALUEFUNC(_wrap___GLEW_APPLE_ycbcr_422_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_APPLE_ycbcr_422=", VALUEFUNC(_wrap___GLEW_APPLE_ycbcr_422_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_color_buffer_float", VALUEFUNC(_wrap___GLEW_ARB_color_buffer_float_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_color_buffer_float=", VALUEFUNC(_wrap___GLEW_ARB_color_buffer_float_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_depth_buffer_float", VALUEFUNC(_wrap___GLEW_ARB_depth_buffer_float_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_depth_buffer_float=", VALUEFUNC(_wrap___GLEW_ARB_depth_buffer_float_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_depth_texture", VALUEFUNC(_wrap___GLEW_ARB_depth_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_depth_texture=", VALUEFUNC(_wrap___GLEW_ARB_depth_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_draw_buffers", VALUEFUNC(_wrap___GLEW_ARB_draw_buffers_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_draw_buffers=", VALUEFUNC(_wrap___GLEW_ARB_draw_buffers_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_draw_instanced", VALUEFUNC(_wrap___GLEW_ARB_draw_instanced_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_draw_instanced=", VALUEFUNC(_wrap___GLEW_ARB_draw_instanced_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_fragment_program", VALUEFUNC(_wrap___GLEW_ARB_fragment_program_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_fragment_program=", VALUEFUNC(_wrap___GLEW_ARB_fragment_program_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_fragment_program_shadow", VALUEFUNC(_wrap___GLEW_ARB_fragment_program_shadow_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_fragment_program_shadow=", VALUEFUNC(_wrap___GLEW_ARB_fragment_program_shadow_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_fragment_shader", VALUEFUNC(_wrap___GLEW_ARB_fragment_shader_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_fragment_shader=", VALUEFUNC(_wrap___GLEW_ARB_fragment_shader_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_framebuffer_object", VALUEFUNC(_wrap___GLEW_ARB_framebuffer_object_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_framebuffer_object=", VALUEFUNC(_wrap___GLEW_ARB_framebuffer_object_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_framebuffer_sRGB", VALUEFUNC(_wrap___GLEW_ARB_framebuffer_sRGB_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_framebuffer_sRGB=", VALUEFUNC(_wrap___GLEW_ARB_framebuffer_sRGB_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_geometry_shader4", VALUEFUNC(_wrap___GLEW_ARB_geometry_shader4_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_geometry_shader4=", VALUEFUNC(_wrap___GLEW_ARB_geometry_shader4_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_half_float_pixel", VALUEFUNC(_wrap___GLEW_ARB_half_float_pixel_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_half_float_pixel=", VALUEFUNC(_wrap___GLEW_ARB_half_float_pixel_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_half_float_vertex", VALUEFUNC(_wrap___GLEW_ARB_half_float_vertex_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_half_float_vertex=", VALUEFUNC(_wrap___GLEW_ARB_half_float_vertex_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_imaging", VALUEFUNC(_wrap___GLEW_ARB_imaging_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_imaging=", VALUEFUNC(_wrap___GLEW_ARB_imaging_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_instanced_arrays", VALUEFUNC(_wrap___GLEW_ARB_instanced_arrays_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_instanced_arrays=", VALUEFUNC(_wrap___GLEW_ARB_instanced_arrays_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_map_buffer_range", VALUEFUNC(_wrap___GLEW_ARB_map_buffer_range_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_map_buffer_range=", VALUEFUNC(_wrap___GLEW_ARB_map_buffer_range_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_matrix_palette", VALUEFUNC(_wrap___GLEW_ARB_matrix_palette_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_matrix_palette=", VALUEFUNC(_wrap___GLEW_ARB_matrix_palette_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_multisample", VALUEFUNC(_wrap___GLEW_ARB_multisample_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_multisample=", VALUEFUNC(_wrap___GLEW_ARB_multisample_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_multitexture", VALUEFUNC(_wrap___GLEW_ARB_multitexture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_multitexture=", VALUEFUNC(_wrap___GLEW_ARB_multitexture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_occlusion_query", VALUEFUNC(_wrap___GLEW_ARB_occlusion_query_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_occlusion_query=", VALUEFUNC(_wrap___GLEW_ARB_occlusion_query_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_pixel_buffer_object", VALUEFUNC(_wrap___GLEW_ARB_pixel_buffer_object_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_pixel_buffer_object=", VALUEFUNC(_wrap___GLEW_ARB_pixel_buffer_object_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_point_parameters", VALUEFUNC(_wrap___GLEW_ARB_point_parameters_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_point_parameters=", VALUEFUNC(_wrap___GLEW_ARB_point_parameters_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_point_sprite", VALUEFUNC(_wrap___GLEW_ARB_point_sprite_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_point_sprite=", VALUEFUNC(_wrap___GLEW_ARB_point_sprite_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_shader_objects", VALUEFUNC(_wrap___GLEW_ARB_shader_objects_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_shader_objects=", VALUEFUNC(_wrap___GLEW_ARB_shader_objects_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_shading_language_100", VALUEFUNC(_wrap___GLEW_ARB_shading_language_100_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_shading_language_100=", VALUEFUNC(_wrap___GLEW_ARB_shading_language_100_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_shadow", VALUEFUNC(_wrap___GLEW_ARB_shadow_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_shadow=", VALUEFUNC(_wrap___GLEW_ARB_shadow_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_shadow_ambient", VALUEFUNC(_wrap___GLEW_ARB_shadow_ambient_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_shadow_ambient=", VALUEFUNC(_wrap___GLEW_ARB_shadow_ambient_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_border_clamp", VALUEFUNC(_wrap___GLEW_ARB_texture_border_clamp_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_border_clamp=", VALUEFUNC(_wrap___GLEW_ARB_texture_border_clamp_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_buffer_object", VALUEFUNC(_wrap___GLEW_ARB_texture_buffer_object_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_buffer_object=", VALUEFUNC(_wrap___GLEW_ARB_texture_buffer_object_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_compression", VALUEFUNC(_wrap___GLEW_ARB_texture_compression_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_compression=", VALUEFUNC(_wrap___GLEW_ARB_texture_compression_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_compression_rgtc", VALUEFUNC(_wrap___GLEW_ARB_texture_compression_rgtc_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_compression_rgtc=", VALUEFUNC(_wrap___GLEW_ARB_texture_compression_rgtc_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_cube_map", VALUEFUNC(_wrap___GLEW_ARB_texture_cube_map_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_cube_map=", VALUEFUNC(_wrap___GLEW_ARB_texture_cube_map_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_env_add", VALUEFUNC(_wrap___GLEW_ARB_texture_env_add_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_env_add=", VALUEFUNC(_wrap___GLEW_ARB_texture_env_add_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_env_combine", VALUEFUNC(_wrap___GLEW_ARB_texture_env_combine_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_env_combine=", VALUEFUNC(_wrap___GLEW_ARB_texture_env_combine_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_env_crossbar", VALUEFUNC(_wrap___GLEW_ARB_texture_env_crossbar_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_env_crossbar=", VALUEFUNC(_wrap___GLEW_ARB_texture_env_crossbar_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_env_dot3", VALUEFUNC(_wrap___GLEW_ARB_texture_env_dot3_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_env_dot3=", VALUEFUNC(_wrap___GLEW_ARB_texture_env_dot3_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_float", VALUEFUNC(_wrap___GLEW_ARB_texture_float_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_float=", VALUEFUNC(_wrap___GLEW_ARB_texture_float_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_mirrored_repeat", VALUEFUNC(_wrap___GLEW_ARB_texture_mirrored_repeat_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_mirrored_repeat=", VALUEFUNC(_wrap___GLEW_ARB_texture_mirrored_repeat_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_non_power_of_two", VALUEFUNC(_wrap___GLEW_ARB_texture_non_power_of_two_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_non_power_of_two=", VALUEFUNC(_wrap___GLEW_ARB_texture_non_power_of_two_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_rectangle", VALUEFUNC(_wrap___GLEW_ARB_texture_rectangle_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_rectangle=", VALUEFUNC(_wrap___GLEW_ARB_texture_rectangle_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_rg", VALUEFUNC(_wrap___GLEW_ARB_texture_rg_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_texture_rg=", VALUEFUNC(_wrap___GLEW_ARB_texture_rg_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_transpose_matrix", VALUEFUNC(_wrap___GLEW_ARB_transpose_matrix_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_transpose_matrix=", VALUEFUNC(_wrap___GLEW_ARB_transpose_matrix_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_vertex_array_object", VALUEFUNC(_wrap___GLEW_ARB_vertex_array_object_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_vertex_array_object=", VALUEFUNC(_wrap___GLEW_ARB_vertex_array_object_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_vertex_blend", VALUEFUNC(_wrap___GLEW_ARB_vertex_blend_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_vertex_blend=", VALUEFUNC(_wrap___GLEW_ARB_vertex_blend_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_vertex_buffer_object", VALUEFUNC(_wrap___GLEW_ARB_vertex_buffer_object_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_vertex_buffer_object=", VALUEFUNC(_wrap___GLEW_ARB_vertex_buffer_object_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_vertex_program", VALUEFUNC(_wrap___GLEW_ARB_vertex_program_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_vertex_program=", VALUEFUNC(_wrap___GLEW_ARB_vertex_program_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_vertex_shader", VALUEFUNC(_wrap___GLEW_ARB_vertex_shader_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_vertex_shader=", VALUEFUNC(_wrap___GLEW_ARB_vertex_shader_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_window_pos", VALUEFUNC(_wrap___GLEW_ARB_window_pos_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ARB_window_pos=", VALUEFUNC(_wrap___GLEW_ARB_window_pos_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATIX_point_sprites", VALUEFUNC(_wrap___GLEW_ATIX_point_sprites_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATIX_point_sprites=", VALUEFUNC(_wrap___GLEW_ATIX_point_sprites_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATIX_texture_env_combine3", VALUEFUNC(_wrap___GLEW_ATIX_texture_env_combine3_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATIX_texture_env_combine3=", VALUEFUNC(_wrap___GLEW_ATIX_texture_env_combine3_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATIX_texture_env_route", VALUEFUNC(_wrap___GLEW_ATIX_texture_env_route_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATIX_texture_env_route=", VALUEFUNC(_wrap___GLEW_ATIX_texture_env_route_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATIX_vertex_shader_output_point_size", VALUEFUNC(_wrap___GLEW_ATIX_vertex_shader_output_point_size_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATIX_vertex_shader_output_point_size=", VALUEFUNC(_wrap___GLEW_ATIX_vertex_shader_output_point_size_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_draw_buffers", VALUEFUNC(_wrap___GLEW_ATI_draw_buffers_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_draw_buffers=", VALUEFUNC(_wrap___GLEW_ATI_draw_buffers_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_element_array", VALUEFUNC(_wrap___GLEW_ATI_element_array_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_element_array=", VALUEFUNC(_wrap___GLEW_ATI_element_array_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_envmap_bumpmap", VALUEFUNC(_wrap___GLEW_ATI_envmap_bumpmap_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_envmap_bumpmap=", VALUEFUNC(_wrap___GLEW_ATI_envmap_bumpmap_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_fragment_shader", VALUEFUNC(_wrap___GLEW_ATI_fragment_shader_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_fragment_shader=", VALUEFUNC(_wrap___GLEW_ATI_fragment_shader_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_map_object_buffer", VALUEFUNC(_wrap___GLEW_ATI_map_object_buffer_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_map_object_buffer=", VALUEFUNC(_wrap___GLEW_ATI_map_object_buffer_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_pn_triangles", VALUEFUNC(_wrap___GLEW_ATI_pn_triangles_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_pn_triangles=", VALUEFUNC(_wrap___GLEW_ATI_pn_triangles_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_separate_stencil", VALUEFUNC(_wrap___GLEW_ATI_separate_stencil_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_separate_stencil=", VALUEFUNC(_wrap___GLEW_ATI_separate_stencil_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_shader_texture_lod", VALUEFUNC(_wrap___GLEW_ATI_shader_texture_lod_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_shader_texture_lod=", VALUEFUNC(_wrap___GLEW_ATI_shader_texture_lod_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_text_fragment_shader", VALUEFUNC(_wrap___GLEW_ATI_text_fragment_shader_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_text_fragment_shader=", VALUEFUNC(_wrap___GLEW_ATI_text_fragment_shader_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_texture_compression_3dc", VALUEFUNC(_wrap___GLEW_ATI_texture_compression_3dc_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_texture_compression_3dc=", VALUEFUNC(_wrap___GLEW_ATI_texture_compression_3dc_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_texture_env_combine3", VALUEFUNC(_wrap___GLEW_ATI_texture_env_combine3_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_texture_env_combine3=", VALUEFUNC(_wrap___GLEW_ATI_texture_env_combine3_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_texture_float", VALUEFUNC(_wrap___GLEW_ATI_texture_float_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_texture_float=", VALUEFUNC(_wrap___GLEW_ATI_texture_float_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_texture_mirror_once", VALUEFUNC(_wrap___GLEW_ATI_texture_mirror_once_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_texture_mirror_once=", VALUEFUNC(_wrap___GLEW_ATI_texture_mirror_once_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_vertex_array_object", VALUEFUNC(_wrap___GLEW_ATI_vertex_array_object_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_vertex_array_object=", VALUEFUNC(_wrap___GLEW_ATI_vertex_array_object_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_vertex_attrib_array_object", VALUEFUNC(_wrap___GLEW_ATI_vertex_attrib_array_object_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_vertex_attrib_array_object=", VALUEFUNC(_wrap___GLEW_ATI_vertex_attrib_array_object_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_vertex_streams", VALUEFUNC(_wrap___GLEW_ATI_vertex_streams_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_ATI_vertex_streams=", VALUEFUNC(_wrap___GLEW_ATI_vertex_streams_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_422_pixels", VALUEFUNC(_wrap___GLEW_EXT_422_pixels_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_422_pixels=", VALUEFUNC(_wrap___GLEW_EXT_422_pixels_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_Cg_shader", VALUEFUNC(_wrap___GLEW_EXT_Cg_shader_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_Cg_shader=", VALUEFUNC(_wrap___GLEW_EXT_Cg_shader_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_abgr", VALUEFUNC(_wrap___GLEW_EXT_abgr_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_abgr=", VALUEFUNC(_wrap___GLEW_EXT_abgr_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_bgra", VALUEFUNC(_wrap___GLEW_EXT_bgra_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_bgra=", VALUEFUNC(_wrap___GLEW_EXT_bgra_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_bindable_uniform", VALUEFUNC(_wrap___GLEW_EXT_bindable_uniform_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_bindable_uniform=", VALUEFUNC(_wrap___GLEW_EXT_bindable_uniform_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_blend_color", VALUEFUNC(_wrap___GLEW_EXT_blend_color_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_blend_color=", VALUEFUNC(_wrap___GLEW_EXT_blend_color_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_blend_equation_separate", VALUEFUNC(_wrap___GLEW_EXT_blend_equation_separate_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_blend_equation_separate=", VALUEFUNC(_wrap___GLEW_EXT_blend_equation_separate_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_blend_func_separate", VALUEFUNC(_wrap___GLEW_EXT_blend_func_separate_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_blend_func_separate=", VALUEFUNC(_wrap___GLEW_EXT_blend_func_separate_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_blend_logic_op", VALUEFUNC(_wrap___GLEW_EXT_blend_logic_op_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_blend_logic_op=", VALUEFUNC(_wrap___GLEW_EXT_blend_logic_op_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_blend_minmax", VALUEFUNC(_wrap___GLEW_EXT_blend_minmax_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_blend_minmax=", VALUEFUNC(_wrap___GLEW_EXT_blend_minmax_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_blend_subtract", VALUEFUNC(_wrap___GLEW_EXT_blend_subtract_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_blend_subtract=", VALUEFUNC(_wrap___GLEW_EXT_blend_subtract_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_clip_volume_hint", VALUEFUNC(_wrap___GLEW_EXT_clip_volume_hint_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_clip_volume_hint=", VALUEFUNC(_wrap___GLEW_EXT_clip_volume_hint_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_cmyka", VALUEFUNC(_wrap___GLEW_EXT_cmyka_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_cmyka=", VALUEFUNC(_wrap___GLEW_EXT_cmyka_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_color_subtable", VALUEFUNC(_wrap___GLEW_EXT_color_subtable_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_color_subtable=", VALUEFUNC(_wrap___GLEW_EXT_color_subtable_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_compiled_vertex_array", VALUEFUNC(_wrap___GLEW_EXT_compiled_vertex_array_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_compiled_vertex_array=", VALUEFUNC(_wrap___GLEW_EXT_compiled_vertex_array_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_convolution", VALUEFUNC(_wrap___GLEW_EXT_convolution_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_convolution=", VALUEFUNC(_wrap___GLEW_EXT_convolution_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_coordinate_frame", VALUEFUNC(_wrap___GLEW_EXT_coordinate_frame_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_coordinate_frame=", VALUEFUNC(_wrap___GLEW_EXT_coordinate_frame_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_copy_texture", VALUEFUNC(_wrap___GLEW_EXT_copy_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_copy_texture=", VALUEFUNC(_wrap___GLEW_EXT_copy_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_cull_vertex", VALUEFUNC(_wrap___GLEW_EXT_cull_vertex_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_cull_vertex=", VALUEFUNC(_wrap___GLEW_EXT_cull_vertex_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_depth_bounds_test", VALUEFUNC(_wrap___GLEW_EXT_depth_bounds_test_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_depth_bounds_test=", VALUEFUNC(_wrap___GLEW_EXT_depth_bounds_test_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_direct_state_access", VALUEFUNC(_wrap___GLEW_EXT_direct_state_access_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_direct_state_access=", VALUEFUNC(_wrap___GLEW_EXT_direct_state_access_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_draw_buffers2", VALUEFUNC(_wrap___GLEW_EXT_draw_buffers2_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_draw_buffers2=", VALUEFUNC(_wrap___GLEW_EXT_draw_buffers2_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_draw_instanced", VALUEFUNC(_wrap___GLEW_EXT_draw_instanced_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_draw_instanced=", VALUEFUNC(_wrap___GLEW_EXT_draw_instanced_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_draw_range_elements", VALUEFUNC(_wrap___GLEW_EXT_draw_range_elements_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_draw_range_elements=", VALUEFUNC(_wrap___GLEW_EXT_draw_range_elements_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_fog_coord", VALUEFUNC(_wrap___GLEW_EXT_fog_coord_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_fog_coord=", VALUEFUNC(_wrap___GLEW_EXT_fog_coord_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_fragment_lighting", VALUEFUNC(_wrap___GLEW_EXT_fragment_lighting_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_fragment_lighting=", VALUEFUNC(_wrap___GLEW_EXT_fragment_lighting_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_framebuffer_blit", VALUEFUNC(_wrap___GLEW_EXT_framebuffer_blit_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_framebuffer_blit=", VALUEFUNC(_wrap___GLEW_EXT_framebuffer_blit_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_framebuffer_multisample", VALUEFUNC(_wrap___GLEW_EXT_framebuffer_multisample_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_framebuffer_multisample=", VALUEFUNC(_wrap___GLEW_EXT_framebuffer_multisample_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_framebuffer_object", VALUEFUNC(_wrap___GLEW_EXT_framebuffer_object_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_framebuffer_object=", VALUEFUNC(_wrap___GLEW_EXT_framebuffer_object_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_framebuffer_sRGB", VALUEFUNC(_wrap___GLEW_EXT_framebuffer_sRGB_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_framebuffer_sRGB=", VALUEFUNC(_wrap___GLEW_EXT_framebuffer_sRGB_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_geometry_shader4", VALUEFUNC(_wrap___GLEW_EXT_geometry_shader4_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_geometry_shader4=", VALUEFUNC(_wrap___GLEW_EXT_geometry_shader4_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_gpu_program_parameters", VALUEFUNC(_wrap___GLEW_EXT_gpu_program_parameters_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_gpu_program_parameters=", VALUEFUNC(_wrap___GLEW_EXT_gpu_program_parameters_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_gpu_shader4", VALUEFUNC(_wrap___GLEW_EXT_gpu_shader4_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_gpu_shader4=", VALUEFUNC(_wrap___GLEW_EXT_gpu_shader4_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_histogram", VALUEFUNC(_wrap___GLEW_EXT_histogram_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_histogram=", VALUEFUNC(_wrap___GLEW_EXT_histogram_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_index_array_formats", VALUEFUNC(_wrap___GLEW_EXT_index_array_formats_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_index_array_formats=", VALUEFUNC(_wrap___GLEW_EXT_index_array_formats_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_index_func", VALUEFUNC(_wrap___GLEW_EXT_index_func_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_index_func=", VALUEFUNC(_wrap___GLEW_EXT_index_func_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_index_material", VALUEFUNC(_wrap___GLEW_EXT_index_material_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_index_material=", VALUEFUNC(_wrap___GLEW_EXT_index_material_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_index_texture", VALUEFUNC(_wrap___GLEW_EXT_index_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_index_texture=", VALUEFUNC(_wrap___GLEW_EXT_index_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_light_texture", VALUEFUNC(_wrap___GLEW_EXT_light_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_light_texture=", VALUEFUNC(_wrap___GLEW_EXT_light_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_misc_attribute", VALUEFUNC(_wrap___GLEW_EXT_misc_attribute_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_misc_attribute=", VALUEFUNC(_wrap___GLEW_EXT_misc_attribute_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_multi_draw_arrays", VALUEFUNC(_wrap___GLEW_EXT_multi_draw_arrays_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_multi_draw_arrays=", VALUEFUNC(_wrap___GLEW_EXT_multi_draw_arrays_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_multisample", VALUEFUNC(_wrap___GLEW_EXT_multisample_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_multisample=", VALUEFUNC(_wrap___GLEW_EXT_multisample_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_packed_depth_stencil", VALUEFUNC(_wrap___GLEW_EXT_packed_depth_stencil_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_packed_depth_stencil=", VALUEFUNC(_wrap___GLEW_EXT_packed_depth_stencil_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_packed_float", VALUEFUNC(_wrap___GLEW_EXT_packed_float_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_packed_float=", VALUEFUNC(_wrap___GLEW_EXT_packed_float_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_packed_pixels", VALUEFUNC(_wrap___GLEW_EXT_packed_pixels_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_packed_pixels=", VALUEFUNC(_wrap___GLEW_EXT_packed_pixels_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_paletted_texture", VALUEFUNC(_wrap___GLEW_EXT_paletted_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_paletted_texture=", VALUEFUNC(_wrap___GLEW_EXT_paletted_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_pixel_buffer_object", VALUEFUNC(_wrap___GLEW_EXT_pixel_buffer_object_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_pixel_buffer_object=", VALUEFUNC(_wrap___GLEW_EXT_pixel_buffer_object_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_pixel_transform", VALUEFUNC(_wrap___GLEW_EXT_pixel_transform_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_pixel_transform=", VALUEFUNC(_wrap___GLEW_EXT_pixel_transform_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_pixel_transform_color_table", VALUEFUNC(_wrap___GLEW_EXT_pixel_transform_color_table_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_pixel_transform_color_table=", VALUEFUNC(_wrap___GLEW_EXT_pixel_transform_color_table_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_point_parameters", VALUEFUNC(_wrap___GLEW_EXT_point_parameters_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_point_parameters=", VALUEFUNC(_wrap___GLEW_EXT_point_parameters_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_polygon_offset", VALUEFUNC(_wrap___GLEW_EXT_polygon_offset_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_polygon_offset=", VALUEFUNC(_wrap___GLEW_EXT_polygon_offset_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_rescale_normal", VALUEFUNC(_wrap___GLEW_EXT_rescale_normal_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_rescale_normal=", VALUEFUNC(_wrap___GLEW_EXT_rescale_normal_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_scene_marker", VALUEFUNC(_wrap___GLEW_EXT_scene_marker_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_scene_marker=", VALUEFUNC(_wrap___GLEW_EXT_scene_marker_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_secondary_color", VALUEFUNC(_wrap___GLEW_EXT_secondary_color_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_secondary_color=", VALUEFUNC(_wrap___GLEW_EXT_secondary_color_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_separate_specular_color", VALUEFUNC(_wrap___GLEW_EXT_separate_specular_color_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_separate_specular_color=", VALUEFUNC(_wrap___GLEW_EXT_separate_specular_color_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_shadow_funcs", VALUEFUNC(_wrap___GLEW_EXT_shadow_funcs_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_shadow_funcs=", VALUEFUNC(_wrap___GLEW_EXT_shadow_funcs_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_shared_texture_palette", VALUEFUNC(_wrap___GLEW_EXT_shared_texture_palette_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_shared_texture_palette=", VALUEFUNC(_wrap___GLEW_EXT_shared_texture_palette_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_stencil_clear_tag", VALUEFUNC(_wrap___GLEW_EXT_stencil_clear_tag_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_stencil_clear_tag=", VALUEFUNC(_wrap___GLEW_EXT_stencil_clear_tag_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_stencil_two_side", VALUEFUNC(_wrap___GLEW_EXT_stencil_two_side_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_stencil_two_side=", VALUEFUNC(_wrap___GLEW_EXT_stencil_two_side_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_stencil_wrap", VALUEFUNC(_wrap___GLEW_EXT_stencil_wrap_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_stencil_wrap=", VALUEFUNC(_wrap___GLEW_EXT_stencil_wrap_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_subtexture", VALUEFUNC(_wrap___GLEW_EXT_subtexture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_subtexture=", VALUEFUNC(_wrap___GLEW_EXT_subtexture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture", VALUEFUNC(_wrap___GLEW_EXT_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture=", VALUEFUNC(_wrap___GLEW_EXT_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture3D", VALUEFUNC(_wrap___GLEW_EXT_texture3D_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture3D=", VALUEFUNC(_wrap___GLEW_EXT_texture3D_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_array", VALUEFUNC(_wrap___GLEW_EXT_texture_array_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_array=", VALUEFUNC(_wrap___GLEW_EXT_texture_array_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_buffer_object", VALUEFUNC(_wrap___GLEW_EXT_texture_buffer_object_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_buffer_object=", VALUEFUNC(_wrap___GLEW_EXT_texture_buffer_object_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_compression_dxt1", VALUEFUNC(_wrap___GLEW_EXT_texture_compression_dxt1_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_compression_dxt1=", VALUEFUNC(_wrap___GLEW_EXT_texture_compression_dxt1_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_compression_latc", VALUEFUNC(_wrap___GLEW_EXT_texture_compression_latc_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_compression_latc=", VALUEFUNC(_wrap___GLEW_EXT_texture_compression_latc_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_compression_rgtc", VALUEFUNC(_wrap___GLEW_EXT_texture_compression_rgtc_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_compression_rgtc=", VALUEFUNC(_wrap___GLEW_EXT_texture_compression_rgtc_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_compression_s3tc", VALUEFUNC(_wrap___GLEW_EXT_texture_compression_s3tc_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_compression_s3tc=", VALUEFUNC(_wrap___GLEW_EXT_texture_compression_s3tc_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_cube_map", VALUEFUNC(_wrap___GLEW_EXT_texture_cube_map_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_cube_map=", VALUEFUNC(_wrap___GLEW_EXT_texture_cube_map_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_edge_clamp", VALUEFUNC(_wrap___GLEW_EXT_texture_edge_clamp_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_edge_clamp=", VALUEFUNC(_wrap___GLEW_EXT_texture_edge_clamp_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_env", VALUEFUNC(_wrap___GLEW_EXT_texture_env_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_env=", VALUEFUNC(_wrap___GLEW_EXT_texture_env_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_env_add", VALUEFUNC(_wrap___GLEW_EXT_texture_env_add_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_env_add=", VALUEFUNC(_wrap___GLEW_EXT_texture_env_add_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_env_combine", VALUEFUNC(_wrap___GLEW_EXT_texture_env_combine_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_env_combine=", VALUEFUNC(_wrap___GLEW_EXT_texture_env_combine_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_env_dot3", VALUEFUNC(_wrap___GLEW_EXT_texture_env_dot3_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_env_dot3=", VALUEFUNC(_wrap___GLEW_EXT_texture_env_dot3_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_filter_anisotropic", VALUEFUNC(_wrap___GLEW_EXT_texture_filter_anisotropic_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_filter_anisotropic=", VALUEFUNC(_wrap___GLEW_EXT_texture_filter_anisotropic_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_integer", VALUEFUNC(_wrap___GLEW_EXT_texture_integer_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_integer=", VALUEFUNC(_wrap___GLEW_EXT_texture_integer_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_lod_bias", VALUEFUNC(_wrap___GLEW_EXT_texture_lod_bias_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_lod_bias=", VALUEFUNC(_wrap___GLEW_EXT_texture_lod_bias_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_mirror_clamp", VALUEFUNC(_wrap___GLEW_EXT_texture_mirror_clamp_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_mirror_clamp=", VALUEFUNC(_wrap___GLEW_EXT_texture_mirror_clamp_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_object", VALUEFUNC(_wrap___GLEW_EXT_texture_object_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_object=", VALUEFUNC(_wrap___GLEW_EXT_texture_object_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_perturb_normal", VALUEFUNC(_wrap___GLEW_EXT_texture_perturb_normal_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_perturb_normal=", VALUEFUNC(_wrap___GLEW_EXT_texture_perturb_normal_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_rectangle", VALUEFUNC(_wrap___GLEW_EXT_texture_rectangle_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_rectangle=", VALUEFUNC(_wrap___GLEW_EXT_texture_rectangle_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_sRGB", VALUEFUNC(_wrap___GLEW_EXT_texture_sRGB_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_sRGB=", VALUEFUNC(_wrap___GLEW_EXT_texture_sRGB_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_shared_exponent", VALUEFUNC(_wrap___GLEW_EXT_texture_shared_exponent_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_shared_exponent=", VALUEFUNC(_wrap___GLEW_EXT_texture_shared_exponent_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_swizzle", VALUEFUNC(_wrap___GLEW_EXT_texture_swizzle_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_texture_swizzle=", VALUEFUNC(_wrap___GLEW_EXT_texture_swizzle_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_timer_query", VALUEFUNC(_wrap___GLEW_EXT_timer_query_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_timer_query=", VALUEFUNC(_wrap___GLEW_EXT_timer_query_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_transform_feedback", VALUEFUNC(_wrap___GLEW_EXT_transform_feedback_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_transform_feedback=", VALUEFUNC(_wrap___GLEW_EXT_transform_feedback_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_vertex_array", VALUEFUNC(_wrap___GLEW_EXT_vertex_array_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_vertex_array=", VALUEFUNC(_wrap___GLEW_EXT_vertex_array_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_vertex_array_bgra", VALUEFUNC(_wrap___GLEW_EXT_vertex_array_bgra_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_vertex_array_bgra=", VALUEFUNC(_wrap___GLEW_EXT_vertex_array_bgra_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_vertex_shader", VALUEFUNC(_wrap___GLEW_EXT_vertex_shader_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_vertex_shader=", VALUEFUNC(_wrap___GLEW_EXT_vertex_shader_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_vertex_weighting", VALUEFUNC(_wrap___GLEW_EXT_vertex_weighting_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_EXT_vertex_weighting=", VALUEFUNC(_wrap___GLEW_EXT_vertex_weighting_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_GREMEDY_frame_terminator", VALUEFUNC(_wrap___GLEW_GREMEDY_frame_terminator_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_GREMEDY_frame_terminator=", VALUEFUNC(_wrap___GLEW_GREMEDY_frame_terminator_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_GREMEDY_string_marker", VALUEFUNC(_wrap___GLEW_GREMEDY_string_marker_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_GREMEDY_string_marker=", VALUEFUNC(_wrap___GLEW_GREMEDY_string_marker_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_HP_convolution_border_modes", VALUEFUNC(_wrap___GLEW_HP_convolution_border_modes_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_HP_convolution_border_modes=", VALUEFUNC(_wrap___GLEW_HP_convolution_border_modes_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_HP_image_transform", VALUEFUNC(_wrap___GLEW_HP_image_transform_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_HP_image_transform=", VALUEFUNC(_wrap___GLEW_HP_image_transform_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_HP_occlusion_test", VALUEFUNC(_wrap___GLEW_HP_occlusion_test_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_HP_occlusion_test=", VALUEFUNC(_wrap___GLEW_HP_occlusion_test_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_HP_texture_lighting", VALUEFUNC(_wrap___GLEW_HP_texture_lighting_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_HP_texture_lighting=", VALUEFUNC(_wrap___GLEW_HP_texture_lighting_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_IBM_cull_vertex", VALUEFUNC(_wrap___GLEW_IBM_cull_vertex_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_IBM_cull_vertex=", VALUEFUNC(_wrap___GLEW_IBM_cull_vertex_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_IBM_multimode_draw_arrays", VALUEFUNC(_wrap___GLEW_IBM_multimode_draw_arrays_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_IBM_multimode_draw_arrays=", VALUEFUNC(_wrap___GLEW_IBM_multimode_draw_arrays_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_IBM_rasterpos_clip", VALUEFUNC(_wrap___GLEW_IBM_rasterpos_clip_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_IBM_rasterpos_clip=", VALUEFUNC(_wrap___GLEW_IBM_rasterpos_clip_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_IBM_static_data", VALUEFUNC(_wrap___GLEW_IBM_static_data_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_IBM_static_data=", VALUEFUNC(_wrap___GLEW_IBM_static_data_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_IBM_texture_mirrored_repeat", VALUEFUNC(_wrap___GLEW_IBM_texture_mirrored_repeat_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_IBM_texture_mirrored_repeat=", VALUEFUNC(_wrap___GLEW_IBM_texture_mirrored_repeat_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_IBM_vertex_array_lists", VALUEFUNC(_wrap___GLEW_IBM_vertex_array_lists_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_IBM_vertex_array_lists=", VALUEFUNC(_wrap___GLEW_IBM_vertex_array_lists_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_INGR_color_clamp", VALUEFUNC(_wrap___GLEW_INGR_color_clamp_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_INGR_color_clamp=", VALUEFUNC(_wrap___GLEW_INGR_color_clamp_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_INGR_interlace_read", VALUEFUNC(_wrap___GLEW_INGR_interlace_read_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_INGR_interlace_read=", VALUEFUNC(_wrap___GLEW_INGR_interlace_read_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_INTEL_parallel_arrays", VALUEFUNC(_wrap___GLEW_INTEL_parallel_arrays_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_INTEL_parallel_arrays=", VALUEFUNC(_wrap___GLEW_INTEL_parallel_arrays_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_INTEL_texture_scissor", VALUEFUNC(_wrap___GLEW_INTEL_texture_scissor_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_INTEL_texture_scissor=", VALUEFUNC(_wrap___GLEW_INTEL_texture_scissor_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_KTX_buffer_region", VALUEFUNC(_wrap___GLEW_KTX_buffer_region_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_KTX_buffer_region=", VALUEFUNC(_wrap___GLEW_KTX_buffer_region_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_MESAX_texture_stack", VALUEFUNC(_wrap___GLEW_MESAX_texture_stack_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_MESAX_texture_stack=", VALUEFUNC(_wrap___GLEW_MESAX_texture_stack_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_MESA_pack_invert", VALUEFUNC(_wrap___GLEW_MESA_pack_invert_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_MESA_pack_invert=", VALUEFUNC(_wrap___GLEW_MESA_pack_invert_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_MESA_resize_buffers", VALUEFUNC(_wrap___GLEW_MESA_resize_buffers_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_MESA_resize_buffers=", VALUEFUNC(_wrap___GLEW_MESA_resize_buffers_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_MESA_window_pos", VALUEFUNC(_wrap___GLEW_MESA_window_pos_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_MESA_window_pos=", VALUEFUNC(_wrap___GLEW_MESA_window_pos_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_MESA_ycbcr_texture", VALUEFUNC(_wrap___GLEW_MESA_ycbcr_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_MESA_ycbcr_texture=", VALUEFUNC(_wrap___GLEW_MESA_ycbcr_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_blend_square", VALUEFUNC(_wrap___GLEW_NV_blend_square_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_blend_square=", VALUEFUNC(_wrap___GLEW_NV_blend_square_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_conditional_render", VALUEFUNC(_wrap___GLEW_NV_conditional_render_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_conditional_render=", VALUEFUNC(_wrap___GLEW_NV_conditional_render_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_copy_depth_to_color", VALUEFUNC(_wrap___GLEW_NV_copy_depth_to_color_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_copy_depth_to_color=", VALUEFUNC(_wrap___GLEW_NV_copy_depth_to_color_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_depth_buffer_float", VALUEFUNC(_wrap___GLEW_NV_depth_buffer_float_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_depth_buffer_float=", VALUEFUNC(_wrap___GLEW_NV_depth_buffer_float_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_depth_clamp", VALUEFUNC(_wrap___GLEW_NV_depth_clamp_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_depth_clamp=", VALUEFUNC(_wrap___GLEW_NV_depth_clamp_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_depth_range_unclamped", VALUEFUNC(_wrap___GLEW_NV_depth_range_unclamped_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_depth_range_unclamped=", VALUEFUNC(_wrap___GLEW_NV_depth_range_unclamped_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_evaluators", VALUEFUNC(_wrap___GLEW_NV_evaluators_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_evaluators=", VALUEFUNC(_wrap___GLEW_NV_evaluators_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_explicit_multisample", VALUEFUNC(_wrap___GLEW_NV_explicit_multisample_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_explicit_multisample=", VALUEFUNC(_wrap___GLEW_NV_explicit_multisample_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_fence", VALUEFUNC(_wrap___GLEW_NV_fence_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_fence=", VALUEFUNC(_wrap___GLEW_NV_fence_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_float_buffer", VALUEFUNC(_wrap___GLEW_NV_float_buffer_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_float_buffer=", VALUEFUNC(_wrap___GLEW_NV_float_buffer_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_fog_distance", VALUEFUNC(_wrap___GLEW_NV_fog_distance_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_fog_distance=", VALUEFUNC(_wrap___GLEW_NV_fog_distance_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_fragment_program", VALUEFUNC(_wrap___GLEW_NV_fragment_program_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_fragment_program=", VALUEFUNC(_wrap___GLEW_NV_fragment_program_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_fragment_program2", VALUEFUNC(_wrap___GLEW_NV_fragment_program2_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_fragment_program2=", VALUEFUNC(_wrap___GLEW_NV_fragment_program2_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_fragment_program4", VALUEFUNC(_wrap___GLEW_NV_fragment_program4_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_fragment_program4=", VALUEFUNC(_wrap___GLEW_NV_fragment_program4_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_fragment_program_option", VALUEFUNC(_wrap___GLEW_NV_fragment_program_option_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_fragment_program_option=", VALUEFUNC(_wrap___GLEW_NV_fragment_program_option_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_framebuffer_multisample_coverage", VALUEFUNC(_wrap___GLEW_NV_framebuffer_multisample_coverage_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_framebuffer_multisample_coverage=", VALUEFUNC(_wrap___GLEW_NV_framebuffer_multisample_coverage_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_geometry_program4", VALUEFUNC(_wrap___GLEW_NV_geometry_program4_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_geometry_program4=", VALUEFUNC(_wrap___GLEW_NV_geometry_program4_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_geometry_shader4", VALUEFUNC(_wrap___GLEW_NV_geometry_shader4_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_geometry_shader4=", VALUEFUNC(_wrap___GLEW_NV_geometry_shader4_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_gpu_program4", VALUEFUNC(_wrap___GLEW_NV_gpu_program4_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_gpu_program4=", VALUEFUNC(_wrap___GLEW_NV_gpu_program4_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_half_float", VALUEFUNC(_wrap___GLEW_NV_half_float_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_half_float=", VALUEFUNC(_wrap___GLEW_NV_half_float_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_light_max_exponent", VALUEFUNC(_wrap___GLEW_NV_light_max_exponent_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_light_max_exponent=", VALUEFUNC(_wrap___GLEW_NV_light_max_exponent_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_multisample_filter_hint", VALUEFUNC(_wrap___GLEW_NV_multisample_filter_hint_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_multisample_filter_hint=", VALUEFUNC(_wrap___GLEW_NV_multisample_filter_hint_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_occlusion_query", VALUEFUNC(_wrap___GLEW_NV_occlusion_query_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_occlusion_query=", VALUEFUNC(_wrap___GLEW_NV_occlusion_query_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_packed_depth_stencil", VALUEFUNC(_wrap___GLEW_NV_packed_depth_stencil_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_packed_depth_stencil=", VALUEFUNC(_wrap___GLEW_NV_packed_depth_stencil_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_parameter_buffer_object", VALUEFUNC(_wrap___GLEW_NV_parameter_buffer_object_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_parameter_buffer_object=", VALUEFUNC(_wrap___GLEW_NV_parameter_buffer_object_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_pixel_data_range", VALUEFUNC(_wrap___GLEW_NV_pixel_data_range_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_pixel_data_range=", VALUEFUNC(_wrap___GLEW_NV_pixel_data_range_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_point_sprite", VALUEFUNC(_wrap___GLEW_NV_point_sprite_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_point_sprite=", VALUEFUNC(_wrap___GLEW_NV_point_sprite_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_present_video", VALUEFUNC(_wrap___GLEW_NV_present_video_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_present_video=", VALUEFUNC(_wrap___GLEW_NV_present_video_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_primitive_restart", VALUEFUNC(_wrap___GLEW_NV_primitive_restart_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_primitive_restart=", VALUEFUNC(_wrap___GLEW_NV_primitive_restart_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_register_combiners", VALUEFUNC(_wrap___GLEW_NV_register_combiners_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_register_combiners=", VALUEFUNC(_wrap___GLEW_NV_register_combiners_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_register_combiners2", VALUEFUNC(_wrap___GLEW_NV_register_combiners2_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_register_combiners2=", VALUEFUNC(_wrap___GLEW_NV_register_combiners2_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texgen_emboss", VALUEFUNC(_wrap___GLEW_NV_texgen_emboss_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texgen_emboss=", VALUEFUNC(_wrap___GLEW_NV_texgen_emboss_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texgen_reflection", VALUEFUNC(_wrap___GLEW_NV_texgen_reflection_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texgen_reflection=", VALUEFUNC(_wrap___GLEW_NV_texgen_reflection_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_compression_vtc", VALUEFUNC(_wrap___GLEW_NV_texture_compression_vtc_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_compression_vtc=", VALUEFUNC(_wrap___GLEW_NV_texture_compression_vtc_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_env_combine4", VALUEFUNC(_wrap___GLEW_NV_texture_env_combine4_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_env_combine4=", VALUEFUNC(_wrap___GLEW_NV_texture_env_combine4_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_expand_normal", VALUEFUNC(_wrap___GLEW_NV_texture_expand_normal_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_expand_normal=", VALUEFUNC(_wrap___GLEW_NV_texture_expand_normal_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_rectangle", VALUEFUNC(_wrap___GLEW_NV_texture_rectangle_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_rectangle=", VALUEFUNC(_wrap___GLEW_NV_texture_rectangle_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_shader", VALUEFUNC(_wrap___GLEW_NV_texture_shader_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_shader=", VALUEFUNC(_wrap___GLEW_NV_texture_shader_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_shader2", VALUEFUNC(_wrap___GLEW_NV_texture_shader2_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_shader2=", VALUEFUNC(_wrap___GLEW_NV_texture_shader2_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_shader3", VALUEFUNC(_wrap___GLEW_NV_texture_shader3_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_texture_shader3=", VALUEFUNC(_wrap___GLEW_NV_texture_shader3_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_transform_feedback", VALUEFUNC(_wrap___GLEW_NV_transform_feedback_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_transform_feedback=", VALUEFUNC(_wrap___GLEW_NV_transform_feedback_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_array_range", VALUEFUNC(_wrap___GLEW_NV_vertex_array_range_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_array_range=", VALUEFUNC(_wrap___GLEW_NV_vertex_array_range_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_array_range2", VALUEFUNC(_wrap___GLEW_NV_vertex_array_range2_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_array_range2=", VALUEFUNC(_wrap___GLEW_NV_vertex_array_range2_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_program", VALUEFUNC(_wrap___GLEW_NV_vertex_program_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_program=", VALUEFUNC(_wrap___GLEW_NV_vertex_program_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_program1_1", VALUEFUNC(_wrap___GLEW_NV_vertex_program1_1_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_program1_1=", VALUEFUNC(_wrap___GLEW_NV_vertex_program1_1_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_program2", VALUEFUNC(_wrap___GLEW_NV_vertex_program2_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_program2=", VALUEFUNC(_wrap___GLEW_NV_vertex_program2_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_program2_option", VALUEFUNC(_wrap___GLEW_NV_vertex_program2_option_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_program2_option=", VALUEFUNC(_wrap___GLEW_NV_vertex_program2_option_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_program3", VALUEFUNC(_wrap___GLEW_NV_vertex_program3_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_program3=", VALUEFUNC(_wrap___GLEW_NV_vertex_program3_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_program4", VALUEFUNC(_wrap___GLEW_NV_vertex_program4_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_NV_vertex_program4=", VALUEFUNC(_wrap___GLEW_NV_vertex_program4_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_OES_byte_coordinates", VALUEFUNC(_wrap___GLEW_OES_byte_coordinates_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_OES_byte_coordinates=", VALUEFUNC(_wrap___GLEW_OES_byte_coordinates_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_OES_compressed_paletted_texture", VALUEFUNC(_wrap___GLEW_OES_compressed_paletted_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_OES_compressed_paletted_texture=", VALUEFUNC(_wrap___GLEW_OES_compressed_paletted_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_OES_read_format", VALUEFUNC(_wrap___GLEW_OES_read_format_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_OES_read_format=", VALUEFUNC(_wrap___GLEW_OES_read_format_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_OES_single_precision", VALUEFUNC(_wrap___GLEW_OES_single_precision_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_OES_single_precision=", VALUEFUNC(_wrap___GLEW_OES_single_precision_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_OML_interlace", VALUEFUNC(_wrap___GLEW_OML_interlace_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_OML_interlace=", VALUEFUNC(_wrap___GLEW_OML_interlace_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_OML_resample", VALUEFUNC(_wrap___GLEW_OML_resample_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_OML_resample=", VALUEFUNC(_wrap___GLEW_OML_resample_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_OML_subsample", VALUEFUNC(_wrap___GLEW_OML_subsample_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_OML_subsample=", VALUEFUNC(_wrap___GLEW_OML_subsample_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_PGI_misc_hints", VALUEFUNC(_wrap___GLEW_PGI_misc_hints_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_PGI_misc_hints=", VALUEFUNC(_wrap___GLEW_PGI_misc_hints_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_PGI_vertex_hints", VALUEFUNC(_wrap___GLEW_PGI_vertex_hints_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_PGI_vertex_hints=", VALUEFUNC(_wrap___GLEW_PGI_vertex_hints_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_REND_screen_coordinates", VALUEFUNC(_wrap___GLEW_REND_screen_coordinates_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_REND_screen_coordinates=", VALUEFUNC(_wrap___GLEW_REND_screen_coordinates_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_S3_s3tc", VALUEFUNC(_wrap___GLEW_S3_s3tc_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_S3_s3tc=", VALUEFUNC(_wrap___GLEW_S3_s3tc_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_color_range", VALUEFUNC(_wrap___GLEW_SGIS_color_range_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_color_range=", VALUEFUNC(_wrap___GLEW_SGIS_color_range_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_detail_texture", VALUEFUNC(_wrap___GLEW_SGIS_detail_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_detail_texture=", VALUEFUNC(_wrap___GLEW_SGIS_detail_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_fog_function", VALUEFUNC(_wrap___GLEW_SGIS_fog_function_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_fog_function=", VALUEFUNC(_wrap___GLEW_SGIS_fog_function_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_generate_mipmap", VALUEFUNC(_wrap___GLEW_SGIS_generate_mipmap_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_generate_mipmap=", VALUEFUNC(_wrap___GLEW_SGIS_generate_mipmap_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_multisample", VALUEFUNC(_wrap___GLEW_SGIS_multisample_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_multisample=", VALUEFUNC(_wrap___GLEW_SGIS_multisample_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_pixel_texture", VALUEFUNC(_wrap___GLEW_SGIS_pixel_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_pixel_texture=", VALUEFUNC(_wrap___GLEW_SGIS_pixel_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_point_line_texgen", VALUEFUNC(_wrap___GLEW_SGIS_point_line_texgen_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_point_line_texgen=", VALUEFUNC(_wrap___GLEW_SGIS_point_line_texgen_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_sharpen_texture", VALUEFUNC(_wrap___GLEW_SGIS_sharpen_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_sharpen_texture=", VALUEFUNC(_wrap___GLEW_SGIS_sharpen_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_texture4D", VALUEFUNC(_wrap___GLEW_SGIS_texture4D_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_texture4D=", VALUEFUNC(_wrap___GLEW_SGIS_texture4D_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_texture_border_clamp", VALUEFUNC(_wrap___GLEW_SGIS_texture_border_clamp_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_texture_border_clamp=", VALUEFUNC(_wrap___GLEW_SGIS_texture_border_clamp_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_texture_edge_clamp", VALUEFUNC(_wrap___GLEW_SGIS_texture_edge_clamp_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_texture_edge_clamp=", VALUEFUNC(_wrap___GLEW_SGIS_texture_edge_clamp_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_texture_filter4", VALUEFUNC(_wrap___GLEW_SGIS_texture_filter4_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_texture_filter4=", VALUEFUNC(_wrap___GLEW_SGIS_texture_filter4_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_texture_lod", VALUEFUNC(_wrap___GLEW_SGIS_texture_lod_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_texture_lod=", VALUEFUNC(_wrap___GLEW_SGIS_texture_lod_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_texture_select", VALUEFUNC(_wrap___GLEW_SGIS_texture_select_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIS_texture_select=", VALUEFUNC(_wrap___GLEW_SGIS_texture_select_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_async", VALUEFUNC(_wrap___GLEW_SGIX_async_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_async=", VALUEFUNC(_wrap___GLEW_SGIX_async_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_async_histogram", VALUEFUNC(_wrap___GLEW_SGIX_async_histogram_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_async_histogram=", VALUEFUNC(_wrap___GLEW_SGIX_async_histogram_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_async_pixel", VALUEFUNC(_wrap___GLEW_SGIX_async_pixel_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_async_pixel=", VALUEFUNC(_wrap___GLEW_SGIX_async_pixel_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_blend_alpha_minmax", VALUEFUNC(_wrap___GLEW_SGIX_blend_alpha_minmax_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_blend_alpha_minmax=", VALUEFUNC(_wrap___GLEW_SGIX_blend_alpha_minmax_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_clipmap", VALUEFUNC(_wrap___GLEW_SGIX_clipmap_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_clipmap=", VALUEFUNC(_wrap___GLEW_SGIX_clipmap_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_convolution_accuracy", VALUEFUNC(_wrap___GLEW_SGIX_convolution_accuracy_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_convolution_accuracy=", VALUEFUNC(_wrap___GLEW_SGIX_convolution_accuracy_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_depth_texture", VALUEFUNC(_wrap___GLEW_SGIX_depth_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_depth_texture=", VALUEFUNC(_wrap___GLEW_SGIX_depth_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_flush_raster", VALUEFUNC(_wrap___GLEW_SGIX_flush_raster_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_flush_raster=", VALUEFUNC(_wrap___GLEW_SGIX_flush_raster_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_fog_offset", VALUEFUNC(_wrap___GLEW_SGIX_fog_offset_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_fog_offset=", VALUEFUNC(_wrap___GLEW_SGIX_fog_offset_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_fog_texture", VALUEFUNC(_wrap___GLEW_SGIX_fog_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_fog_texture=", VALUEFUNC(_wrap___GLEW_SGIX_fog_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_fragment_specular_lighting", VALUEFUNC(_wrap___GLEW_SGIX_fragment_specular_lighting_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_fragment_specular_lighting=", VALUEFUNC(_wrap___GLEW_SGIX_fragment_specular_lighting_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_framezoom", VALUEFUNC(_wrap___GLEW_SGIX_framezoom_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_framezoom=", VALUEFUNC(_wrap___GLEW_SGIX_framezoom_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_interlace", VALUEFUNC(_wrap___GLEW_SGIX_interlace_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_interlace=", VALUEFUNC(_wrap___GLEW_SGIX_interlace_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_ir_instrument1", VALUEFUNC(_wrap___GLEW_SGIX_ir_instrument1_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_ir_instrument1=", VALUEFUNC(_wrap___GLEW_SGIX_ir_instrument1_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_list_priority", VALUEFUNC(_wrap___GLEW_SGIX_list_priority_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_list_priority=", VALUEFUNC(_wrap___GLEW_SGIX_list_priority_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_pixel_texture", VALUEFUNC(_wrap___GLEW_SGIX_pixel_texture_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_pixel_texture=", VALUEFUNC(_wrap___GLEW_SGIX_pixel_texture_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_pixel_texture_bits", VALUEFUNC(_wrap___GLEW_SGIX_pixel_texture_bits_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_pixel_texture_bits=", VALUEFUNC(_wrap___GLEW_SGIX_pixel_texture_bits_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_reference_plane", VALUEFUNC(_wrap___GLEW_SGIX_reference_plane_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_reference_plane=", VALUEFUNC(_wrap___GLEW_SGIX_reference_plane_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_resample", VALUEFUNC(_wrap___GLEW_SGIX_resample_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_resample=", VALUEFUNC(_wrap___GLEW_SGIX_resample_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_shadow", VALUEFUNC(_wrap___GLEW_SGIX_shadow_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_shadow=", VALUEFUNC(_wrap___GLEW_SGIX_shadow_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_shadow_ambient", VALUEFUNC(_wrap___GLEW_SGIX_shadow_ambient_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_shadow_ambient=", VALUEFUNC(_wrap___GLEW_SGIX_shadow_ambient_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_sprite", VALUEFUNC(_wrap___GLEW_SGIX_sprite_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_sprite=", VALUEFUNC(_wrap___GLEW_SGIX_sprite_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_tag_sample_buffer", VALUEFUNC(_wrap___GLEW_SGIX_tag_sample_buffer_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_tag_sample_buffer=", VALUEFUNC(_wrap___GLEW_SGIX_tag_sample_buffer_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_texture_add_env", VALUEFUNC(_wrap___GLEW_SGIX_texture_add_env_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_texture_add_env=", VALUEFUNC(_wrap___GLEW_SGIX_texture_add_env_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_texture_coordinate_clamp", VALUEFUNC(_wrap___GLEW_SGIX_texture_coordinate_clamp_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_texture_coordinate_clamp=", VALUEFUNC(_wrap___GLEW_SGIX_texture_coordinate_clamp_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_texture_lod_bias", VALUEFUNC(_wrap___GLEW_SGIX_texture_lod_bias_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_texture_lod_bias=", VALUEFUNC(_wrap___GLEW_SGIX_texture_lod_bias_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_texture_multi_buffer", VALUEFUNC(_wrap___GLEW_SGIX_texture_multi_buffer_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_texture_multi_buffer=", VALUEFUNC(_wrap___GLEW_SGIX_texture_multi_buffer_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_texture_range", VALUEFUNC(_wrap___GLEW_SGIX_texture_range_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_texture_range=", VALUEFUNC(_wrap___GLEW_SGIX_texture_range_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_texture_scale_bias", VALUEFUNC(_wrap___GLEW_SGIX_texture_scale_bias_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_texture_scale_bias=", VALUEFUNC(_wrap___GLEW_SGIX_texture_scale_bias_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_vertex_preclip", VALUEFUNC(_wrap___GLEW_SGIX_vertex_preclip_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_vertex_preclip=", VALUEFUNC(_wrap___GLEW_SGIX_vertex_preclip_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_vertex_preclip_hint", VALUEFUNC(_wrap___GLEW_SGIX_vertex_preclip_hint_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_vertex_preclip_hint=", VALUEFUNC(_wrap___GLEW_SGIX_vertex_preclip_hint_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_ycrcb", VALUEFUNC(_wrap___GLEW_SGIX_ycrcb_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGIX_ycrcb=", VALUEFUNC(_wrap___GLEW_SGIX_ycrcb_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGI_color_matrix", VALUEFUNC(_wrap___GLEW_SGI_color_matrix_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGI_color_matrix=", VALUEFUNC(_wrap___GLEW_SGI_color_matrix_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGI_color_table", VALUEFUNC(_wrap___GLEW_SGI_color_table_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGI_color_table=", VALUEFUNC(_wrap___GLEW_SGI_color_table_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SGI_texture_color_table", VALUEFUNC(_wrap___GLEW_SGI_texture_color_table_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SGI_texture_color_table=", VALUEFUNC(_wrap___GLEW_SGI_texture_color_table_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SUNX_constant_data", VALUEFUNC(_wrap___GLEW_SUNX_constant_data_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SUNX_constant_data=", VALUEFUNC(_wrap___GLEW_SUNX_constant_data_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_convolution_border_modes", VALUEFUNC(_wrap___GLEW_SUN_convolution_border_modes_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_convolution_border_modes=", VALUEFUNC(_wrap___GLEW_SUN_convolution_border_modes_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_global_alpha", VALUEFUNC(_wrap___GLEW_SUN_global_alpha_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_global_alpha=", VALUEFUNC(_wrap___GLEW_SUN_global_alpha_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_mesh_array", VALUEFUNC(_wrap___GLEW_SUN_mesh_array_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_mesh_array=", VALUEFUNC(_wrap___GLEW_SUN_mesh_array_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_read_video_pixels", VALUEFUNC(_wrap___GLEW_SUN_read_video_pixels_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_read_video_pixels=", VALUEFUNC(_wrap___GLEW_SUN_read_video_pixels_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_slice_accum", VALUEFUNC(_wrap___GLEW_SUN_slice_accum_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_slice_accum=", VALUEFUNC(_wrap___GLEW_SUN_slice_accum_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_triangle_list", VALUEFUNC(_wrap___GLEW_SUN_triangle_list_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_triangle_list=", VALUEFUNC(_wrap___GLEW_SUN_triangle_list_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_vertex", VALUEFUNC(_wrap___GLEW_SUN_vertex_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_SUN_vertex=", VALUEFUNC(_wrap___GLEW_SUN_vertex_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_WIN_phong_shading", VALUEFUNC(_wrap___GLEW_WIN_phong_shading_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_WIN_phong_shading=", VALUEFUNC(_wrap___GLEW_WIN_phong_shading_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_WIN_specular_fog", VALUEFUNC(_wrap___GLEW_WIN_specular_fog_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_WIN_specular_fog=", VALUEFUNC(_wrap___GLEW_WIN_specular_fog_set), 1);
  rb_define_singleton_method(mGlew, "__GLEW_WIN_swap_hint", VALUEFUNC(_wrap___GLEW_WIN_swap_hint_get), 0);
  rb_define_singleton_method(mGlew, "__GLEW_WIN_swap_hint=", VALUEFUNC(_wrap___GLEW_WIN_swap_hint_set), 1);
  rb_define_const(mGlew, "GLEW_OK", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GLEW_NO_ERROR", SWIG_From_int(static_cast< int >(0)));
  rb_define_const(mGlew, "GLEW_ERROR_NO_GL_VERSION", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GLEW_ERROR_GL_VERSION_10_ONLY", SWIG_From_int(static_cast< int >(2)));
  rb_define_const(mGlew, "GLEW_ERROR_GLX_VERSION_11_ONLY", SWIG_From_int(static_cast< int >(3)));
  rb_define_const(mGlew, "GLEW_VERSION", SWIG_From_int(static_cast< int >(1)));
  rb_define_const(mGlew, "GLEW_VERSION_MAJOR", SWIG_From_int(static_cast< int >(2)));
  rb_define_const(mGlew, "GLEW_VERSION_MINOR", SWIG_From_int(static_cast< int >(3)));
  rb_define_const(mGlew, "GLEW_VERSION_MICRO", SWIG_From_int(static_cast< int >(4)));
  rb_define_module_function(mGlew, "glewInit", VALUEFUNC(_wrap_glewInit), -1);
  rb_define_module_function(mGlew, "glewIsSupported", VALUEFUNC(_wrap_glewIsSupported), -1);
  rb_define_singleton_method(mGlew, "glewExperimental", VALUEFUNC(_wrap_glewExperimental_get), 0);
  rb_define_singleton_method(mGlew, "glewExperimental=", VALUEFUNC(_wrap_glewExperimental_set), 1);
  rb_define_module_function(mGlew, "glewGetExtension", VALUEFUNC(_wrap_glewGetExtension), -1);
  rb_define_module_function(mGlew, "glewGetErrorString", VALUEFUNC(_wrap_glewGetErrorString), -1);
  rb_define_module_function(mGlew, "glewGetString", VALUEFUNC(_wrap_glewGetString), -1);
}

